<?xml version="1.0" encoding="UTF-8"?>

<root> 
  <Component source="de.danoeh.antennapod.config.DownloadServiceCallbacksImpl"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.config.DownloadServiceCallbacksImpl: android.app.PendingIntent getNotificationContentIntent(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.config.DownloadServiceCallbacksImpl: android.app.PendingIntent getNotificationContentIntent(android.content.Context)&gt;,android.app.PendingIntent getNotificationContentIntent(android.content.Context)"/>  
      <source name="de.danoeh.antennapod.config.DownloadServiceCallbacksImpl"/>  
      <destinition name="de.danoeh.antennapod.activity.MainActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.config.DownloadServiceCallbacksImpl: android.app.PendingIntent getNotificationContentIntent(android.content.Context)&gt;"/>  
        <node method="DownloadServiceCallbacksImpl getNotificationContentIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="DownloadServiceCallbacksImpl getNotificationContentIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Lde/danoeh/antennapod/activity/MainActivity;&quot;)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.MainActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MainActivity$$Lambda$1: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MainActivity$$Lambda$1: void onClick(android.view.View)&gt;,void onClick(android.view.View)"/>  
      <source name="de.danoeh.antennapod.activity.MainActivity"/>  
      <destinition name="de.danoeh.antennapod.activity.PreferenceActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity$$Lambda$1: void onClick(android.view.View)&gt;"/>  
        <node method="MainActivity$$Lambda$1 onClick" type="CreateMethod" unit="$r4 = new android.content.Intent"/>  
        <node method="MainActivity$$Lambda$1 onClick" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/activity/PreferenceActivity;&quot;)"/>  
        <node method="MainActivity$$Lambda$1 onClick" type="PassOutIntent" unit="virtualinvoke $r2.&lt;de.danoeh.antennapod.activity.MainActivity: void startActivity(android.content.Intent)&gt;($r4)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.MediaplayerInfoActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: void onNewIntent(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: void onNewIntent(android.content.Intent)&gt;,void onNewIntent(android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.activity.MediaplayerInfoActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: void onNewIntent(android.content.Intent)&gt;"/>  
        <node method="MediaplayerInfoActivity onNewIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.util.flattr.FlattrUtils"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.flattr.FlattrUtils$$Lambda$2: void onClick(android.content.DialogInterface,int)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.flattr.FlattrUtils$$Lambda$2: void onClick(android.content.DialogInterface,int)&gt;,void onClick(android.content.DialogInterface,int)"/>  
      <source name="de.danoeh.antennapod.core.util.flattr.FlattrUtils"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.flattr.FlattrUtils$$Lambda$2: void onClick(android.content.DialogInterface,int)&gt;"/>  
        <node method="FlattrUtils$$Lambda$2 onClick" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="FlattrUtils$$Lambda$2 onClick" type="PassOutIntent" unit="virtualinvoke $r5.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.StorageErrorActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.StorageErrorActivity: void leaveErrorState()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.StorageErrorActivity: void leaveErrorState()&gt;,void leaveErrorState()"/>  
      <source name="de.danoeh.antennapod.activity.StorageErrorActivity"/>  
      <destinition name="de.danoeh.antennapod.activity.MainActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.StorageErrorActivity: void leaveErrorState()&gt;"/>  
        <node method="StorageErrorActivity leaveErrorState" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="StorageErrorActivity leaveErrorState" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lde/danoeh/antennapod/activity/MainActivity;&quot;)"/>  
        <node method="StorageErrorActivity leaveErrorState" type="PassOutIntent" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.activity.StorageErrorActivity: void startActivity(android.content.Intent)&gt;($r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.config.FlattrCallbacksImpl"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.config.FlattrCallbacksImpl: android.app.PendingIntent getFlattrFailedNotificationContentIntent(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.config.FlattrCallbacksImpl: android.app.PendingIntent getFlattrFailedNotificationContentIntent(android.content.Context)&gt;,android.app.PendingIntent getFlattrFailedNotificationContentIntent(android.content.Context)"/>  
      <source name="de.danoeh.antennapod.config.FlattrCallbacksImpl"/>  
      <destinition name="de.danoeh.antennapod.activity.MainActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.config.FlattrCallbacksImpl: android.app.PendingIntent getFlattrFailedNotificationContentIntent(android.content.Context)&gt;"/>  
        <node method="FlattrCallbacksImpl getFlattrFailedNotificationContentIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="FlattrCallbacksImpl getFlattrFailedNotificationContentIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Lde/danoeh/antennapod/activity/MainActivity;&quot;)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.preferences.PreferenceController"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupStorageScreen$8$PreferenceController$7ff604e7(android.app.Activity)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupStorageScreen$8$PreferenceController$7ff604e7(android.app.Activity)&gt;,boolean lambda$setupStorageScreen$8$PreferenceController$7ff604e7(android.app.Activity)"/>  
      <source name="de.danoeh.antennapod.preferences.PreferenceController"/>  
      <destinition name="de.danoeh.antennapod.activity.OpmlImportFromPathActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupStorageScreen$8$PreferenceController$7ff604e7(android.app.Activity)&gt;"/>  
        <node method="PreferenceController lambda$setupStorageScreen$8$PreferenceController$7ff604e7" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="PreferenceController lambda$setupStorageScreen$8$PreferenceController$7ff604e7" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lde/danoeh/antennapod/activity/OpmlImportFromPathActivity;&quot;)"/>  
        <node method="PreferenceController lambda$setupStorageScreen$8$PreferenceController$7ff604e7" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;($r0)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.service.playback.PlaybackService"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;,android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;"/>  
        <node method="PlaybackService access$1900" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="PlaybackService access$1900" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.MediaplayerInfoActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity$$Lambda$0: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity$$Lambda$0: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;,void onItemClick(android.widget.AdapterView,android.view.View,int,long)"/>  
      <source name="de.danoeh.antennapod.activity.MediaplayerInfoActivity"/>  
      <destinition name="de.danoeh.antennapod.activity.MainActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity$$Lambda$0: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;"/>  
        <node method="MediaplayerInfoActivity$$Lambda$0 onItemClick" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="MediaplayerInfoActivity$$Lambda$0 onItemClick" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Lde/danoeh/antennapod/activity/MainActivity;&quot;)"/>  
        <node method="MediaplayerInfoActivity$$Lambda$0 onItemClick" type="PassOutIntent" unit="virtualinvoke $r3.&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: void startActivity(android.content.Intent)&gt;($r5)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.preferences.PreferenceController"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.preferences.PreferenceController: void openInBrowser(java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.preferences.PreferenceController: void openInBrowser(java.lang.String)&gt;,void openInBrowser(java.lang.String)"/>  
      <source name="de.danoeh.antennapod.preferences.PreferenceController"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: void openInBrowser(java.lang.String)&gt;"/>  
        <node method="PreferenceController openInBrowser" type="CreateMethod" unit="$r2 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.preferences.PreferenceController: void openInBrowser(java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.preferences.PreferenceController: void openInBrowser(java.lang.String)&gt;,void openInBrowser(java.lang.String)"/>  
      <source name="de.danoeh.antennapod.preferences.PreferenceController"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: void openInBrowser(java.lang.String)&gt;"/>  
        <node method="PreferenceController openInBrowser" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="PreferenceController openInBrowser" type="PassOutIntent" unit="virtualinvoke $r5.&lt;android.support.v7.app.AppCompatActivity: void startActivity(android.content.Intent)&gt;($r2)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.preferences.PreferenceController: void openInBrowser(java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.preferences.PreferenceController: void openInBrowser(java.lang.String)&gt;,void openInBrowser(java.lang.String)"/>  
      <source name="de.danoeh.antennapod.preferences.PreferenceController"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: void openInBrowser(java.lang.String)&gt;"/>  
        <node method="PreferenceController openInBrowser" type="CreateMethod" unit="$r2 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.fragment.ItemFragment"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemFragment: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemFragment: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)&gt;,void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)"/>  
      <source name="de.danoeh.antennapod.fragment.ItemFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemFragment: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)&gt;"/>  
        <node method="ItemFragment onCreateContextMenu" type="CreateMethod" unit="$r6 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.storage.DownloadRequester"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;,boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)"/>  
      <source name="de.danoeh.antennapod.core.storage.DownloadRequester"/>  
      <destinition name="de.danoeh.antennapod.core.service.download.DownloadService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;"/>  
        <node method="DownloadRequester download" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="DownloadRequester download" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/download/DownloadService;&quot;)"/>  
        <node method="DownloadRequester download" type="PassOutIntent" unit="staticinvoke &lt;android.support.v4.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)&gt;($r2, $r5)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.fragment.ItemlistFragment"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment$$Lambda$2: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment$$Lambda$2: void onClick(android.view.View)&gt;,void onClick(android.view.View)"/>  
      <source name="de.danoeh.antennapod.fragment.ItemlistFragment"/>  
      <destinition name="de.danoeh.antennapod.activity.FeedSettingsActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment$$Lambda$2: void onClick(android.view.View)&gt;"/>  
        <node method="ItemlistFragment$$Lambda$2 onClick" type="CreateMethod" unit="$r4 = new android.content.Intent"/>  
        <node method="ItemlistFragment$$Lambda$2 onClick" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lde/danoeh/antennapod/activity/FeedSettingsActivity;&quot;)"/>  
        <node method="ItemlistFragment$$Lambda$2 onClick" type="PassOutIntent" unit="virtualinvoke $r3.&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void startActivity(android.content.Intent)&gt;($r4)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.fragment.ItemFragment"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemFragment$2: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemFragment$2: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)&gt;,boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)"/>  
      <source name="de.danoeh.antennapod.fragment.ItemFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemFragment$2: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)&gt;"/>  
        <node method="ItemFragment$2 shouldOverrideUrlLoading" type="CreateMethod" unit="$r3 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemFragment$2: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemFragment$2: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)&gt;,boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)"/>  
      <source name="de.danoeh.antennapod.fragment.ItemFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemFragment$2: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)&gt;"/>  
        <node method="ItemFragment$2 shouldOverrideUrlLoading" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="ItemFragment$2 shouldOverrideUrlLoading" type="PassOutIntent" unit="virtualinvoke $r5.&lt;de.danoeh.antennapod.fragment.ItemFragment: void startActivity(android.content.Intent)&gt;($r3)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.MediaplayerInfoActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity$$Lambda$2: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity$$Lambda$2: void onClick(android.view.View)&gt;,void onClick(android.view.View)"/>  
      <source name="de.danoeh.antennapod.activity.MediaplayerInfoActivity"/>  
      <destinition name="de.danoeh.antennapod.activity.PreferenceActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity$$Lambda$2: void onClick(android.view.View)&gt;"/>  
        <node method="MediaplayerInfoActivity$$Lambda$2 onClick" type="CreateMethod" unit="$r4 = new android.content.Intent"/>  
        <node method="MediaplayerInfoActivity$$Lambda$2 onClick" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/activity/PreferenceActivity;&quot;)"/>  
        <node method="MediaplayerInfoActivity$$Lambda$2 onClick" type="PassOutIntent" unit="virtualinvoke $r2.&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: void startActivity(android.content.Intent)&gt;($r4)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.MediaplayerInfoActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: void onReloadNotification(int)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: void onReloadNotification(int)&gt;,void onReloadNotification(int)"/>  
      <source name="de.danoeh.antennapod.activity.MediaplayerInfoActivity"/>  
      <destinition name="de.danoeh.antennapod.activity.VideoplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: void onReloadNotification(int)&gt;"/>  
        <node method="MediaplayerInfoActivity onReloadNotification" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="MediaplayerInfoActivity onReloadNotification" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lde/danoeh/antennapod/activity/VideoplayerActivity;&quot;)"/>  
        <node method="MediaplayerInfoActivity onReloadNotification" type="PassOutIntent" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: void startActivity(android.content.Intent)&gt;($r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.antennapod.audio.MediaPlayer"> 
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;,android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;,android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;,android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.service.PlayerWidgetJobService"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void updateWidget(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void updateWidget(android.content.Context)&gt;,void updateWidget(android.content.Context)"/>  
      <source name="de.danoeh.antennapod.core.service.PlayerWidgetJobService"/>  
      <destinition name="de.danoeh.antennapod.core.service.PlayerWidgetJobService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void updateWidget(android.content.Context)&gt;"/>  
        <node method="PlayerWidgetJobService updateWidget" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="PlayerWidgetJobService updateWidget" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lde/danoeh/antennapod/core/service/PlayerWidgetJobService;&quot;)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.FeedInfoActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.FeedInfoActivity: boolean onPrepareOptionsMenu(android.view.Menu)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.FeedInfoActivity: boolean onPrepareOptionsMenu(android.view.Menu)&gt;,boolean onPrepareOptionsMenu(android.view.Menu)"/>  
      <source name="de.danoeh.antennapod.activity.FeedInfoActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.FeedInfoActivity: boolean onPrepareOptionsMenu(android.view.Menu)&gt;"/>  
        <node method="FeedInfoActivity onPrepareOptionsMenu" type="CreateMethod" unit="$r5 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.OnlineFeedViewActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.OnlineFeedViewActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.OnlineFeedViewActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,boolean onOptionsItemSelected(android.view.MenuItem)"/>  
      <source name="de.danoeh.antennapod.activity.OnlineFeedViewActivity"/>  
      <destinition name="de.danoeh.antennapod.activity.MainActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.OnlineFeedViewActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="OnlineFeedViewActivity onOptionsItemSelected" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="OnlineFeedViewActivity onOptionsItemSelected" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lde/danoeh/antennapod/activity/MainActivity;&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.OnlineFeedViewActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.OnlineFeedViewActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,boolean onOptionsItemSelected(android.view.MenuItem)"/>  
      <source name="de.danoeh.antennapod.activity.OnlineFeedViewActivity"/>  
      <destinition name="de.danoeh.antennapod.activity.MainActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.OnlineFeedViewActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="OnlineFeedViewActivity onOptionsItemSelected" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="OnlineFeedViewActivity onOptionsItemSelected" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lde/danoeh/antennapod/activity/MainActivity;&quot;)"/>  
        <node method="OnlineFeedViewActivity onOptionsItemSelected" type="PassOutIntent" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.activity.OnlineFeedViewActivity: void startActivity(android.content.Intent)&gt;($r2)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.preferences.PreferenceController"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$8: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$8: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupStorageScreen$8$PreferenceController$7ff604e7(android.app.Activity)&gt;,boolean lambda$setupStorageScreen$8$PreferenceController$7ff604e7(android.app.Activity)"/>  
      <source name="de.danoeh.antennapod.preferences.PreferenceController"/>  
      <destinition name="de.danoeh.antennapod.activity.OpmlImportFromPathActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$8: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupStorageScreen$8$PreferenceController$7ff604e7(android.app.Activity)&gt;"/>  
        <node method="PreferenceController lambda$setupStorageScreen$8$PreferenceController$7ff604e7" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="PreferenceController lambda$setupStorageScreen$8$PreferenceController$7ff604e7" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lde/danoeh/antennapod/activity/OpmlImportFromPathActivity;&quot;)"/>  
        <node method="PreferenceController lambda$setupStorageScreen$8$PreferenceController$7ff604e7" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;($r0)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.ImportExportActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.ImportExportActivity$$Lambda$2: void onClick(android.content.DialogInterface,int)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.ImportExportActivity$$Lambda$2: void onClick(android.content.DialogInterface,int)&gt;,void onClick(android.content.DialogInterface,int)"/>  
      <source name="de.danoeh.antennapod.activity.ImportExportActivity"/>  
      <destinition name="de.danoeh.antennapod.activity.SplashActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.ImportExportActivity$$Lambda$2: void onClick(android.content.DialogInterface,int)&gt;"/>  
        <node method="ImportExportActivity$$Lambda$2 onClick" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="ImportExportActivity$$Lambda$2 onClick" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, class &quot;Lde/danoeh/antennapod/activity/SplashActivity;&quot;)"/>  
        <node method="ImportExportActivity$$Lambda$2 onClick" type="PassOutIntent" unit="virtualinvoke $r2.&lt;de.danoeh.antennapod.activity.ImportExportActivity: void startActivity(android.content.Intent)&gt;($r3)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.service.playback.PlaybackService"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$1: void onWidgetUpdaterTick()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$1: void onWidgetUpdaterTick()&gt;,&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void updateWidget(android.content.Context)&gt;,void updateWidget(android.content.Context)"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="de.danoeh.antennapod.core.service.PlayerWidgetJobService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$1: void onWidgetUpdaterTick()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void updateWidget(android.content.Context)&gt;"/>  
        <node method="PlayerWidgetJobService updateWidget" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="PlayerWidgetJobService updateWidget" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lde/danoeh/antennapod/core/service/PlayerWidgetJobService;&quot;)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.config.GpodnetCallbacksImpl"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.config.GpodnetCallbacksImpl: android.app.PendingIntent getGpodnetSyncServiceErrorNotificationPendingIntent(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.config.GpodnetCallbacksImpl: android.app.PendingIntent getGpodnetSyncServiceErrorNotificationPendingIntent(android.content.Context)&gt;,android.app.PendingIntent getGpodnetSyncServiceErrorNotificationPendingIntent(android.content.Context)"/>  
      <source name="de.danoeh.antennapod.config.GpodnetCallbacksImpl"/>  
      <destinition name="de.danoeh.antennapod.activity.MainActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.config.GpodnetCallbacksImpl: android.app.PendingIntent getGpodnetSyncServiceErrorNotificationPendingIntent(android.content.Context)&gt;"/>  
        <node method="GpodnetCallbacksImpl getGpodnetSyncServiceErrorNotificationPendingIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="GpodnetCallbacksImpl getGpodnetSyncServiceErrorNotificationPendingIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Lde/danoeh/antennapod/activity/MainActivity;&quot;)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.OpmlImportFromPathActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.OpmlImportFromPathActivity$$Lambda$1: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.OpmlImportFromPathActivity$$Lambda$1: void onClick(android.view.View)&gt;,void onClick(android.view.View)"/>  
      <source name="de.danoeh.antennapod.activity.OpmlImportFromPathActivity"/>  
      <sender action="android.intent.action.PICK, android.intent.action.GET_CONTENT, android.intent.action.PICK, android.intent.action.GET_CONTENT" category="android.intent.category.OPENABLE, android.intent.category.OPENABLE" data="null, null" type="*/*, */*"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.OpmlImportFromPathActivity$$Lambda$1: void onClick(android.view.View)&gt;"/>  
        <node method="OpmlImportFromPathActivity$$Lambda$1 onClick" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity$$Lambda$1 onClick" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.PICK&quot;)"/>  
        <node method="OpmlImportFromPathActivity$$Lambda$1 onClick" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;(null)"/>  
        <node method="OpmlImportFromPathActivity$$Lambda$1 onClick" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity$$Lambda$1 onClick" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.GET_CONTENT&quot;)"/>  
        <node method="OpmlImportFromPathActivity$$Lambda$1 onClick" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.OPENABLE&quot;)"/>  
        <node method="OpmlImportFromPathActivity$$Lambda$1 onClick" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;*/*&quot;)"/>  
        <node method="OpmlImportFromPathActivity$$Lambda$1 onClick" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity$$Lambda$1 onClick" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.PICK&quot;)"/>  
        <node method="OpmlImportFromPathActivity$$Lambda$1 onClick" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;(null)"/>  
        <node method="OpmlImportFromPathActivity$$Lambda$1 onClick" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity$$Lambda$1 onClick" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.GET_CONTENT&quot;)"/>  
        <node method="OpmlImportFromPathActivity$$Lambda$1 onClick" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.OPENABLE&quot;)"/>  
        <node method="OpmlImportFromPathActivity$$Lambda$1 onClick" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;*/*&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.OpmlImportFromPathActivity$$Lambda$1: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.OpmlImportFromPathActivity$$Lambda$1: void onClick(android.view.View)&gt;,void onClick(android.view.View)"/>  
      <source name="de.danoeh.antennapod.activity.OpmlImportFromPathActivity"/>  
      <destinition name="interICC_android.intent.action.PICK, android.intent.action.GET_CONTENT, android.intent.action.PICK, android.intent.action.GET_CONTENT, android.intent.category.OPENABLE, android.intent.category.OPENABLE"/>  
      <sender action="android.intent.action.PICK, android.intent.action.GET_CONTENT, android.intent.action.PICK, android.intent.action.GET_CONTENT" category="android.intent.category.OPENABLE, android.intent.category.OPENABLE" data="null, null" type="*/*, */*"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.OpmlImportFromPathActivity$$Lambda$1: void onClick(android.view.View)&gt;"/>  
        <node method="OpmlImportFromPathActivity$$Lambda$1 onClick" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity$$Lambda$1 onClick" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.PICK&quot;)"/>  
        <node method="OpmlImportFromPathActivity$$Lambda$1 onClick" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;(null)"/>  
        <node method="OpmlImportFromPathActivity$$Lambda$1 onClick" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity$$Lambda$1 onClick" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.GET_CONTENT&quot;)"/>  
        <node method="OpmlImportFromPathActivity$$Lambda$1 onClick" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.OPENABLE&quot;)"/>  
        <node method="OpmlImportFromPathActivity$$Lambda$1 onClick" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;*/*&quot;)"/>  
        <node method="OpmlImportFromPathActivity$$Lambda$1 onClick" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity$$Lambda$1 onClick" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.PICK&quot;)"/>  
        <node method="OpmlImportFromPathActivity$$Lambda$1 onClick" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;(null)"/>  
        <node method="OpmlImportFromPathActivity$$Lambda$1 onClick" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity$$Lambda$1 onClick" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.GET_CONTENT&quot;)"/>  
        <node method="OpmlImportFromPathActivity$$Lambda$1 onClick" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.OPENABLE&quot;)"/>  
        <node method="OpmlImportFromPathActivity$$Lambda$1 onClick" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;*/*&quot;)"/>  
        <node method="OpmlImportFromPathActivity$$Lambda$1 onClick" type="PassOutIntent" unit="virtualinvoke $r4.&lt;de.danoeh.antennapod.activity.OpmlImportFromPathActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, 1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.receiver.PlayerWidget"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.receiver.PlayerWidget: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.receiver.PlayerWidget: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])&gt;,&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void updateWidget(android.content.Context)&gt;,void updateWidget(android.content.Context)"/>  
      <source name="de.danoeh.antennapod.core.receiver.PlayerWidget"/>  
      <destinition name="de.danoeh.antennapod.core.service.PlayerWidgetJobService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.receiver.PlayerWidget: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void updateWidget(android.content.Context)&gt;"/>  
        <node method="PlayerWidgetJobService updateWidget" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="PlayerWidgetJobService updateWidget" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lde/danoeh/antennapod/core/service/PlayerWidgetJobService;&quot;)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.preferences.PreferenceController"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.preferences.PreferenceController: void lambda$null$43$PreferenceController$3c92ef9(android.content.Context,java.io.File)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.preferences.PreferenceController: void lambda$null$43$PreferenceController$3c92ef9(android.content.Context,java.io.File)&gt;,void lambda$null$43$PreferenceController$3c92ef9(android.content.Context,java.io.File)"/>  
      <source name="de.danoeh.antennapod.preferences.PreferenceController"/>  
      <destinition name="de.danoeh.antennapod.activity.OnlineFeedViewActivity"/>  
      <sender action="android.intent.action.SEND" type="text/plain" flags="FLAG_GRANT_READ_URI_PERMISSION "/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: void lambda$null$43$PreferenceController$3c92ef9(android.content.Context,java.io.File)&gt;"/>  
        <node method="PreferenceController lambda$null$43$PreferenceController$3c92ef9" type="CreateMethod" unit="$r4 = new android.content.Intent"/>  
        <node method="PreferenceController lambda$null$43$PreferenceController$3c92ef9" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.SEND&quot;)"/>  
        <node method="PreferenceController lambda$null$43$PreferenceController$3c92ef9" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;text/plain&quot;)"/>  
        <node method="PreferenceController lambda$null$43$PreferenceController$3c92ef9" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(1)"/>  
        <node method="PreferenceController lambda$null$43$PreferenceController$3c92ef9" type="PassOutIntent" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r4)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.preferences.PreferenceController: void lambda$null$43$PreferenceController$3c92ef9(android.content.Context,java.io.File)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.preferences.PreferenceController: void lambda$null$43$PreferenceController$3c92ef9(android.content.Context,java.io.File)&gt;,void lambda$null$43$PreferenceController$3c92ef9(android.content.Context,java.io.File)"/>  
      <source name="de.danoeh.antennapod.preferences.PreferenceController"/>  
      <destinition name="de.danoeh.antennapod.activity.OnlineFeedViewActivity"/>  
      <sender action="android.intent.action.SEND" type="text/plain" flags="FLAG_GRANT_READ_URI_PERMISSION "/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: void lambda$null$43$PreferenceController$3c92ef9(android.content.Context,java.io.File)&gt;"/>  
        <node method="PreferenceController lambda$null$43$PreferenceController$3c92ef9" type="CreateMethod" unit="$r4 = new android.content.Intent"/>  
        <node method="PreferenceController lambda$null$43$PreferenceController$3c92ef9" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.SEND&quot;)"/>  
        <node method="PreferenceController lambda$null$43$PreferenceController$3c92ef9" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;text/plain&quot;)"/>  
        <node method="PreferenceController lambda$null$43$PreferenceController$3c92ef9" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(1)"/>  
        <node method="PreferenceController lambda$null$43$PreferenceController$3c92ef9" type="PassOutIntent" unit="$r8 = virtualinvoke $r7.&lt;android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)&gt;($r4, 65536)"/>  
        <node method="PreferenceController lambda$null$43$PreferenceController$3c92ef9" type="PassOutIntent" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r4)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.StorageErrorActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.StorageErrorActivity: void onResume()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.StorageErrorActivity: void onResume()&gt;,&lt;de.danoeh.antennapod.activity.StorageErrorActivity: void leaveErrorState()&gt;,void leaveErrorState()"/>  
      <source name="de.danoeh.antennapod.activity.StorageErrorActivity"/>  
      <destinition name="de.danoeh.antennapod.activity.MainActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.StorageErrorActivity: void onResume()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.StorageErrorActivity: void leaveErrorState()&gt;"/>  
        <node method="StorageErrorActivity leaveErrorState" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="StorageErrorActivity leaveErrorState" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lde/danoeh/antennapod/activity/MainActivity;&quot;)"/>  
        <node method="StorageErrorActivity leaveErrorState" type="PassOutIntent" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.activity.StorageErrorActivity: void startActivity(android.content.Intent)&gt;($r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: android.content.Intent getIntent()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: android.content.Intent getIntent()&gt;,android.content.Intent getIntent()"/>  
      <source name="de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: android.content.Intent getIntent()&gt;"/>  
        <node method="PlaybackServiceStarter getIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="PlaybackServiceStarter getIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.FlattrAuthActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.FlattrAuthActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.FlattrAuthActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,boolean onOptionsItemSelected(android.view.MenuItem)"/>  
      <source name="de.danoeh.antennapod.activity.FlattrAuthActivity"/>  
      <destinition name="de.danoeh.antennapod.activity.PreferenceActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.FlattrAuthActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="FlattrAuthActivity onOptionsItemSelected" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="FlattrAuthActivity onOptionsItemSelected" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lde/danoeh/antennapod/activity/PreferenceActivity;&quot;)"/>  
        <node method="FlattrAuthActivity onOptionsItemSelected" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(67108864)"/>  
        <node method="FlattrAuthActivity onOptionsItemSelected" type="PassOutIntent" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.activity.FlattrAuthActivity: void startActivity(android.content.Intent)&gt;($r2)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.MediaplayerInfoActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: void onAwaitingVideoSurface()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: void onAwaitingVideoSurface()&gt;,void onAwaitingVideoSurface()"/>  
      <source name="de.danoeh.antennapod.activity.MediaplayerInfoActivity"/>  
      <destinition name="de.danoeh.antennapod.activity.VideoplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: void onAwaitingVideoSurface()&gt;"/>  
        <node method="MediaplayerInfoActivity onAwaitingVideoSurface" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="MediaplayerInfoActivity onAwaitingVideoSurface" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lde/danoeh/antennapod/activity/VideoplayerActivity;&quot;)"/>  
        <node method="MediaplayerInfoActivity onAwaitingVideoSurface" type="PassOutIntent" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: void startActivity(android.content.Intent)&gt;($r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.DirectoryChooserActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.DirectoryChooserActivity: void returnSelectedFolder()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.DirectoryChooserActivity: void returnSelectedFolder()&gt;,void returnSelectedFolder()"/>  
      <source name="de.danoeh.antennapod.activity.DirectoryChooserActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.DirectoryChooserActivity: void returnSelectedFolder()&gt;"/>  
        <node method="DirectoryChooserActivity returnSelectedFolder" type="CreateMethod" unit="$r1 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.fragment.AddFeedFragment"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.AddFeedFragment$$Lambda$3: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.AddFeedFragment$$Lambda$3: void onClick(android.view.View)&gt;,void onClick(android.view.View)"/>  
      <source name="de.danoeh.antennapod.fragment.AddFeedFragment"/>  
      <destinition name="de.danoeh.antennapod.activity.OpmlImportFromPathActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.AddFeedFragment$$Lambda$3: void onClick(android.view.View)&gt;"/>  
        <node method="AddFeedFragment$$Lambda$3 onClick" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="AddFeedFragment$$Lambda$3 onClick" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/activity/OpmlImportFromPathActivity;&quot;)"/>  
        <node method="AddFeedFragment$$Lambda$3 onClick" type="PassOutIntent" unit="virtualinvoke $r4.&lt;de.danoeh.antennapod.fragment.AddFeedFragment: void startActivity(android.content.Intent)&gt;($r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.fragment.ItemFragment"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemFragment: boolean onContextItemSelected(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemFragment: boolean onContextItemSelected(android.view.MenuItem)&gt;,boolean onContextItemSelected(android.view.MenuItem)"/>  
      <source name="de.danoeh.antennapod.fragment.ItemFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemFragment: boolean onContextItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="ItemFragment onContextItemSelected" type="CreateMethod" unit="$r5 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemFragment: boolean onContextItemSelected(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemFragment: boolean onContextItemSelected(android.view.MenuItem)&gt;,boolean onContextItemSelected(android.view.MenuItem)"/>  
      <source name="de.danoeh.antennapod.fragment.ItemFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemFragment: boolean onContextItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="ItemFragment onContextItemSelected" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="ItemFragment onContextItemSelected" type="PassOutIntent" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentActivity: void startActivity(android.content.Intent)&gt;($r5)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.preferences.PreferenceController"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupStorageScreen$5$PreferenceController$7ff604e7(android.app.Activity)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupStorageScreen$5$PreferenceController$7ff604e7(android.app.Activity)&gt;,boolean lambda$setupStorageScreen$5$PreferenceController$7ff604e7(android.app.Activity)"/>  
      <source name="de.danoeh.antennapod.preferences.PreferenceController"/>  
      <destinition name="de.danoeh.antennapod.activity.ImportExportActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupStorageScreen$5$PreferenceController$7ff604e7(android.app.Activity)&gt;"/>  
        <node method="PreferenceController lambda$setupStorageScreen$5$PreferenceController$7ff604e7" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="PreferenceController lambda$setupStorageScreen$5$PreferenceController$7ff604e7" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lde/danoeh/antennapod/activity/ImportExportActivity;&quot;)"/>  
        <node method="PreferenceController lambda$setupStorageScreen$5$PreferenceController$7ff604e7" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;($r0)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.ImportExportActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.ImportExportActivity$$Lambda$1: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.ImportExportActivity$$Lambda$1: void onClick(android.view.View)&gt;,void onClick(android.view.View)"/>  
      <source name="de.danoeh.antennapod.activity.ImportExportActivity"/>  
      <destinition name="interICC_android.intent.action.GET_CONTENT, "/>  
      <sender action="android.intent.action.GET_CONTENT" type="*/*"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.ImportExportActivity$$Lambda$1: void onClick(android.view.View)&gt;"/>  
        <node method="ImportExportActivity$$Lambda$1 onClick" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="ImportExportActivity$$Lambda$1 onClick" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.GET_CONTENT&quot;)"/>  
        <node method="ImportExportActivity$$Lambda$1 onClick" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;*/*&quot;)"/>  
        <node method="ImportExportActivity$$Lambda$1 onClick" type="PassOutIntent" unit="virtualinvoke $r2.&lt;de.danoeh.antennapod.activity.ImportExportActivity: void startActivityForResult(android.content.Intent,int)&gt;($r3, 43)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.ImportExportActivity$$Lambda$1: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.ImportExportActivity$$Lambda$1: void onClick(android.view.View)&gt;,void onClick(android.view.View)"/>  
      <source name="de.danoeh.antennapod.activity.ImportExportActivity"/>  
      <destinition name="interICC_android.intent.action.OPEN_DOCUMENT, "/>  
      <sender action="android.intent.action.OPEN_DOCUMENT" type="*/*"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.ImportExportActivity$$Lambda$1: void onClick(android.view.View)&gt;"/>  
        <node method="ImportExportActivity$$Lambda$1 onClick" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="ImportExportActivity$$Lambda$1 onClick" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.OPEN_DOCUMENT&quot;)"/>  
        <node method="ImportExportActivity$$Lambda$1 onClick" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;*/*&quot;)"/>  
        <node method="ImportExportActivity$$Lambda$1 onClick" type="PassOutIntent" unit="virtualinvoke $r2.&lt;de.danoeh.antennapod.activity.ImportExportActivity: void startActivityForResult(android.content.Intent,int)&gt;($r3, 43)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.preferences.PreferenceController"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupMainScreen$37$PreferenceController$234e8b40(android.support.v7.app.AppCompatActivity)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupMainScreen$37$PreferenceController$234e8b40(android.support.v7.app.AppCompatActivity)&gt;,boolean lambda$setupMainScreen$37$PreferenceController$234e8b40(android.support.v7.app.AppCompatActivity)"/>  
      <source name="de.danoeh.antennapod.preferences.PreferenceController"/>  
      <destinition name="de.danoeh.antennapod.activity.AboutActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupMainScreen$37$PreferenceController$234e8b40(android.support.v7.app.AppCompatActivity)&gt;"/>  
        <node method="PreferenceController lambda$setupMainScreen$37$PreferenceController$234e8b40" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="PreferenceController lambda$setupMainScreen$37$PreferenceController$234e8b40" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lde/danoeh/antennapod/activity/AboutActivity;&quot;)"/>  
        <node method="PreferenceController lambda$setupMainScreen$37$PreferenceController$234e8b40" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.support.v7.app.AppCompatActivity: void startActivity(android.content.Intent)&gt;($r0)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.FlattrAuthActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.FlattrAuthActivity$$Lambda$0: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.FlattrAuthActivity$$Lambda$0: void onClick(android.view.View)&gt;,void onClick(android.view.View)"/>  
      <source name="de.danoeh.antennapod.activity.FlattrAuthActivity"/>  
      <destinition name="de.danoeh.antennapod.activity.MainActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.FlattrAuthActivity$$Lambda$0: void onClick(android.view.View)&gt;"/>  
        <node method="FlattrAuthActivity$$Lambda$0 onClick" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="FlattrAuthActivity$$Lambda$0 onClick" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Lde/danoeh/antennapod/activity/MainActivity;&quot;)"/>  
        <node method="FlattrAuthActivity$$Lambda$0 onClick" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(67108864)"/>  
        <node method="FlattrAuthActivity$$Lambda$0 onClick" type="PassOutIntent" unit="virtualinvoke $r3.&lt;de.danoeh.antennapod.activity.FlattrAuthActivity: void startActivity(android.content.Intent)&gt;($r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.FeedSettingsActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.FeedSettingsActivity: boolean onPrepareOptionsMenu(android.view.Menu)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.FeedSettingsActivity: boolean onPrepareOptionsMenu(android.view.Menu)&gt;,boolean onPrepareOptionsMenu(android.view.Menu)"/>  
      <source name="de.danoeh.antennapod.activity.FeedSettingsActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.FeedSettingsActivity: boolean onPrepareOptionsMenu(android.view.Menu)&gt;"/>  
        <node method="FeedSettingsActivity onPrepareOptionsMenu" type="CreateMethod" unit="$r5 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.config.ApplicationCallbacksImpl"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.config.ApplicationCallbacksImpl: android.content.Intent getStorageErrorActivity(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.config.ApplicationCallbacksImpl: android.content.Intent getStorageErrorActivity(android.content.Context)&gt;,android.content.Intent getStorageErrorActivity(android.content.Context)"/>  
      <source name="de.danoeh.antennapod.config.ApplicationCallbacksImpl"/>  
      <destinition name="de.danoeh.antennapod.activity.StorageErrorActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.config.ApplicationCallbacksImpl: android.content.Intent getStorageErrorActivity(android.content.Context)&gt;"/>  
        <node method="ApplicationCallbacksImpl getStorageErrorActivity" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="ApplicationCallbacksImpl getStorageErrorActivity" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lde/danoeh/antennapod/activity/StorageErrorActivity;&quot;)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.SplashActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.SplashActivity$$Lambda$1: void call()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.SplashActivity$$Lambda$1: void call()&gt;,void call()"/>  
      <source name="de.danoeh.antennapod.activity.SplashActivity"/>  
      <destinition name="de.danoeh.antennapod.activity.MainActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.SplashActivity$$Lambda$1: void call()&gt;"/>  
        <node method="SplashActivity$$Lambda$1 call" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="SplashActivity$$Lambda$1 call" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lde/danoeh/antennapod/activity/MainActivity;&quot;)"/>  
        <node method="SplashActivity$$Lambda$1 call" type="PassOutIntent" unit="virtualinvoke $r1.&lt;de.danoeh.antennapod.activity.SplashActivity: void startActivity(android.content.Intent)&gt;($r2)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.dialog.VariableSpeedDialog"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)&gt;,void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)"/>  
      <source name="de.danoeh.antennapod.dialog.VariableSpeedDialog"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)&gt;"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)&gt;,void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)"/>  
      <source name="de.danoeh.antennapod.dialog.VariableSpeedDialog"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)&gt;"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="CreateMethod" unit="$r2 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.service.FeedUpdateJobService"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.FeedUpdateJobService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.FeedUpdateJobService: android.os.IBinder onBind(android.content.Intent)&gt;,android.os.IBinder onBind(android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.FeedUpdateJobService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.FeedUpdateJobService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
        <node method="FeedUpdateJobService onBind" type="ReceiveIntentFromParatMethod" unit="parameter0 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.FeedUpdateJobService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.FeedUpdateJobService: android.os.IBinder onBind(android.content.Intent)&gt;,android.os.IBinder onBind(android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.FeedUpdateJobService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.FeedUpdateJobService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
        <node method="FeedUpdateJobService onBind" type="ReceiveIntentFromRetValue" unit="parameter0 = virtualinvoke this.&lt;de.danoeh.antennapod.core.service.FeedUpdateJobService: android.content.Intent getIntent()&gt;()"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.StorageErrorActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.StorageErrorActivity: void access$000(de.danoeh.antennapod.activity.StorageErrorActivity)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.StorageErrorActivity: void access$000(de.danoeh.antennapod.activity.StorageErrorActivity)&gt;,&lt;de.danoeh.antennapod.activity.StorageErrorActivity: void leaveErrorState()&gt;,void leaveErrorState()"/>  
      <source name="de.danoeh.antennapod.activity.StorageErrorActivity"/>  
      <destinition name="de.danoeh.antennapod.activity.MainActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.StorageErrorActivity: void access$000(de.danoeh.antennapod.activity.StorageErrorActivity)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.StorageErrorActivity: void leaveErrorState()&gt;"/>  
        <node method="StorageErrorActivity leaveErrorState" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="StorageErrorActivity leaveErrorState" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lde/danoeh/antennapod/activity/MainActivity;&quot;)"/>  
        <node method="StorageErrorActivity leaveErrorState" type="PassOutIntent" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.activity.StorageErrorActivity: void startActivity(android.content.Intent)&gt;($r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.antennapod.audio.MediaPlayer"> 
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;,boolean isIntentAvailable(android.content.Context,java.lang.String)"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.dialog.RatingDialog"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.dialog.RatingDialog: void lambda$createDialog$0$RatingDialog$2fd15666()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.dialog.RatingDialog: void lambda$createDialog$0$RatingDialog$2fd15666()&gt;,void lambda$createDialog$0$RatingDialog$2fd15666()"/>  
      <source name="de.danoeh.antennapod.dialog.RatingDialog"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.dialog.RatingDialog: void lambda$createDialog$0$RatingDialog$2fd15666()&gt;"/>  
        <node method="RatingDialog lambda$createDialog$0$RatingDialog$2fd15666" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="RatingDialog lambda$createDialog$0$RatingDialog$2fd15666" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>  
        <node method="RatingDialog lambda$createDialog$0$RatingDialog$2fd15666" type="PassOutIntent" unit="virtualinvoke $r3.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r0)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.preferences.PreferenceController"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupInterfaceScreen$2$PreferenceController$11df2fb5(android.app.Activity)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupInterfaceScreen$2$PreferenceController$11df2fb5(android.app.Activity)&gt;,boolean lambda$setupInterfaceScreen$2$PreferenceController$11df2fb5(android.app.Activity)"/>  
      <source name="de.danoeh.antennapod.preferences.PreferenceController"/>  
      <destinition name="de.danoeh.antennapod.activity.MainActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupInterfaceScreen$2$PreferenceController$11df2fb5(android.app.Activity)&gt;"/>  
        <node method="PreferenceController lambda$setupInterfaceScreen$2$PreferenceController$11df2fb5" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="PreferenceController lambda$setupInterfaceScreen$2$PreferenceController$11df2fb5" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lde/danoeh/antennapod/activity/MainActivity;&quot;)"/>  
        <node method="PreferenceController lambda$setupInterfaceScreen$2$PreferenceController$11df2fb5" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268468224)"/>  
        <node method="PreferenceController lambda$setupInterfaceScreen$2$PreferenceController$11df2fb5" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;($r0)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.afollestad.materialdialogs.MaterialDialog"> 
    <intentSummary> 
      <method value="&lt;com.afollestad.materialdialogs.MaterialDialog: void setContentView(int)&gt;"/>  
      <methodtrace value="&lt;com.afollestad.materialdialogs.MaterialDialog: void setContentView(int)&gt;,void setContentView(int)"/>  
      <source name="com.afollestad.materialdialogs.MaterialDialog"/>  
      <nodes> 
        <node method="&lt;com.afollestad.materialdialogs.MaterialDialog: void setContentView(int)&gt;"/>  
        <node method="MaterialDialog setContentView" type="setContentView" unit="specialinvoke r0.&lt;com.afollestad.materialdialogs.DialogBase: void setContentView(int)&gt;($i0)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.VideoplayerActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.VideoplayerActivity: void onReloadNotification(int)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.VideoplayerActivity: void onReloadNotification(int)&gt;,void onReloadNotification(int)"/>  
      <source name="de.danoeh.antennapod.activity.VideoplayerActivity"/>  
      <destinition name="de.danoeh.antennapod.activity.AudioplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.VideoplayerActivity: void onReloadNotification(int)&gt;"/>  
        <node method="VideoplayerActivity onReloadNotification" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="VideoplayerActivity onReloadNotification" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lde/danoeh/antennapod/activity/AudioplayerActivity;&quot;)"/>  
        <node method="VideoplayerActivity onReloadNotification" type="PassOutIntent" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.activity.VideoplayerActivity: void startActivity(android.content.Intent)&gt;($r1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.VideoplayerActivity: void onReloadNotification(int)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.VideoplayerActivity: void onReloadNotification(int)&gt;,void onReloadNotification(int)"/>  
      <source name="de.danoeh.antennapod.activity.VideoplayerActivity"/>  
      <destinition name="de.danoeh.antennapod.activity.CastplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.VideoplayerActivity: void onReloadNotification(int)&gt;"/>  
        <node method="VideoplayerActivity onReloadNotification" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="VideoplayerActivity onReloadNotification" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lde/danoeh/antennapod/activity/CastplayerActivity;&quot;)"/>  
        <node method="VideoplayerActivity onReloadNotification" type="PassOutIntent" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.activity.VideoplayerActivity: void startActivity(android.content.Intent)&gt;($r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.MainActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MainActivity: void onNewIntent(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MainActivity: void onNewIntent(android.content.Intent)&gt;,void onNewIntent(android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.activity.MainActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity: void onNewIntent(android.content.Intent)&gt;"/>  
        <node method="MainActivity onNewIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.storage.DownloadRequester"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void cancelDownload(android.content.Context,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void cancelDownload(android.content.Context,java.lang.String)&gt;,void cancelDownload(android.content.Context,java.lang.String)"/>  
      <source name="de.danoeh.antennapod.core.storage.DownloadRequester"/>  
      <destinition name="interICC_action.de.danoeh.antennapod.core.service.cancelDownload, "/>  
      <sender action="action.de.danoeh.antennapod.core.service.cancelDownload"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void cancelDownload(android.content.Context,java.lang.String)&gt;"/>  
        <node method="DownloadRequester cancelDownload" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="DownloadRequester cancelDownload" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;action.de.danoeh.antennapod.core.service.cancelDownload&quot;)"/>  
        <node method="DownloadRequester cancelDownload" type="PassOutIntent" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.config.DownloadServiceCallbacksImpl"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.config.DownloadServiceCallbacksImpl: android.app.PendingIntent getReportNotificationContentIntent(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.config.DownloadServiceCallbacksImpl: android.app.PendingIntent getReportNotificationContentIntent(android.content.Context)&gt;,android.app.PendingIntent getReportNotificationContentIntent(android.content.Context)"/>  
      <source name="de.danoeh.antennapod.config.DownloadServiceCallbacksImpl"/>  
      <destinition name="de.danoeh.antennapod.activity.MainActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.config.DownloadServiceCallbacksImpl: android.app.PendingIntent getReportNotificationContentIntent(android.content.Context)&gt;"/>  
        <node method="DownloadServiceCallbacksImpl getReportNotificationContentIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="DownloadServiceCallbacksImpl getReportNotificationContentIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Lde/danoeh/antennapod/activity/MainActivity;&quot;)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.dialog.RatingDialog"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.dialog.RatingDialog$$Lambda$0: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.dialog.RatingDialog$$Lambda$0: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;,&lt;de.danoeh.antennapod.dialog.RatingDialog: void lambda$createDialog$0$RatingDialog$2fd15666()&gt;,void lambda$createDialog$0$RatingDialog$2fd15666()"/>  
      <source name="de.danoeh.antennapod.dialog.RatingDialog"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.dialog.RatingDialog$$Lambda$0: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.RatingDialog: void lambda$createDialog$0$RatingDialog$2fd15666()&gt;"/>  
        <node method="RatingDialog lambda$createDialog$0$RatingDialog$2fd15666" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="RatingDialog lambda$createDialog$0$RatingDialog$2fd15666" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>  
        <node method="RatingDialog lambda$createDialog$0$RatingDialog$2fd15666" type="PassOutIntent" unit="virtualinvoke $r3.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r0)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.config.DownloadServiceCallbacksImpl"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.config.DownloadServiceCallbacksImpl: android.app.PendingIntent getAuthentificationNotificationContentIntent(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.config.DownloadServiceCallbacksImpl: android.app.PendingIntent getAuthentificationNotificationContentIntent(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;,android.app.PendingIntent getAuthentificationNotificationContentIntent(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)"/>  
      <source name="de.danoeh.antennapod.config.DownloadServiceCallbacksImpl"/>  
      <destinition name="de.danoeh.antennapod.activity.DownloadAuthenticationActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.config.DownloadServiceCallbacksImpl: android.app.PendingIntent getAuthentificationNotificationContentIntent(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;"/>  
        <node method="DownloadServiceCallbacksImpl getAuthentificationNotificationContentIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="DownloadServiceCallbacksImpl getAuthentificationNotificationContentIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, class &quot;Lde/danoeh/antennapod/activity/DownloadAuthenticationActivity;&quot;)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.OpmlFeedChooserActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.OpmlFeedChooserActivity$$Lambda$2: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.OpmlFeedChooserActivity$$Lambda$2: void onClick(android.view.View)&gt;,void onClick(android.view.View)"/>  
      <source name="de.danoeh.antennapod.activity.OpmlFeedChooserActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.OpmlFeedChooserActivity$$Lambda$2: void onClick(android.view.View)&gt;"/>  
        <node method="OpmlFeedChooserActivity$$Lambda$2 onClick" type="CreateMethod" unit="$r1 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.preferences.PreferenceController"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$36: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$36: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupMainScreen$37$PreferenceController$234e8b40(android.support.v7.app.AppCompatActivity)&gt;,boolean lambda$setupMainScreen$37$PreferenceController$234e8b40(android.support.v7.app.AppCompatActivity)"/>  
      <source name="de.danoeh.antennapod.preferences.PreferenceController"/>  
      <destinition name="de.danoeh.antennapod.activity.AboutActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$36: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupMainScreen$37$PreferenceController$234e8b40(android.support.v7.app.AppCompatActivity)&gt;"/>  
        <node method="PreferenceController lambda$setupMainScreen$37$PreferenceController$234e8b40" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="PreferenceController lambda$setupMainScreen$37$PreferenceController$234e8b40" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lde/danoeh/antennapod/activity/AboutActivity;&quot;)"/>  
        <node method="PreferenceController lambda$setupMainScreen$37$PreferenceController$234e8b40" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.support.v7.app.AppCompatActivity: void startActivity(android.content.Intent)&gt;($r0)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.service.download.DownloadService"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.download.DownloadService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.download.DownloadService: android.os.IBinder onBind(android.content.Intent)&gt;,android.os.IBinder onBind(android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.download.DownloadService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.download.DownloadService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
        <node method="DownloadService onBind" type="ReceiveIntentFromRetValue" unit="parameter0 = virtualinvoke this.&lt;de.danoeh.antennapod.core.service.download.DownloadService: android.content.Intent getIntent()&gt;()"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.download.DownloadService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.download.DownloadService: android.os.IBinder onBind(android.content.Intent)&gt;,android.os.IBinder onBind(android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.download.DownloadService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.download.DownloadService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
        <node method="DownloadService onBind" type="ReceiveIntentFromParatMethod" unit="parameter0 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.service.PlayerWidgetJobService"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: android.os.IBinder onBind(android.content.Intent)&gt;,android.os.IBinder onBind(android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.PlayerWidgetJobService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
        <node method="PlayerWidgetJobService onBind" type="ReceiveIntentFromRetValue" unit="parameter0 = virtualinvoke this.&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: android.content.Intent getIntent()&gt;()"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: android.os.IBinder onBind(android.content.Intent)&gt;,android.os.IBinder onBind(android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.PlayerWidgetJobService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
        <node method="PlayerWidgetJobService onBind" type="ReceiveIntentFromParatMethod" unit="parameter0 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.gpoddernet.GpodnetAuthenticationActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.gpoddernet.GpodnetAuthenticationActivity$$Lambda$3: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.gpoddernet.GpodnetAuthenticationActivity$$Lambda$3: void onClick(android.view.View)&gt;,void onClick(android.view.View)"/>  
      <source name="de.danoeh.antennapod.activity.gpoddernet.GpodnetAuthenticationActivity"/>  
      <destinition name="de.danoeh.antennapod.activity.MainActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.gpoddernet.GpodnetAuthenticationActivity$$Lambda$3: void onClick(android.view.View)&gt;"/>  
        <node method="GpodnetAuthenticationActivity$$Lambda$3 onClick" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="GpodnetAuthenticationActivity$$Lambda$3 onClick" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Lde/danoeh/antennapod/activity/MainActivity;&quot;)"/>  
        <node method="GpodnetAuthenticationActivity$$Lambda$3 onClick" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(67108864)"/>  
        <node method="GpodnetAuthenticationActivity$$Lambda$3 onClick" type="PassOutIntent" unit="virtualinvoke $r3.&lt;de.danoeh.antennapod.activity.gpoddernet.GpodnetAuthenticationActivity: void startActivity(android.content.Intent)&gt;($r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.fragment.FyydSearchFragment"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.FyydSearchFragment$$Lambda$0: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.FyydSearchFragment$$Lambda$0: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;,void onItemClick(android.widget.AdapterView,android.view.View,int,long)"/>  
      <source name="de.danoeh.antennapod.fragment.FyydSearchFragment"/>  
      <destinition name="de.danoeh.antennapod.activity.OnlineFeedViewActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.FyydSearchFragment$$Lambda$0: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;"/>  
        <node method="FyydSearchFragment$$Lambda$0 onItemClick" type="CreateMethod" unit="$r7 = new android.content.Intent"/>  
        <node method="FyydSearchFragment$$Lambda$0 onItemClick" type="SetAttribute" unit="specialinvoke $r7.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r8, class &quot;Lde/danoeh/antennapod/activity/OnlineFeedViewActivity;&quot;)"/>  
        <node method="FyydSearchFragment$$Lambda$0 onItemClick" type="PassOutIntent" unit="virtualinvoke $r3.&lt;de.danoeh.antennapod.fragment.FyydSearchFragment: void startActivity(android.content.Intent)&gt;($r7)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.spa.SPAUtil"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.spa.SPAUtil: boolean sendSPAppsQueryFeedsIntent(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.spa.SPAUtil: boolean sendSPAppsQueryFeedsIntent(android.content.Context)&gt;,boolean sendSPAppsQueryFeedsIntent(android.content.Context)"/>  
      <source name="de.danoeh.antennapod.spa.SPAUtil"/>  
      <destinition name="interICC_de.danoeh.antennapdsp.intent.SP_APPS_QUERY_FEEDS, "/>  
      <sender action="de.danoeh.antennapdsp.intent.SP_APPS_QUERY_FEEDS"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.spa.SPAUtil: boolean sendSPAppsQueryFeedsIntent(android.content.Context)&gt;"/>  
        <node method="SPAUtil sendSPAppsQueryFeedsIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="SPAUtil sendSPAppsQueryFeedsIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;de.danoeh.antennapdsp.intent.SP_APPS_QUERY_FEEDS&quot;)"/>  
        <node method="SPAUtil sendSPAppsQueryFeedsIntent" type="PassOutIntent" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.service.GpodnetSyncService"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: android.os.IBinder onBind(android.content.Intent)&gt;,android.os.IBinder onBind(android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.GpodnetSyncService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
        <node method="GpodnetSyncService onBind" type="ReceiveIntentFromParatMethod" unit="parameter0 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: android.os.IBinder onBind(android.content.Intent)&gt;,android.os.IBinder onBind(android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.GpodnetSyncService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
        <node method="GpodnetSyncService onBind" type="ReceiveIntentFromRetValue" unit="parameter0 = virtualinvoke this.&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: android.content.Intent getIntent()&gt;()"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.antennapod.audio.ServiceBackedAudioPlayer"> 
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="PassOutIntent" unit="$z0 = virtualinvoke $r4.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r1, $r2, 1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.antennapod.audio.MediaPlayer"> 
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled()&gt;,boolean isPrestoLibraryInstalled(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.fragment.ItemlistFragment"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void showFeedInfo()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void showFeedInfo()&gt;,void showFeedInfo()"/>  
      <source name="de.danoeh.antennapod.fragment.ItemlistFragment"/>  
      <destinition name="de.danoeh.antennapod.activity.FeedInfoActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void showFeedInfo()&gt;"/>  
        <node method="ItemlistFragment showFeedInfo" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="ItemlistFragment showFeedInfo" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lde/danoeh/antennapod/activity/FeedInfoActivity;&quot;)"/>  
        <node method="ItemlistFragment showFeedInfo" type="PassOutIntent" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void startActivity(android.content.Intent)&gt;($r2)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.receiver.PlayerWidget"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.receiver.PlayerWidget: void onEnabled(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.receiver.PlayerWidget: void onEnabled(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void updateWidget(android.content.Context)&gt;,void updateWidget(android.content.Context)"/>  
      <source name="de.danoeh.antennapod.core.receiver.PlayerWidget"/>  
      <destinition name="de.danoeh.antennapod.core.service.PlayerWidgetJobService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.receiver.PlayerWidget: void onEnabled(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void updateWidget(android.content.Context)&gt;"/>  
        <node method="PlayerWidgetJobService updateWidget" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="PlayerWidgetJobService updateWidget" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lde/danoeh/antennapod/core/service/PlayerWidgetJobService;&quot;)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.service.playback.PlaybackService"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendNotificationBroadcast(int,int)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendNotificationBroadcast(int,int)&gt;,void sendNotificationBroadcast(int,int)"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="interICC_action.de.danoeh.antennapod.core.service.playerNotification, "/>  
      <sender action="action.de.danoeh.antennapod.core.service.playerNotification"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendNotificationBroadcast(int,int)&gt;"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;action.de.danoeh.antennapod.core.service.playerNotification&quot;)"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="PassOutIntent" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendBroadcast(android.content.Intent)&gt;($r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.OpmlImportFromPathActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.OpmlImportFromPathActivity$$Lambda$0: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.OpmlImportFromPathActivity$$Lambda$0: void onClick(android.view.View)&gt;,void onClick(android.view.View)"/>  
      <source name="de.danoeh.antennapod.activity.OpmlImportFromPathActivity"/>  
      <sender action="android.intent.action.PICK, android.intent.action.GET_CONTENT, android.intent.action.PICK, android.intent.action.GET_CONTENT" category="android.intent.category.OPENABLE, android.intent.category.OPENABLE" data="null, null" type="*/*, */*"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.OpmlImportFromPathActivity$$Lambda$0: void onClick(android.view.View)&gt;"/>  
        <node method="OpmlImportFromPathActivity$$Lambda$0 onClick" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity$$Lambda$0 onClick" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.PICK&quot;)"/>  
        <node method="OpmlImportFromPathActivity$$Lambda$0 onClick" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;(null)"/>  
        <node method="OpmlImportFromPathActivity$$Lambda$0 onClick" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity$$Lambda$0 onClick" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.GET_CONTENT&quot;)"/>  
        <node method="OpmlImportFromPathActivity$$Lambda$0 onClick" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.OPENABLE&quot;)"/>  
        <node method="OpmlImportFromPathActivity$$Lambda$0 onClick" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;*/*&quot;)"/>  
        <node method="OpmlImportFromPathActivity$$Lambda$0 onClick" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity$$Lambda$0 onClick" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.PICK&quot;)"/>  
        <node method="OpmlImportFromPathActivity$$Lambda$0 onClick" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;(null)"/>  
        <node method="OpmlImportFromPathActivity$$Lambda$0 onClick" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity$$Lambda$0 onClick" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.GET_CONTENT&quot;)"/>  
        <node method="OpmlImportFromPathActivity$$Lambda$0 onClick" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.OPENABLE&quot;)"/>  
        <node method="OpmlImportFromPathActivity$$Lambda$0 onClick" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;*/*&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.OpmlImportFromPathActivity$$Lambda$0: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.OpmlImportFromPathActivity$$Lambda$0: void onClick(android.view.View)&gt;,void onClick(android.view.View)"/>  
      <source name="de.danoeh.antennapod.activity.OpmlImportFromPathActivity"/>  
      <destinition name="interICC_android.intent.action.PICK, android.intent.action.GET_CONTENT, android.intent.action.PICK, android.intent.action.GET_CONTENT, android.intent.category.OPENABLE, android.intent.category.OPENABLE"/>  
      <sender action="android.intent.action.PICK, android.intent.action.GET_CONTENT, android.intent.action.PICK, android.intent.action.GET_CONTENT" category="android.intent.category.OPENABLE, android.intent.category.OPENABLE" data="null, null" type="*/*, */*"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.OpmlImportFromPathActivity$$Lambda$0: void onClick(android.view.View)&gt;"/>  
        <node method="OpmlImportFromPathActivity$$Lambda$0 onClick" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity$$Lambda$0 onClick" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.PICK&quot;)"/>  
        <node method="OpmlImportFromPathActivity$$Lambda$0 onClick" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;(null)"/>  
        <node method="OpmlImportFromPathActivity$$Lambda$0 onClick" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity$$Lambda$0 onClick" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.GET_CONTENT&quot;)"/>  
        <node method="OpmlImportFromPathActivity$$Lambda$0 onClick" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.OPENABLE&quot;)"/>  
        <node method="OpmlImportFromPathActivity$$Lambda$0 onClick" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;*/*&quot;)"/>  
        <node method="OpmlImportFromPathActivity$$Lambda$0 onClick" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity$$Lambda$0 onClick" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.PICK&quot;)"/>  
        <node method="OpmlImportFromPathActivity$$Lambda$0 onClick" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;(null)"/>  
        <node method="OpmlImportFromPathActivity$$Lambda$0 onClick" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity$$Lambda$0 onClick" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.GET_CONTENT&quot;)"/>  
        <node method="OpmlImportFromPathActivity$$Lambda$0 onClick" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.OPENABLE&quot;)"/>  
        <node method="OpmlImportFromPathActivity$$Lambda$0 onClick" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;*/*&quot;)"/>  
        <node method="OpmlImportFromPathActivity$$Lambda$0 onClick" type="PassOutIntent" unit="virtualinvoke $r4.&lt;de.danoeh.antennapod.activity.OpmlImportFromPathActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, 1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.fragment.ItunesSearchFragment"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItunesSearchFragment$$Lambda$10: void call(java.lang.Object)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItunesSearchFragment$$Lambda$10: void call(java.lang.Object)&gt;,void call(java.lang.Object)"/>  
      <source name="de.danoeh.antennapod.fragment.ItunesSearchFragment"/>  
      <destinition name="de.danoeh.antennapod.activity.OnlineFeedViewActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItunesSearchFragment$$Lambda$10: void call(java.lang.Object)&gt;"/>  
        <node method="ItunesSearchFragment$$Lambda$10 call" type="CreateMethod" unit="$r7 = new android.content.Intent"/>  
        <node method="ItunesSearchFragment$$Lambda$10 call" type="SetAttribute" unit="specialinvoke $r7.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/activity/OnlineFeedViewActivity;&quot;)"/>  
        <node method="ItunesSearchFragment$$Lambda$10 call" type="PassOutIntent" unit="virtualinvoke $r1.&lt;de.danoeh.antennapod.fragment.ItunesSearchFragment: void startActivity(android.content.Intent)&gt;($r7)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.config.FlattrCallbacksImpl"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.config.FlattrCallbacksImpl: android.content.Intent getFlattrAuthenticationActivityIntent(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.config.FlattrCallbacksImpl: android.content.Intent getFlattrAuthenticationActivityIntent(android.content.Context)&gt;,android.content.Intent getFlattrAuthenticationActivityIntent(android.content.Context)"/>  
      <source name="de.danoeh.antennapod.config.FlattrCallbacksImpl"/>  
      <destinition name="de.danoeh.antennapod.activity.FlattrAuthActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.config.FlattrCallbacksImpl: android.content.Intent getFlattrAuthenticationActivityIntent(android.content.Context)&gt;"/>  
        <node method="FlattrCallbacksImpl getFlattrAuthenticationActivityIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="FlattrCallbacksImpl getFlattrAuthenticationActivityIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lde/danoeh/antennapod/activity/FlattrAuthActivity;&quot;)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.preferences.PreferenceController"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupMainScreen$38$PreferenceController$234e8b40(android.support.v7.app.AppCompatActivity)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupMainScreen$38$PreferenceController$234e8b40(android.support.v7.app.AppCompatActivity)&gt;,boolean lambda$setupMainScreen$38$PreferenceController$234e8b40(android.support.v7.app.AppCompatActivity)"/>  
      <source name="de.danoeh.antennapod.preferences.PreferenceController"/>  
      <destinition name="de.danoeh.antennapod.activity.StatisticsActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupMainScreen$38$PreferenceController$234e8b40(android.support.v7.app.AppCompatActivity)&gt;"/>  
        <node method="PreferenceController lambda$setupMainScreen$38$PreferenceController$234e8b40" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="PreferenceController lambda$setupMainScreen$38$PreferenceController$234e8b40" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lde/danoeh/antennapod/activity/StatisticsActivity;&quot;)"/>  
        <node method="PreferenceController lambda$setupMainScreen$38$PreferenceController$234e8b40" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.support.v7.app.AppCompatActivity: void startActivity(android.content.Intent)&gt;($r0)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.service.playback.PlaybackService"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$13: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$13: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)&gt;,android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$13: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)&gt;"/>  
        <node method="PlaybackService$13 registerReceiver" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.IntentFilter"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.preferences.PreferenceController"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$2: boolean onPreferenceChange(android.support.v7.preference.Preference,java.lang.Object)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$2: boolean onPreferenceChange(android.support.v7.preference.Preference,java.lang.Object)&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupInterfaceScreen$2$PreferenceController$11df2fb5(android.app.Activity)&gt;,boolean lambda$setupInterfaceScreen$2$PreferenceController$11df2fb5(android.app.Activity)"/>  
      <source name="de.danoeh.antennapod.preferences.PreferenceController"/>  
      <destinition name="de.danoeh.antennapod.activity.MainActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$2: boolean onPreferenceChange(android.support.v7.preference.Preference,java.lang.Object)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupInterfaceScreen$2$PreferenceController$11df2fb5(android.app.Activity)&gt;"/>  
        <node method="PreferenceController lambda$setupInterfaceScreen$2$PreferenceController$11df2fb5" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="PreferenceController lambda$setupInterfaceScreen$2$PreferenceController$11df2fb5" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lde/danoeh/antennapod/activity/MainActivity;&quot;)"/>  
        <node method="PreferenceController lambda$setupInterfaceScreen$2$PreferenceController$11df2fb5" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268468224)"/>  
        <node method="PreferenceController lambda$setupInterfaceScreen$2$PreferenceController$11df2fb5" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;($r0)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.preferences.PreferenceController"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupMainScreen$40$PreferenceController$3014d007()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupMainScreen$40$PreferenceController$3014d007()&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController: void openInBrowser(java.lang.String)&gt;,void openInBrowser(java.lang.String)"/>  
      <source name="de.danoeh.antennapod.preferences.PreferenceController"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupMainScreen$40$PreferenceController$3014d007()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: void openInBrowser(java.lang.String)&gt;"/>  
        <node method="PreferenceController openInBrowser" type="CreateMethod" unit="$r2 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupMainScreen$40$PreferenceController$3014d007()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupMainScreen$40$PreferenceController$3014d007()&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController: void openInBrowser(java.lang.String)&gt;,void openInBrowser(java.lang.String)"/>  
      <source name="de.danoeh.antennapod.preferences.PreferenceController"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupMainScreen$40$PreferenceController$3014d007()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: void openInBrowser(java.lang.String)&gt;"/>  
        <node method="PreferenceController openInBrowser" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="PreferenceController openInBrowser" type="PassOutIntent" unit="virtualinvoke $r5.&lt;android.support.v7.app.AppCompatActivity: void startActivity(android.content.Intent)&gt;($r2)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupMainScreen$40$PreferenceController$3014d007()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupMainScreen$40$PreferenceController$3014d007()&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController: void openInBrowser(java.lang.String)&gt;,void openInBrowser(java.lang.String)"/>  
      <source name="de.danoeh.antennapod.preferences.PreferenceController"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupMainScreen$40$PreferenceController$3014d007()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: void openInBrowser(java.lang.String)&gt;"/>  
        <node method="PreferenceController openInBrowser" type="CreateMethod" unit="$r2 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.preferences.PreferenceController"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$5: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$5: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupStorageScreen$5$PreferenceController$7ff604e7(android.app.Activity)&gt;,boolean lambda$setupStorageScreen$5$PreferenceController$7ff604e7(android.app.Activity)"/>  
      <source name="de.danoeh.antennapod.preferences.PreferenceController"/>  
      <destinition name="de.danoeh.antennapod.activity.ImportExportActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$5: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupStorageScreen$5$PreferenceController$7ff604e7(android.app.Activity)&gt;"/>  
        <node method="PreferenceController lambda$setupStorageScreen$5$PreferenceController$7ff604e7" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="PreferenceController lambda$setupStorageScreen$5$PreferenceController$7ff604e7" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lde/danoeh/antennapod/activity/ImportExportActivity;&quot;)"/>  
        <node method="PreferenceController lambda$setupStorageScreen$5$PreferenceController$7ff604e7" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;($r0)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.preferences.PreferenceController"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$37: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$37: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupMainScreen$38$PreferenceController$234e8b40(android.support.v7.app.AppCompatActivity)&gt;,boolean lambda$setupMainScreen$38$PreferenceController$234e8b40(android.support.v7.app.AppCompatActivity)"/>  
      <source name="de.danoeh.antennapod.preferences.PreferenceController"/>  
      <destinition name="de.danoeh.antennapod.activity.StatisticsActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$37: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupMainScreen$38$PreferenceController$234e8b40(android.support.v7.app.AppCompatActivity)&gt;"/>  
        <node method="PreferenceController lambda$setupMainScreen$38$PreferenceController$234e8b40" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="PreferenceController lambda$setupMainScreen$38$PreferenceController$234e8b40" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lde/danoeh/antennapod/activity/StatisticsActivity;&quot;)"/>  
        <node method="PreferenceController lambda$setupMainScreen$38$PreferenceController$234e8b40" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.support.v7.app.AppCompatActivity: void startActivity(android.content.Intent)&gt;($r0)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.preferences.PreferenceController"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupMainScreen$39$PreferenceController$3014d007()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupMainScreen$39$PreferenceController$3014d007()&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController: void openInBrowser(java.lang.String)&gt;,void openInBrowser(java.lang.String)"/>  
      <source name="de.danoeh.antennapod.preferences.PreferenceController"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupMainScreen$39$PreferenceController$3014d007()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: void openInBrowser(java.lang.String)&gt;"/>  
        <node method="PreferenceController openInBrowser" type="CreateMethod" unit="$r2 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupMainScreen$39$PreferenceController$3014d007()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupMainScreen$39$PreferenceController$3014d007()&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController: void openInBrowser(java.lang.String)&gt;,void openInBrowser(java.lang.String)"/>  
      <source name="de.danoeh.antennapod.preferences.PreferenceController"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupMainScreen$39$PreferenceController$3014d007()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: void openInBrowser(java.lang.String)&gt;"/>  
        <node method="PreferenceController openInBrowser" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="PreferenceController openInBrowser" type="PassOutIntent" unit="virtualinvoke $r5.&lt;android.support.v7.app.AppCompatActivity: void startActivity(android.content.Intent)&gt;($r2)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupMainScreen$39$PreferenceController$3014d007()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupMainScreen$39$PreferenceController$3014d007()&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController: void openInBrowser(java.lang.String)&gt;,void openInBrowser(java.lang.String)"/>  
      <source name="de.danoeh.antennapod.preferences.PreferenceController"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupMainScreen$39$PreferenceController$3014d007()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: void openInBrowser(java.lang.String)&gt;"/>  
        <node method="PreferenceController openInBrowser" type="CreateMethod" unit="$r2 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.receiver.PlayerWidget"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.receiver.PlayerWidget: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.receiver.PlayerWidget: void onReceive(android.content.Context,android.content.Intent)&gt;,&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void updateWidget(android.content.Context)&gt;,void updateWidget(android.content.Context)"/>  
      <source name="de.danoeh.antennapod.core.receiver.PlayerWidget"/>  
      <destinition name="de.danoeh.antennapod.core.service.PlayerWidgetJobService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.receiver.PlayerWidget: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void updateWidget(android.content.Context)&gt;"/>  
        <node method="PlayerWidgetJobService updateWidget" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="PlayerWidgetJobService updateWidget" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lde/danoeh/antennapod/core/service/PlayerWidgetJobService;&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.receiver.PlayerWidget: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.receiver.PlayerWidget: void onReceive(android.content.Context,android.content.Intent)&gt;,void onReceive(android.content.Context,android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.receiver.PlayerWidget"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.receiver.PlayerWidget: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="PlayerWidget onReceive" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.receiver.PlayerWidget: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.receiver.PlayerWidget: void onReceive(android.content.Context,android.content.Intent)&gt;,void onReceive(android.content.Context,android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.receiver.PlayerWidget"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.receiver.PlayerWidget: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="PlayerWidget onReceive" type="ReceiveIntentFromRetValue" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.core.receiver.PlayerWidget: android.content.Intent getIntent()&gt;()"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.preferences.PreferenceController"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$40: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$40: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;,boolean onPreferenceClick(android.support.v7.preference.Preference)"/>  
      <source name="de.danoeh.antennapod.preferences.PreferenceController"/>  
      <destinition name="de.danoeh.antennapod.activity.OnlineFeedViewActivity"/>  
      <sender action="android.intent.action.SEND" type="text/plain" flags="FLAG_GRANT_READ_URI_PERMISSION "/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$40: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
        <node method="PreferenceController$$Lambda$40 onPreferenceClick" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="PreferenceController$$Lambda$40 onPreferenceClick" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.SEND&quot;)"/>  
        <node method="PreferenceController$$Lambda$40 onPreferenceClick" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;text/plain&quot;)"/>  
        <node method="PreferenceController$$Lambda$40 onPreferenceClick" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(1)"/>  
        <node method="PreferenceController$$Lambda$40 onPreferenceClick" type="PassOutIntent" unit="virtualinvoke $r5.&lt;android.support.v7.app.AppCompatActivity: void startActivity(android.content.Intent)&gt;($r1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$40: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$40: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;,boolean onPreferenceClick(android.support.v7.preference.Preference)"/>  
      <source name="de.danoeh.antennapod.preferences.PreferenceController"/>  
      <destinition name="de.danoeh.antennapod.activity.OnlineFeedViewActivity"/>  
      <sender action="android.intent.action.SEND" type="text/plain" flags="FLAG_GRANT_READ_URI_PERMISSION "/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$40: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
        <node method="PreferenceController$$Lambda$40 onPreferenceClick" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="PreferenceController$$Lambda$40 onPreferenceClick" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.SEND&quot;)"/>  
        <node method="PreferenceController$$Lambda$40 onPreferenceClick" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;text/plain&quot;)"/>  
        <node method="PreferenceController$$Lambda$40 onPreferenceClick" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(1)"/>  
        <node method="PreferenceController$$Lambda$40 onPreferenceClick" type="PassOutIntent" unit="$r12 = virtualinvoke $r11.&lt;android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)&gt;($r1, 65536)"/>  
        <node method="PreferenceController$$Lambda$40 onPreferenceClick" type="PassOutIntent" unit="virtualinvoke $r5.&lt;android.support.v7.app.AppCompatActivity: void startActivity(android.content.Intent)&gt;($r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.service.playback.PlaybackService"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void access$200(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void access$200(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;,&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendNotificationBroadcast(int,int)&gt;,void sendNotificationBroadcast(int,int)"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="interICC_action.de.danoeh.antennapod.core.service.playerNotification, "/>  
      <sender action="action.de.danoeh.antennapod.core.service.playerNotification"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void access$200(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendNotificationBroadcast(int,int)&gt;"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;action.de.danoeh.antennapod.core.service.playerNotification&quot;)"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="PassOutIntent" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendBroadcast(android.content.Intent)&gt;($r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.service.GpodnetSyncService"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;,void enqueueWork(android.content.Context,android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.GpodnetSyncService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.preferences.PreferenceController"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$56: void onClick(android.content.DialogInterface,int)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$56: void onClick(android.content.DialogInterface,int)&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController: void lambda$null$43$PreferenceController$3c92ef9(android.content.Context,java.io.File)&gt;,void lambda$null$43$PreferenceController$3c92ef9(android.content.Context,java.io.File)"/>  
      <source name="de.danoeh.antennapod.preferences.PreferenceController"/>  
      <destinition name="de.danoeh.antennapod.activity.OnlineFeedViewActivity"/>  
      <sender action="android.intent.action.SEND" type="text/plain" flags="FLAG_GRANT_READ_URI_PERMISSION "/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$56: void onClick(android.content.DialogInterface,int)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: void lambda$null$43$PreferenceController$3c92ef9(android.content.Context,java.io.File)&gt;"/>  
        <node method="PreferenceController lambda$null$43$PreferenceController$3c92ef9" type="CreateMethod" unit="$r4 = new android.content.Intent"/>  
        <node method="PreferenceController lambda$null$43$PreferenceController$3c92ef9" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.SEND&quot;)"/>  
        <node method="PreferenceController lambda$null$43$PreferenceController$3c92ef9" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;text/plain&quot;)"/>  
        <node method="PreferenceController lambda$null$43$PreferenceController$3c92ef9" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(1)"/>  
        <node method="PreferenceController lambda$null$43$PreferenceController$3c92ef9" type="PassOutIntent" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r4)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$56: void onClick(android.content.DialogInterface,int)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$56: void onClick(android.content.DialogInterface,int)&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController: void lambda$null$43$PreferenceController$3c92ef9(android.content.Context,java.io.File)&gt;,void lambda$null$43$PreferenceController$3c92ef9(android.content.Context,java.io.File)"/>  
      <source name="de.danoeh.antennapod.preferences.PreferenceController"/>  
      <destinition name="de.danoeh.antennapod.activity.OnlineFeedViewActivity"/>  
      <sender action="android.intent.action.SEND" type="text/plain" flags="FLAG_GRANT_READ_URI_PERMISSION "/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$56: void onClick(android.content.DialogInterface,int)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: void lambda$null$43$PreferenceController$3c92ef9(android.content.Context,java.io.File)&gt;"/>  
        <node method="PreferenceController lambda$null$43$PreferenceController$3c92ef9" type="CreateMethod" unit="$r4 = new android.content.Intent"/>  
        <node method="PreferenceController lambda$null$43$PreferenceController$3c92ef9" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.SEND&quot;)"/>  
        <node method="PreferenceController lambda$null$43$PreferenceController$3c92ef9" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;text/plain&quot;)"/>  
        <node method="PreferenceController lambda$null$43$PreferenceController$3c92ef9" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(1)"/>  
        <node method="PreferenceController lambda$null$43$PreferenceController$3c92ef9" type="PassOutIntent" unit="$r8 = virtualinvoke $r7.&lt;android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)&gt;($r4, 65536)"/>  
        <node method="PreferenceController lambda$null$43$PreferenceController$3c92ef9" type="PassOutIntent" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r4)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.storage.DownloadRequester"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void cancelDownload(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void cancelDownload(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void cancelDownload(android.content.Context,java.lang.String)&gt;,void cancelDownload(android.content.Context,java.lang.String)"/>  
      <source name="de.danoeh.antennapod.core.storage.DownloadRequester"/>  
      <destinition name="interICC_action.de.danoeh.antennapod.core.service.cancelDownload, "/>  
      <sender action="action.de.danoeh.antennapod.core.service.cancelDownload"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void cancelDownload(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void cancelDownload(android.content.Context,java.lang.String)&gt;"/>  
        <node method="DownloadRequester cancelDownload" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="DownloadRequester cancelDownload" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;action.de.danoeh.antennapod.core.service.cancelDownload&quot;)"/>  
        <node method="DownloadRequester cancelDownload" type="PassOutIntent" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.service.playback.PlaybackService"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$2: boolean onMediaPlayerError$52a31835(int,int)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$2: boolean onMediaPlayerError$52a31835(int,int)&gt;,&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void access$200(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;,&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendNotificationBroadcast(int,int)&gt;,void sendNotificationBroadcast(int,int)"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="interICC_action.de.danoeh.antennapod.core.service.playerNotification, "/>  
      <sender action="action.de.danoeh.antennapod.core.service.playerNotification"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$2: boolean onMediaPlayerError$52a31835(int,int)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void access$200(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendNotificationBroadcast(int,int)&gt;"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;action.de.danoeh.antennapod.core.service.playerNotification&quot;)"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="PassOutIntent" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendBroadcast(android.content.Intent)&gt;($r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.service.playback.PlaybackService"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: boolean onUnbind(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: boolean onUnbind(android.content.Intent)&gt;,boolean onUnbind(android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: boolean onUnbind(android.content.Intent)&gt;"/>  
        <node method="PlaybackService onUnbind" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.content.Intent getIntent()&gt;()"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: boolean onUnbind(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: boolean onUnbind(android.content.Intent)&gt;,boolean onUnbind(android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: boolean onUnbind(android.content.Intent)&gt;"/>  
        <node method="PlaybackService onUnbind" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.fragment.gpodnet.PodcastListFragment"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.gpodnet.PodcastListFragment$$Lambda$0: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.gpodnet.PodcastListFragment$$Lambda$0: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;,void onItemClick(android.widget.AdapterView,android.view.View,int,long)"/>  
      <source name="de.danoeh.antennapod.fragment.gpodnet.PodcastListFragment"/>  
      <destinition name="de.danoeh.antennapod.activity.OnlineFeedViewActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.gpodnet.PodcastListFragment$$Lambda$0: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;"/>  
        <node method="PodcastListFragment$$Lambda$0 onItemClick" type="CreateMethod" unit="$r10 = new android.content.Intent"/>  
        <node method="PodcastListFragment$$Lambda$0 onItemClick" type="SetAttribute" unit="specialinvoke $r10.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r11, class &quot;Lde/danoeh/antennapod/activity/OnlineFeedViewActivity;&quot;)"/>  
        <node method="PodcastListFragment$$Lambda$0 onItemClick" type="PassOutIntent" unit="virtualinvoke $r3.&lt;de.danoeh.antennapod.fragment.gpodnet.PodcastListFragment: void startActivity(android.content.Intent)&gt;($r10)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.DirectoryChooserActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.DirectoryChooserActivity: void access$200(de.danoeh.antennapod.activity.DirectoryChooserActivity)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.DirectoryChooserActivity: void access$200(de.danoeh.antennapod.activity.DirectoryChooserActivity)&gt;,&lt;de.danoeh.antennapod.activity.DirectoryChooserActivity: void returnSelectedFolder()&gt;,void returnSelectedFolder()"/>  
      <source name="de.danoeh.antennapod.activity.DirectoryChooserActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.DirectoryChooserActivity: void access$200(de.danoeh.antennapod.activity.DirectoryChooserActivity)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.DirectoryChooserActivity: void returnSelectedFolder()&gt;"/>  
        <node method="DirectoryChooserActivity returnSelectedFolder" type="CreateMethod" unit="$r1 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.preferences.PreferenceController"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$38: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$38: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupMainScreen$39$PreferenceController$3014d007()&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController: void openInBrowser(java.lang.String)&gt;,void openInBrowser(java.lang.String)"/>  
      <source name="de.danoeh.antennapod.preferences.PreferenceController"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$38: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupMainScreen$39$PreferenceController$3014d007()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: void openInBrowser(java.lang.String)&gt;"/>  
        <node method="PreferenceController openInBrowser" type="CreateMethod" unit="$r2 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$38: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$38: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupMainScreen$39$PreferenceController$3014d007()&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController: void openInBrowser(java.lang.String)&gt;,void openInBrowser(java.lang.String)"/>  
      <source name="de.danoeh.antennapod.preferences.PreferenceController"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$38: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupMainScreen$39$PreferenceController$3014d007()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: void openInBrowser(java.lang.String)&gt;"/>  
        <node method="PreferenceController openInBrowser" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="PreferenceController openInBrowser" type="PassOutIntent" unit="virtualinvoke $r5.&lt;android.support.v7.app.AppCompatActivity: void startActivity(android.content.Intent)&gt;($r2)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$38: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$38: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupMainScreen$39$PreferenceController$3014d007()&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController: void openInBrowser(java.lang.String)&gt;,void openInBrowser(java.lang.String)"/>  
      <source name="de.danoeh.antennapod.preferences.PreferenceController"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$38: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupMainScreen$39$PreferenceController$3014d007()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: void openInBrowser(java.lang.String)&gt;"/>  
        <node method="PreferenceController openInBrowser" type="CreateMethod" unit="$r2 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.service.playback.PlaybackService"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.os.IBinder onBind(android.content.Intent)&gt;,android.os.IBinder onBind(android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
        <node method="PlaybackService onBind" type="ReceiveIntentFromRetValue" unit="parameter0 = virtualinvoke this.&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.content.Intent getIntent()&gt;()"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.os.IBinder onBind(android.content.Intent)&gt;,android.os.IBinder onBind(android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
        <node method="PlaybackService onBind" type="ReceiveIntentFromParatMethod" unit="parameter0 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.preferences.PreferenceController"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$39: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$39: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupMainScreen$40$PreferenceController$3014d007()&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController: void openInBrowser(java.lang.String)&gt;,void openInBrowser(java.lang.String)"/>  
      <source name="de.danoeh.antennapod.preferences.PreferenceController"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$39: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupMainScreen$40$PreferenceController$3014d007()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: void openInBrowser(java.lang.String)&gt;"/>  
        <node method="PreferenceController openInBrowser" type="CreateMethod" unit="$r2 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$39: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$39: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupMainScreen$40$PreferenceController$3014d007()&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController: void openInBrowser(java.lang.String)&gt;,void openInBrowser(java.lang.String)"/>  
      <source name="de.danoeh.antennapod.preferences.PreferenceController"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$39: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupMainScreen$40$PreferenceController$3014d007()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: void openInBrowser(java.lang.String)&gt;"/>  
        <node method="PreferenceController openInBrowser" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="PreferenceController openInBrowser" type="PassOutIntent" unit="virtualinvoke $r5.&lt;android.support.v7.app.AppCompatActivity: void startActivity(android.content.Intent)&gt;($r2)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$39: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$39: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupMainScreen$40$PreferenceController$3014d007()&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController: void openInBrowser(java.lang.String)&gt;,void openInBrowser(java.lang.String)"/>  
      <source name="de.danoeh.antennapod.preferences.PreferenceController"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$39: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupMainScreen$40$PreferenceController$3014d007()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: void openInBrowser(java.lang.String)&gt;"/>  
        <node method="PreferenceController openInBrowser" type="CreateMethod" unit="$r2 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.StorageErrorActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.StorageErrorActivity$2: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.StorageErrorActivity$2: void onReceive(android.content.Context,android.content.Intent)&gt;,&lt;de.danoeh.antennapod.activity.StorageErrorActivity: void access$000(de.danoeh.antennapod.activity.StorageErrorActivity)&gt;,&lt;de.danoeh.antennapod.activity.StorageErrorActivity: void leaveErrorState()&gt;,void leaveErrorState()"/>  
      <source name="de.danoeh.antennapod.activity.StorageErrorActivity"/>  
      <destinition name="de.danoeh.antennapod.activity.MainActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.StorageErrorActivity$2: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.StorageErrorActivity: void access$000(de.danoeh.antennapod.activity.StorageErrorActivity)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.StorageErrorActivity: void leaveErrorState()&gt;"/>  
        <node method="StorageErrorActivity leaveErrorState" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="StorageErrorActivity leaveErrorState" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lde/danoeh/antennapod/activity/MainActivity;&quot;)"/>  
        <node method="StorageErrorActivity leaveErrorState" type="PassOutIntent" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.activity.StorageErrorActivity: void startActivity(android.content.Intent)&gt;($r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.fragment.ItemlistFragment"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment$$Lambda$0: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment$$Lambda$0: void onClick(android.view.View)&gt;,&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void showFeedInfo()&gt;,void showFeedInfo()"/>  
      <source name="de.danoeh.antennapod.fragment.ItemlistFragment"/>  
      <destinition name="de.danoeh.antennapod.activity.FeedInfoActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment$$Lambda$0: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void showFeedInfo()&gt;"/>  
        <node method="ItemlistFragment showFeedInfo" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="ItemlistFragment showFeedInfo" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lde/danoeh/antennapod/activity/FeedInfoActivity;&quot;)"/>  
        <node method="ItemlistFragment showFeedInfo" type="PassOutIntent" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void startActivity(android.content.Intent)&gt;($r2)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.fragment.ItemlistFragment"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment$$Lambda$1: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment$$Lambda$1: void onClick(android.view.View)&gt;,&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void showFeedInfo()&gt;,void showFeedInfo()"/>  
      <source name="de.danoeh.antennapod.fragment.ItemlistFragment"/>  
      <destinition name="de.danoeh.antennapod.activity.FeedInfoActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment$$Lambda$1: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void showFeedInfo()&gt;"/>  
        <node method="ItemlistFragment showFeedInfo" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="ItemlistFragment showFeedInfo" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lde/danoeh/antennapod/activity/FeedInfoActivity;&quot;)"/>  
        <node method="ItemlistFragment showFeedInfo" type="PassOutIntent" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void startActivity(android.content.Intent)&gt;($r2)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.antennapod.audio.MediaPlayer"> 
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled(android.content.Context)&gt;,boolean isPrestoLibraryInstalled(android.content.Context), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled(android.content.Context)&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.dialog.VariableSpeedDialog"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog$$Lambda$1: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog$$Lambda$1: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)&gt;,void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)"/>  
      <source name="de.danoeh.antennapod.dialog.VariableSpeedDialog"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog$$Lambda$1: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)&gt;"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog$$Lambda$1: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog$$Lambda$1: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)&gt;,void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)"/>  
      <source name="de.danoeh.antennapod.dialog.VariableSpeedDialog"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog$$Lambda$1: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)&gt;"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="CreateMethod" unit="$r2 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.StorageErrorActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.StorageErrorActivity$1: void run(java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.StorageErrorActivity$1: void run(java.lang.String)&gt;,&lt;de.danoeh.antennapod.activity.StorageErrorActivity: void access$000(de.danoeh.antennapod.activity.StorageErrorActivity)&gt;,&lt;de.danoeh.antennapod.activity.StorageErrorActivity: void leaveErrorState()&gt;,void leaveErrorState()"/>  
      <source name="de.danoeh.antennapod.activity.StorageErrorActivity"/>  
      <destinition name="de.danoeh.antennapod.activity.MainActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.StorageErrorActivity$1: void run(java.lang.String)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.StorageErrorActivity: void access$000(de.danoeh.antennapod.activity.StorageErrorActivity)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.StorageErrorActivity: void leaveErrorState()&gt;"/>  
        <node method="StorageErrorActivity leaveErrorState" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="StorageErrorActivity leaveErrorState" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lde/danoeh/antennapod/activity/MainActivity;&quot;)"/>  
        <node method="StorageErrorActivity leaveErrorState" type="PassOutIntent" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.activity.StorageErrorActivity: void startActivity(android.content.Intent)&gt;($r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.StatisticsActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.StatisticsActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.StatisticsActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle)"/>  
      <source name="de.danoeh.antennapod.activity.StatisticsActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.StatisticsActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="StatisticsActivity onCreate" type="setContentView" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.activity.StatisticsActivity: void setContentView(int)&gt;(2131558596)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.DirectoryChooserActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.DirectoryChooserActivity$1$$Lambda$1: void onClick(android.content.DialogInterface,int)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.DirectoryChooserActivity$1$$Lambda$1: void onClick(android.content.DialogInterface,int)&gt;,&lt;de.danoeh.antennapod.activity.DirectoryChooserActivity: void access$200(de.danoeh.antennapod.activity.DirectoryChooserActivity)&gt;,&lt;de.danoeh.antennapod.activity.DirectoryChooserActivity: void returnSelectedFolder()&gt;,void returnSelectedFolder()"/>  
      <source name="de.danoeh.antennapod.activity.DirectoryChooserActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.DirectoryChooserActivity$1$$Lambda$1: void onClick(android.content.DialogInterface,int)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.DirectoryChooserActivity: void access$200(de.danoeh.antennapod.activity.DirectoryChooserActivity)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.DirectoryChooserActivity: void returnSelectedFolder()&gt;"/>  
        <node method="DirectoryChooserActivity returnSelectedFolder" type="CreateMethod" unit="$r1 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.service.playback.PlaybackService"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$1: void onChapterLoaded$ec1ab6c()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$1: void onChapterLoaded$ec1ab6c()&gt;,&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void access$200(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;,&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendNotificationBroadcast(int,int)&gt;,void sendNotificationBroadcast(int,int)"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="interICC_action.de.danoeh.antennapod.core.service.playerNotification, "/>  
      <sender action="action.de.danoeh.antennapod.core.service.playerNotification"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$1: void onChapterLoaded$ec1ab6c()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void access$200(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendNotificationBroadcast(int,int)&gt;"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;action.de.danoeh.antennapod.core.service.playerNotification&quot;)"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="PassOutIntent" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendBroadcast(android.content.Intent)&gt;($r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.CastplayerActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.CastplayerActivity: void onReloadNotification(int)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.CastplayerActivity: void onReloadNotification(int)&gt;,void onReloadNotification(int)"/>  
      <source name="de.danoeh.antennapod.activity.CastplayerActivity"/>  
      <destinition name="de.danoeh.antennapod.activity.AudioplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.CastplayerActivity: void onReloadNotification(int)&gt;"/>  
        <node method="CastplayerActivity onReloadNotification" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="CastplayerActivity onReloadNotification" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lde/danoeh/antennapod/activity/AudioplayerActivity;&quot;)"/>  
        <node method="CastplayerActivity onReloadNotification" type="PassOutIntent" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.activity.CastplayerActivity: void startActivity(android.content.Intent)&gt;($r1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.CastplayerActivity: void onReloadNotification(int)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.CastplayerActivity: void onReloadNotification(int)&gt;,&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: void onReloadNotification(int)&gt;,void onReloadNotification(int)"/>  
      <source name="de.danoeh.antennapod.activity.CastplayerActivity"/>  
      <destinition name="de.danoeh.antennapod.activity.VideoplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.CastplayerActivity: void onReloadNotification(int)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: void onReloadNotification(int)&gt;"/>  
        <node method="MediaplayerInfoActivity onReloadNotification" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="MediaplayerInfoActivity onReloadNotification" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lde/danoeh/antennapod/activity/VideoplayerActivity;&quot;)"/>  
        <node method="MediaplayerInfoActivity onReloadNotification" type="PassOutIntent" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: void startActivity(android.content.Intent)&gt;($r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.OpmlImportBaseActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.OpmlImportBaseActivity$1: void onPostExecute(java.lang.Void)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.OpmlImportBaseActivity$1: void onPostExecute(java.lang.Void)&gt;,void onPostExecute(java.lang.Void)"/>  
      <source name="de.danoeh.antennapod.activity.OpmlImportBaseActivity"/>  
      <destinition name="de.danoeh.antennapod.activity.MainActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.OpmlImportBaseActivity$1: void onPostExecute(java.lang.Void)&gt;"/>  
        <node method="OpmlImportBaseActivity$1 onPostExecute" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="OpmlImportBaseActivity$1 onPostExecute" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Lde/danoeh/antennapod/activity/MainActivity;&quot;)"/>  
        <node method="OpmlImportBaseActivity$1 onPostExecute" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(335544320)"/>  
        <node method="OpmlImportBaseActivity$1 onPostExecute" type="PassOutIntent" unit="virtualinvoke $r3.&lt;de.danoeh.antennapod.activity.OpmlImportBaseActivity: void startActivity(android.content.Intent)&gt;($r2)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.service.playback.PlaybackService"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$2: void onBufferingUpdate(int)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$2: void onBufferingUpdate(int)&gt;,&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void access$200(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;,&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendNotificationBroadcast(int,int)&gt;,void sendNotificationBroadcast(int,int)"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="interICC_action.de.danoeh.antennapod.core.service.playerNotification, "/>  
      <sender action="action.de.danoeh.antennapod.core.service.playerNotification"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$2: void onBufferingUpdate(int)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void access$200(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendNotificationBroadcast(int,int)&gt;"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;action.de.danoeh.antennapod.core.service.playerNotification&quot;)"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="PassOutIntent" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendBroadcast(android.content.Intent)&gt;($r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.AudioplayerActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.AudioplayerActivity: void onReloadNotification(int)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.AudioplayerActivity: void onReloadNotification(int)&gt;,&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: void onReloadNotification(int)&gt;,void onReloadNotification(int)"/>  
      <source name="de.danoeh.antennapod.activity.AudioplayerActivity"/>  
      <destinition name="de.danoeh.antennapod.activity.VideoplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.AudioplayerActivity: void onReloadNotification(int)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: void onReloadNotification(int)&gt;"/>  
        <node method="MediaplayerInfoActivity onReloadNotification" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="MediaplayerInfoActivity onReloadNotification" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lde/danoeh/antennapod/activity/VideoplayerActivity;&quot;)"/>  
        <node method="MediaplayerInfoActivity onReloadNotification" type="PassOutIntent" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: void startActivity(android.content.Intent)&gt;($r1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.AudioplayerActivity: void onReloadNotification(int)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.AudioplayerActivity: void onReloadNotification(int)&gt;,void onReloadNotification(int)"/>  
      <source name="de.danoeh.antennapod.activity.AudioplayerActivity"/>  
      <destinition name="de.danoeh.antennapod.activity.CastplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.AudioplayerActivity: void onReloadNotification(int)&gt;"/>  
        <node method="AudioplayerActivity onReloadNotification" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="AudioplayerActivity onReloadNotification" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lde/danoeh/antennapod/activity/CastplayerActivity;&quot;)"/>  
        <node method="AudioplayerActivity onReloadNotification" type="PassOutIntent" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.activity.AudioplayerActivity: void startActivity(android.content.Intent)&gt;($r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.ImportExportActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.ImportExportActivity$$Lambda$0: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.ImportExportActivity$$Lambda$0: void onClick(android.view.View)&gt;,void onClick(android.view.View)"/>  
      <source name="de.danoeh.antennapod.activity.ImportExportActivity"/>  
      <destinition name="interICC_android.intent.action.CREATE_DOCUMENT, android.intent.category.OPENABLE"/>  
      <sender action="android.intent.action.CREATE_DOCUMENT" category="android.intent.category.OPENABLE" type="application/x-sqlite3"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.ImportExportActivity$$Lambda$0: void onClick(android.view.View)&gt;"/>  
        <node method="ImportExportActivity$$Lambda$0 onClick" type="CreateMethod" unit="$r10 = new android.content.Intent"/>  
        <node method="ImportExportActivity$$Lambda$0 onClick" type="SetAttribute" unit="specialinvoke $r10.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.CREATE_DOCUMENT&quot;)"/>  
        <node method="ImportExportActivity$$Lambda$0 onClick" type="SetAttribute" unit="$r3 = virtualinvoke $r10.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.OPENABLE&quot;)"/>  
        <node method="ImportExportActivity$$Lambda$0 onClick" type="SetAttribute" unit="$r3 = virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;application/x-sqlite3&quot;)"/>  
        <node method="ImportExportActivity$$Lambda$0 onClick" type="PassOutIntent" unit="virtualinvoke $r2.&lt;de.danoeh.antennapod.activity.ImportExportActivity: void startActivityForResult(android.content.Intent,int)&gt;($r3, 44)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.service.playback.PlaybackService"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$2: void setSpeedAbilityChanged()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$2: void setSpeedAbilityChanged()&gt;,&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void access$200(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;,&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendNotificationBroadcast(int,int)&gt;,void sendNotificationBroadcast(int,int)"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="interICC_action.de.danoeh.antennapod.core.service.playerNotification, "/>  
      <sender action="action.de.danoeh.antennapod.core.service.playerNotification"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$2: void setSpeedAbilityChanged()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void access$200(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendNotificationBroadcast(int,int)&gt;"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;action.de.danoeh.antennapod.core.service.playerNotification&quot;)"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="PassOutIntent" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendBroadcast(android.content.Intent)&gt;($r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.service.playback.PlaybackService"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$2: void playbackSpeedChanged$133aeb()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$2: void playbackSpeedChanged$133aeb()&gt;,&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void access$200(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;,&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendNotificationBroadcast(int,int)&gt;,void sendNotificationBroadcast(int,int)"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="interICC_action.de.danoeh.antennapod.core.service.playerNotification, "/>  
      <sender action="action.de.danoeh.antennapod.core.service.playerNotification"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$2: void playbackSpeedChanged$133aeb()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void access$200(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendNotificationBroadcast(int,int)&gt;"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;action.de.danoeh.antennapod.core.service.playerNotification&quot;)"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="PassOutIntent" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendBroadcast(android.content.Intent)&gt;($r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.service.playback.PlaybackService"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$1: void onSleepTimerExpired()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$1: void onSleepTimerExpired()&gt;,&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void access$200(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;,&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendNotificationBroadcast(int,int)&gt;,void sendNotificationBroadcast(int,int)"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="interICC_action.de.danoeh.antennapod.core.service.playerNotification, "/>  
      <sender action="action.de.danoeh.antennapod.core.service.playerNotification"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$1: void onSleepTimerExpired()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void access$200(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendNotificationBroadcast(int,int)&gt;"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;action.de.danoeh.antennapod.core.service.playerNotification&quot;)"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="PassOutIntent" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendBroadcast(android.content.Intent)&gt;($r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.OpmlImportBaseActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.OpmlImportBaseActivity$1: void onPostExecute(java.lang.Object)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.OpmlImportBaseActivity$1: void onPostExecute(java.lang.Object)&gt;,&lt;de.danoeh.antennapod.activity.OpmlImportBaseActivity$1: void onPostExecute(java.lang.Void)&gt;,void onPostExecute(java.lang.Void)"/>  
      <source name="de.danoeh.antennapod.activity.OpmlImportBaseActivity"/>  
      <destinition name="de.danoeh.antennapod.activity.MainActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.OpmlImportBaseActivity$1: void onPostExecute(java.lang.Object)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.OpmlImportBaseActivity$1: void onPostExecute(java.lang.Void)&gt;"/>  
        <node method="OpmlImportBaseActivity$1 onPostExecute" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="OpmlImportBaseActivity$1 onPostExecute" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Lde/danoeh/antennapod/activity/MainActivity;&quot;)"/>  
        <node method="OpmlImportBaseActivity$1 onPostExecute" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(335544320)"/>  
        <node method="OpmlImportBaseActivity$1 onPostExecute" type="PassOutIntent" unit="virtualinvoke $r3.&lt;de.danoeh.antennapod.activity.OpmlImportBaseActivity: void startActivity(android.content.Intent)&gt;($r2)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.util.playback.PlaybackController"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.PlaybackController: boolean canSetPlaybackSpeed()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.PlaybackController: boolean canSetPlaybackSpeed()&gt;,boolean canSetPlaybackSpeed(), &lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.PlaybackController"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.PlaybackController: boolean canSetPlaybackSpeed()&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.PlaybackController: boolean canSetPlaybackSpeed()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.PlaybackController: boolean canSetPlaybackSpeed()&gt;,&lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;,boolean isIntentAvailable(android.content.Context,java.lang.String)"/>  
      <source name="de.danoeh.antennapod.core.util.playback.PlaybackController"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.PlaybackController: boolean canSetPlaybackSpeed()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.OpmlImportBaseActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.OpmlImportBaseActivity: void onActivityResult(int,int,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.OpmlImportBaseActivity: void onActivityResult(int,int,android.content.Intent)&gt;,&lt;de.danoeh.antennapod.activity.OpmlImportBaseActivity$1: void onPostExecute(java.lang.Object)&gt;,&lt;de.danoeh.antennapod.activity.OpmlImportBaseActivity$1: void onPostExecute(java.lang.Void)&gt;,void onPostExecute(java.lang.Void)"/>  
      <source name="de.danoeh.antennapod.activity.OpmlImportBaseActivity"/>  
      <destinition name="de.danoeh.antennapod.activity.MainActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.OpmlImportBaseActivity: void onActivityResult(int,int,android.content.Intent)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.OpmlImportBaseActivity$1: void onPostExecute(java.lang.Object)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.OpmlImportBaseActivity$1: void onPostExecute(java.lang.Void)&gt;"/>  
        <node method="OpmlImportBaseActivity$1 onPostExecute" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="OpmlImportBaseActivity$1 onPostExecute" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Lde/danoeh/antennapod/activity/MainActivity;&quot;)"/>  
        <node method="OpmlImportBaseActivity$1 onPostExecute" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(335544320)"/>  
        <node method="OpmlImportBaseActivity$1 onPostExecute" type="PassOutIntent" unit="virtualinvoke $r3.&lt;de.danoeh.antennapod.activity.OpmlImportBaseActivity: void startActivity(android.content.Intent)&gt;($r2)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.FlattrAuthActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.FlattrAuthActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.FlattrAuthActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle)"/>  
      <source name="de.danoeh.antennapod.activity.FlattrAuthActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.FlattrAuthActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="FlattrAuthActivity onCreate" type="setContentView" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.activity.FlattrAuthActivity: void setContentView(int)&gt;(2131558476)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.storage.DownloadRequester"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;,boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)"/>  
      <source name="de.danoeh.antennapod.core.storage.DownloadRequester"/>  
      <destinition name="de.danoeh.antennapod.core.service.download.DownloadService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;"/>  
        <node method="DownloadRequester download" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="DownloadRequester download" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/download/DownloadService;&quot;)"/>  
        <node method="DownloadRequester download" type="PassOutIntent" unit="staticinvoke &lt;android.support.v4.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)&gt;($r2, $r5)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.storage.DownloadRequester"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadMedia(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadMedia(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;,boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)"/>  
      <source name="de.danoeh.antennapod.core.storage.DownloadRequester"/>  
      <destinition name="de.danoeh.antennapod.core.service.download.DownloadService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadMedia(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;"/>  
        <node method="DownloadRequester download" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="DownloadRequester download" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/download/DownloadService;&quot;)"/>  
        <node method="DownloadRequester download" type="PassOutIntent" unit="staticinvoke &lt;android.support.v4.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)&gt;($r2, $r5)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.storage.DBTasks"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.storage.DBTasks: void downloadFeedItems(boolean,android.content.Context,de.danoeh.antennapod.core.feed.FeedItem[])&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.storage.DBTasks: void downloadFeedItems(boolean,android.content.Context,de.danoeh.antennapod.core.feed.FeedItem[])&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadMedia(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;,boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)"/>  
      <source name="de.danoeh.antennapod.core.storage.DBTasks"/>  
      <destinition name="de.danoeh.antennapod.core.service.download.DownloadService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void downloadFeedItems(boolean,android.content.Context,de.danoeh.antennapod.core.feed.FeedItem[])&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadMedia(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;"/>  
        <node method="DownloadRequester download" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="DownloadRequester download" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/download/DownloadService;&quot;)"/>  
        <node method="DownloadRequester download" type="PassOutIntent" unit="staticinvoke &lt;android.support.v4.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)&gt;($r2, $r5)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.storage.APDownloadAlgorithm"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.storage.APDownloadAlgorithm$$Lambda$0: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.storage.APDownloadAlgorithm$$Lambda$0: void run()&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void downloadFeedItems(boolean,android.content.Context,de.danoeh.antennapod.core.feed.FeedItem[])&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadMedia(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;,boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)"/>  
      <source name="de.danoeh.antennapod.core.storage.APDownloadAlgorithm"/>  
      <destinition name="de.danoeh.antennapod.core.service.download.DownloadService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.storage.APDownloadAlgorithm$$Lambda$0: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void downloadFeedItems(boolean,android.content.Context,de.danoeh.antennapod.core.feed.FeedItem[])&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadMedia(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;"/>  
        <node method="DownloadRequester download" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="DownloadRequester download" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/download/DownloadService;&quot;)"/>  
        <node method="DownloadRequester download" type="PassOutIntent" unit="staticinvoke &lt;android.support.v4.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)&gt;($r2, $r5)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.antennapod.audio.ServiceBackedAudioPlayer"> 
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setPitchStepsAdjustment$133aeb()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setPitchStepsAdjustment$133aeb()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setPitchStepsAdjustment$133aeb()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setPitchStepsAdjustment$133aeb()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setPitchStepsAdjustment$133aeb()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setPitchStepsAdjustment$133aeb()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setPitchStepsAdjustment$133aeb()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setPitchStepsAdjustment$133aeb()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setPitchStepsAdjustment$133aeb()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setPitchStepsAdjustment$133aeb()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setPitchStepsAdjustment$133aeb()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setPitchStepsAdjustment$133aeb()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="PassOutIntent" unit="$z0 = virtualinvoke $r4.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r1, $r2, 1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setPitchStepsAdjustment$133aeb()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setPitchStepsAdjustment$133aeb()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setPitchStepsAdjustment$133aeb()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.preferences.PreferenceController"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$10: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$10: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;,boolean onPreferenceClick(android.support.v7.preference.Preference)"/>  
      <source name="de.danoeh.antennapod.preferences.PreferenceController"/>  
      <destinition name="de.danoeh.antennapod.activity.DirectoryChooserActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$10: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
        <node method="PreferenceController$$Lambda$10 onPreferenceClick" type="CreateMethod" unit="$r4 = new android.content.Intent"/>  
        <node method="PreferenceController$$Lambda$10 onPreferenceClick" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lde/danoeh/antennapod/activity/DirectoryChooserActivity;&quot;)"/>  
        <node method="PreferenceController$$Lambda$10 onPreferenceClick" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int)&gt;($r4, 1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.preferences.PreferenceController"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$9: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$9: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;,boolean onPreferenceClick(android.support.v7.preference.Preference)"/>  
      <source name="de.danoeh.antennapod.preferences.PreferenceController"/>  
      <destinition name="de.danoeh.antennapod.activity.DirectoryChooserActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$9: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
        <node method="PreferenceController$$Lambda$9 onPreferenceClick" type="CreateMethod" unit="$r6 = new android.content.Intent"/>  
        <node method="PreferenceController$$Lambda$9 onPreferenceClick" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lde/danoeh/antennapod/activity/DirectoryChooserActivity;&quot;)"/>  
        <node method="PreferenceController$$Lambda$9 onPreferenceClick" type="PassOutIntent" unit="virtualinvoke $r5.&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int)&gt;($r6, 1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.service.playback.PlaybackService"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.support.v4.app.NotificationCompat$Builder createBasicNotification()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.support.v4.app.NotificationCompat$Builder createBasicNotification()&gt;,android.support.v4.app.NotificationCompat$Builder createBasicNotification()"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.support.v4.app.NotificationCompat$Builder createBasicNotification()&gt;"/>  
        <node method="PlaybackService createBasicNotification" type="ReceiveIntentFromRetValue" unit="$r1 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.content.Intent getPlayerActivityIntent(android.content.Context)&gt;(r0)"/>  
        <node method="PlaybackService createBasicNotification" type="PassOutIntent" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r2)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: void start()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: void start()&gt;,void start(), &lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: android.content.Intent getIntent()&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: void start()&gt;"/>  
        <node method="PlaybackServiceStarter start" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: android.content.Intent getIntent()&gt;()"/>  
        <node method="PlaybackServiceStarter getIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="PlaybackServiceStarter getIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/>  
        <node method="PlaybackServiceStarter start" type="PassOutIntent" unit="staticinvoke &lt;android.support.v4.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)&gt;($r2, $r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.MediaplayerActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity: void playExternalMedia(android.content.Intent,de.danoeh.antennapod.core.feed.MediaType)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity: void playExternalMedia(android.content.Intent,de.danoeh.antennapod.core.feed.MediaType)&gt;,&lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: void start()&gt;,void start(), &lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: android.content.Intent getIntent()&gt;"/>  
      <source name="de.danoeh.antennapod.activity.MediaplayerActivity"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity: void playExternalMedia(android.content.Intent,de.danoeh.antennapod.core.feed.MediaType)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: void start()&gt;"/>  
        <node method="PlaybackServiceStarter start" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: android.content.Intent getIntent()&gt;()"/>  
        <node method="PlaybackServiceStarter getIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="PlaybackServiceStarter getIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/>  
        <node method="PlaybackServiceStarter start" type="PassOutIntent" unit="staticinvoke &lt;android.support.v4.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)&gt;($r2, $r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.storage.DownloadRequester"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;,boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)"/>  
      <source name="de.danoeh.antennapod.core.storage.DownloadRequester"/>  
      <destinition name="de.danoeh.antennapod.core.service.download.DownloadService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;"/>  
        <node method="DownloadRequester download" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="DownloadRequester download" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/download/DownloadService;&quot;)"/>  
        <node method="DownloadRequester download" type="PassOutIntent" unit="staticinvoke &lt;android.support.v4.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)&gt;($r2, $r5)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.storage.DBTasks"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;,boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)"/>  
      <source name="de.danoeh.antennapod.core.storage.DBTasks"/>  
      <destinition name="de.danoeh.antennapod.core.service.download.DownloadService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;"/>  
        <node method="DownloadRequester download" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="DownloadRequester download" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/download/DownloadService;&quot;)"/>  
        <node method="DownloadRequester download" type="PassOutIntent" unit="staticinvoke &lt;android.support.v4.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)&gt;($r2, $r5)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.storage.DBTasks"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.storage.DBTasks: void forceRefreshFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.storage.DBTasks: void forceRefreshFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;,boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)"/>  
      <source name="de.danoeh.antennapod.core.storage.DBTasks"/>  
      <destinition name="de.danoeh.antennapod.core.service.download.DownloadService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void forceRefreshFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;"/>  
        <node method="DownloadRequester download" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="DownloadRequester download" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/download/DownloadService;&quot;)"/>  
        <node method="DownloadRequester download" type="PassOutIntent" unit="staticinvoke &lt;android.support.v4.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)&gt;($r2, $r5)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.antennapod.audio.ServiceBackedAudioPlayer"> 
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="PassOutIntent" unit="$z0 = virtualinvoke $r4.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r1, $r2, 1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.antennapod.audio.MediaPlayer"> 
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;,void setupMpi(android.content.Context), &lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer setupMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer setupMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/>  
        <node method="MediaPlayer setupMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;,void setupMpi(android.content.Context), &lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer setupMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer setupMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer setupMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled()&gt;,boolean isPrestoLibraryInstalled(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;,android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;,android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;,void setupMpi(android.content.Context), &lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;,android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.antennapod.audio.MediaPlayer"> 
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,void &lt;init&gt;(android.content.Context,byte), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,void &lt;init&gt;(android.content.Context,byte), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,void &lt;init&gt;(android.content.Context,byte), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;,android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;,android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="PassOutIntent" unit="$z0 = virtualinvoke $r4.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r1, $r2, 1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;,android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.MediaplayerActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$3: void onProgressChanged(android.widget.SeekBar,int,boolean)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$3: void onProgressChanged(android.widget.SeekBar,int,boolean)&gt;,&lt;de.danoeh.antennapod.core.util.playback.PlaybackController: boolean canSetPlaybackSpeed()&gt;,boolean canSetPlaybackSpeed(), &lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.activity.MediaplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$3: void onProgressChanged(android.widget.SeekBar,int,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.PlaybackController: boolean canSetPlaybackSpeed()&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$3: void onProgressChanged(android.widget.SeekBar,int,boolean)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$3: void onProgressChanged(android.widget.SeekBar,int,boolean)&gt;,&lt;de.danoeh.antennapod.core.util.playback.PlaybackController: boolean canSetPlaybackSpeed()&gt;,&lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;,boolean isIntentAvailable(android.content.Context,java.lang.String)"/>  
      <source name="de.danoeh.antennapod.activity.MediaplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$3: void onProgressChanged(android.widget.SeekBar,int,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.PlaybackController: boolean canSetPlaybackSpeed()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.antennapod.audio.ServiceBackedAudioPlayer"> 
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setLooping$1385ff()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setLooping$1385ff()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setLooping$1385ff()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setLooping$1385ff()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setLooping$1385ff()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setLooping$1385ff()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setLooping$1385ff()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setLooping$1385ff()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setLooping$1385ff()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setLooping$1385ff()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setLooping$1385ff()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setLooping$1385ff()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="PassOutIntent" unit="$z0 = virtualinvoke $r4.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r1, $r2, 1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setLooping$1385ff()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setLooping$1385ff()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setLooping$1385ff()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.service.playback.PlaybackService"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$$Lambda$2: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$$Lambda$2: void run()&gt;,void run()"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$$Lambda$2: void run()&gt;"/>  
        <node method="PlaybackService$$Lambda$2 run" type="ReceiveIntentFromRetValue" unit="$r18 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.content.Intent getPlayerActivityIntent(android.content.Context)&gt;($r3)"/>  
        <node method="PlaybackService$$Lambda$2 run" type="PassOutIntent" unit="virtualinvoke $r17.&lt;android.support.v4.media.session.MediaSessionCompat: void setSessionActivity(android.app.PendingIntent)&gt;($r19)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.dialog.VariableSpeedDialog"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;,void showGetPluginDialog(android.content.Context,boolean)"/>  
      <source name="de.danoeh.antennapod.dialog.VariableSpeedDialog"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;"/>  
        <node method="VariableSpeedDialog showGetPluginDialog" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="VariableSpeedDialog showGetPluginDialog" type="CreateMethod" unit="$r2 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog$$Lambda$1: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)&gt;,void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)"/>  
      <source name="de.danoeh.antennapod.dialog.VariableSpeedDialog"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog$$Lambda$1: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)&gt;"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog$$Lambda$1: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)&gt;,void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)"/>  
      <source name="de.danoeh.antennapod.dialog.VariableSpeedDialog"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog$$Lambda$1: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)&gt;"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="CreateMethod" unit="$r2 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.dialog.VariableSpeedDialog"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;,void showGetPluginDialog(android.content.Context,boolean)"/>  
      <source name="de.danoeh.antennapod.dialog.VariableSpeedDialog"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;"/>  
        <node method="VariableSpeedDialog showGetPluginDialog" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="VariableSpeedDialog showGetPluginDialog" type="CreateMethod" unit="$r2 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog$$Lambda$1: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)&gt;,void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)"/>  
      <source name="de.danoeh.antennapod.dialog.VariableSpeedDialog"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog$$Lambda$1: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)&gt;"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog$$Lambda$1: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)&gt;,void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)"/>  
      <source name="de.danoeh.antennapod.dialog.VariableSpeedDialog"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog$$Lambda$1: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)&gt;"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="CreateMethod" unit="$r2 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.AudioplayerActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.AudioplayerActivity$$Lambda$0: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.AudioplayerActivity$$Lambda$0: void onClick(android.view.View)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;,void showGetPluginDialog(android.content.Context,boolean)"/>  
      <source name="de.danoeh.antennapod.activity.AudioplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.AudioplayerActivity$$Lambda$0: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;"/>  
        <node method="VariableSpeedDialog showGetPluginDialog" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="VariableSpeedDialog showGetPluginDialog" type="CreateMethod" unit="$r2 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.AudioplayerActivity$$Lambda$0: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.AudioplayerActivity$$Lambda$0: void onClick(android.view.View)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog$$Lambda$1: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)&gt;,void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)"/>  
      <source name="de.danoeh.antennapod.activity.AudioplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.AudioplayerActivity$$Lambda$0: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog$$Lambda$1: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)&gt;"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.AudioplayerActivity$$Lambda$0: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.AudioplayerActivity$$Lambda$0: void onClick(android.view.View)&gt;,&lt;de.danoeh.antennapod.core.util.playback.PlaybackController: boolean canSetPlaybackSpeed()&gt;,boolean canSetPlaybackSpeed(), &lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.activity.AudioplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.AudioplayerActivity$$Lambda$0: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.PlaybackController: boolean canSetPlaybackSpeed()&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.AudioplayerActivity$$Lambda$0: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.AudioplayerActivity$$Lambda$0: void onClick(android.view.View)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog$$Lambda$1: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)&gt;,void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)"/>  
      <source name="de.danoeh.antennapod.activity.AudioplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.AudioplayerActivity$$Lambda$0: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog$$Lambda$1: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)&gt;"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="CreateMethod" unit="$r2 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.AudioplayerActivity$$Lambda$0: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.AudioplayerActivity$$Lambda$0: void onClick(android.view.View)&gt;,&lt;de.danoeh.antennapod.core.util.playback.PlaybackController: boolean canSetPlaybackSpeed()&gt;,&lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;,boolean isIntentAvailable(android.content.Context,java.lang.String)"/>  
      <source name="de.danoeh.antennapod.activity.AudioplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.AudioplayerActivity$$Lambda$0: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.PlaybackController: boolean canSetPlaybackSpeed()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.antennapod.audio.MediaPlayer"> 
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled()&gt;,boolean isPrestoLibraryInstalled(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;,android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;,android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="PassOutIntent" unit="$z0 = virtualinvoke $r4.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r1, $r2, 1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;,android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.util.playback.AudioPlayer"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled()&gt;,boolean isPrestoLibraryInstalled(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;,android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;,android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="PassOutIntent" unit="$z0 = virtualinvoke $r4.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r1, $r2, 1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;,android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.util.playback.AudioPlayer"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;,&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;,&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled()&gt;,boolean isPrestoLibraryInstalled(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;,&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;,&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;,&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;,&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;,&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;,&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;,&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;,&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;,&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;,&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;,&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;,&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;,&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;,&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;,&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;,&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;,&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;,android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;,&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;,android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;,&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="PassOutIntent" unit="$z0 = virtualinvoke $r4.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r1, $r2, 1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;,&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;,&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;,&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;,android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer$$Lambda$0: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void lambda$new$0$AudioPlayer$99c14a7(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.preferences.PreferenceController"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.preferences.PreferenceController: void lambda$export$44$PreferenceController(android.support.v7.app.AlertDialog$Builder,android.content.Context,java.io.File)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.preferences.PreferenceController: void lambda$export$44$PreferenceController(android.support.v7.app.AlertDialog$Builder,android.content.Context,java.io.File)&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$56: void onClick(android.content.DialogInterface,int)&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController: void lambda$null$43$PreferenceController$3c92ef9(android.content.Context,java.io.File)&gt;,void lambda$null$43$PreferenceController$3c92ef9(android.content.Context,java.io.File)"/>  
      <source name="de.danoeh.antennapod.preferences.PreferenceController"/>  
      <destinition name="de.danoeh.antennapod.activity.OnlineFeedViewActivity"/>  
      <sender action="android.intent.action.SEND" type="text/plain" flags="FLAG_GRANT_READ_URI_PERMISSION "/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: void lambda$export$44$PreferenceController(android.support.v7.app.AlertDialog$Builder,android.content.Context,java.io.File)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$56: void onClick(android.content.DialogInterface,int)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: void lambda$null$43$PreferenceController$3c92ef9(android.content.Context,java.io.File)&gt;"/>  
        <node method="PreferenceController lambda$null$43$PreferenceController$3c92ef9" type="CreateMethod" unit="$r4 = new android.content.Intent"/>  
        <node method="PreferenceController lambda$null$43$PreferenceController$3c92ef9" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.SEND&quot;)"/>  
        <node method="PreferenceController lambda$null$43$PreferenceController$3c92ef9" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;text/plain&quot;)"/>  
        <node method="PreferenceController lambda$null$43$PreferenceController$3c92ef9" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(1)"/>  
        <node method="PreferenceController lambda$null$43$PreferenceController$3c92ef9" type="PassOutIntent" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r4)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.preferences.PreferenceController: void lambda$export$44$PreferenceController(android.support.v7.app.AlertDialog$Builder,android.content.Context,java.io.File)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.preferences.PreferenceController: void lambda$export$44$PreferenceController(android.support.v7.app.AlertDialog$Builder,android.content.Context,java.io.File)&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$56: void onClick(android.content.DialogInterface,int)&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController: void lambda$null$43$PreferenceController$3c92ef9(android.content.Context,java.io.File)&gt;,void lambda$null$43$PreferenceController$3c92ef9(android.content.Context,java.io.File)"/>  
      <source name="de.danoeh.antennapod.preferences.PreferenceController"/>  
      <destinition name="de.danoeh.antennapod.activity.OnlineFeedViewActivity"/>  
      <sender action="android.intent.action.SEND" type="text/plain" flags="FLAG_GRANT_READ_URI_PERMISSION "/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: void lambda$export$44$PreferenceController(android.support.v7.app.AlertDialog$Builder,android.content.Context,java.io.File)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$56: void onClick(android.content.DialogInterface,int)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: void lambda$null$43$PreferenceController$3c92ef9(android.content.Context,java.io.File)&gt;"/>  
        <node method="PreferenceController lambda$null$43$PreferenceController$3c92ef9" type="CreateMethod" unit="$r4 = new android.content.Intent"/>  
        <node method="PreferenceController lambda$null$43$PreferenceController$3c92ef9" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.SEND&quot;)"/>  
        <node method="PreferenceController lambda$null$43$PreferenceController$3c92ef9" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;text/plain&quot;)"/>  
        <node method="PreferenceController lambda$null$43$PreferenceController$3c92ef9" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(1)"/>  
        <node method="PreferenceController lambda$null$43$PreferenceController$3c92ef9" type="PassOutIntent" unit="$r8 = virtualinvoke $r7.&lt;android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)&gt;($r4, 65536)"/>  
        <node method="PreferenceController lambda$null$43$PreferenceController$3c92ef9" type="PassOutIntent" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r4)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.util.playback.PlaybackController"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.PlaybackController: void playPause()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.PlaybackController: void playPause()&gt;,&lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: void start()&gt;,void start(), &lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: android.content.Intent getIntent()&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.PlaybackController"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.PlaybackController: void playPause()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: void start()&gt;"/>  
        <node method="PlaybackServiceStarter start" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: android.content.Intent getIntent()&gt;()"/>  
        <node method="PlaybackServiceStarter getIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="PlaybackServiceStarter getIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/>  
        <node method="PlaybackServiceStarter start" type="PassOutIntent" unit="staticinvoke &lt;android.support.v4.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)&gt;($r2, $r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.fragment.ExternalPlayerFragment"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ExternalPlayerFragment$$Lambda$2: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ExternalPlayerFragment$$Lambda$2: void onClick(android.view.View)&gt;,&lt;de.danoeh.antennapod.core.util.playback.PlaybackController: void playPause()&gt;,&lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: void start()&gt;,void start(), &lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: android.content.Intent getIntent()&gt;"/>  
      <source name="de.danoeh.antennapod.fragment.ExternalPlayerFragment"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ExternalPlayerFragment$$Lambda$2: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.PlaybackController: void playPause()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: void start()&gt;"/>  
        <node method="PlaybackServiceStarter start" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: android.content.Intent getIntent()&gt;()"/>  
        <node method="PlaybackServiceStarter getIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="PlaybackServiceStarter getIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/>  
        <node method="PlaybackServiceStarter start" type="PassOutIntent" unit="staticinvoke &lt;android.support.v4.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)&gt;($r2, $r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.antennapod.audio.MediaPlayer"> 
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled()&gt;,boolean isPrestoLibraryInstalled(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;,android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;,android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="PassOutIntent" unit="$z0 = virtualinvoke $r4.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r1, $r2, 1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;,android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.DirectoryChooserActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.DirectoryChooserActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.DirectoryChooserActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle)"/>  
      <source name="de.danoeh.antennapod.activity.DirectoryChooserActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.DirectoryChooserActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="DirectoryChooserActivity onCreate" type="setContentView" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.activity.DirectoryChooserActivity: void setContentView(int)&gt;(2131558458)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.storage.DBTasks"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshFeeds(android.content.Context,java.util.List)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshFeeds(android.content.Context,java.util.List)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;,boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)"/>  
      <source name="de.danoeh.antennapod.core.storage.DBTasks"/>  
      <destinition name="de.danoeh.antennapod.core.service.download.DownloadService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshFeeds(android.content.Context,java.util.List)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;"/>  
        <node method="DownloadRequester download" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="DownloadRequester download" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/download/DownloadService;&quot;)"/>  
        <node method="DownloadRequester download" type="PassOutIntent" unit="staticinvoke &lt;android.support.v4.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)&gt;($r2, $r5)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.service.GpodnetSyncService"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncIntent(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncIntent(android.content.Context)&gt;,void sendSyncIntent(android.content.Context), &lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.GpodnetSyncService"/>  
      <destinition name="de.danoeh.antennapod.core.service.GpodnetSyncService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncIntent(android.content.Context)&gt;"/>  
        <node method="GpodnetSyncService sendSyncIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="GpodnetSyncService sendSyncIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lde/danoeh/antennapod/core/service/GpodnetSyncService;&quot;)"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncIntent(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncIntent(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;,void enqueueWork(android.content.Context,android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.GpodnetSyncService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncIntent(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.storage.DBTasks"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncIntent(android.content.Context)&gt;,void sendSyncIntent(android.content.Context), &lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
      <source name="de.danoeh.antennapod.core.storage.DBTasks"/>  
      <destinition name="de.danoeh.antennapod.core.service.GpodnetSyncService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncIntent(android.content.Context)&gt;"/>  
        <node method="GpodnetSyncService sendSyncIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="GpodnetSyncService sendSyncIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lde/danoeh/antennapod/core/service/GpodnetSyncService;&quot;)"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncIntent(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;,void enqueueWork(android.content.Context,android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.storage.DBTasks"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncIntent(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshFeeds(android.content.Context,java.util.List)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;,boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)"/>  
      <source name="de.danoeh.antennapod.core.storage.DBTasks"/>  
      <destinition name="de.danoeh.antennapod.core.service.download.DownloadService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshFeeds(android.content.Context,java.util.List)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;"/>  
        <node method="DownloadRequester download" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="DownloadRequester download" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/download/DownloadService;&quot;)"/>  
        <node method="DownloadRequester download" type="PassOutIntent" unit="staticinvoke &lt;android.support.v4.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)&gt;($r2, $r5)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.storage.DBTasks"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.storage.DBTasks$$Lambda$0: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.storage.DBTasks$$Lambda$0: void run()&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncIntent(android.content.Context)&gt;,void sendSyncIntent(android.content.Context), &lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
      <source name="de.danoeh.antennapod.core.storage.DBTasks"/>  
      <destinition name="de.danoeh.antennapod.core.service.GpodnetSyncService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks$$Lambda$0: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncIntent(android.content.Context)&gt;"/>  
        <node method="GpodnetSyncService sendSyncIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="GpodnetSyncService sendSyncIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lde/danoeh/antennapod/core/service/GpodnetSyncService;&quot;)"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.storage.DBTasks$$Lambda$0: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.storage.DBTasks$$Lambda$0: void run()&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncIntent(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;,void enqueueWork(android.content.Context,android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.storage.DBTasks"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks$$Lambda$0: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncIntent(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.storage.DBTasks$$Lambda$0: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.storage.DBTasks$$Lambda$0: void run()&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshFeeds(android.content.Context,java.util.List)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;,boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)"/>  
      <source name="de.danoeh.antennapod.core.storage.DBTasks"/>  
      <destinition name="de.danoeh.antennapod.core.service.download.DownloadService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks$$Lambda$0: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshFeeds(android.content.Context,java.util.List)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;"/>  
        <node method="DownloadRequester download" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="DownloadRequester download" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/download/DownloadService;&quot;)"/>  
        <node method="DownloadRequester download" type="PassOutIntent" unit="staticinvoke &lt;android.support.v4.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)&gt;($r2, $r5)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.storage.DBTasks"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List,java.lang.Runnable)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List,java.lang.Runnable)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks$$Lambda$0: void run()&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncIntent(android.content.Context)&gt;,void sendSyncIntent(android.content.Context), &lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
      <source name="de.danoeh.antennapod.core.storage.DBTasks"/>  
      <destinition name="de.danoeh.antennapod.core.service.GpodnetSyncService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List,java.lang.Runnable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks$$Lambda$0: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncIntent(android.content.Context)&gt;"/>  
        <node method="GpodnetSyncService sendSyncIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="GpodnetSyncService sendSyncIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lde/danoeh/antennapod/core/service/GpodnetSyncService;&quot;)"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List,java.lang.Runnable)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List,java.lang.Runnable)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks$$Lambda$0: void run()&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncIntent(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;,void enqueueWork(android.content.Context,android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.storage.DBTasks"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List,java.lang.Runnable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks$$Lambda$0: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncIntent(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List,java.lang.Runnable)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List,java.lang.Runnable)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks$$Lambda$0: void run()&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshFeeds(android.content.Context,java.util.List)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;,boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)"/>  
      <source name="de.danoeh.antennapod.core.storage.DBTasks"/>  
      <destinition name="de.danoeh.antennapod.core.service.download.DownloadService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List,java.lang.Runnable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks$$Lambda$0: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshFeeds(android.content.Context,java.util.List)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;"/>  
        <node method="DownloadRequester download" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="DownloadRequester download" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/download/DownloadService;&quot;)"/>  
        <node method="DownloadRequester download" type="PassOutIntent" unit="staticinvoke &lt;android.support.v4.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)&gt;($r2, $r5)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.storage.DBTasks"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.storage.DBTasks: void checkShouldRefreshFeeds(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.storage.DBTasks: void checkShouldRefreshFeeds(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List,java.lang.Runnable)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks$$Lambda$0: void run()&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncIntent(android.content.Context)&gt;,void sendSyncIntent(android.content.Context), &lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
      <source name="de.danoeh.antennapod.core.storage.DBTasks"/>  
      <destinition name="de.danoeh.antennapod.core.service.GpodnetSyncService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void checkShouldRefreshFeeds(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List,java.lang.Runnable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks$$Lambda$0: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncIntent(android.content.Context)&gt;"/>  
        <node method="GpodnetSyncService sendSyncIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="GpodnetSyncService sendSyncIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lde/danoeh/antennapod/core/service/GpodnetSyncService;&quot;)"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.storage.DBTasks: void checkShouldRefreshFeeds(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.storage.DBTasks: void checkShouldRefreshFeeds(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List,java.lang.Runnable)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks$$Lambda$0: void run()&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncIntent(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;,void enqueueWork(android.content.Context,android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.storage.DBTasks"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void checkShouldRefreshFeeds(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List,java.lang.Runnable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks$$Lambda$0: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncIntent(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.storage.DBTasks: void checkShouldRefreshFeeds(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.storage.DBTasks: void checkShouldRefreshFeeds(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List,java.lang.Runnable)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks$$Lambda$0: void run()&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshFeeds(android.content.Context,java.util.List)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;,boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)"/>  
      <source name="de.danoeh.antennapod.core.storage.DBTasks"/>  
      <destinition name="de.danoeh.antennapod.core.service.download.DownloadService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void checkShouldRefreshFeeds(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List,java.lang.Runnable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks$$Lambda$0: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshFeeds(android.content.Context,java.util.List)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;"/>  
        <node method="DownloadRequester download" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="DownloadRequester download" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/download/DownloadService;&quot;)"/>  
        <node method="DownloadRequester download" type="PassOutIntent" unit="staticinvoke &lt;android.support.v4.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)&gt;($r2, $r5)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.MediaplayerInfoActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: void onResume()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: void onResume()&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void checkShouldRefreshFeeds(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List,java.lang.Runnable)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks$$Lambda$0: void run()&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncIntent(android.content.Context)&gt;,void sendSyncIntent(android.content.Context), &lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
      <source name="de.danoeh.antennapod.activity.MediaplayerInfoActivity"/>  
      <destinition name="de.danoeh.antennapod.core.service.GpodnetSyncService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: void onResume()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void checkShouldRefreshFeeds(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List,java.lang.Runnable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks$$Lambda$0: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncIntent(android.content.Context)&gt;"/>  
        <node method="GpodnetSyncService sendSyncIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="GpodnetSyncService sendSyncIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lde/danoeh/antennapod/core/service/GpodnetSyncService;&quot;)"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: void onResume()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: void onResume()&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void checkShouldRefreshFeeds(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List,java.lang.Runnable)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks$$Lambda$0: void run()&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncIntent(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;,void enqueueWork(android.content.Context,android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.activity.MediaplayerInfoActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: void onResume()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void checkShouldRefreshFeeds(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List,java.lang.Runnable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks$$Lambda$0: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncIntent(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: void onResume()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: void onResume()&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void checkShouldRefreshFeeds(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List,java.lang.Runnable)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks$$Lambda$0: void run()&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshFeeds(android.content.Context,java.util.List)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;,boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)"/>  
      <source name="de.danoeh.antennapod.activity.MediaplayerInfoActivity"/>  
      <destinition name="de.danoeh.antennapod.core.service.download.DownloadService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: void onResume()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void checkShouldRefreshFeeds(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List,java.lang.Runnable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks$$Lambda$0: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshFeeds(android.content.Context,java.util.List)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;"/>  
        <node method="DownloadRequester download" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="DownloadRequester download" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/download/DownloadService;&quot;)"/>  
        <node method="DownloadRequester download" type="PassOutIntent" unit="staticinvoke &lt;android.support.v4.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)&gt;($r2, $r5)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.service.playback.PlaybackService"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void disableSleepTimer()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void disableSleepTimer()&gt;,&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendNotificationBroadcast(int,int)&gt;,void sendNotificationBroadcast(int,int)"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="interICC_action.de.danoeh.antennapod.core.service.playerNotification, "/>  
      <sender action="action.de.danoeh.antennapod.core.service.playerNotification"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void disableSleepTimer()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendNotificationBroadcast(int,int)&gt;"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;action.de.danoeh.antennapod.core.service.playerNotification&quot;)"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="PassOutIntent" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendBroadcast(android.content.Intent)&gt;($r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.MediaplayerActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$$Lambda$0: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$$Lambda$0: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;,&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void disableSleepTimer()&gt;,&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendNotificationBroadcast(int,int)&gt;,void sendNotificationBroadcast(int,int)"/>  
      <source name="de.danoeh.antennapod.activity.MediaplayerActivity"/>  
      <destinition name="interICC_action.de.danoeh.antennapod.core.service.playerNotification, "/>  
      <sender action="action.de.danoeh.antennapod.core.service.playerNotification"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$$Lambda$0: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void disableSleepTimer()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendNotificationBroadcast(int,int)&gt;"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;action.de.danoeh.antennapod.core.service.playerNotification&quot;)"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="PassOutIntent" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendBroadcast(android.content.Intent)&gt;($r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.MediaplayerActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$$Lambda$3: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$$Lambda$3: void onClick(android.view.View)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;,void showGetPluginDialog(android.content.Context,boolean)"/>  
      <source name="de.danoeh.antennapod.activity.MediaplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$$Lambda$3: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;"/>  
        <node method="VariableSpeedDialog showGetPluginDialog" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="VariableSpeedDialog showGetPluginDialog" type="CreateMethod" unit="$r2 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$$Lambda$3: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$$Lambda$3: void onClick(android.view.View)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog$$Lambda$1: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)&gt;,void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)"/>  
      <source name="de.danoeh.antennapod.activity.MediaplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$$Lambda$3: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog$$Lambda$1: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)&gt;"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$$Lambda$3: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$$Lambda$3: void onClick(android.view.View)&gt;,&lt;de.danoeh.antennapod.core.util.playback.PlaybackController: boolean canSetPlaybackSpeed()&gt;,boolean canSetPlaybackSpeed(), &lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.activity.MediaplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$$Lambda$3: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.PlaybackController: boolean canSetPlaybackSpeed()&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$$Lambda$3: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$$Lambda$3: void onClick(android.view.View)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog$$Lambda$1: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)&gt;,void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)"/>  
      <source name="de.danoeh.antennapod.activity.MediaplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$$Lambda$3: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog$$Lambda$1: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)&gt;"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="CreateMethod" unit="$r2 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$$Lambda$3: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$$Lambda$3: void onClick(android.view.View)&gt;,&lt;de.danoeh.antennapod.core.util.playback.PlaybackController: boolean canSetPlaybackSpeed()&gt;,&lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;,boolean isIntentAvailable(android.content.Context,java.lang.String)"/>  
      <source name="de.danoeh.antennapod.activity.MediaplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$$Lambda$3: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.PlaybackController: boolean canSetPlaybackSpeed()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.MediaplayerActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$$Lambda$4: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$$Lambda$4: void onClick(android.view.View)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;,void showGetPluginDialog(android.content.Context,boolean)"/>  
      <source name="de.danoeh.antennapod.activity.MediaplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$$Lambda$4: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;"/>  
        <node method="VariableSpeedDialog showGetPluginDialog" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="VariableSpeedDialog showGetPluginDialog" type="CreateMethod" unit="$r2 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$$Lambda$4: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$$Lambda$4: void onClick(android.view.View)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog$$Lambda$1: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)&gt;,void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)"/>  
      <source name="de.danoeh.antennapod.activity.MediaplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$$Lambda$4: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog$$Lambda$1: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)&gt;"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$$Lambda$4: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$$Lambda$4: void onClick(android.view.View)&gt;,&lt;de.danoeh.antennapod.core.util.playback.PlaybackController: boolean canSetPlaybackSpeed()&gt;,boolean canSetPlaybackSpeed(), &lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.activity.MediaplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$$Lambda$4: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.PlaybackController: boolean canSetPlaybackSpeed()&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$$Lambda$4: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$$Lambda$4: void onClick(android.view.View)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog$$Lambda$1: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)&gt;,void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)"/>  
      <source name="de.danoeh.antennapod.activity.MediaplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$$Lambda$4: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog$$Lambda$1: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)&gt;"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="CreateMethod" unit="$r2 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$$Lambda$4: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$$Lambda$4: void onClick(android.view.View)&gt;,&lt;de.danoeh.antennapod.core.util.playback.PlaybackController: boolean canSetPlaybackSpeed()&gt;,&lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;,boolean isIntentAvailable(android.content.Context,java.lang.String)"/>  
      <source name="de.danoeh.antennapod.activity.MediaplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$$Lambda$4: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.PlaybackController: boolean canSetPlaybackSpeed()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.MediaplayerActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,boolean onOptionsItemSelected(android.view.MenuItem)"/>  
      <source name="de.danoeh.antennapod.activity.MediaplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="MediaplayerActivity onOptionsItemSelected" type="CreateMethod" unit="$r4 = new android.content.Intent"/>  
        <node method="MediaplayerActivity onOptionsItemSelected" type="PassOutIntent" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MediaplayerActivity: void startActivity(android.content.Intent)&gt;($r4)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,&lt;de.danoeh.antennapod.activity.MediaplayerActivity$$Lambda$4: void onClick(android.view.View)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;,void showGetPluginDialog(android.content.Context,boolean)"/>  
      <source name="de.danoeh.antennapod.activity.MediaplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$$Lambda$4: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;"/>  
        <node method="VariableSpeedDialog showGetPluginDialog" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="VariableSpeedDialog showGetPluginDialog" type="CreateMethod" unit="$r2 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,&lt;de.danoeh.antennapod.activity.MediaplayerActivity$$Lambda$0: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;,&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void disableSleepTimer()&gt;,&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendNotificationBroadcast(int,int)&gt;,void sendNotificationBroadcast(int,int)"/>  
      <source name="de.danoeh.antennapod.activity.MediaplayerActivity"/>  
      <destinition name="interICC_action.de.danoeh.antennapod.core.service.playerNotification, "/>  
      <sender action="action.de.danoeh.antennapod.core.service.playerNotification"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$$Lambda$0: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void disableSleepTimer()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendNotificationBroadcast(int,int)&gt;"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;action.de.danoeh.antennapod.core.service.playerNotification&quot;)"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="PassOutIntent" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendBroadcast(android.content.Intent)&gt;($r1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,&lt;de.danoeh.antennapod.activity.MediaplayerActivity$$Lambda$4: void onClick(android.view.View)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog$$Lambda$1: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)&gt;,void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)"/>  
      <source name="de.danoeh.antennapod.activity.MediaplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$$Lambda$4: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog$$Lambda$1: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)&gt;"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,&lt;de.danoeh.antennapod.activity.MediaplayerActivity$3: void onProgressChanged(android.widget.SeekBar,int,boolean)&gt;,&lt;de.danoeh.antennapod.core.util.playback.PlaybackController: boolean canSetPlaybackSpeed()&gt;,boolean canSetPlaybackSpeed(), &lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.activity.MediaplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$3: void onProgressChanged(android.widget.SeekBar,int,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.PlaybackController: boolean canSetPlaybackSpeed()&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,boolean onOptionsItemSelected(android.view.MenuItem)"/>  
      <source name="de.danoeh.antennapod.activity.MediaplayerActivity"/>  
      <destinition name="de.danoeh.antennapod.activity.MainActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="MediaplayerActivity onOptionsItemSelected" type="CreateMethod" unit="$r4 = new android.content.Intent"/>  
        <node method="MediaplayerActivity onOptionsItemSelected" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lde/danoeh/antennapod/activity/MainActivity;&quot;)"/>  
        <node method="MediaplayerActivity onOptionsItemSelected" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(335544320)"/>  
        <node method="MediaplayerActivity onOptionsItemSelected" type="PassOutIntent" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MediaplayerActivity: void startActivity(android.content.Intent,android.os.Bundle)&gt;($r4, $r7)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,&lt;de.danoeh.antennapod.activity.MediaplayerActivity$$Lambda$4: void onClick(android.view.View)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog$$Lambda$1: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)&gt;,void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)"/>  
      <source name="de.danoeh.antennapod.activity.MediaplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$$Lambda$4: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog$$Lambda$1: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)&gt;"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="CreateMethod" unit="$r2 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,&lt;de.danoeh.antennapod.activity.MediaplayerActivity$$Lambda$4: void onClick(android.view.View)&gt;,&lt;de.danoeh.antennapod.core.util.playback.PlaybackController: boolean canSetPlaybackSpeed()&gt;,&lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;,boolean isIntentAvailable(android.content.Context,java.lang.String)"/>  
      <source name="de.danoeh.antennapod.activity.MediaplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$$Lambda$4: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.PlaybackController: boolean canSetPlaybackSpeed()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,boolean onOptionsItemSelected(android.view.MenuItem)"/>  
      <source name="de.danoeh.antennapod.activity.MediaplayerActivity"/>  
      <destinition name="de.danoeh.antennapod.activity.MainActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="MediaplayerActivity onOptionsItemSelected" type="CreateMethod" unit="$r4 = new android.content.Intent"/>  
        <node method="MediaplayerActivity onOptionsItemSelected" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lde/danoeh/antennapod/activity/MainActivity;&quot;)"/>  
        <node method="MediaplayerActivity onOptionsItemSelected" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(335544320)"/>  
        <node method="MediaplayerActivity onOptionsItemSelected" type="PassOutIntent" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MediaplayerActivity: void startActivity(android.content.Intent)&gt;($r4)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.VideoplayerActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.VideoplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.VideoplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,&lt;de.danoeh.antennapod.activity.MediaplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,boolean onOptionsItemSelected(android.view.MenuItem)"/>  
      <source name="de.danoeh.antennapod.activity.VideoplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.VideoplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="MediaplayerActivity onOptionsItemSelected" type="CreateMethod" unit="$r4 = new android.content.Intent"/>  
        <node method="MediaplayerActivity onOptionsItemSelected" type="PassOutIntent" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MediaplayerActivity: void startActivity(android.content.Intent)&gt;($r4)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.VideoplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.VideoplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,&lt;de.danoeh.antennapod.activity.MediaplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,&lt;de.danoeh.antennapod.activity.MediaplayerActivity$$Lambda$4: void onClick(android.view.View)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;,void showGetPluginDialog(android.content.Context,boolean)"/>  
      <source name="de.danoeh.antennapod.activity.VideoplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.VideoplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$$Lambda$4: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;"/>  
        <node method="VariableSpeedDialog showGetPluginDialog" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="VariableSpeedDialog showGetPluginDialog" type="CreateMethod" unit="$r2 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.VideoplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.VideoplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,&lt;de.danoeh.antennapod.activity.MediaplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,&lt;de.danoeh.antennapod.activity.MediaplayerActivity$$Lambda$0: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;,&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void disableSleepTimer()&gt;,&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendNotificationBroadcast(int,int)&gt;,void sendNotificationBroadcast(int,int)"/>  
      <source name="de.danoeh.antennapod.activity.VideoplayerActivity"/>  
      <destinition name="interICC_action.de.danoeh.antennapod.core.service.playerNotification, "/>  
      <sender action="action.de.danoeh.antennapod.core.service.playerNotification"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.VideoplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$$Lambda$0: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void disableSleepTimer()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendNotificationBroadcast(int,int)&gt;"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;action.de.danoeh.antennapod.core.service.playerNotification&quot;)"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="PassOutIntent" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendBroadcast(android.content.Intent)&gt;($r1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.VideoplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.VideoplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,&lt;de.danoeh.antennapod.activity.MediaplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,&lt;de.danoeh.antennapod.activity.MediaplayerActivity$$Lambda$4: void onClick(android.view.View)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog$$Lambda$1: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)&gt;,void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)"/>  
      <source name="de.danoeh.antennapod.activity.VideoplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.VideoplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$$Lambda$4: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog$$Lambda$1: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)&gt;"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.VideoplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.VideoplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,&lt;de.danoeh.antennapod.activity.MediaplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,&lt;de.danoeh.antennapod.activity.MediaplayerActivity$3: void onProgressChanged(android.widget.SeekBar,int,boolean)&gt;,&lt;de.danoeh.antennapod.core.util.playback.PlaybackController: boolean canSetPlaybackSpeed()&gt;,boolean canSetPlaybackSpeed(), &lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.activity.VideoplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.VideoplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$3: void onProgressChanged(android.widget.SeekBar,int,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.PlaybackController: boolean canSetPlaybackSpeed()&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.VideoplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.VideoplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,&lt;de.danoeh.antennapod.activity.MediaplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,boolean onOptionsItemSelected(android.view.MenuItem)"/>  
      <source name="de.danoeh.antennapod.activity.VideoplayerActivity"/>  
      <destinition name="de.danoeh.antennapod.activity.MainActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.VideoplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="MediaplayerActivity onOptionsItemSelected" type="CreateMethod" unit="$r4 = new android.content.Intent"/>  
        <node method="MediaplayerActivity onOptionsItemSelected" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lde/danoeh/antennapod/activity/MainActivity;&quot;)"/>  
        <node method="MediaplayerActivity onOptionsItemSelected" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(335544320)"/>  
        <node method="MediaplayerActivity onOptionsItemSelected" type="PassOutIntent" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MediaplayerActivity: void startActivity(android.content.Intent,android.os.Bundle)&gt;($r4, $r7)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.VideoplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.VideoplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,&lt;de.danoeh.antennapod.activity.MediaplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,&lt;de.danoeh.antennapod.activity.MediaplayerActivity$$Lambda$4: void onClick(android.view.View)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog$$Lambda$1: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)&gt;,void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)"/>  
      <source name="de.danoeh.antennapod.activity.VideoplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.VideoplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$$Lambda$4: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog$$Lambda$1: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)&gt;"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="CreateMethod" unit="$r2 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.VideoplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.VideoplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,&lt;de.danoeh.antennapod.activity.MediaplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,&lt;de.danoeh.antennapod.activity.MediaplayerActivity$$Lambda$4: void onClick(android.view.View)&gt;,&lt;de.danoeh.antennapod.core.util.playback.PlaybackController: boolean canSetPlaybackSpeed()&gt;,&lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;,boolean isIntentAvailable(android.content.Context,java.lang.String)"/>  
      <source name="de.danoeh.antennapod.activity.VideoplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.VideoplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$$Lambda$4: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.PlaybackController: boolean canSetPlaybackSpeed()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.VideoplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.VideoplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,&lt;de.danoeh.antennapod.activity.MediaplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,boolean onOptionsItemSelected(android.view.MenuItem)"/>  
      <source name="de.danoeh.antennapod.activity.VideoplayerActivity"/>  
      <destinition name="de.danoeh.antennapod.activity.MainActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.VideoplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="MediaplayerActivity onOptionsItemSelected" type="CreateMethod" unit="$r4 = new android.content.Intent"/>  
        <node method="MediaplayerActivity onOptionsItemSelected" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lde/danoeh/antennapod/activity/MainActivity;&quot;)"/>  
        <node method="MediaplayerActivity onOptionsItemSelected" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(335544320)"/>  
        <node method="MediaplayerActivity onOptionsItemSelected" type="PassOutIntent" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MediaplayerActivity: void startActivity(android.content.Intent)&gt;($r4)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.antennapod.audio.ServiceBackedAudioPlayer"> 
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void start()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void start()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void start()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void start()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void start()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void start()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void start()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void start()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void start()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void start()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void start()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void start()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="PassOutIntent" unit="$z0 = virtualinvoke $r4.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r1, $r2, 1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void start()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void start()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void start()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.service.GpodnetSyncService"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncSubscriptionsIntent(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncSubscriptionsIntent(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;,void enqueueWork(android.content.Context,android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.GpodnetSyncService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncSubscriptionsIntent(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncSubscriptionsIntent(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncSubscriptionsIntent(android.content.Context)&gt;,void sendSyncSubscriptionsIntent(android.content.Context), &lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.GpodnetSyncService"/>  
      <destinition name="de.danoeh.antennapod.core.service.GpodnetSyncService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncSubscriptionsIntent(android.content.Context)&gt;"/>  
        <node method="GpodnetSyncService sendSyncSubscriptionsIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="GpodnetSyncService sendSyncSubscriptionsIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lde/danoeh/antennapod/core/service/GpodnetSyncService;&quot;)"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.preferences.GpodnetPreferences"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.preferences.GpodnetPreferences: void addRemovedFeed(java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.preferences.GpodnetPreferences: void addRemovedFeed(java.lang.String)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncSubscriptionsIntent(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;,void enqueueWork(android.content.Context,android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.preferences.GpodnetPreferences"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.preferences.GpodnetPreferences: void addRemovedFeed(java.lang.String)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncSubscriptionsIntent(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.preferences.GpodnetPreferences: void addRemovedFeed(java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.preferences.GpodnetPreferences: void addRemovedFeed(java.lang.String)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncSubscriptionsIntent(android.content.Context)&gt;,void sendSyncSubscriptionsIntent(android.content.Context), &lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
      <source name="de.danoeh.antennapod.core.preferences.GpodnetPreferences"/>  
      <destinition name="de.danoeh.antennapod.core.service.GpodnetSyncService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.preferences.GpodnetPreferences: void addRemovedFeed(java.lang.String)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncSubscriptionsIntent(android.content.Context)&gt;"/>  
        <node method="GpodnetSyncService sendSyncSubscriptionsIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="GpodnetSyncService sendSyncSubscriptionsIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lde/danoeh/antennapod/core/service/GpodnetSyncService;&quot;)"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.storage.DBWriter"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.storage.DBWriter: void lambda$deleteFeed$2$DBWriter(android.content.Context,long)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.storage.DBWriter: void lambda$deleteFeed$2$DBWriter(android.content.Context,long)&gt;,void lambda$deleteFeed$2$DBWriter(android.content.Context,long)"/>  
      <source name="de.danoeh.antennapod.core.storage.DBWriter"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.storage.DBWriter: void lambda$deleteFeed$2$DBWriter(android.content.Context,long)&gt;"/>  
        <node method="DBWriter lambda$deleteFeed$2$DBWriter" type="CreateMethod" unit="$r12 = new android.content.Intent"/>  
        <node method="DBWriter lambda$deleteFeed$2$DBWriter" type="SetAttribute" unit="specialinvoke $r12.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.storage.DBWriter: void lambda$deleteFeed$2$DBWriter(android.content.Context,long)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.storage.DBWriter: void lambda$deleteFeed$2$DBWriter(android.content.Context,long)&gt;,&lt;de.danoeh.antennapod.core.preferences.GpodnetPreferences: void addRemovedFeed(java.lang.String)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncSubscriptionsIntent(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;,void enqueueWork(android.content.Context,android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.storage.DBWriter"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.storage.DBWriter: void lambda$deleteFeed$2$DBWriter(android.content.Context,long)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.preferences.GpodnetPreferences: void addRemovedFeed(java.lang.String)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncSubscriptionsIntent(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.storage.DBWriter: void lambda$deleteFeed$2$DBWriter(android.content.Context,long)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.storage.DBWriter: void lambda$deleteFeed$2$DBWriter(android.content.Context,long)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void cancelDownload(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void cancelDownload(android.content.Context,java.lang.String)&gt;,void cancelDownload(android.content.Context,java.lang.String)"/>  
      <source name="de.danoeh.antennapod.core.storage.DBWriter"/>  
      <destinition name="interICC_action.de.danoeh.antennapod.core.service.cancelDownload, "/>  
      <sender action="action.de.danoeh.antennapod.core.service.cancelDownload"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.storage.DBWriter: void lambda$deleteFeed$2$DBWriter(android.content.Context,long)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void cancelDownload(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void cancelDownload(android.content.Context,java.lang.String)&gt;"/>  
        <node method="DownloadRequester cancelDownload" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="DownloadRequester cancelDownload" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;action.de.danoeh.antennapod.core.service.cancelDownload&quot;)"/>  
        <node method="DownloadRequester cancelDownload" type="PassOutIntent" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.storage.DBWriter: void lambda$deleteFeed$2$DBWriter(android.content.Context,long)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.storage.DBWriter: void lambda$deleteFeed$2$DBWriter(android.content.Context,long)&gt;,&lt;de.danoeh.antennapod.core.preferences.GpodnetPreferences: void addRemovedFeed(java.lang.String)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncSubscriptionsIntent(android.content.Context)&gt;,void sendSyncSubscriptionsIntent(android.content.Context), &lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
      <source name="de.danoeh.antennapod.core.storage.DBWriter"/>  
      <destinition name="de.danoeh.antennapod.core.service.GpodnetSyncService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.storage.DBWriter: void lambda$deleteFeed$2$DBWriter(android.content.Context,long)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.preferences.GpodnetPreferences: void addRemovedFeed(java.lang.String)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncSubscriptionsIntent(android.content.Context)&gt;"/>  
        <node method="GpodnetSyncService sendSyncSubscriptionsIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="GpodnetSyncService sendSyncSubscriptionsIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lde/danoeh/antennapod/core/service/GpodnetSyncService;&quot;)"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.storage.DBWriter"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.storage.DBWriter$$Lambda$1: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.storage.DBWriter$$Lambda$1: void run()&gt;,&lt;de.danoeh.antennapod.core.storage.DBWriter: void lambda$deleteFeed$2$DBWriter(android.content.Context,long)&gt;,void lambda$deleteFeed$2$DBWriter(android.content.Context,long)"/>  
      <source name="de.danoeh.antennapod.core.storage.DBWriter"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.storage.DBWriter$$Lambda$1: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBWriter: void lambda$deleteFeed$2$DBWriter(android.content.Context,long)&gt;"/>  
        <node method="DBWriter lambda$deleteFeed$2$DBWriter" type="CreateMethod" unit="$r12 = new android.content.Intent"/>  
        <node method="DBWriter lambda$deleteFeed$2$DBWriter" type="SetAttribute" unit="specialinvoke $r12.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.storage.DBWriter$$Lambda$1: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.storage.DBWriter$$Lambda$1: void run()&gt;,&lt;de.danoeh.antennapod.core.storage.DBWriter: void lambda$deleteFeed$2$DBWriter(android.content.Context,long)&gt;,&lt;de.danoeh.antennapod.core.preferences.GpodnetPreferences: void addRemovedFeed(java.lang.String)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncSubscriptionsIntent(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;,void enqueueWork(android.content.Context,android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.storage.DBWriter"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.storage.DBWriter$$Lambda$1: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBWriter: void lambda$deleteFeed$2$DBWriter(android.content.Context,long)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.preferences.GpodnetPreferences: void addRemovedFeed(java.lang.String)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncSubscriptionsIntent(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.storage.DBWriter$$Lambda$1: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.storage.DBWriter$$Lambda$1: void run()&gt;,&lt;de.danoeh.antennapod.core.storage.DBWriter: void lambda$deleteFeed$2$DBWriter(android.content.Context,long)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void cancelDownload(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void cancelDownload(android.content.Context,java.lang.String)&gt;,void cancelDownload(android.content.Context,java.lang.String)"/>  
      <source name="de.danoeh.antennapod.core.storage.DBWriter"/>  
      <destinition name="interICC_action.de.danoeh.antennapod.core.service.cancelDownload, "/>  
      <sender action="action.de.danoeh.antennapod.core.service.cancelDownload"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.storage.DBWriter$$Lambda$1: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBWriter: void lambda$deleteFeed$2$DBWriter(android.content.Context,long)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void cancelDownload(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void cancelDownload(android.content.Context,java.lang.String)&gt;"/>  
        <node method="DownloadRequester cancelDownload" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="DownloadRequester cancelDownload" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;action.de.danoeh.antennapod.core.service.cancelDownload&quot;)"/>  
        <node method="DownloadRequester cancelDownload" type="PassOutIntent" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.storage.DBWriter$$Lambda$1: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.storage.DBWriter$$Lambda$1: void run()&gt;,&lt;de.danoeh.antennapod.core.storage.DBWriter: void lambda$deleteFeed$2$DBWriter(android.content.Context,long)&gt;,&lt;de.danoeh.antennapod.core.preferences.GpodnetPreferences: void addRemovedFeed(java.lang.String)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncSubscriptionsIntent(android.content.Context)&gt;,void sendSyncSubscriptionsIntent(android.content.Context), &lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
      <source name="de.danoeh.antennapod.core.storage.DBWriter"/>  
      <destinition name="de.danoeh.antennapod.core.service.GpodnetSyncService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.storage.DBWriter$$Lambda$1: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBWriter: void lambda$deleteFeed$2$DBWriter(android.content.Context,long)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.preferences.GpodnetPreferences: void addRemovedFeed(java.lang.String)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncSubscriptionsIntent(android.content.Context)&gt;"/>  
        <node method="GpodnetSyncService sendSyncSubscriptionsIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="GpodnetSyncService sendSyncSubscriptionsIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lde/danoeh/antennapod/core/service/GpodnetSyncService;&quot;)"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.MediaplayerInfoActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,&lt;de.danoeh.antennapod.activity.MediaplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,boolean onOptionsItemSelected(android.view.MenuItem)"/>  
      <source name="de.danoeh.antennapod.activity.MediaplayerInfoActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="MediaplayerActivity onOptionsItemSelected" type="CreateMethod" unit="$r4 = new android.content.Intent"/>  
        <node method="MediaplayerActivity onOptionsItemSelected" type="PassOutIntent" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MediaplayerActivity: void startActivity(android.content.Intent)&gt;($r4)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,&lt;de.danoeh.antennapod.activity.MediaplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,&lt;de.danoeh.antennapod.activity.MediaplayerActivity$$Lambda$4: void onClick(android.view.View)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;,void showGetPluginDialog(android.content.Context,boolean)"/>  
      <source name="de.danoeh.antennapod.activity.MediaplayerInfoActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$$Lambda$4: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;"/>  
        <node method="VariableSpeedDialog showGetPluginDialog" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="VariableSpeedDialog showGetPluginDialog" type="CreateMethod" unit="$r2 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,&lt;de.danoeh.antennapod.activity.MediaplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,&lt;de.danoeh.antennapod.activity.MediaplayerActivity$$Lambda$0: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;,&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void disableSleepTimer()&gt;,&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendNotificationBroadcast(int,int)&gt;,void sendNotificationBroadcast(int,int)"/>  
      <source name="de.danoeh.antennapod.activity.MediaplayerInfoActivity"/>  
      <destinition name="interICC_action.de.danoeh.antennapod.core.service.playerNotification, "/>  
      <sender action="action.de.danoeh.antennapod.core.service.playerNotification"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$$Lambda$0: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void disableSleepTimer()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendNotificationBroadcast(int,int)&gt;"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;action.de.danoeh.antennapod.core.service.playerNotification&quot;)"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="PassOutIntent" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendBroadcast(android.content.Intent)&gt;($r1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,&lt;de.danoeh.antennapod.activity.MediaplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,&lt;de.danoeh.antennapod.activity.MediaplayerActivity$$Lambda$4: void onClick(android.view.View)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog$$Lambda$1: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)&gt;,void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)"/>  
      <source name="de.danoeh.antennapod.activity.MediaplayerInfoActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$$Lambda$4: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog$$Lambda$1: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)&gt;"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,&lt;de.danoeh.antennapod.activity.MediaplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,&lt;de.danoeh.antennapod.activity.MediaplayerActivity$3: void onProgressChanged(android.widget.SeekBar,int,boolean)&gt;,&lt;de.danoeh.antennapod.core.util.playback.PlaybackController: boolean canSetPlaybackSpeed()&gt;,boolean canSetPlaybackSpeed(), &lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.activity.MediaplayerInfoActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$3: void onProgressChanged(android.widget.SeekBar,int,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.PlaybackController: boolean canSetPlaybackSpeed()&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,&lt;de.danoeh.antennapod.activity.MediaplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,boolean onOptionsItemSelected(android.view.MenuItem)"/>  
      <source name="de.danoeh.antennapod.activity.MediaplayerInfoActivity"/>  
      <destinition name="de.danoeh.antennapod.activity.MainActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="MediaplayerActivity onOptionsItemSelected" type="CreateMethod" unit="$r4 = new android.content.Intent"/>  
        <node method="MediaplayerActivity onOptionsItemSelected" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lde/danoeh/antennapod/activity/MainActivity;&quot;)"/>  
        <node method="MediaplayerActivity onOptionsItemSelected" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(335544320)"/>  
        <node method="MediaplayerActivity onOptionsItemSelected" type="PassOutIntent" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MediaplayerActivity: void startActivity(android.content.Intent,android.os.Bundle)&gt;($r4, $r7)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,&lt;de.danoeh.antennapod.activity.MediaplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,&lt;de.danoeh.antennapod.activity.MediaplayerActivity$$Lambda$4: void onClick(android.view.View)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog$$Lambda$1: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)&gt;,void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)"/>  
      <source name="de.danoeh.antennapod.activity.MediaplayerInfoActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$$Lambda$4: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog$$Lambda$1: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)&gt;"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="CreateMethod" unit="$r2 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,&lt;de.danoeh.antennapod.activity.MediaplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,&lt;de.danoeh.antennapod.activity.MediaplayerActivity$$Lambda$4: void onClick(android.view.View)&gt;,&lt;de.danoeh.antennapod.core.util.playback.PlaybackController: boolean canSetPlaybackSpeed()&gt;,&lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;,boolean isIntentAvailable(android.content.Context,java.lang.String)"/>  
      <source name="de.danoeh.antennapod.activity.MediaplayerInfoActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$$Lambda$4: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.PlaybackController: boolean canSetPlaybackSpeed()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,&lt;de.danoeh.antennapod.activity.MediaplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,boolean onOptionsItemSelected(android.view.MenuItem)"/>  
      <source name="de.danoeh.antennapod.activity.MediaplayerInfoActivity"/>  
      <destinition name="de.danoeh.antennapod.activity.MainActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="MediaplayerActivity onOptionsItemSelected" type="CreateMethod" unit="$r4 = new android.content.Intent"/>  
        <node method="MediaplayerActivity onOptionsItemSelected" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lde/danoeh/antennapod/activity/MainActivity;&quot;)"/>  
        <node method="MediaplayerActivity onOptionsItemSelected" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(335544320)"/>  
        <node method="MediaplayerActivity onOptionsItemSelected" type="PassOutIntent" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MediaplayerActivity: void startActivity(android.content.Intent)&gt;($r4)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.antennapod.audio.MediaPlayer"> 
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;,void fallback(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;,void fallback(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer fallback" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer fallback" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/>  
        <node method="MediaPlayer fallback" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;,&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;,android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;,void fallback(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer fallback" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer fallback" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer fallback" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;,&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;,android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="PassOutIntent" unit="$z0 = virtualinvoke $r4.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r1, $r2, 1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;,&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;,android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.service.playback.PlaybackService"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$$Lambda$1: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$$Lambda$1: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void disableSleepTimer()&gt;,&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendNotificationBroadcast(int,int)&gt;,void sendNotificationBroadcast(int,int)"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="interICC_action.de.danoeh.antennapod.core.service.playerNotification, "/>  
      <sender action="action.de.danoeh.antennapod.core.service.playerNotification"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$$Lambda$1: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void disableSleepTimer()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendNotificationBroadcast(int,int)&gt;"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;action.de.danoeh.antennapod.core.service.playerNotification&quot;)"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="PassOutIntent" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendBroadcast(android.content.Intent)&gt;($r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.service.playback.PlaybackService"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$2: void onMediaChanged(boolean)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$2: void onMediaChanged(boolean)&gt;,&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void access$200(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;,&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendNotificationBroadcast(int,int)&gt;,void sendNotificationBroadcast(int,int)"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="interICC_action.de.danoeh.antennapod.core.service.playerNotification, "/>  
      <sender action="action.de.danoeh.antennapod.core.service.playerNotification"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$2: void onMediaChanged(boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void access$200(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendNotificationBroadcast(int,int)&gt;"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;action.de.danoeh.antennapod.core.service.playerNotification&quot;)"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="PassOutIntent" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendBroadcast(android.content.Intent)&gt;($r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.storage.DBTasks"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List,java.lang.Runnable)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks$$Lambda$0: void run()&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncIntent(android.content.Context)&gt;,void sendSyncIntent(android.content.Context), &lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
      <source name="de.danoeh.antennapod.core.storage.DBTasks"/>  
      <destinition name="de.danoeh.antennapod.core.service.GpodnetSyncService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List,java.lang.Runnable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks$$Lambda$0: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncIntent(android.content.Context)&gt;"/>  
        <node method="GpodnetSyncService sendSyncIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="GpodnetSyncService sendSyncIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lde/danoeh/antennapod/core/service/GpodnetSyncService;&quot;)"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List,java.lang.Runnable)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks$$Lambda$0: void run()&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncIntent(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;,void enqueueWork(android.content.Context,android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.storage.DBTasks"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List,java.lang.Runnable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks$$Lambda$0: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncIntent(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List,java.lang.Runnable)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks$$Lambda$0: void run()&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshFeeds(android.content.Context,java.util.List)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;,boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)"/>  
      <source name="de.danoeh.antennapod.core.storage.DBTasks"/>  
      <destinition name="de.danoeh.antennapod.core.service.download.DownloadService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List,java.lang.Runnable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks$$Lambda$0: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshFeeds(android.content.Context,java.util.List)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;"/>  
        <node method="DownloadRequester download" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="DownloadRequester download" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/download/DownloadService;&quot;)"/>  
        <node method="DownloadRequester download" type="PassOutIntent" unit="staticinvoke &lt;android.support.v4.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)&gt;($r2, $r5)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.fragment.QueueFragment"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.QueueFragment: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.QueueFragment: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List,java.lang.Runnable)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks$$Lambda$0: void run()&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncIntent(android.content.Context)&gt;,void sendSyncIntent(android.content.Context), &lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
      <source name="de.danoeh.antennapod.fragment.QueueFragment"/>  
      <destinition name="de.danoeh.antennapod.core.service.GpodnetSyncService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.QueueFragment: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List,java.lang.Runnable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks$$Lambda$0: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncIntent(android.content.Context)&gt;"/>  
        <node method="GpodnetSyncService sendSyncIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="GpodnetSyncService sendSyncIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lde/danoeh/antennapod/core/service/GpodnetSyncService;&quot;)"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.QueueFragment: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.QueueFragment: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List,java.lang.Runnable)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks$$Lambda$0: void run()&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncIntent(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;,void enqueueWork(android.content.Context,android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.fragment.QueueFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.QueueFragment: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List,java.lang.Runnable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks$$Lambda$0: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncIntent(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.QueueFragment: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.QueueFragment: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List,java.lang.Runnable)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks$$Lambda$0: void run()&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshFeeds(android.content.Context,java.util.List)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;,boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)"/>  
      <source name="de.danoeh.antennapod.fragment.QueueFragment"/>  
      <destinition name="de.danoeh.antennapod.core.service.download.DownloadService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.QueueFragment: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List,java.lang.Runnable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks$$Lambda$0: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshFeeds(android.content.Context,java.util.List)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;"/>  
        <node method="DownloadRequester download" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="DownloadRequester download" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/download/DownloadService;&quot;)"/>  
        <node method="DownloadRequester download" type="PassOutIntent" unit="staticinvoke &lt;android.support.v4.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)&gt;($r2, $r5)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.OpmlImportBaseActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.OpmlImportBaseActivity$2: void onPostExecute(java.util.ArrayList)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.OpmlImportBaseActivity$2: void onPostExecute(java.util.ArrayList)&gt;,void onPostExecute(java.util.ArrayList)"/>  
      <source name="de.danoeh.antennapod.activity.OpmlImportBaseActivity"/>  
      <destinition name="de.danoeh.antennapod.activity.OpmlFeedChooserActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.OpmlImportBaseActivity$2: void onPostExecute(java.util.ArrayList)&gt;"/>  
        <node method="OpmlImportBaseActivity$2 onPostExecute" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="OpmlImportBaseActivity$2 onPostExecute" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, class &quot;Lde/danoeh/antennapod/activity/OpmlFeedChooserActivity;&quot;)"/>  
        <node method="OpmlImportBaseActivity$2 onPostExecute" type="PassOutIntent" unit="virtualinvoke $r3.&lt;de.danoeh.antennapod.activity.OpmlImportBaseActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, 0)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.OpmlImportBaseActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.OpmlImportBaseActivity$2: void onPostExecute(java.lang.Object)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.OpmlImportBaseActivity$2: void onPostExecute(java.lang.Object)&gt;,&lt;de.danoeh.antennapod.activity.OpmlImportBaseActivity$2: void onPostExecute(java.util.ArrayList)&gt;,void onPostExecute(java.util.ArrayList)"/>  
      <source name="de.danoeh.antennapod.activity.OpmlImportBaseActivity"/>  
      <destinition name="de.danoeh.antennapod.activity.OpmlFeedChooserActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.OpmlImportBaseActivity$2: void onPostExecute(java.lang.Object)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.OpmlImportBaseActivity$2: void onPostExecute(java.util.ArrayList)&gt;"/>  
        <node method="OpmlImportBaseActivity$2 onPostExecute" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="OpmlImportBaseActivity$2 onPostExecute" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, class &quot;Lde/danoeh/antennapod/activity/OpmlFeedChooserActivity;&quot;)"/>  
        <node method="OpmlImportBaseActivity$2 onPostExecute" type="PassOutIntent" unit="virtualinvoke $r3.&lt;de.danoeh.antennapod.activity.OpmlImportBaseActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, 0)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.UpdateManager"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.UpdateManager: void init(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.UpdateManager: void init(android.content.Context)&gt;,void init(android.content.Context), &lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.UpdateManager"/>  
      <destinition name="interICC_new android.content.Context, "/>  
      <sender action="new android.content.Context"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.UpdateManager: void init(android.content.Context)&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.UpdateManager: void init(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.UpdateManager: void init(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;,boolean isIntentAvailable(android.content.Context,java.lang.String)"/>  
      <source name="de.danoeh.antennapod.core.UpdateManager"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.UpdateManager: void init(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.ClientConfig"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.ClientConfig: void initialize(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.ClientConfig: void initialize(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.UpdateManager: void init(android.content.Context)&gt;,void init(android.content.Context), &lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.ClientConfig"/>  
      <destinition name="interICC_new android.content.Context, "/>  
      <sender action="new android.content.Context"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.ClientConfig: void initialize(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.UpdateManager: void init(android.content.Context)&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.ClientConfig: void initialize(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.ClientConfig: void initialize(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.UpdateManager: void init(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;,boolean isIntentAvailable(android.content.Context,java.lang.String)"/>  
      <source name="de.danoeh.antennapod.core.ClientConfig"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.ClientConfig: void initialize(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.UpdateManager: void init(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.receiver.FeedUpdateReceiver"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.receiver.FeedUpdateReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.receiver.FeedUpdateReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;,&lt;de.danoeh.antennapod.core.ClientConfig: void initialize(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.UpdateManager: void init(android.content.Context)&gt;,void init(android.content.Context), &lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.receiver.FeedUpdateReceiver"/>  
      <destinition name="interICC_new android.content.Context, "/>  
      <sender action="new android.content.Context"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.receiver.FeedUpdateReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.ClientConfig: void initialize(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.UpdateManager: void init(android.content.Context)&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.receiver.FeedUpdateReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.receiver.FeedUpdateReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;,void onReceive(android.content.Context,android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.receiver.FeedUpdateReceiver"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.receiver.FeedUpdateReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="FeedUpdateReceiver onReceive" type="ReceiveIntentFromRetValue" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.core.receiver.FeedUpdateReceiver: android.content.Intent getIntent()&gt;()"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.receiver.FeedUpdateReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.receiver.FeedUpdateReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;,&lt;de.danoeh.antennapod.core.ClientConfig: void initialize(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.UpdateManager: void init(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;,boolean isIntentAvailable(android.content.Context,java.lang.String)"/>  
      <source name="de.danoeh.antennapod.core.receiver.FeedUpdateReceiver"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.receiver.FeedUpdateReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.ClientConfig: void initialize(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.UpdateManager: void init(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.receiver.FeedUpdateReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.receiver.FeedUpdateReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;,void onReceive(android.content.Context,android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.receiver.FeedUpdateReceiver"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.receiver.FeedUpdateReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="FeedUpdateReceiver onReceive" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.gpoddernet.GpodnetAuthenticationActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.gpoddernet.GpodnetAuthenticationActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.gpoddernet.GpodnetAuthenticationActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle)"/>  
      <source name="de.danoeh.antennapod.activity.gpoddernet.GpodnetAuthenticationActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.gpoddernet.GpodnetAuthenticationActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="GpodnetAuthenticationActivity onCreate" type="setContentView" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.activity.gpoddernet.GpodnetAuthenticationActivity: void setContentView(int)&gt;(2131558482)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.fragment.AddFeedFragment"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.AddFeedFragment$$Lambda$4: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.AddFeedFragment$$Lambda$4: void onClick(android.view.View)&gt;,void onClick(android.view.View)"/>  
      <source name="de.danoeh.antennapod.fragment.AddFeedFragment"/>  
      <destinition name="de.danoeh.antennapod.activity.OnlineFeedViewActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.AddFeedFragment$$Lambda$4: void onClick(android.view.View)&gt;"/>  
        <node method="AddFeedFragment$$Lambda$4 onClick" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="AddFeedFragment$$Lambda$4 onClick" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lde/danoeh/antennapod/activity/OnlineFeedViewActivity;&quot;)"/>  
        <node method="AddFeedFragment$$Lambda$4 onClick" type="PassOutIntent" unit="virtualinvoke $r3.&lt;de.danoeh.antennapod.fragment.AddFeedFragment: void startActivity(android.content.Intent)&gt;($r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.antennapod.audio.ServiceBackedAudioPlayer"> 
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void prepare()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void prepare()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void prepare()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void prepare()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void prepare()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void prepare()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void prepare()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void prepare()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void prepare()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void prepare()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void prepare()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void prepare()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="PassOutIntent" unit="$z0 = virtualinvoke $r4.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r1, $r2, 1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void prepare()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void prepare()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void prepare()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.antennapod.audio.ServiceBackedAudioPlayer"> 
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void release()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void release()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void release()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void release()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void release()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void release()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void release()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void release()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void release()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void release()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void release()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void release()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="PassOutIntent" unit="$z0 = virtualinvoke $r4.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r1, $r2, 1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void release()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void release()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void release()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.antennapod.audio.MediaPlayer"> 
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void release()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void release()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void release()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void release()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void release()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void release()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void release()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void release()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void release()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void release()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void release()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void release()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void release()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void release()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void release()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void release()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void release()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void release()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void release()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void release()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="PassOutIntent" unit="$z0 = virtualinvoke $r4.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r1, $r2, 1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void release()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void release()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void release()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void release()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void release()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.MediaplayerActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity: void setupGUI()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity: void setupGUI()&gt;,void setupGUI()"/>  
      <source name="de.danoeh.antennapod.activity.MediaplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity: void setupGUI()&gt;"/>  
        <node method="MediaplayerActivity setupGUI" type="setContentView" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MediaplayerActivity: void setContentView(int)&gt;($i0)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.MediaplayerActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$1: void setupGUI()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$1: void setupGUI()&gt;,&lt;de.danoeh.antennapod.activity.MediaplayerActivity: void setupGUI()&gt;,void setupGUI()"/>  
      <source name="de.danoeh.antennapod.activity.MediaplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$1: void setupGUI()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity: void setupGUI()&gt;"/>  
        <node method="MediaplayerActivity setupGUI" type="setContentView" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MediaplayerActivity: void setContentView(int)&gt;($i0)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.service.playback.PlaybackService"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void access$1700(de.danoeh.antennapod.core.service.playback.PlaybackService,de.danoeh.antennapod.core.feed.MediaType,boolean)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void access$1700(de.danoeh.antennapod.core.service.playback.PlaybackService,de.danoeh.antennapod.core.feed.MediaType,boolean)&gt;,&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendNotificationBroadcast(int,int)&gt;,void sendNotificationBroadcast(int,int)"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="interICC_action.de.danoeh.antennapod.core.service.playerNotification, "/>  
      <sender action="action.de.danoeh.antennapod.core.service.playerNotification"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void access$1700(de.danoeh.antennapod.core.service.playback.PlaybackService,de.danoeh.antennapod.core.feed.MediaType,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendNotificationBroadcast(int,int)&gt;"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;action.de.danoeh.antennapod.core.service.playerNotification&quot;)"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="PassOutIntent" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendBroadcast(android.content.Intent)&gt;($r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.antennapod.audio.ServiceBackedAudioPlayer"> 
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: int getDuration()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: int getDuration()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: int getDuration()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: int getDuration()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: int getDuration()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: int getDuration()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: int getDuration()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: int getDuration()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: int getDuration()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: int getDuration()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: int getDuration()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: int getDuration()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="PassOutIntent" unit="$z0 = virtualinvoke $r4.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r1, $r2, 1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: int getDuration()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: int getDuration()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: int getDuration()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.storage.DBTasks"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.storage.DBTasks: void downloadFeedItems(android.content.Context,de.danoeh.antennapod.core.feed.FeedItem[])&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.storage.DBTasks: void downloadFeedItems(android.content.Context,de.danoeh.antennapod.core.feed.FeedItem[])&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void downloadFeedItems(boolean,android.content.Context,de.danoeh.antennapod.core.feed.FeedItem[])&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadMedia(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;,boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)"/>  
      <source name="de.danoeh.antennapod.core.storage.DBTasks"/>  
      <destinition name="de.danoeh.antennapod.core.service.download.DownloadService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void downloadFeedItems(android.content.Context,de.danoeh.antennapod.core.feed.FeedItem[])&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void downloadFeedItems(boolean,android.content.Context,de.danoeh.antennapod.core.feed.FeedItem[])&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadMedia(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;"/>  
        <node method="DownloadRequester download" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="DownloadRequester download" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/download/DownloadService;&quot;)"/>  
        <node method="DownloadRequester download" type="PassOutIntent" unit="staticinvoke &lt;android.support.v4.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)&gt;($r2, $r5)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.adapter.DefaultActionButtonCallback"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback$$Lambda$0: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback$$Lambda$0: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void downloadFeedItems(android.content.Context,de.danoeh.antennapod.core.feed.FeedItem[])&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void downloadFeedItems(boolean,android.content.Context,de.danoeh.antennapod.core.feed.FeedItem[])&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadMedia(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;,boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)"/>  
      <source name="de.danoeh.antennapod.adapter.DefaultActionButtonCallback"/>  
      <destinition name="de.danoeh.antennapod.core.service.download.DownloadService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback$$Lambda$0: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void downloadFeedItems(android.content.Context,de.danoeh.antennapod.core.feed.FeedItem[])&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void downloadFeedItems(boolean,android.content.Context,de.danoeh.antennapod.core.feed.FeedItem[])&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadMedia(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;"/>  
        <node method="DownloadRequester download" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="DownloadRequester download" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/download/DownloadService;&quot;)"/>  
        <node method="DownloadRequester download" type="PassOutIntent" unit="staticinvoke &lt;android.support.v4.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)&gt;($r2, $r5)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.fragment.ItemDescriptionFragment"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemDescriptionFragment$1: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemDescriptionFragment$1: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)&gt;,boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)"/>  
      <source name="de.danoeh.antennapod.fragment.ItemDescriptionFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemDescriptionFragment$1: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)&gt;"/>  
        <node method="ItemDescriptionFragment$1 shouldOverrideUrlLoading" type="CreateMethod" unit="$r4 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemDescriptionFragment$1: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemDescriptionFragment$1: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)&gt;,boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)"/>  
      <source name="de.danoeh.antennapod.fragment.ItemDescriptionFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemDescriptionFragment$1: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)&gt;"/>  
        <node method="ItemDescriptionFragment$1 shouldOverrideUrlLoading" type="CreateMethod" unit="$r4 = new android.content.Intent"/>  
        <node method="ItemDescriptionFragment$1 shouldOverrideUrlLoading" type="PassOutIntent" unit="virtualinvoke $r3.&lt;de.danoeh.antennapod.fragment.ItemDescriptionFragment: void startActivity(android.content.Intent)&gt;($r4)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.service.playback.PlaybackService"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void setSleepTimer(long,boolean,boolean)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void setSleepTimer(long,boolean,boolean)&gt;,&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendNotificationBroadcast(int,int)&gt;,void sendNotificationBroadcast(int,int)"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="interICC_action.de.danoeh.antennapod.core.service.playerNotification, "/>  
      <sender action="action.de.danoeh.antennapod.core.service.playerNotification"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void setSleepTimer(long,boolean,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendNotificationBroadcast(int,int)&gt;"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;action.de.danoeh.antennapod.core.service.playerNotification&quot;)"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="PassOutIntent" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendBroadcast(android.content.Intent)&gt;($r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.MediaplayerActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$2: void onTimerSet(long,boolean,boolean)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$2: void onTimerSet(long,boolean,boolean)&gt;,&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void setSleepTimer(long,boolean,boolean)&gt;,&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendNotificationBroadcast(int,int)&gt;,void sendNotificationBroadcast(int,int)"/>  
      <source name="de.danoeh.antennapod.activity.MediaplayerActivity"/>  
      <destinition name="interICC_action.de.danoeh.antennapod.core.service.playerNotification, "/>  
      <sender action="action.de.danoeh.antennapod.core.service.playerNotification"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$2: void onTimerSet(long,boolean,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void setSleepTimer(long,boolean,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendNotificationBroadcast(int,int)&gt;"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;action.de.danoeh.antennapod.core.service.playerNotification&quot;)"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="PassOutIntent" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendBroadcast(android.content.Intent)&gt;($r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.preferences.PreferenceController"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$18: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$18: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncIntent(android.content.Context)&gt;,void sendSyncIntent(android.content.Context), &lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
      <source name="de.danoeh.antennapod.preferences.PreferenceController"/>  
      <destinition name="de.danoeh.antennapod.core.service.GpodnetSyncService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$18: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncIntent(android.content.Context)&gt;"/>  
        <node method="GpodnetSyncService sendSyncIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="GpodnetSyncService sendSyncIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lde/danoeh/antennapod/core/service/GpodnetSyncService;&quot;)"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$18: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$18: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncIntent(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;,void enqueueWork(android.content.Context,android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.preferences.PreferenceController"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$18: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncIntent(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.storage.DBTasks"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.storage.DBTasks: void playMedia$4e7c0cea(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia,boolean,boolean)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.storage.DBTasks: void playMedia$4e7c0cea(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia,boolean,boolean)&gt;,void playMedia$4e7c0cea(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia,boolean,boolean)"/>  
      <source name="de.danoeh.antennapod.core.storage.DBTasks"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void playMedia$4e7c0cea(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia,boolean,boolean)&gt;"/>  
        <node method="DBTasks playMedia$4e7c0cea" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.content.Intent getPlayerActivityIntent(android.content.Context,de.danoeh.antennapod.core.util.playback.Playable)&gt;($r0, $r1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.storage.DBTasks: void playMedia$4e7c0cea(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia,boolean,boolean)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.storage.DBTasks: void playMedia$4e7c0cea(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia,boolean,boolean)&gt;,void playMedia$4e7c0cea(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia,boolean,boolean)"/>  
      <source name="de.danoeh.antennapod.core.storage.DBTasks"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void playMedia$4e7c0cea(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia,boolean,boolean)&gt;"/>  
        <node method="DBTasks playMedia$4e7c0cea" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.content.Intent getPlayerActivityIntent(android.content.Context,de.danoeh.antennapod.core.util.playback.Playable)&gt;($r0, $r1)"/>  
        <node method="DBTasks playMedia$4e7c0cea" type="PassOutIntent" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r6)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.storage.DBTasks: void playMedia$4e7c0cea(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia,boolean,boolean)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.storage.DBTasks: void playMedia$4e7c0cea(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia,boolean,boolean)&gt;,&lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: void start()&gt;,void start(), &lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: android.content.Intent getIntent()&gt;"/>  
      <source name="de.danoeh.antennapod.core.storage.DBTasks"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void playMedia$4e7c0cea(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia,boolean,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: void start()&gt;"/>  
        <node method="PlaybackServiceStarter start" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: android.content.Intent getIntent()&gt;()"/>  
        <node method="PlaybackServiceStarter getIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="PlaybackServiceStarter getIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/>  
        <node method="PlaybackServiceStarter start" type="PassOutIntent" unit="staticinvoke &lt;android.support.v4.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)&gt;($r2, $r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.adapter.DefaultActionButtonCallback"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback: void onActionButtonPressed(de.danoeh.antennapod.core.feed.FeedItem,de.danoeh.antennapod.core.util.LongList)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback: void onActionButtonPressed(de.danoeh.antennapod.core.feed.FeedItem,de.danoeh.antennapod.core.util.LongList)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void cancelDownload(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void cancelDownload(android.content.Context,java.lang.String)&gt;,void cancelDownload(android.content.Context,java.lang.String)"/>  
      <source name="de.danoeh.antennapod.adapter.DefaultActionButtonCallback"/>  
      <destinition name="interICC_action.de.danoeh.antennapod.core.service.cancelDownload, "/>  
      <sender action="action.de.danoeh.antennapod.core.service.cancelDownload"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback: void onActionButtonPressed(de.danoeh.antennapod.core.feed.FeedItem,de.danoeh.antennapod.core.util.LongList)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void cancelDownload(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void cancelDownload(android.content.Context,java.lang.String)&gt;"/>  
        <node method="DownloadRequester cancelDownload" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="DownloadRequester cancelDownload" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;action.de.danoeh.antennapod.core.service.cancelDownload&quot;)"/>  
        <node method="DownloadRequester cancelDownload" type="PassOutIntent" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback: void onActionButtonPressed(de.danoeh.antennapod.core.feed.FeedItem,de.danoeh.antennapod.core.util.LongList)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback: void onActionButtonPressed(de.danoeh.antennapod.core.feed.FeedItem,de.danoeh.antennapod.core.util.LongList)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void downloadFeedItems(android.content.Context,de.danoeh.antennapod.core.feed.FeedItem[])&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void downloadFeedItems(boolean,android.content.Context,de.danoeh.antennapod.core.feed.FeedItem[])&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadMedia(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;,boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)"/>  
      <source name="de.danoeh.antennapod.adapter.DefaultActionButtonCallback"/>  
      <destinition name="de.danoeh.antennapod.core.service.download.DownloadService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback: void onActionButtonPressed(de.danoeh.antennapod.core.feed.FeedItem,de.danoeh.antennapod.core.util.LongList)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void downloadFeedItems(android.content.Context,de.danoeh.antennapod.core.feed.FeedItem[])&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void downloadFeedItems(boolean,android.content.Context,de.danoeh.antennapod.core.feed.FeedItem[])&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadMedia(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;"/>  
        <node method="DownloadRequester download" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="DownloadRequester download" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/download/DownloadService;&quot;)"/>  
        <node method="DownloadRequester download" type="PassOutIntent" unit="staticinvoke &lt;android.support.v4.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)&gt;($r2, $r5)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback: void onActionButtonPressed(de.danoeh.antennapod.core.feed.FeedItem,de.danoeh.antennapod.core.util.LongList)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback: void onActionButtonPressed(de.danoeh.antennapod.core.feed.FeedItem,de.danoeh.antennapod.core.util.LongList)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void playMedia$4e7c0cea(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia,boolean,boolean)&gt;,void playMedia$4e7c0cea(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia,boolean,boolean)"/>  
      <source name="de.danoeh.antennapod.adapter.DefaultActionButtonCallback"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback: void onActionButtonPressed(de.danoeh.antennapod.core.feed.FeedItem,de.danoeh.antennapod.core.util.LongList)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void playMedia$4e7c0cea(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia,boolean,boolean)&gt;"/>  
        <node method="DBTasks playMedia$4e7c0cea" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.content.Intent getPlayerActivityIntent(android.content.Context,de.danoeh.antennapod.core.util.playback.Playable)&gt;($r0, $r1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback: void onActionButtonPressed(de.danoeh.antennapod.core.feed.FeedItem,de.danoeh.antennapod.core.util.LongList)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback: void onActionButtonPressed(de.danoeh.antennapod.core.feed.FeedItem,de.danoeh.antennapod.core.util.LongList)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void playMedia$4e7c0cea(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia,boolean,boolean)&gt;,void playMedia$4e7c0cea(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia,boolean,boolean)"/>  
      <source name="de.danoeh.antennapod.adapter.DefaultActionButtonCallback"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback: void onActionButtonPressed(de.danoeh.antennapod.core.feed.FeedItem,de.danoeh.antennapod.core.util.LongList)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void playMedia$4e7c0cea(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia,boolean,boolean)&gt;"/>  
        <node method="DBTasks playMedia$4e7c0cea" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.content.Intent getPlayerActivityIntent(android.content.Context,de.danoeh.antennapod.core.util.playback.Playable)&gt;($r0, $r1)"/>  
        <node method="DBTasks playMedia$4e7c0cea" type="PassOutIntent" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r6)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback: void onActionButtonPressed(de.danoeh.antennapod.core.feed.FeedItem,de.danoeh.antennapod.core.util.LongList)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback: void onActionButtonPressed(de.danoeh.antennapod.core.feed.FeedItem,de.danoeh.antennapod.core.util.LongList)&gt;,&lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: void start()&gt;,void start(), &lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: android.content.Intent getIntent()&gt;"/>  
      <source name="de.danoeh.antennapod.adapter.DefaultActionButtonCallback"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback: void onActionButtonPressed(de.danoeh.antennapod.core.feed.FeedItem,de.danoeh.antennapod.core.util.LongList)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: void start()&gt;"/>  
        <node method="PlaybackServiceStarter start" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: android.content.Intent getIntent()&gt;()"/>  
        <node method="PlaybackServiceStarter getIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="PlaybackServiceStarter getIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/>  
        <node method="PlaybackServiceStarter start" type="PassOutIntent" unit="staticinvoke &lt;android.support.v4.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)&gt;($r2, $r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.fragment.ItemlistFragment"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onFragmentLoaded()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onFragmentLoaded()&gt;,&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback: void onActionButtonPressed(de.danoeh.antennapod.core.feed.FeedItem,de.danoeh.antennapod.core.util.LongList)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void cancelDownload(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void cancelDownload(android.content.Context,java.lang.String)&gt;,void cancelDownload(android.content.Context,java.lang.String)"/>  
      <source name="de.danoeh.antennapod.fragment.ItemlistFragment"/>  
      <destinition name="interICC_action.de.danoeh.antennapod.core.service.cancelDownload, "/>  
      <sender action="action.de.danoeh.antennapod.core.service.cancelDownload"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onFragmentLoaded()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback: void onActionButtonPressed(de.danoeh.antennapod.core.feed.FeedItem,de.danoeh.antennapod.core.util.LongList)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void cancelDownload(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void cancelDownload(android.content.Context,java.lang.String)&gt;"/>  
        <node method="DownloadRequester cancelDownload" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="DownloadRequester cancelDownload" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;action.de.danoeh.antennapod.core.service.cancelDownload&quot;)"/>  
        <node method="DownloadRequester cancelDownload" type="PassOutIntent" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onFragmentLoaded()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onFragmentLoaded()&gt;,&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback: void onActionButtonPressed(de.danoeh.antennapod.core.feed.FeedItem,de.danoeh.antennapod.core.util.LongList)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void downloadFeedItems(android.content.Context,de.danoeh.antennapod.core.feed.FeedItem[])&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void downloadFeedItems(boolean,android.content.Context,de.danoeh.antennapod.core.feed.FeedItem[])&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadMedia(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;,boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)"/>  
      <source name="de.danoeh.antennapod.fragment.ItemlistFragment"/>  
      <destinition name="de.danoeh.antennapod.core.service.download.DownloadService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onFragmentLoaded()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback: void onActionButtonPressed(de.danoeh.antennapod.core.feed.FeedItem,de.danoeh.antennapod.core.util.LongList)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void downloadFeedItems(android.content.Context,de.danoeh.antennapod.core.feed.FeedItem[])&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void downloadFeedItems(boolean,android.content.Context,de.danoeh.antennapod.core.feed.FeedItem[])&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadMedia(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;"/>  
        <node method="DownloadRequester download" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="DownloadRequester download" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/download/DownloadService;&quot;)"/>  
        <node method="DownloadRequester download" type="PassOutIntent" unit="staticinvoke &lt;android.support.v4.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)&gt;($r2, $r5)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onFragmentLoaded()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onFragmentLoaded()&gt;,&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback: void onActionButtonPressed(de.danoeh.antennapod.core.feed.FeedItem,de.danoeh.antennapod.core.util.LongList)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void playMedia$4e7c0cea(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia,boolean,boolean)&gt;,void playMedia$4e7c0cea(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia,boolean,boolean)"/>  
      <source name="de.danoeh.antennapod.fragment.ItemlistFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onFragmentLoaded()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback: void onActionButtonPressed(de.danoeh.antennapod.core.feed.FeedItem,de.danoeh.antennapod.core.util.LongList)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void playMedia$4e7c0cea(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia,boolean,boolean)&gt;"/>  
        <node method="DBTasks playMedia$4e7c0cea" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.content.Intent getPlayerActivityIntent(android.content.Context,de.danoeh.antennapod.core.util.playback.Playable)&gt;($r0, $r1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onFragmentLoaded()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onFragmentLoaded()&gt;,&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback: void onActionButtonPressed(de.danoeh.antennapod.core.feed.FeedItem,de.danoeh.antennapod.core.util.LongList)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void playMedia$4e7c0cea(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia,boolean,boolean)&gt;,void playMedia$4e7c0cea(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia,boolean,boolean)"/>  
      <source name="de.danoeh.antennapod.fragment.ItemlistFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onFragmentLoaded()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback: void onActionButtonPressed(de.danoeh.antennapod.core.feed.FeedItem,de.danoeh.antennapod.core.util.LongList)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void playMedia$4e7c0cea(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia,boolean,boolean)&gt;"/>  
        <node method="DBTasks playMedia$4e7c0cea" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.content.Intent getPlayerActivityIntent(android.content.Context,de.danoeh.antennapod.core.util.playback.Playable)&gt;($r0, $r1)"/>  
        <node method="DBTasks playMedia$4e7c0cea" type="PassOutIntent" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r6)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onFragmentLoaded()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onFragmentLoaded()&gt;,&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback: void onActionButtonPressed(de.danoeh.antennapod.core.feed.FeedItem,de.danoeh.antennapod.core.util.LongList)&gt;,&lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: void start()&gt;,void start(), &lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: android.content.Intent getIntent()&gt;"/>  
      <source name="de.danoeh.antennapod.fragment.ItemlistFragment"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onFragmentLoaded()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback: void onActionButtonPressed(de.danoeh.antennapod.core.feed.FeedItem,de.danoeh.antennapod.core.util.LongList)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: void start()&gt;"/>  
        <node method="PlaybackServiceStarter start" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: android.content.Intent getIntent()&gt;()"/>  
        <node method="PlaybackServiceStarter getIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="PlaybackServiceStarter getIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/>  
        <node method="PlaybackServiceStarter start" type="PassOutIntent" unit="staticinvoke &lt;android.support.v4.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)&gt;($r2, $r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.fragment.ItemlistFragment"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onViewCreated(android.view.View,android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onViewCreated(android.view.View,android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onFragmentLoaded()&gt;,&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback: void onActionButtonPressed(de.danoeh.antennapod.core.feed.FeedItem,de.danoeh.antennapod.core.util.LongList)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void cancelDownload(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void cancelDownload(android.content.Context,java.lang.String)&gt;,void cancelDownload(android.content.Context,java.lang.String)"/>  
      <source name="de.danoeh.antennapod.fragment.ItemlistFragment"/>  
      <destinition name="interICC_action.de.danoeh.antennapod.core.service.cancelDownload, "/>  
      <sender action="action.de.danoeh.antennapod.core.service.cancelDownload"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onViewCreated(android.view.View,android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onFragmentLoaded()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback: void onActionButtonPressed(de.danoeh.antennapod.core.feed.FeedItem,de.danoeh.antennapod.core.util.LongList)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void cancelDownload(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void cancelDownload(android.content.Context,java.lang.String)&gt;"/>  
        <node method="DownloadRequester cancelDownload" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="DownloadRequester cancelDownload" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;action.de.danoeh.antennapod.core.service.cancelDownload&quot;)"/>  
        <node method="DownloadRequester cancelDownload" type="PassOutIntent" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onViewCreated(android.view.View,android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onViewCreated(android.view.View,android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onFragmentLoaded()&gt;,&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback: void onActionButtonPressed(de.danoeh.antennapod.core.feed.FeedItem,de.danoeh.antennapod.core.util.LongList)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void downloadFeedItems(android.content.Context,de.danoeh.antennapod.core.feed.FeedItem[])&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void downloadFeedItems(boolean,android.content.Context,de.danoeh.antennapod.core.feed.FeedItem[])&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadMedia(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;,boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)"/>  
      <source name="de.danoeh.antennapod.fragment.ItemlistFragment"/>  
      <destinition name="de.danoeh.antennapod.core.service.download.DownloadService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onViewCreated(android.view.View,android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onFragmentLoaded()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback: void onActionButtonPressed(de.danoeh.antennapod.core.feed.FeedItem,de.danoeh.antennapod.core.util.LongList)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void downloadFeedItems(android.content.Context,de.danoeh.antennapod.core.feed.FeedItem[])&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void downloadFeedItems(boolean,android.content.Context,de.danoeh.antennapod.core.feed.FeedItem[])&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadMedia(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;"/>  
        <node method="DownloadRequester download" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="DownloadRequester download" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/download/DownloadService;&quot;)"/>  
        <node method="DownloadRequester download" type="PassOutIntent" unit="staticinvoke &lt;android.support.v4.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)&gt;($r2, $r5)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onViewCreated(android.view.View,android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onViewCreated(android.view.View,android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onFragmentLoaded()&gt;,&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback: void onActionButtonPressed(de.danoeh.antennapod.core.feed.FeedItem,de.danoeh.antennapod.core.util.LongList)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void playMedia$4e7c0cea(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia,boolean,boolean)&gt;,void playMedia$4e7c0cea(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia,boolean,boolean)"/>  
      <source name="de.danoeh.antennapod.fragment.ItemlistFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onViewCreated(android.view.View,android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onFragmentLoaded()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback: void onActionButtonPressed(de.danoeh.antennapod.core.feed.FeedItem,de.danoeh.antennapod.core.util.LongList)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void playMedia$4e7c0cea(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia,boolean,boolean)&gt;"/>  
        <node method="DBTasks playMedia$4e7c0cea" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.content.Intent getPlayerActivityIntent(android.content.Context,de.danoeh.antennapod.core.util.playback.Playable)&gt;($r0, $r1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onViewCreated(android.view.View,android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onViewCreated(android.view.View,android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onFragmentLoaded()&gt;,&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback: void onActionButtonPressed(de.danoeh.antennapod.core.feed.FeedItem,de.danoeh.antennapod.core.util.LongList)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void playMedia$4e7c0cea(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia,boolean,boolean)&gt;,void playMedia$4e7c0cea(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia,boolean,boolean)"/>  
      <source name="de.danoeh.antennapod.fragment.ItemlistFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onViewCreated(android.view.View,android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onFragmentLoaded()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback: void onActionButtonPressed(de.danoeh.antennapod.core.feed.FeedItem,de.danoeh.antennapod.core.util.LongList)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void playMedia$4e7c0cea(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia,boolean,boolean)&gt;"/>  
        <node method="DBTasks playMedia$4e7c0cea" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.content.Intent getPlayerActivityIntent(android.content.Context,de.danoeh.antennapod.core.util.playback.Playable)&gt;($r0, $r1)"/>  
        <node method="DBTasks playMedia$4e7c0cea" type="PassOutIntent" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r6)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onViewCreated(android.view.View,android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onViewCreated(android.view.View,android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onFragmentLoaded()&gt;,&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback: void onActionButtonPressed(de.danoeh.antennapod.core.feed.FeedItem,de.danoeh.antennapod.core.util.LongList)&gt;,&lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: void start()&gt;,void start(), &lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: android.content.Intent getIntent()&gt;"/>  
      <source name="de.danoeh.antennapod.fragment.ItemlistFragment"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onViewCreated(android.view.View,android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onFragmentLoaded()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback: void onActionButtonPressed(de.danoeh.antennapod.core.feed.FeedItem,de.danoeh.antennapod.core.util.LongList)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: void start()&gt;"/>  
        <node method="PlaybackServiceStarter start" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: android.content.Intent getIntent()&gt;()"/>  
        <node method="PlaybackServiceStarter getIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="PlaybackServiceStarter getIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/>  
        <node method="PlaybackServiceStarter start" type="PassOutIntent" unit="staticinvoke &lt;android.support.v4.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)&gt;($r2, $r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.antennapod.audio.ServiceBackedAudioPlayer"> 
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setVolume(float,float)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setVolume(float,float)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setVolume(float,float)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setVolume(float,float)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setVolume(float,float)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setVolume(float,float)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setVolume(float,float)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setVolume(float,float)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setVolume(float,float)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setVolume(float,float)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setVolume(float,float)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setVolume(float,float)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="PassOutIntent" unit="$z0 = virtualinvoke $r4.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r1, $r2, 1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setVolume(float,float)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setVolume(float,float)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setVolume(float,float)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.antennapod.audio.MediaPlayer"> 
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled()&gt;,boolean isPrestoLibraryInstalled(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;,void &lt;init&gt;(android.content.Context), &lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;,void &lt;init&gt;(android.content.Context), &lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/>  
        <node method="MediaPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;,void setupMpi(android.content.Context), &lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer setupMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer setupMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/>  
        <node method="MediaPlayer setupMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;,void setupMpi(android.content.Context), &lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer setupMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer setupMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer setupMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;,android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;,android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="PassOutIntent" unit="$z0 = virtualinvoke $r4.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r1, $r2, 1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;,void setupMpi(android.content.Context), &lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;,android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;,void &lt;init&gt;(android.content.Context), &lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.util.playback.AudioPlayer"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,void &lt;init&gt;(android.content.Context,byte), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;,void &lt;init&gt;(android.content.Context), &lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;,void setupMpi(android.content.Context), &lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer setupMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer setupMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/>  
        <node method="MediaPlayer setupMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;,android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;,void &lt;init&gt;(android.content.Context), &lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;,android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled()&gt;,boolean isPrestoLibraryInstalled(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;,void &lt;init&gt;(android.content.Context), &lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setDataSource(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;,void setupMpi(android.content.Context), &lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer setupMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer setupMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer setupMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,void &lt;init&gt;(android.content.Context,byte), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;,android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,void &lt;init&gt;(android.content.Context,byte), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="PassOutIntent" unit="$z0 = virtualinvoke $r4.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r1, $r2, 1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;,void setupMpi(android.content.Context), &lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.AudioPlayer"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.service.playback.LocalPSMP"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,void &lt;init&gt;(android.content.Context,byte), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;,void &lt;init&gt;(android.content.Context), &lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;,void setupMpi(android.content.Context), &lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer setupMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer setupMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/>  
        <node method="MediaPlayer setupMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;,void &lt;init&gt;(android.content.Context), &lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/>  
        <node method="MediaPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;,android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;,android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean), &lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled()&gt;,boolean isPrestoLibraryInstalled(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean), &lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <destinition name="java.lang.String"/>  
      <sender action="new android.content.Context"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="LocalPSMP playMediaObject" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="LocalPSMP playMediaObject" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/>  
        <node method="LocalPSMP playMediaObject" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;,void setupMpi(android.content.Context), &lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer setupMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer setupMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer setupMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,void &lt;init&gt;(android.content.Context,byte), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;,android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,void &lt;init&gt;(android.content.Context,byte), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean), &lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <destinition name="interICC_new android.content.Context, "/>  
      <sender action="new android.content.Context"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="LocalPSMP playMediaObject" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="LocalPSMP playMediaObject" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="LocalPSMP playMediaObject" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="PassOutIntent" unit="$z0 = virtualinvoke $r4.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r1, $r2, 1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;,void setupMpi(android.content.Context), &lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;,void &lt;init&gt;(android.content.Context), &lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.service.playback.LocalPSMP"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,void &lt;init&gt;(android.content.Context,byte), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;,void &lt;init&gt;(android.content.Context), &lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;,void setupMpi(android.content.Context), &lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer setupMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer setupMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/>  
        <node method="MediaPlayer setupMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;,void &lt;init&gt;(android.content.Context), &lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/>  
        <node method="MediaPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;,android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;,android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean), &lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled()&gt;,boolean isPrestoLibraryInstalled(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean), &lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <destinition name="java.lang.String"/>  
      <sender action="new android.content.Context"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="LocalPSMP playMediaObject" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="LocalPSMP playMediaObject" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/>  
        <node method="LocalPSMP playMediaObject" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;,void setupMpi(android.content.Context), &lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer setupMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer setupMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer setupMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,void &lt;init&gt;(android.content.Context,byte), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;,android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,void &lt;init&gt;(android.content.Context,byte), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean), &lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <destinition name="interICC_new android.content.Context, "/>  
      <sender action="new android.content.Context"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="LocalPSMP playMediaObject" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="LocalPSMP playMediaObject" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="LocalPSMP playMediaObject" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="PassOutIntent" unit="$z0 = virtualinvoke $r4.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r1, $r2, 1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;,void setupMpi(android.content.Context), &lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;,void &lt;init&gt;(android.content.Context), &lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$17: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.receiver.AlarmUpdateReceiver"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.receiver.AlarmUpdateReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.receiver.AlarmUpdateReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;,&lt;de.danoeh.antennapod.core.ClientConfig: void initialize(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.UpdateManager: void init(android.content.Context)&gt;,void init(android.content.Context), &lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.receiver.AlarmUpdateReceiver"/>  
      <destinition name="interICC_new android.content.Context, "/>  
      <sender action="new android.content.Context"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.receiver.AlarmUpdateReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.ClientConfig: void initialize(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.UpdateManager: void init(android.content.Context)&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.receiver.AlarmUpdateReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.receiver.AlarmUpdateReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;,&lt;de.danoeh.antennapod.core.ClientConfig: void initialize(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.UpdateManager: void init(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;,boolean isIntentAvailable(android.content.Context,java.lang.String)"/>  
      <source name="de.danoeh.antennapod.core.receiver.AlarmUpdateReceiver"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.receiver.AlarmUpdateReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.ClientConfig: void initialize(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.UpdateManager: void init(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.receiver.AlarmUpdateReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.receiver.AlarmUpdateReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;,void onReceive(android.content.Context,android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.receiver.AlarmUpdateReceiver"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.receiver.AlarmUpdateReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="AlarmUpdateReceiver onReceive" type="ReceiveIntentFromRetValue" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.core.receiver.AlarmUpdateReceiver: android.content.Intent getIntent()&gt;()"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.receiver.AlarmUpdateReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.receiver.AlarmUpdateReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;,void onReceive(android.content.Context,android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.receiver.AlarmUpdateReceiver"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.receiver.AlarmUpdateReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="AlarmUpdateReceiver onReceive" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.antennapod.audio.MediaPlayer"> 
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled()&gt;,boolean isPrestoLibraryInstalled(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;,android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;,android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="PassOutIntent" unit="$z0 = virtualinvoke $r4.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r1, $r2, 1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;,android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void pause()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.preferences.PreferenceController"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$17: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$17: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncIntent(android.content.Context)&gt;,void sendSyncIntent(android.content.Context), &lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
      <source name="de.danoeh.antennapod.preferences.PreferenceController"/>  
      <destinition name="de.danoeh.antennapod.core.service.GpodnetSyncService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$17: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncIntent(android.content.Context)&gt;"/>  
        <node method="GpodnetSyncService sendSyncIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="GpodnetSyncService sendSyncIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lde/danoeh/antennapod/core/service/GpodnetSyncService;&quot;)"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$17: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$17: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncIntent(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;,void enqueueWork(android.content.Context,android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.preferences.PreferenceController"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$17: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncIntent(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.storage.DBTasks"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.storage.DBTasks: void loadNextPageOfFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.storage.DBTasks: void loadNextPageOfFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;,boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)"/>  
      <source name="de.danoeh.antennapod.core.storage.DBTasks"/>  
      <destinition name="de.danoeh.antennapod.core.service.download.DownloadService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void loadNextPageOfFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;"/>  
        <node method="DownloadRequester download" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="DownloadRequester download" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/download/DownloadService;&quot;)"/>  
        <node method="DownloadRequester download" type="PassOutIntent" unit="staticinvoke &lt;android.support.v4.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)&gt;($r2, $r5)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.service.download.DownloadService"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.download.DownloadService$FeedSyncThread$$Lambda$0: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.download.DownloadService$FeedSyncThread$$Lambda$0: void run()&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void loadNextPageOfFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;,boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)"/>  
      <source name="de.danoeh.antennapod.core.service.download.DownloadService"/>  
      <destinition name="de.danoeh.antennapod.core.service.download.DownloadService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.download.DownloadService$FeedSyncThread$$Lambda$0: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void loadNextPageOfFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;"/>  
        <node method="DownloadRequester download" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="DownloadRequester download" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/download/DownloadService;&quot;)"/>  
        <node method="DownloadRequester download" type="PassOutIntent" unit="staticinvoke &lt;android.support.v4.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)&gt;($r2, $r5)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.fragment.ExternalPlayerFragment"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ExternalPlayerFragment: void access$300(de.danoeh.antennapod.fragment.ExternalPlayerFragment)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ExternalPlayerFragment: void access$300(de.danoeh.antennapod.fragment.ExternalPlayerFragment)&gt;,&lt;de.danoeh.antennapod.fragment.ExternalPlayerFragment$$Lambda$2: void onClick(android.view.View)&gt;,&lt;de.danoeh.antennapod.core.util.playback.PlaybackController: void playPause()&gt;,&lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: void start()&gt;,void start(), &lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: android.content.Intent getIntent()&gt;"/>  
      <source name="de.danoeh.antennapod.fragment.ExternalPlayerFragment"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ExternalPlayerFragment: void access$300(de.danoeh.antennapod.fragment.ExternalPlayerFragment)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ExternalPlayerFragment$$Lambda$2: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.PlaybackController: void playPause()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: void start()&gt;"/>  
        <node method="PlaybackServiceStarter start" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: android.content.Intent getIntent()&gt;()"/>  
        <node method="PlaybackServiceStarter getIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="PlaybackServiceStarter getIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/>  
        <node method="PlaybackServiceStarter start" type="PassOutIntent" unit="staticinvoke &lt;android.support.v4.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)&gt;($r2, $r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.fragment.ExternalPlayerFragment"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ExternalPlayerFragment$1: void onShutdownNotification()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ExternalPlayerFragment$1: void onShutdownNotification()&gt;,&lt;de.danoeh.antennapod.fragment.ExternalPlayerFragment: void access$300(de.danoeh.antennapod.fragment.ExternalPlayerFragment)&gt;,&lt;de.danoeh.antennapod.fragment.ExternalPlayerFragment$$Lambda$2: void onClick(android.view.View)&gt;,&lt;de.danoeh.antennapod.core.util.playback.PlaybackController: void playPause()&gt;,&lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: void start()&gt;,void start(), &lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: android.content.Intent getIntent()&gt;"/>  
      <source name="de.danoeh.antennapod.fragment.ExternalPlayerFragment"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ExternalPlayerFragment$1: void onShutdownNotification()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ExternalPlayerFragment: void access$300(de.danoeh.antennapod.fragment.ExternalPlayerFragment)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ExternalPlayerFragment$$Lambda$2: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.PlaybackController: void playPause()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: void start()&gt;"/>  
        <node method="PlaybackServiceStarter start" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: android.content.Intent getIntent()&gt;()"/>  
        <node method="PlaybackServiceStarter getIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="PlaybackServiceStarter getIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/>  
        <node method="PlaybackServiceStarter start" type="PassOutIntent" unit="staticinvoke &lt;android.support.v4.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)&gt;($r2, $r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.antennapod.audio.ServiceBackedAudioPlayer"> 
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean isPlaying()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean isPlaying()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean isPlaying()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean isPlaying()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean isPlaying()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean isPlaying()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean isPlaying()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean isPlaying()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean isPlaying()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean isPlaying()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean isPlaying()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean isPlaying()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="PassOutIntent" unit="$z0 = virtualinvoke $r4.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r1, $r2, 1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean isPlaying()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean isPlaying()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean isPlaying()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.MediaplayerInfoActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: void setupGUI()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: void setupGUI()&gt;,&lt;de.danoeh.antennapod.activity.MediaplayerActivity: void setupGUI()&gt;,void setupGUI()"/>  
      <source name="de.danoeh.antennapod.activity.MediaplayerInfoActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: void setupGUI()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity: void setupGUI()&gt;"/>  
        <node method="MediaplayerActivity setupGUI" type="setContentView" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MediaplayerActivity: void setContentView(int)&gt;($i0)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.AudioplayerActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.AudioplayerActivity: void setupGUI()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.AudioplayerActivity: void setupGUI()&gt;,&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: void setupGUI()&gt;,&lt;de.danoeh.antennapod.activity.MediaplayerActivity: void setupGUI()&gt;,void setupGUI()"/>  
      <source name="de.danoeh.antennapod.activity.AudioplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.AudioplayerActivity: void setupGUI()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: void setupGUI()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity: void setupGUI()&gt;"/>  
        <node method="MediaplayerActivity setupGUI" type="setContentView" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MediaplayerActivity: void setContentView(int)&gt;($i0)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.receiver.MediaButtonReceiver"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.receiver.MediaButtonReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.receiver.MediaButtonReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;,void onReceive(android.content.Context,android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.receiver.MediaButtonReceiver"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.receiver.MediaButtonReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="MediaButtonReceiver onReceive" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="MediaButtonReceiver onReceive" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/>  
        <node method="MediaButtonReceiver onReceive" type="PassOutIntent" unit="staticinvoke &lt;android.support.v4.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)&gt;($r1, $r2)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.receiver.MediaButtonReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.receiver.MediaButtonReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;,void onReceive(android.content.Context,android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.receiver.MediaButtonReceiver"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.receiver.MediaButtonReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="MediaButtonReceiver onReceive" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.receiver.MediaButtonReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.receiver.MediaButtonReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;,void onReceive(android.content.Context,android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.receiver.MediaButtonReceiver"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.receiver.MediaButtonReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="MediaButtonReceiver onReceive" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.receiver.MediaButtonReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.receiver.MediaButtonReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;,&lt;de.danoeh.antennapod.core.ClientConfig: void initialize(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.UpdateManager: void init(android.content.Context)&gt;,void init(android.content.Context), &lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.receiver.MediaButtonReceiver"/>  
      <destinition name="interICC_new android.content.Context, "/>  
      <sender action="new android.content.Context"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.receiver.MediaButtonReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.ClientConfig: void initialize(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.UpdateManager: void init(android.content.Context)&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.receiver.MediaButtonReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.receiver.MediaButtonReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;,void onReceive(android.content.Context,android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.receiver.MediaButtonReceiver"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.receiver.MediaButtonReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="MediaButtonReceiver onReceive" type="ReceiveIntentFromRetValue" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.core.receiver.MediaButtonReceiver: android.content.Intent getIntent()&gt;()"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.receiver.MediaButtonReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.receiver.MediaButtonReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;,&lt;de.danoeh.antennapod.core.ClientConfig: void initialize(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.UpdateManager: void init(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;,boolean isIntentAvailable(android.content.Context,java.lang.String)"/>  
      <source name="de.danoeh.antennapod.core.receiver.MediaButtonReceiver"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.receiver.MediaButtonReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.ClientConfig: void initialize(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.UpdateManager: void init(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.receiver.MediaButtonReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.receiver.MediaButtonReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;,void onReceive(android.content.Context,android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.receiver.MediaButtonReceiver"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.receiver.MediaButtonReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="MediaButtonReceiver onReceive" type="ReceiveIntentFromRetValue" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.core.receiver.MediaButtonReceiver: android.content.Intent getIntent()&gt;()"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.antennapod.audio.ServiceBackedAudioPlayer"> 
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: int getCurrentPosition()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: int getCurrentPosition()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: int getCurrentPosition()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: int getCurrentPosition()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: int getCurrentPosition()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: int getCurrentPosition()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: int getCurrentPosition()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: int getCurrentPosition()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: int getCurrentPosition()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: int getCurrentPosition()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: int getCurrentPosition()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: int getCurrentPosition()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="PassOutIntent" unit="$z0 = virtualinvoke $r4.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r1, $r2, 1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: int getCurrentPosition()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: int getCurrentPosition()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: int getCurrentPosition()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.antennapod.audio.ServiceBackedAudioPlayer"> 
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setAudioStreamType(int)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setAudioStreamType(int)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setAudioStreamType(int)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setAudioStreamType(int)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setAudioStreamType(int)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setAudioStreamType(int)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setAudioStreamType(int)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setAudioStreamType(int)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setAudioStreamType(int)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setAudioStreamType(int)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setAudioStreamType(int)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setAudioStreamType(int)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="PassOutIntent" unit="$z0 = virtualinvoke $r4.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r1, $r2, 1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setAudioStreamType(int)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setAudioStreamType(int)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setAudioStreamType(int)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.service.GpodnetSyncService"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncActionsIntent(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncActionsIntent(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;,void enqueueWork(android.content.Context,android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.GpodnetSyncService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncActionsIntent(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncActionsIntent(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncActionsIntent(android.content.Context)&gt;,void sendSyncActionsIntent(android.content.Context), &lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.GpodnetSyncService"/>  
      <destinition name="de.danoeh.antennapod.core.service.GpodnetSyncService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncActionsIntent(android.content.Context)&gt;"/>  
        <node method="GpodnetSyncService sendSyncActionsIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="GpodnetSyncService sendSyncActionsIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lde/danoeh/antennapod/core/service/GpodnetSyncService;&quot;)"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.preferences.GpodnetPreferences"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.preferences.GpodnetPreferences: void enqueueEpisodeAction(de.danoeh.antennapod.core.gpoddernet.model.GpodnetEpisodeAction)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.preferences.GpodnetPreferences: void enqueueEpisodeAction(de.danoeh.antennapod.core.gpoddernet.model.GpodnetEpisodeAction)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncActionsIntent(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;,void enqueueWork(android.content.Context,android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.preferences.GpodnetPreferences"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.preferences.GpodnetPreferences: void enqueueEpisodeAction(de.danoeh.antennapod.core.gpoddernet.model.GpodnetEpisodeAction)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncActionsIntent(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.preferences.GpodnetPreferences: void enqueueEpisodeAction(de.danoeh.antennapod.core.gpoddernet.model.GpodnetEpisodeAction)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.preferences.GpodnetPreferences: void enqueueEpisodeAction(de.danoeh.antennapod.core.gpoddernet.model.GpodnetEpisodeAction)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncActionsIntent(android.content.Context)&gt;,void sendSyncActionsIntent(android.content.Context), &lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
      <source name="de.danoeh.antennapod.core.preferences.GpodnetPreferences"/>  
      <destinition name="de.danoeh.antennapod.core.service.GpodnetSyncService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.preferences.GpodnetPreferences: void enqueueEpisodeAction(de.danoeh.antennapod.core.gpoddernet.model.GpodnetEpisodeAction)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncActionsIntent(android.content.Context)&gt;"/>  
        <node method="GpodnetSyncService sendSyncActionsIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="GpodnetSyncService sendSyncActionsIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lde/danoeh/antennapod/core/service/GpodnetSyncService;&quot;)"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.feed.FeedMedia"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.feed.FeedMedia: void postPlaybackTasks(android.content.Context,boolean)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.feed.FeedMedia: void postPlaybackTasks(android.content.Context,boolean)&gt;,&lt;de.danoeh.antennapod.core.preferences.GpodnetPreferences: void enqueueEpisodeAction(de.danoeh.antennapod.core.gpoddernet.model.GpodnetEpisodeAction)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncActionsIntent(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;,void enqueueWork(android.content.Context,android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.feed.FeedMedia"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.feed.FeedMedia: void postPlaybackTasks(android.content.Context,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.preferences.GpodnetPreferences: void enqueueEpisodeAction(de.danoeh.antennapod.core.gpoddernet.model.GpodnetEpisodeAction)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncActionsIntent(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.feed.FeedMedia: void postPlaybackTasks(android.content.Context,boolean)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.feed.FeedMedia: void postPlaybackTasks(android.content.Context,boolean)&gt;,&lt;de.danoeh.antennapod.core.preferences.GpodnetPreferences: void enqueueEpisodeAction(de.danoeh.antennapod.core.gpoddernet.model.GpodnetEpisodeAction)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncActionsIntent(android.content.Context)&gt;,void sendSyncActionsIntent(android.content.Context), &lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
      <source name="de.danoeh.antennapod.core.feed.FeedMedia"/>  
      <destinition name="de.danoeh.antennapod.core.service.GpodnetSyncService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.feed.FeedMedia: void postPlaybackTasks(android.content.Context,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.preferences.GpodnetPreferences: void enqueueEpisodeAction(de.danoeh.antennapod.core.gpoddernet.model.GpodnetEpisodeAction)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncActionsIntent(android.content.Context)&gt;"/>  
        <node method="GpodnetSyncService sendSyncActionsIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="GpodnetSyncService sendSyncActionsIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lde/danoeh/antennapod/core/service/GpodnetSyncService;&quot;)"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.feed.FeedMedia"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.feed.FeedMedia: void onPlaybackCompleted(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.feed.FeedMedia: void onPlaybackCompleted(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.feed.FeedMedia: void postPlaybackTasks(android.content.Context,boolean)&gt;,&lt;de.danoeh.antennapod.core.preferences.GpodnetPreferences: void enqueueEpisodeAction(de.danoeh.antennapod.core.gpoddernet.model.GpodnetEpisodeAction)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncActionsIntent(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;,void enqueueWork(android.content.Context,android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.feed.FeedMedia"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.feed.FeedMedia: void onPlaybackCompleted(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.feed.FeedMedia: void postPlaybackTasks(android.content.Context,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.preferences.GpodnetPreferences: void enqueueEpisodeAction(de.danoeh.antennapod.core.gpoddernet.model.GpodnetEpisodeAction)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncActionsIntent(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.feed.FeedMedia: void onPlaybackCompleted(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.feed.FeedMedia: void onPlaybackCompleted(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.feed.FeedMedia: void postPlaybackTasks(android.content.Context,boolean)&gt;,&lt;de.danoeh.antennapod.core.preferences.GpodnetPreferences: void enqueueEpisodeAction(de.danoeh.antennapod.core.gpoddernet.model.GpodnetEpisodeAction)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncActionsIntent(android.content.Context)&gt;,void sendSyncActionsIntent(android.content.Context), &lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
      <source name="de.danoeh.antennapod.core.feed.FeedMedia"/>  
      <destinition name="de.danoeh.antennapod.core.service.GpodnetSyncService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.feed.FeedMedia: void onPlaybackCompleted(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.feed.FeedMedia: void postPlaybackTasks(android.content.Context,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.preferences.GpodnetPreferences: void enqueueEpisodeAction(de.danoeh.antennapod.core.gpoddernet.model.GpodnetEpisodeAction)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncActionsIntent(android.content.Context)&gt;"/>  
        <node method="GpodnetSyncService sendSyncActionsIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="GpodnetSyncService sendSyncActionsIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lde/danoeh/antennapod/core/service/GpodnetSyncService;&quot;)"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.CastplayerActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.CastplayerActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.CastplayerActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle)"/>  
      <source name="de.danoeh.antennapod.activity.CastplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.CastplayerActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="CastplayerActivity onCreate" type="ReceiveIntentFromRetValue" unit="$r2 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.content.Intent getPlayerActivityIntent(android.content.Context)&gt;(r0)"/>  
        <node method="CastplayerActivity onCreate" type="PassOutIntent" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.activity.CastplayerActivity: void startActivity(android.content.Intent)&gt;($r2)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.CastplayerActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.CastplayerActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle)"/>  
      <source name="de.danoeh.antennapod.activity.CastplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.CastplayerActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="CastplayerActivity onCreate" type="ReceiveIntentFromRetValue" unit="$r2 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.content.Intent getPlayerActivityIntent(android.content.Context)&gt;(r0)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.shredzone.flattr4j.oauth.AndroidAuthenticator"> 
    <intentSummary> 
      <method value="&lt;org.shredzone.flattr4j.oauth.AndroidAuthenticator: android.content.Intent createAuthenticateIntent()&gt;"/>  
      <methodtrace value="&lt;org.shredzone.flattr4j.oauth.AndroidAuthenticator: android.content.Intent createAuthenticateIntent()&gt;,android.content.Intent createAuthenticateIntent()"/>  
      <source name="org.shredzone.flattr4j.oauth.AndroidAuthenticator"/>  
      <sender action="android.intent.action.VIEW" data="new java.lang.String?response_type=&amp;client_id=&amp;redirect_uri=&amp;scope="/>  
      <nodes> 
        <node method="&lt;org.shredzone.flattr4j.oauth.AndroidAuthenticator: android.content.Intent createAuthenticateIntent()&gt;"/>  
        <node method="AndroidAuthenticator createAuthenticateIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="AndroidAuthenticator createAuthenticateIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.VIEW&quot;)"/>  
        <node method="AndroidAuthenticator createAuthenticateIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r3)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.antennapod.audio.ServiceBackedAudioPlayer"> 
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void pause()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void pause()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void pause()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void pause()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void pause()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void pause()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void pause()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void pause()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void pause()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void pause()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void pause()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void pause()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="PassOutIntent" unit="$z0 = virtualinvoke $r4.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r1, $r2, 1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void pause()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void pause()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void pause()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.antennapod.audio.ServiceBackedAudioPlayer"> 
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void seekTo(int)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void seekTo(int)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void seekTo(int)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void seekTo(int)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void seekTo(int)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void seekTo(int)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void seekTo(int)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void seekTo(int)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void seekTo(int)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void seekTo(int)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void seekTo(int)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void seekTo(int)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="PassOutIntent" unit="$z0 = virtualinvoke $r4.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r1, $r2, 1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void seekTo(int)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void seekTo(int)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void seekTo(int)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.service.playback.PlaybackService"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$13: void sendNotificationBroadcast(int,int)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$13: void sendNotificationBroadcast(int,int)&gt;,&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void access$200(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;,&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendNotificationBroadcast(int,int)&gt;,void sendNotificationBroadcast(int,int)"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="interICC_action.de.danoeh.antennapod.core.service.playerNotification, "/>  
      <sender action="action.de.danoeh.antennapod.core.service.playerNotification"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$13: void sendNotificationBroadcast(int,int)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void access$200(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendNotificationBroadcast(int,int)&gt;"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;action.de.danoeh.antennapod.core.service.playerNotification&quot;)"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="PassOutIntent" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendBroadcast(android.content.Intent)&gt;($r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.MediaplayerActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$3: void onStartTrackingTouch(android.widget.SeekBar)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$3: void onStartTrackingTouch(android.widget.SeekBar)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;,void showGetPluginDialog(android.content.Context,boolean)"/>  
      <source name="de.danoeh.antennapod.activity.MediaplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$3: void onStartTrackingTouch(android.widget.SeekBar)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;"/>  
        <node method="VariableSpeedDialog showGetPluginDialog" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="VariableSpeedDialog showGetPluginDialog" type="CreateMethod" unit="$r2 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$3: void onStartTrackingTouch(android.widget.SeekBar)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$3: void onStartTrackingTouch(android.widget.SeekBar)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog$$Lambda$1: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)&gt;,void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)"/>  
      <source name="de.danoeh.antennapod.activity.MediaplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$3: void onStartTrackingTouch(android.widget.SeekBar)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog$$Lambda$1: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)&gt;"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$3: void onStartTrackingTouch(android.widget.SeekBar)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$3: void onStartTrackingTouch(android.widget.SeekBar)&gt;,&lt;de.danoeh.antennapod.core.util.playback.PlaybackController: boolean canSetPlaybackSpeed()&gt;,boolean canSetPlaybackSpeed(), &lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.activity.MediaplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$3: void onStartTrackingTouch(android.widget.SeekBar)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.PlaybackController: boolean canSetPlaybackSpeed()&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$3: void onStartTrackingTouch(android.widget.SeekBar)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$3: void onStartTrackingTouch(android.widget.SeekBar)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog$$Lambda$1: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)&gt;,void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)"/>  
      <source name="de.danoeh.antennapod.activity.MediaplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$3: void onStartTrackingTouch(android.widget.SeekBar)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog$$Lambda$1: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)&gt;"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="CreateMethod" unit="$r2 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$3: void onStartTrackingTouch(android.widget.SeekBar)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$3: void onStartTrackingTouch(android.widget.SeekBar)&gt;,&lt;de.danoeh.antennapod.core.util.playback.PlaybackController: boolean canSetPlaybackSpeed()&gt;,&lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;,boolean isIntentAvailable(android.content.Context,java.lang.String)"/>  
      <source name="de.danoeh.antennapod.activity.MediaplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$3: void onStartTrackingTouch(android.widget.SeekBar)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.PlaybackController: boolean canSetPlaybackSpeed()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.OnlineFeedViewActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.OnlineFeedViewActivity$$Lambda$9: void onClick(android.content.DialogInterface,int)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.OnlineFeedViewActivity$$Lambda$9: void onClick(android.content.DialogInterface,int)&gt;,void onClick(android.content.DialogInterface,int)"/>  
      <source name="de.danoeh.antennapod.activity.OnlineFeedViewActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.OnlineFeedViewActivity$$Lambda$9: void onClick(android.content.DialogInterface,int)&gt;"/>  
        <node method="OnlineFeedViewActivity$$Lambda$9 onClick" type="CreateMethod" unit="$r8 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.dialog.VariableSpeedDialog"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void &lt;clinit&gt;()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void &lt;clinit&gt;()&gt;,void &lt;clinit&gt;()"/>  
      <source name="de.danoeh.antennapod.dialog.VariableSpeedDialog"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void &lt;clinit&gt;()&gt;"/>  
        <node method="VariableSpeedDialog &lt;clinit&gt;" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="VariableSpeedDialog &lt;clinit&gt;" type="CreateMethod" unit="$r2 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void &lt;clinit&gt;()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void &lt;clinit&gt;()&gt;,void &lt;clinit&gt;()"/>  
      <source name="de.danoeh.antennapod.dialog.VariableSpeedDialog"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void &lt;clinit&gt;()&gt;"/>  
        <node method="VariableSpeedDialog &lt;clinit&gt;" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="VariableSpeedDialog &lt;clinit&gt;" type="CreateMethod" unit="$r2 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.storage.DownloadRequester"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;,boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)"/>  
      <source name="de.danoeh.antennapod.core.storage.DownloadRequester"/>  
      <destinition name="de.danoeh.antennapod.core.service.download.DownloadService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;"/>  
        <node method="DownloadRequester download" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="DownloadRequester download" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/download/DownloadService;&quot;)"/>  
        <node method="DownloadRequester download" type="PassOutIntent" unit="staticinvoke &lt;android.support.v4.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)&gt;($r2, $r5)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.service.GpodnetSyncService"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void processSubscriptionChanges(java.util.List,java.util.Collection,java.util.Collection,de.danoeh.antennapod.core.gpoddernet.model.GpodnetSubscriptionChange)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void processSubscriptionChanges(java.util.List,java.util.Collection,java.util.Collection,de.danoeh.antennapod.core.gpoddernet.model.GpodnetSubscriptionChange)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;,boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)"/>  
      <source name="de.danoeh.antennapod.core.service.GpodnetSyncService"/>  
      <destinition name="de.danoeh.antennapod.core.service.download.DownloadService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void processSubscriptionChanges(java.util.List,java.util.Collection,java.util.Collection,de.danoeh.antennapod.core.gpoddernet.model.GpodnetSubscriptionChange)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;"/>  
        <node method="DownloadRequester download" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="DownloadRequester download" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/download/DownloadService;&quot;)"/>  
        <node method="DownloadRequester download" type="PassOutIntent" unit="staticinvoke &lt;android.support.v4.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)&gt;($r2, $r5)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.antennapod.audio.ServiceBackedAudioPlayer"> 
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setPlaybackSpeed(float)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setPlaybackSpeed(float)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setPlaybackSpeed(float)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setPlaybackSpeed(float)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setPlaybackSpeed(float)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setPlaybackSpeed(float)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setPlaybackSpeed(float)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setPlaybackSpeed(float)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setPlaybackSpeed(float)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setPlaybackSpeed(float)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setPlaybackSpeed(float)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setPlaybackSpeed(float)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="PassOutIntent" unit="$z0 = virtualinvoke $r4.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r1, $r2, 1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setPlaybackSpeed(float)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setPlaybackSpeed(float)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setPlaybackSpeed(float)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.fragment.ItemDescriptionFragment"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemDescriptionFragment: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemDescriptionFragment: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)&gt;,void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)"/>  
      <source name="de.danoeh.antennapod.fragment.ItemDescriptionFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemDescriptionFragment: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)&gt;"/>  
        <node method="ItemDescriptionFragment onCreateContextMenu" type="CreateMethod" unit="$r6 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.service.FeedUpdateJobService"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.FeedUpdateJobService: boolean onStartJob(android.app.job.JobParameters)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.FeedUpdateJobService: boolean onStartJob(android.app.job.JobParameters)&gt;,&lt;de.danoeh.antennapod.core.ClientConfig: void initialize(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.UpdateManager: void init(android.content.Context)&gt;,void init(android.content.Context), &lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.FeedUpdateJobService"/>  
      <destinition name="interICC_new android.content.Context, "/>  
      <sender action="new android.content.Context"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.FeedUpdateJobService: boolean onStartJob(android.app.job.JobParameters)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.ClientConfig: void initialize(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.UpdateManager: void init(android.content.Context)&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.FeedUpdateJobService: boolean onStartJob(android.app.job.JobParameters)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.FeedUpdateJobService: boolean onStartJob(android.app.job.JobParameters)&gt;,&lt;de.danoeh.antennapod.core.ClientConfig: void initialize(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.UpdateManager: void init(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;,boolean isIntentAvailable(android.content.Context,java.lang.String)"/>  
      <source name="de.danoeh.antennapod.core.service.FeedUpdateJobService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.FeedUpdateJobService: boolean onStartJob(android.app.job.JobParameters)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.ClientConfig: void initialize(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.UpdateManager: void init(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.StorageErrorActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.StorageErrorActivity: void onActivityResult(int,int,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.StorageErrorActivity: void onActivityResult(int,int,android.content.Intent)&gt;,&lt;de.danoeh.antennapod.activity.StorageErrorActivity: void leaveErrorState()&gt;,void leaveErrorState()"/>  
      <source name="de.danoeh.antennapod.activity.StorageErrorActivity"/>  
      <destinition name="de.danoeh.antennapod.activity.MainActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.StorageErrorActivity: void onActivityResult(int,int,android.content.Intent)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.StorageErrorActivity: void leaveErrorState()&gt;"/>  
        <node method="StorageErrorActivity leaveErrorState" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="StorageErrorActivity leaveErrorState" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lde/danoeh/antennapod/activity/MainActivity;&quot;)"/>  
        <node method="StorageErrorActivity leaveErrorState" type="PassOutIntent" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.activity.StorageErrorActivity: void startActivity(android.content.Intent)&gt;($r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.dialog.VariableSpeedDialog"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showDialog(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showDialog(android.content.Context)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;,void showGetPluginDialog(android.content.Context,boolean)"/>  
      <source name="de.danoeh.antennapod.dialog.VariableSpeedDialog"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showDialog(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;"/>  
        <node method="VariableSpeedDialog showGetPluginDialog" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="VariableSpeedDialog showGetPluginDialog" type="CreateMethod" unit="$r2 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showDialog(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showDialog(android.content.Context)&gt;,void showDialog(android.content.Context), &lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.dialog.VariableSpeedDialog"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showDialog(android.content.Context)&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showDialog(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showDialog(android.content.Context)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog$$Lambda$1: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)&gt;,void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)"/>  
      <source name="de.danoeh.antennapod.dialog.VariableSpeedDialog"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showDialog(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog$$Lambda$1: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)&gt;"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showDialog(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showDialog(android.content.Context)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog$$Lambda$1: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)&gt;,void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)"/>  
      <source name="de.danoeh.antennapod.dialog.VariableSpeedDialog"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showDialog(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog$$Lambda$1: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)&gt;"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="CreateMethod" unit="$r2 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showDialog(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showDialog(android.content.Context)&gt;,void showDialog(android.content.Context), &lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.dialog.VariableSpeedDialog"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showDialog(android.content.Context)&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showDialog(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showDialog(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;,boolean isIntentAvailable(android.content.Context,java.lang.String)"/>  
      <source name="de.danoeh.antennapod.dialog.VariableSpeedDialog"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showDialog(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.preferences.PreferenceController"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupPlaybackScreen$22$PreferenceController$7ff604e7(android.app.Activity)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupPlaybackScreen$22$PreferenceController$7ff604e7(android.app.Activity)&gt;,boolean lambda$setupPlaybackScreen$22$PreferenceController$7ff604e7(android.app.Activity), &lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showDialog(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.preferences.PreferenceController"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupPlaybackScreen$22$PreferenceController$7ff604e7(android.app.Activity)&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupPlaybackScreen$22$PreferenceController$7ff604e7(android.app.Activity)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupPlaybackScreen$22$PreferenceController$7ff604e7(android.app.Activity)&gt;,&lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled(android.content.Context)&gt;,boolean isPrestoLibraryInstalled(android.content.Context), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.preferences.PreferenceController"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupPlaybackScreen$22$PreferenceController$7ff604e7(android.app.Activity)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled(android.content.Context)&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupPlaybackScreen$22$PreferenceController$7ff604e7(android.app.Activity)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupPlaybackScreen$22$PreferenceController$7ff604e7(android.app.Activity)&gt;,&lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;,boolean isIntentAvailable(android.content.Context,java.lang.String)"/>  
      <source name="de.danoeh.antennapod.preferences.PreferenceController"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupPlaybackScreen$22$PreferenceController$7ff604e7(android.app.Activity)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupPlaybackScreen$22$PreferenceController$7ff604e7(android.app.Activity)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupPlaybackScreen$22$PreferenceController$7ff604e7(android.app.Activity)&gt;,boolean lambda$setupPlaybackScreen$22$PreferenceController$7ff604e7(android.app.Activity), &lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showDialog(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.preferences.PreferenceController"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupPlaybackScreen$22$PreferenceController$7ff604e7(android.app.Activity)&gt;"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.preferences.PreferenceController"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$21: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$21: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showDialog(android.content.Context)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;,void showGetPluginDialog(android.content.Context,boolean)"/>  
      <source name="de.danoeh.antennapod.preferences.PreferenceController"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$21: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showDialog(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;"/>  
        <node method="VariableSpeedDialog showGetPluginDialog" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="VariableSpeedDialog showGetPluginDialog" type="CreateMethod" unit="$r2 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$21: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$21: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showDialog(android.content.Context)&gt;,void showDialog(android.content.Context), &lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.preferences.PreferenceController"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$21: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showDialog(android.content.Context)&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$21: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$21: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showDialog(android.content.Context)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog$$Lambda$1: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)&gt;,void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)"/>  
      <source name="de.danoeh.antennapod.preferences.PreferenceController"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$21: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showDialog(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog$$Lambda$1: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)&gt;"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$21: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$21: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;,boolean onPreferenceClick(android.support.v7.preference.Preference), &lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupPlaybackScreen$22$PreferenceController$7ff604e7(android.app.Activity)&gt;"/>  
      <source name="de.danoeh.antennapod.preferences.PreferenceController"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$21: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="PreferenceController$$Lambda$21 onPreferenceClick" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/>  
        <node method="PreferenceController$$Lambda$21 onPreferenceClick" type="CreateMethod" unit="$r2 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$21: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$21: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showDialog(android.content.Context)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog$$Lambda$1: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)&gt;,void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)"/>  
      <source name="de.danoeh.antennapod.preferences.PreferenceController"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$21: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showDialog(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog$$Lambda$1: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)&gt;"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="CreateMethod" unit="$r2 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$21: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$21: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;,&lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled(android.content.Context)&gt;,boolean isPrestoLibraryInstalled(android.content.Context), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.preferences.PreferenceController"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$21: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled(android.content.Context)&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$21: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$21: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showDialog(android.content.Context)&gt;,void showDialog(android.content.Context), &lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.preferences.PreferenceController"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$21: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showDialog(android.content.Context)&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$21: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$21: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showDialog(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;,boolean isIntentAvailable(android.content.Context,java.lang.String)"/>  
      <source name="de.danoeh.antennapod.preferences.PreferenceController"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$21: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showDialog(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$21: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$21: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;,boolean onPreferenceClick(android.support.v7.preference.Preference), &lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupPlaybackScreen$22$PreferenceController$7ff604e7(android.app.Activity)&gt;"/>  
      <source name="de.danoeh.antennapod.preferences.PreferenceController"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$21: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="PreferenceController$$Lambda$21 onPreferenceClick" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/>  
        <node method="PreferenceController$$Lambda$21 onPreferenceClick" type="CreateMethod" unit="$r2 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.antennapod.audio.ServiceBackedAudioPlayer"> 
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void stop()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void stop()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void stop()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void stop()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void stop()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void stop()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void stop()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void stop()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void stop()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void stop()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void stop()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void stop()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="PassOutIntent" unit="$z0 = virtualinvoke $r4.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r1, $r2, 1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void stop()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void stop()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void stop()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.antennapod.audio.ServiceBackedAudioPlayer"> 
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean canSetPitch()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean canSetPitch()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean canSetPitch()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean canSetPitch()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean canSetPitch()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean canSetPitch()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean canSetPitch()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean canSetPitch()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean canSetPitch()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean canSetPitch()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean canSetPitch()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean canSetPitch()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="PassOutIntent" unit="$z0 = virtualinvoke $r4.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r1, $r2, 1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean canSetPitch()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean canSetPitch()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean canSetPitch()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.CastplayerActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.CastplayerActivity: void setupGUI()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.CastplayerActivity: void setupGUI()&gt;,&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: void setupGUI()&gt;,&lt;de.danoeh.antennapod.activity.MediaplayerActivity: void setupGUI()&gt;,void setupGUI()"/>  
      <source name="de.danoeh.antennapod.activity.CastplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.CastplayerActivity: void setupGUI()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: void setupGUI()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity: void setupGUI()&gt;"/>  
        <node method="MediaplayerActivity setupGUI" type="setContentView" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MediaplayerActivity: void setContentView(int)&gt;($i0)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.antennapod.audio.ServiceBackedAudioPlayer"> 
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: float getCurrentSpeedMultiplier()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: float getCurrentSpeedMultiplier()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: float getCurrentSpeedMultiplier()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: float getCurrentSpeedMultiplier()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: float getCurrentSpeedMultiplier()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: float getCurrentSpeedMultiplier()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: float getCurrentSpeedMultiplier()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: float getCurrentSpeedMultiplier()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: float getCurrentSpeedMultiplier()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: float getCurrentSpeedMultiplier()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: float getCurrentSpeedMultiplier()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: float getCurrentSpeedMultiplier()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="PassOutIntent" unit="$z0 = virtualinvoke $r4.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r1, $r2, 1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: float getCurrentSpeedMultiplier()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: float getCurrentSpeedMultiplier()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: float getCurrentSpeedMultiplier()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.service.playback.LocalPSMP"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,void &lt;init&gt;(android.content.Context,byte), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;,void &lt;init&gt;(android.content.Context), &lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;,void setupMpi(android.content.Context), &lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer setupMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer setupMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/>  
        <node method="MediaPlayer setupMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;,void &lt;init&gt;(android.content.Context), &lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/>  
        <node method="MediaPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;,android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;,android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean), &lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled()&gt;,boolean isPrestoLibraryInstalled(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean), &lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <destinition name="java.lang.String"/>  
      <sender action="new android.content.Context"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="LocalPSMP playMediaObject" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="LocalPSMP playMediaObject" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/>  
        <node method="LocalPSMP playMediaObject" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;,void setupMpi(android.content.Context), &lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer setupMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer setupMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer setupMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,void &lt;init&gt;(android.content.Context,byte), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;,android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,void &lt;init&gt;(android.content.Context,byte), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean), &lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <destinition name="interICC_new android.content.Context, "/>  
      <sender action="new android.content.Context"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="LocalPSMP playMediaObject" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="LocalPSMP playMediaObject" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="LocalPSMP playMediaObject" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="PassOutIntent" unit="$z0 = virtualinvoke $r4.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r1, $r2, 1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;,void setupMpi(android.content.Context), &lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;,void &lt;init&gt;(android.content.Context), &lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$12: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.PreferenceActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.PreferenceActivity: void onActivityResult(int,int,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.PreferenceActivity: void onActivityResult(int,int,android.content.Intent)&gt;,void onActivityResult(int,int,android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.activity.PreferenceActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.PreferenceActivity: void onActivityResult(int,int,android.content.Intent)&gt;"/>  
        <node method="PreferenceActivity onActivityResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.antennapod.audio.ServiceBackedAudioPlayer"> 
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void reset()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void reset()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void reset()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void reset()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void reset()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void reset()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void reset()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void reset()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void reset()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void reset()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void reset()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void reset()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="PassOutIntent" unit="$z0 = virtualinvoke $r4.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r1, $r2, 1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void reset()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void reset()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void reset()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.feed.FeedMedia"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.feed.FeedMedia: void onPlaybackPause(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.feed.FeedMedia: void onPlaybackPause(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.feed.FeedMedia: void postPlaybackTasks(android.content.Context,boolean)&gt;,&lt;de.danoeh.antennapod.core.preferences.GpodnetPreferences: void enqueueEpisodeAction(de.danoeh.antennapod.core.gpoddernet.model.GpodnetEpisodeAction)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncActionsIntent(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;,void enqueueWork(android.content.Context,android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.feed.FeedMedia"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.feed.FeedMedia: void onPlaybackPause(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.feed.FeedMedia: void postPlaybackTasks(android.content.Context,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.preferences.GpodnetPreferences: void enqueueEpisodeAction(de.danoeh.antennapod.core.gpoddernet.model.GpodnetEpisodeAction)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncActionsIntent(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.feed.FeedMedia: void onPlaybackPause(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.feed.FeedMedia: void onPlaybackPause(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.feed.FeedMedia: void postPlaybackTasks(android.content.Context,boolean)&gt;,&lt;de.danoeh.antennapod.core.preferences.GpodnetPreferences: void enqueueEpisodeAction(de.danoeh.antennapod.core.gpoddernet.model.GpodnetEpisodeAction)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncActionsIntent(android.content.Context)&gt;,void sendSyncActionsIntent(android.content.Context), &lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
      <source name="de.danoeh.antennapod.core.feed.FeedMedia"/>  
      <destinition name="de.danoeh.antennapod.core.service.GpodnetSyncService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.feed.FeedMedia: void onPlaybackPause(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.feed.FeedMedia: void postPlaybackTasks(android.content.Context,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.preferences.GpodnetPreferences: void enqueueEpisodeAction(de.danoeh.antennapod.core.gpoddernet.model.GpodnetEpisodeAction)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncActionsIntent(android.content.Context)&gt;"/>  
        <node method="GpodnetSyncService sendSyncActionsIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="GpodnetSyncService sendSyncActionsIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lde/danoeh/antennapod/core/service/GpodnetSyncService;&quot;)"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.antennapod.audio.ServiceBackedAudioPlayer"> 
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void finalize()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void finalize()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void release()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void finalize()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void release()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void finalize()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void finalize()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void release()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void finalize()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void release()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void finalize()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void finalize()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void release()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void finalize()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void release()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void finalize()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void finalize()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void release()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void finalize()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void release()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="PassOutIntent" unit="$z0 = virtualinvoke $r4.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r1, $r2, 1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void finalize()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void finalize()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void release()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void finalize()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void release()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.fragment.ExternalPlayerFragment"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ExternalPlayerFragment$1: void onPlaybackEnd()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ExternalPlayerFragment$1: void onPlaybackEnd()&gt;,&lt;de.danoeh.antennapod.fragment.ExternalPlayerFragment: void access$300(de.danoeh.antennapod.fragment.ExternalPlayerFragment)&gt;,&lt;de.danoeh.antennapod.fragment.ExternalPlayerFragment$$Lambda$2: void onClick(android.view.View)&gt;,&lt;de.danoeh.antennapod.core.util.playback.PlaybackController: void playPause()&gt;,&lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: void start()&gt;,void start(), &lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: android.content.Intent getIntent()&gt;"/>  
      <source name="de.danoeh.antennapod.fragment.ExternalPlayerFragment"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ExternalPlayerFragment$1: void onPlaybackEnd()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ExternalPlayerFragment: void access$300(de.danoeh.antennapod.fragment.ExternalPlayerFragment)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ExternalPlayerFragment$$Lambda$2: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.PlaybackController: void playPause()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: void start()&gt;"/>  
        <node method="PlaybackServiceStarter start" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: android.content.Intent getIntent()&gt;()"/>  
        <node method="PlaybackServiceStarter getIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="PlaybackServiceStarter getIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/>  
        <node method="PlaybackServiceStarter start" type="PassOutIntent" unit="staticinvoke &lt;android.support.v4.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)&gt;($r2, $r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.MainActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MainActivity: void handleNavIntent()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MainActivity: void handleNavIntent()&gt;,void handleNavIntent()"/>  
      <source name="de.danoeh.antennapod.activity.MainActivity"/>  
      <destinition name="de.danoeh.antennapod.activity.MainActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity: void handleNavIntent()&gt;"/>  
        <node method="MainActivity handleNavIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="MainActivity handleNavIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lde/danoeh/antennapod/activity/MainActivity;&quot;)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.MainActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MainActivity$$Lambda$6: void call(java.lang.Object)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MainActivity$$Lambda$6: void call(java.lang.Object)&gt;,&lt;de.danoeh.antennapod.activity.MainActivity: void handleNavIntent()&gt;,void handleNavIntent()"/>  
      <source name="de.danoeh.antennapod.activity.MainActivity"/>  
      <destinition name="de.danoeh.antennapod.activity.MainActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity$$Lambda$6: void call(java.lang.Object)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity: void handleNavIntent()&gt;"/>  
        <node method="MainActivity handleNavIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="MainActivity handleNavIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lde/danoeh/antennapod/activity/MainActivity;&quot;)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.gpoddernet.GpodnetAuthenticationActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.gpoddernet.GpodnetAuthenticationActivity$$Lambda$2: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.gpoddernet.GpodnetAuthenticationActivity$$Lambda$2: void onClick(android.view.View)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncIntent(android.content.Context)&gt;,void sendSyncIntent(android.content.Context), &lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
      <source name="de.danoeh.antennapod.activity.gpoddernet.GpodnetAuthenticationActivity"/>  
      <destinition name="de.danoeh.antennapod.core.service.GpodnetSyncService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.gpoddernet.GpodnetAuthenticationActivity$$Lambda$2: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncIntent(android.content.Context)&gt;"/>  
        <node method="GpodnetSyncService sendSyncIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="GpodnetSyncService sendSyncIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lde/danoeh/antennapod/core/service/GpodnetSyncService;&quot;)"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.gpoddernet.GpodnetAuthenticationActivity$$Lambda$2: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.gpoddernet.GpodnetAuthenticationActivity$$Lambda$2: void onClick(android.view.View)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncIntent(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;,void enqueueWork(android.content.Context,android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.activity.gpoddernet.GpodnetAuthenticationActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.gpoddernet.GpodnetAuthenticationActivity$$Lambda$2: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncIntent(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.antennapod.audio.ServiceBackedAudioPlayer"> 
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setDataSource(java.lang.String)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setDataSource(java.lang.String)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setDataSource(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setDataSource(java.lang.String)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setDataSource(java.lang.String)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setDataSource(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setDataSource(java.lang.String)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setDataSource(java.lang.String)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setDataSource(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setDataSource(java.lang.String)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setDataSource(java.lang.String)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setDataSource(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="PassOutIntent" unit="$z0 = virtualinvoke $r4.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r1, $r2, 1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setDataSource(java.lang.String)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setDataSource(java.lang.String)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setDataSource(java.lang.String)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.fragment.ItemlistFragment"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onStart()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onStart()&gt;,&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onFragmentLoaded()&gt;,&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback: void onActionButtonPressed(de.danoeh.antennapod.core.feed.FeedItem,de.danoeh.antennapod.core.util.LongList)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void cancelDownload(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void cancelDownload(android.content.Context,java.lang.String)&gt;,void cancelDownload(android.content.Context,java.lang.String)"/>  
      <source name="de.danoeh.antennapod.fragment.ItemlistFragment"/>  
      <destinition name="interICC_action.de.danoeh.antennapod.core.service.cancelDownload, "/>  
      <sender action="action.de.danoeh.antennapod.core.service.cancelDownload"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onStart()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onFragmentLoaded()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback: void onActionButtonPressed(de.danoeh.antennapod.core.feed.FeedItem,de.danoeh.antennapod.core.util.LongList)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void cancelDownload(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void cancelDownload(android.content.Context,java.lang.String)&gt;"/>  
        <node method="DownloadRequester cancelDownload" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="DownloadRequester cancelDownload" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;action.de.danoeh.antennapod.core.service.cancelDownload&quot;)"/>  
        <node method="DownloadRequester cancelDownload" type="PassOutIntent" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onStart()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onStart()&gt;,&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onFragmentLoaded()&gt;,&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback: void onActionButtonPressed(de.danoeh.antennapod.core.feed.FeedItem,de.danoeh.antennapod.core.util.LongList)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void downloadFeedItems(android.content.Context,de.danoeh.antennapod.core.feed.FeedItem[])&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void downloadFeedItems(boolean,android.content.Context,de.danoeh.antennapod.core.feed.FeedItem[])&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadMedia(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;,boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)"/>  
      <source name="de.danoeh.antennapod.fragment.ItemlistFragment"/>  
      <destinition name="de.danoeh.antennapod.core.service.download.DownloadService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onStart()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onFragmentLoaded()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback: void onActionButtonPressed(de.danoeh.antennapod.core.feed.FeedItem,de.danoeh.antennapod.core.util.LongList)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void downloadFeedItems(android.content.Context,de.danoeh.antennapod.core.feed.FeedItem[])&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void downloadFeedItems(boolean,android.content.Context,de.danoeh.antennapod.core.feed.FeedItem[])&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadMedia(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;"/>  
        <node method="DownloadRequester download" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="DownloadRequester download" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/download/DownloadService;&quot;)"/>  
        <node method="DownloadRequester download" type="PassOutIntent" unit="staticinvoke &lt;android.support.v4.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)&gt;($r2, $r5)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onStart()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onStart()&gt;,&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onFragmentLoaded()&gt;,&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback: void onActionButtonPressed(de.danoeh.antennapod.core.feed.FeedItem,de.danoeh.antennapod.core.util.LongList)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void playMedia$4e7c0cea(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia,boolean,boolean)&gt;,void playMedia$4e7c0cea(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia,boolean,boolean)"/>  
      <source name="de.danoeh.antennapod.fragment.ItemlistFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onStart()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onFragmentLoaded()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback: void onActionButtonPressed(de.danoeh.antennapod.core.feed.FeedItem,de.danoeh.antennapod.core.util.LongList)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void playMedia$4e7c0cea(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia,boolean,boolean)&gt;"/>  
        <node method="DBTasks playMedia$4e7c0cea" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.content.Intent getPlayerActivityIntent(android.content.Context,de.danoeh.antennapod.core.util.playback.Playable)&gt;($r0, $r1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onStart()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onStart()&gt;,&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onFragmentLoaded()&gt;,&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback: void onActionButtonPressed(de.danoeh.antennapod.core.feed.FeedItem,de.danoeh.antennapod.core.util.LongList)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void playMedia$4e7c0cea(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia,boolean,boolean)&gt;,void playMedia$4e7c0cea(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia,boolean,boolean)"/>  
      <source name="de.danoeh.antennapod.fragment.ItemlistFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onStart()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onFragmentLoaded()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback: void onActionButtonPressed(de.danoeh.antennapod.core.feed.FeedItem,de.danoeh.antennapod.core.util.LongList)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void playMedia$4e7c0cea(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia,boolean,boolean)&gt;"/>  
        <node method="DBTasks playMedia$4e7c0cea" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.content.Intent getPlayerActivityIntent(android.content.Context,de.danoeh.antennapod.core.util.playback.Playable)&gt;($r0, $r1)"/>  
        <node method="DBTasks playMedia$4e7c0cea" type="PassOutIntent" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r6)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onStart()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onStart()&gt;,&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onFragmentLoaded()&gt;,&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback: void onActionButtonPressed(de.danoeh.antennapod.core.feed.FeedItem,de.danoeh.antennapod.core.util.LongList)&gt;,&lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: void start()&gt;,void start(), &lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: android.content.Intent getIntent()&gt;"/>  
      <source name="de.danoeh.antennapod.fragment.ItemlistFragment"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onStart()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onFragmentLoaded()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback: void onActionButtonPressed(de.danoeh.antennapod.core.feed.FeedItem,de.danoeh.antennapod.core.util.LongList)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: void start()&gt;"/>  
        <node method="PlaybackServiceStarter start" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: android.content.Intent getIntent()&gt;()"/>  
        <node method="PlaybackServiceStarter getIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="PlaybackServiceStarter getIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/>  
        <node method="PlaybackServiceStarter start" type="PassOutIntent" unit="staticinvoke &lt;android.support.v4.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)&gt;($r2, $r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.OpmlImportFromPathActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.OpmlImportFromPathActivity: void onActivityResult(int,int,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.OpmlImportFromPathActivity: void onActivityResult(int,int,android.content.Intent)&gt;,&lt;de.danoeh.antennapod.activity.OpmlImportBaseActivity: void onActivityResult(int,int,android.content.Intent)&gt;,&lt;de.danoeh.antennapod.activity.OpmlImportBaseActivity$1: void onPostExecute(java.lang.Object)&gt;,&lt;de.danoeh.antennapod.activity.OpmlImportBaseActivity$1: void onPostExecute(java.lang.Void)&gt;,void onPostExecute(java.lang.Void)"/>  
      <source name="de.danoeh.antennapod.activity.OpmlImportFromPathActivity"/>  
      <destinition name="de.danoeh.antennapod.activity.MainActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.OpmlImportFromPathActivity: void onActivityResult(int,int,android.content.Intent)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.OpmlImportBaseActivity: void onActivityResult(int,int,android.content.Intent)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.OpmlImportBaseActivity$1: void onPostExecute(java.lang.Object)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.OpmlImportBaseActivity$1: void onPostExecute(java.lang.Void)&gt;"/>  
        <node method="OpmlImportBaseActivity$1 onPostExecute" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="OpmlImportBaseActivity$1 onPostExecute" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Lde/danoeh/antennapod/activity/MainActivity;&quot;)"/>  
        <node method="OpmlImportBaseActivity$1 onPostExecute" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(335544320)"/>  
        <node method="OpmlImportBaseActivity$1 onPostExecute" type="PassOutIntent" unit="virtualinvoke $r3.&lt;de.danoeh.antennapod.activity.OpmlImportBaseActivity: void startActivity(android.content.Intent)&gt;($r2)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.OpmlImportFromPathActivity: void onActivityResult(int,int,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.OpmlImportFromPathActivity: void onActivityResult(int,int,android.content.Intent)&gt;,void onActivityResult(int,int,android.content.Intent), &lt;de.danoeh.antennapod.activity.OpmlImportBaseActivity: void onActivityResult(int,int,android.content.Intent)&gt;"/>  
      <source name="de.danoeh.antennapod.activity.OpmlImportFromPathActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.OpmlImportFromPathActivity: void onActivityResult(int,int,android.content.Intent)&gt;"/>  
        <node method="OpmlImportFromPathActivity onActivityResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.asynctask.OpmlFeedQueuer"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.asynctask.OpmlFeedQueuer: java.lang.Void doInBackground$10299ca()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.asynctask.OpmlFeedQueuer: java.lang.Void doInBackground$10299ca()&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;,boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)"/>  
      <source name="de.danoeh.antennapod.asynctask.OpmlFeedQueuer"/>  
      <destinition name="de.danoeh.antennapod.core.service.download.DownloadService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.asynctask.OpmlFeedQueuer: java.lang.Void doInBackground$10299ca()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;"/>  
        <node method="DownloadRequester download" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="DownloadRequester download" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/download/DownloadService;&quot;)"/>  
        <node method="DownloadRequester download" type="PassOutIntent" unit="staticinvoke &lt;android.support.v4.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)&gt;($r2, $r5)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.asynctask.OpmlFeedQueuer"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.asynctask.OpmlFeedQueuer: java.lang.Object doInBackground(java.lang.Object[])&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.asynctask.OpmlFeedQueuer: java.lang.Object doInBackground(java.lang.Object[])&gt;,&lt;de.danoeh.antennapod.asynctask.OpmlFeedQueuer: java.lang.Void doInBackground$10299ca()&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;,boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)"/>  
      <source name="de.danoeh.antennapod.asynctask.OpmlFeedQueuer"/>  
      <destinition name="de.danoeh.antennapod.core.service.download.DownloadService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.asynctask.OpmlFeedQueuer: java.lang.Object doInBackground(java.lang.Object[])&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.asynctask.OpmlFeedQueuer: java.lang.Void doInBackground$10299ca()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;"/>  
        <node method="DownloadRequester download" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="DownloadRequester download" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/download/DownloadService;&quot;)"/>  
        <node method="DownloadRequester download" type="PassOutIntent" unit="staticinvoke &lt;android.support.v4.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)&gt;($r2, $r5)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.MediaplayerActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity: void onPlayPause()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity: void onPlayPause()&gt;,&lt;de.danoeh.antennapod.core.util.playback.PlaybackController: void playPause()&gt;,&lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: void start()&gt;,void start(), &lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: android.content.Intent getIntent()&gt;"/>  
      <source name="de.danoeh.antennapod.activity.MediaplayerActivity"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity: void onPlayPause()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.PlaybackController: void playPause()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: void start()&gt;"/>  
        <node method="PlaybackServiceStarter start" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: android.content.Intent getIntent()&gt;()"/>  
        <node method="PlaybackServiceStarter getIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="PlaybackServiceStarter getIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/>  
        <node method="PlaybackServiceStarter start" type="PassOutIntent" unit="staticinvoke &lt;android.support.v4.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)&gt;($r2, $r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.MediaplayerActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$$Lambda$10: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$$Lambda$10: void onClick(android.view.View)&gt;,&lt;de.danoeh.antennapod.activity.MediaplayerActivity: void onPlayPause()&gt;,&lt;de.danoeh.antennapod.core.util.playback.PlaybackController: void playPause()&gt;,&lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: void start()&gt;,void start(), &lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: android.content.Intent getIntent()&gt;"/>  
      <source name="de.danoeh.antennapod.activity.MediaplayerActivity"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity$$Lambda$10: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity: void onPlayPause()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.PlaybackController: void playPause()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: void start()&gt;"/>  
        <node method="PlaybackServiceStarter start" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: android.content.Intent getIntent()&gt;()"/>  
        <node method="PlaybackServiceStarter getIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="PlaybackServiceStarter getIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/>  
        <node method="PlaybackServiceStarter start" type="PassOutIntent" unit="staticinvoke &lt;android.support.v4.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)&gt;($r2, $r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.AudioplayerActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.AudioplayerActivity: void updatePlaybackSpeedButtonText()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.AudioplayerActivity: void updatePlaybackSpeedButtonText()&gt;,&lt;de.danoeh.antennapod.core.util.playback.PlaybackController: boolean canSetPlaybackSpeed()&gt;,boolean canSetPlaybackSpeed(), &lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.activity.AudioplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.AudioplayerActivity: void updatePlaybackSpeedButtonText()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.PlaybackController: boolean canSetPlaybackSpeed()&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.AudioplayerActivity: void updatePlaybackSpeedButtonText()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.AudioplayerActivity: void updatePlaybackSpeedButtonText()&gt;,&lt;de.danoeh.antennapod.core.util.playback.PlaybackController: boolean canSetPlaybackSpeed()&gt;,&lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;,boolean isIntentAvailable(android.content.Context,java.lang.String)"/>  
      <source name="de.danoeh.antennapod.activity.AudioplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.AudioplayerActivity: void updatePlaybackSpeedButtonText()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.PlaybackController: boolean canSetPlaybackSpeed()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.preferences.GpodnetPreferences"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.preferences.GpodnetPreferences: void addAddedFeed(java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.preferences.GpodnetPreferences: void addAddedFeed(java.lang.String)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncSubscriptionsIntent(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;,void enqueueWork(android.content.Context,android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.preferences.GpodnetPreferences"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.preferences.GpodnetPreferences: void addAddedFeed(java.lang.String)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncSubscriptionsIntent(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.preferences.GpodnetPreferences: void addAddedFeed(java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.preferences.GpodnetPreferences: void addAddedFeed(java.lang.String)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncSubscriptionsIntent(android.content.Context)&gt;,void sendSyncSubscriptionsIntent(android.content.Context), &lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
      <source name="de.danoeh.antennapod.core.preferences.GpodnetPreferences"/>  
      <destinition name="de.danoeh.antennapod.core.service.GpodnetSyncService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.preferences.GpodnetPreferences: void addAddedFeed(java.lang.String)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncSubscriptionsIntent(android.content.Context)&gt;"/>  
        <node method="GpodnetSyncService sendSyncSubscriptionsIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="GpodnetSyncService sendSyncSubscriptionsIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lde/danoeh/antennapod/core/service/GpodnetSyncService;&quot;)"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.storage.DBWriter"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.storage.DBWriter: void lambda$addNewFeed$22$DBWriter(de.danoeh.antennapod.core.feed.Feed[],android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.storage.DBWriter: void lambda$addNewFeed$22$DBWriter(de.danoeh.antennapod.core.feed.Feed[],android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.preferences.GpodnetPreferences: void addAddedFeed(java.lang.String)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncSubscriptionsIntent(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;,void enqueueWork(android.content.Context,android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.storage.DBWriter"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.storage.DBWriter: void lambda$addNewFeed$22$DBWriter(de.danoeh.antennapod.core.feed.Feed[],android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.preferences.GpodnetPreferences: void addAddedFeed(java.lang.String)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncSubscriptionsIntent(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.storage.DBWriter: void lambda$addNewFeed$22$DBWriter(de.danoeh.antennapod.core.feed.Feed[],android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.storage.DBWriter: void lambda$addNewFeed$22$DBWriter(de.danoeh.antennapod.core.feed.Feed[],android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.preferences.GpodnetPreferences: void addAddedFeed(java.lang.String)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncSubscriptionsIntent(android.content.Context)&gt;,void sendSyncSubscriptionsIntent(android.content.Context), &lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
      <source name="de.danoeh.antennapod.core.storage.DBWriter"/>  
      <destinition name="de.danoeh.antennapod.core.service.GpodnetSyncService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.storage.DBWriter: void lambda$addNewFeed$22$DBWriter(de.danoeh.antennapod.core.feed.Feed[],android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.preferences.GpodnetPreferences: void addAddedFeed(java.lang.String)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncSubscriptionsIntent(android.content.Context)&gt;"/>  
        <node method="GpodnetSyncService sendSyncSubscriptionsIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="GpodnetSyncService sendSyncSubscriptionsIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lde/danoeh/antennapod/core/service/GpodnetSyncService;&quot;)"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.storage.DBWriter"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.storage.DBWriter$$Lambda$21: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.storage.DBWriter$$Lambda$21: void run()&gt;,&lt;de.danoeh.antennapod.core.storage.DBWriter: void lambda$addNewFeed$22$DBWriter(de.danoeh.antennapod.core.feed.Feed[],android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.preferences.GpodnetPreferences: void addAddedFeed(java.lang.String)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncSubscriptionsIntent(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;,void enqueueWork(android.content.Context,android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.storage.DBWriter"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.storage.DBWriter$$Lambda$21: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBWriter: void lambda$addNewFeed$22$DBWriter(de.danoeh.antennapod.core.feed.Feed[],android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.preferences.GpodnetPreferences: void addAddedFeed(java.lang.String)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncSubscriptionsIntent(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.storage.DBWriter$$Lambda$21: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.storage.DBWriter$$Lambda$21: void run()&gt;,&lt;de.danoeh.antennapod.core.storage.DBWriter: void lambda$addNewFeed$22$DBWriter(de.danoeh.antennapod.core.feed.Feed[],android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.preferences.GpodnetPreferences: void addAddedFeed(java.lang.String)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncSubscriptionsIntent(android.content.Context)&gt;,void sendSyncSubscriptionsIntent(android.content.Context), &lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
      <source name="de.danoeh.antennapod.core.storage.DBWriter"/>  
      <destinition name="de.danoeh.antennapod.core.service.GpodnetSyncService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.storage.DBWriter$$Lambda$21: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBWriter: void lambda$addNewFeed$22$DBWriter(de.danoeh.antennapod.core.feed.Feed[],android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.preferences.GpodnetPreferences: void addAddedFeed(java.lang.String)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncSubscriptionsIntent(android.content.Context)&gt;"/>  
        <node method="GpodnetSyncService sendSyncSubscriptionsIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="GpodnetSyncService sendSyncSubscriptionsIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lde/danoeh/antennapod/core/service/GpodnetSyncService;&quot;)"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.antennapod.audio.ServiceBackedAudioPlayer"> 
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean canSetSpeed()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean canSetSpeed()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean canSetSpeed()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean canSetSpeed()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean canSetSpeed()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean canSetSpeed()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean canSetSpeed()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean canSetSpeed()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean canSetSpeed()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean canSetSpeed()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean canSetSpeed()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean canSetSpeed()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="PassOutIntent" unit="$z0 = virtualinvoke $r4.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r1, $r2, 1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean canSetSpeed()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean canSetSpeed()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean canSetSpeed()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.antennapod.audio.ServiceBackedAudioPlayer"> 
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setEnableSpeedAdjustment(boolean)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setEnableSpeedAdjustment(boolean)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setEnableSpeedAdjustment(boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setEnableSpeedAdjustment(boolean)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setEnableSpeedAdjustment(boolean)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setEnableSpeedAdjustment(boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setEnableSpeedAdjustment(boolean)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setEnableSpeedAdjustment(boolean)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setEnableSpeedAdjustment(boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setEnableSpeedAdjustment(boolean)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setEnableSpeedAdjustment(boolean)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setEnableSpeedAdjustment(boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="PassOutIntent" unit="$z0 = virtualinvoke $r4.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r1, $r2, 1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setEnableSpeedAdjustment(boolean)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setEnableSpeedAdjustment(boolean)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.ServiceBackedAudioPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void setEnableSpeedAdjustment(boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.fragment.ItemlistFragment"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment$$Lambda$5: void call(java.lang.Object)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment$$Lambda$5: void call(java.lang.Object)&gt;,&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onFragmentLoaded()&gt;,&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback: void onActionButtonPressed(de.danoeh.antennapod.core.feed.FeedItem,de.danoeh.antennapod.core.util.LongList)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void cancelDownload(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void cancelDownload(android.content.Context,java.lang.String)&gt;,void cancelDownload(android.content.Context,java.lang.String)"/>  
      <source name="de.danoeh.antennapod.fragment.ItemlistFragment"/>  
      <destinition name="interICC_action.de.danoeh.antennapod.core.service.cancelDownload, "/>  
      <sender action="action.de.danoeh.antennapod.core.service.cancelDownload"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment$$Lambda$5: void call(java.lang.Object)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onFragmentLoaded()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback: void onActionButtonPressed(de.danoeh.antennapod.core.feed.FeedItem,de.danoeh.antennapod.core.util.LongList)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void cancelDownload(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void cancelDownload(android.content.Context,java.lang.String)&gt;"/>  
        <node method="DownloadRequester cancelDownload" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="DownloadRequester cancelDownload" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;action.de.danoeh.antennapod.core.service.cancelDownload&quot;)"/>  
        <node method="DownloadRequester cancelDownload" type="PassOutIntent" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment$$Lambda$5: void call(java.lang.Object)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment$$Lambda$5: void call(java.lang.Object)&gt;,&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onFragmentLoaded()&gt;,&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback: void onActionButtonPressed(de.danoeh.antennapod.core.feed.FeedItem,de.danoeh.antennapod.core.util.LongList)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void downloadFeedItems(android.content.Context,de.danoeh.antennapod.core.feed.FeedItem[])&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void downloadFeedItems(boolean,android.content.Context,de.danoeh.antennapod.core.feed.FeedItem[])&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadMedia(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;,boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)"/>  
      <source name="de.danoeh.antennapod.fragment.ItemlistFragment"/>  
      <destinition name="de.danoeh.antennapod.core.service.download.DownloadService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment$$Lambda$5: void call(java.lang.Object)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onFragmentLoaded()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback: void onActionButtonPressed(de.danoeh.antennapod.core.feed.FeedItem,de.danoeh.antennapod.core.util.LongList)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void downloadFeedItems(android.content.Context,de.danoeh.antennapod.core.feed.FeedItem[])&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void downloadFeedItems(boolean,android.content.Context,de.danoeh.antennapod.core.feed.FeedItem[])&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadMedia(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;"/>  
        <node method="DownloadRequester download" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="DownloadRequester download" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/download/DownloadService;&quot;)"/>  
        <node method="DownloadRequester download" type="PassOutIntent" unit="staticinvoke &lt;android.support.v4.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)&gt;($r2, $r5)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment$$Lambda$5: void call(java.lang.Object)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment$$Lambda$5: void call(java.lang.Object)&gt;,&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onFragmentLoaded()&gt;,&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback: void onActionButtonPressed(de.danoeh.antennapod.core.feed.FeedItem,de.danoeh.antennapod.core.util.LongList)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void playMedia$4e7c0cea(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia,boolean,boolean)&gt;,void playMedia$4e7c0cea(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia,boolean,boolean)"/>  
      <source name="de.danoeh.antennapod.fragment.ItemlistFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment$$Lambda$5: void call(java.lang.Object)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onFragmentLoaded()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback: void onActionButtonPressed(de.danoeh.antennapod.core.feed.FeedItem,de.danoeh.antennapod.core.util.LongList)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void playMedia$4e7c0cea(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia,boolean,boolean)&gt;"/>  
        <node method="DBTasks playMedia$4e7c0cea" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.content.Intent getPlayerActivityIntent(android.content.Context,de.danoeh.antennapod.core.util.playback.Playable)&gt;($r0, $r1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment$$Lambda$5: void call(java.lang.Object)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment$$Lambda$5: void call(java.lang.Object)&gt;,&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onFragmentLoaded()&gt;,&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback: void onActionButtonPressed(de.danoeh.antennapod.core.feed.FeedItem,de.danoeh.antennapod.core.util.LongList)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void playMedia$4e7c0cea(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia,boolean,boolean)&gt;,void playMedia$4e7c0cea(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia,boolean,boolean)"/>  
      <source name="de.danoeh.antennapod.fragment.ItemlistFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment$$Lambda$5: void call(java.lang.Object)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onFragmentLoaded()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback: void onActionButtonPressed(de.danoeh.antennapod.core.feed.FeedItem,de.danoeh.antennapod.core.util.LongList)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void playMedia$4e7c0cea(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia,boolean,boolean)&gt;"/>  
        <node method="DBTasks playMedia$4e7c0cea" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.content.Intent getPlayerActivityIntent(android.content.Context,de.danoeh.antennapod.core.util.playback.Playable)&gt;($r0, $r1)"/>  
        <node method="DBTasks playMedia$4e7c0cea" type="PassOutIntent" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r6)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment$$Lambda$5: void call(java.lang.Object)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment$$Lambda$5: void call(java.lang.Object)&gt;,&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onFragmentLoaded()&gt;,&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback: void onActionButtonPressed(de.danoeh.antennapod.core.feed.FeedItem,de.danoeh.antennapod.core.util.LongList)&gt;,&lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: void start()&gt;,void start(), &lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: android.content.Intent getIntent()&gt;"/>  
      <source name="de.danoeh.antennapod.fragment.ItemlistFragment"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment$$Lambda$5: void call(java.lang.Object)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onFragmentLoaded()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback: void onActionButtonPressed(de.danoeh.antennapod.core.feed.FeedItem,de.danoeh.antennapod.core.util.LongList)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: void start()&gt;"/>  
        <node method="PlaybackServiceStarter start" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: android.content.Intent getIntent()&gt;()"/>  
        <node method="PlaybackServiceStarter getIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="PlaybackServiceStarter getIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/>  
        <node method="PlaybackServiceStarter start" type="PassOutIntent" unit="staticinvoke &lt;android.support.v4.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)&gt;($r2, $r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.storage.DBWriter"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.storage.DBWriter: void lambda$deleteFeedMediaOfItem$1$DBWriter(long,android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.storage.DBWriter: void lambda$deleteFeedMediaOfItem$1$DBWriter(long,android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.preferences.GpodnetPreferences: void enqueueEpisodeAction(de.danoeh.antennapod.core.gpoddernet.model.GpodnetEpisodeAction)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncActionsIntent(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;,void enqueueWork(android.content.Context,android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.storage.DBWriter"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.storage.DBWriter: void lambda$deleteFeedMediaOfItem$1$DBWriter(long,android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.preferences.GpodnetPreferences: void enqueueEpisodeAction(de.danoeh.antennapod.core.gpoddernet.model.GpodnetEpisodeAction)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncActionsIntent(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.storage.DBWriter: void lambda$deleteFeedMediaOfItem$1$DBWriter(long,android.content.Context)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.storage.DBWriter: void lambda$deleteFeedMediaOfItem$1$DBWriter(long,android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.preferences.GpodnetPreferences: void enqueueEpisodeAction(de.danoeh.antennapod.core.gpoddernet.model.GpodnetEpisodeAction)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncActionsIntent(android.content.Context)&gt;,void sendSyncActionsIntent(android.content.Context), &lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
      <source name="de.danoeh.antennapod.core.storage.DBWriter"/>  
      <destinition name="de.danoeh.antennapod.core.service.GpodnetSyncService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.storage.DBWriter: void lambda$deleteFeedMediaOfItem$1$DBWriter(long,android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.preferences.GpodnetPreferences: void enqueueEpisodeAction(de.danoeh.antennapod.core.gpoddernet.model.GpodnetEpisodeAction)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncActionsIntent(android.content.Context)&gt;"/>  
        <node method="GpodnetSyncService sendSyncActionsIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="GpodnetSyncService sendSyncActionsIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lde/danoeh/antennapod/core/service/GpodnetSyncService;&quot;)"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.storage.DBWriter"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.storage.DBWriter$$Lambda$0: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.storage.DBWriter$$Lambda$0: void run()&gt;,&lt;de.danoeh.antennapod.core.storage.DBWriter: void lambda$deleteFeedMediaOfItem$1$DBWriter(long,android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.preferences.GpodnetPreferences: void enqueueEpisodeAction(de.danoeh.antennapod.core.gpoddernet.model.GpodnetEpisodeAction)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncActionsIntent(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;,void enqueueWork(android.content.Context,android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.storage.DBWriter"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.storage.DBWriter$$Lambda$0: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBWriter: void lambda$deleteFeedMediaOfItem$1$DBWriter(long,android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.preferences.GpodnetPreferences: void enqueueEpisodeAction(de.danoeh.antennapod.core.gpoddernet.model.GpodnetEpisodeAction)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncActionsIntent(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.storage.DBWriter$$Lambda$0: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.storage.DBWriter$$Lambda$0: void run()&gt;,&lt;de.danoeh.antennapod.core.storage.DBWriter: void lambda$deleteFeedMediaOfItem$1$DBWriter(long,android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.preferences.GpodnetPreferences: void enqueueEpisodeAction(de.danoeh.antennapod.core.gpoddernet.model.GpodnetEpisodeAction)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncActionsIntent(android.content.Context)&gt;,void sendSyncActionsIntent(android.content.Context), &lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
      <source name="de.danoeh.antennapod.core.storage.DBWriter"/>  
      <destinition name="de.danoeh.antennapod.core.service.GpodnetSyncService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.storage.DBWriter$$Lambda$0: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBWriter: void lambda$deleteFeedMediaOfItem$1$DBWriter(long,android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.preferences.GpodnetPreferences: void enqueueEpisodeAction(de.danoeh.antennapod.core.gpoddernet.model.GpodnetEpisodeAction)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncActionsIntent(android.content.Context)&gt;"/>  
        <node method="GpodnetSyncService sendSyncActionsIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="GpodnetSyncService sendSyncActionsIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lde/danoeh/antennapod/core/service/GpodnetSyncService;&quot;)"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.AboutActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.AboutActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.AboutActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle)"/>  
      <source name="de.danoeh.antennapod.activity.AboutActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.AboutActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="AboutActivity onCreate" type="setContentView" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.activity.AboutActivity: void setContentView(int)&gt;(2131558427)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.service.playback.LocalPSMP"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$7: boolean onError(org.antennapod.audio.MediaPlayer,int,int)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$7: boolean onError(org.antennapod.audio.MediaPlayer,int,int)&gt;,&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;,void fallback(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$7: boolean onError(org.antennapod.audio.MediaPlayer,int,int)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$7: boolean onError(org.antennapod.audio.MediaPlayer,int,int)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$7: boolean onError(org.antennapod.audio.MediaPlayer,int,int)&gt;,&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$7: boolean onError(org.antennapod.audio.MediaPlayer,int,int)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$7: boolean onError(org.antennapod.audio.MediaPlayer,int,int)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$7: boolean onError(org.antennapod.audio.MediaPlayer,int,int)&gt;,&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$7: boolean onError(org.antennapod.audio.MediaPlayer,int,int)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$7: boolean onError(org.antennapod.audio.MediaPlayer,int,int)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$7: boolean onError(org.antennapod.audio.MediaPlayer,int,int)&gt;,&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$7: boolean onError(org.antennapod.audio.MediaPlayer,int,int)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$7: boolean onError(org.antennapod.audio.MediaPlayer,int,int)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$7: boolean onError(org.antennapod.audio.MediaPlayer,int,int)&gt;,&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$7: boolean onError(org.antennapod.audio.MediaPlayer,int,int)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$7: boolean onError(org.antennapod.audio.MediaPlayer,int,int)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$7: boolean onError(org.antennapod.audio.MediaPlayer,int,int)&gt;,&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$7: boolean onError(org.antennapod.audio.MediaPlayer,int,int)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$7: boolean onError(org.antennapod.audio.MediaPlayer,int,int)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$7: boolean onError(org.antennapod.audio.MediaPlayer,int,int)&gt;,&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;,void fallback(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$7: boolean onError(org.antennapod.audio.MediaPlayer,int,int)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer fallback" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer fallback" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/>  
        <node method="MediaPlayer fallback" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$7: boolean onError(org.antennapod.audio.MediaPlayer,int,int)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$7: boolean onError(org.antennapod.audio.MediaPlayer,int,int)&gt;,&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$7: boolean onError(org.antennapod.audio.MediaPlayer,int,int)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$7: boolean onError(org.antennapod.audio.MediaPlayer,int,int)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$7: boolean onError(org.antennapod.audio.MediaPlayer,int,int)&gt;,&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$7: boolean onError(org.antennapod.audio.MediaPlayer,int,int)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$7: boolean onError(org.antennapod.audio.MediaPlayer,int,int)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$7: boolean onError(org.antennapod.audio.MediaPlayer,int,int)&gt;,&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$7: boolean onError(org.antennapod.audio.MediaPlayer,int,int)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$7: boolean onError(org.antennapod.audio.MediaPlayer,int,int)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$7: boolean onError(org.antennapod.audio.MediaPlayer,int,int)&gt;,&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$7: boolean onError(org.antennapod.audio.MediaPlayer,int,int)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$7: boolean onError(org.antennapod.audio.MediaPlayer,int,int)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$7: boolean onError(org.antennapod.audio.MediaPlayer,int,int)&gt;,&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;,&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;,android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$7: boolean onError(org.antennapod.audio.MediaPlayer,int,int)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$7: boolean onError(org.antennapod.audio.MediaPlayer,int,int)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$7: boolean onError(org.antennapod.audio.MediaPlayer,int,int)&gt;,&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;,void fallback(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$7: boolean onError(org.antennapod.audio.MediaPlayer,int,int)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer fallback" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer fallback" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer fallback" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$7: boolean onError(org.antennapod.audio.MediaPlayer,int,int)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$7: boolean onError(org.antennapod.audio.MediaPlayer,int,int)&gt;,&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;,&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;,android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$7: boolean onError(org.antennapod.audio.MediaPlayer,int,int)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$7: boolean onError(org.antennapod.audio.MediaPlayer,int,int)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$7: boolean onError(org.antennapod.audio.MediaPlayer,int,int)&gt;,&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$7: boolean onError(org.antennapod.audio.MediaPlayer,int,int)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="PassOutIntent" unit="$z0 = virtualinvoke $r4.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r1, $r2, 1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$7: boolean onError(org.antennapod.audio.MediaPlayer,int,int)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$7: boolean onError(org.antennapod.audio.MediaPlayer,int,int)&gt;,&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$7: boolean onError(org.antennapod.audio.MediaPlayer,int,int)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$7: boolean onError(org.antennapod.audio.MediaPlayer,int,int)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$7: boolean onError(org.antennapod.audio.MediaPlayer,int,int)&gt;,&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;,&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;,android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$7: boolean onError(org.antennapod.audio.MediaPlayer,int,int)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void fallback()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.AudioplayerActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.AudioplayerActivity: void onResume()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.AudioplayerActivity: void onResume()&gt;,void onResume()"/>  
      <source name="de.danoeh.antennapod.activity.AudioplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.AudioplayerActivity: void onResume()&gt;"/>  
        <node method="AudioplayerActivity onResume" type="ReceiveIntentFromRetValue" unit="$r1 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.content.Intent getPlayerActivityIntent(android.content.Context)&gt;(r0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.AudioplayerActivity: void onResume()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.AudioplayerActivity: void onResume()&gt;,void onResume()"/>  
      <source name="de.danoeh.antennapod.activity.AudioplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.AudioplayerActivity: void onResume()&gt;"/>  
        <node method="AudioplayerActivity onResume" type="ReceiveIntentFromRetValue" unit="$r1 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.content.Intent getPlayerActivityIntent(android.content.Context)&gt;(r0)"/>  
        <node method="AudioplayerActivity onResume" type="PassOutIntent" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.activity.AudioplayerActivity: void startActivity(android.content.Intent)&gt;($r1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.AudioplayerActivity: void onResume()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.AudioplayerActivity: void onResume()&gt;,&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: void onResume()&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void checkShouldRefreshFeeds(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List,java.lang.Runnable)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks$$Lambda$0: void run()&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncIntent(android.content.Context)&gt;,void sendSyncIntent(android.content.Context), &lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
      <source name="de.danoeh.antennapod.activity.AudioplayerActivity"/>  
      <destinition name="de.danoeh.antennapod.core.service.GpodnetSyncService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.AudioplayerActivity: void onResume()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: void onResume()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void checkShouldRefreshFeeds(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List,java.lang.Runnable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks$$Lambda$0: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncIntent(android.content.Context)&gt;"/>  
        <node method="GpodnetSyncService sendSyncIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="GpodnetSyncService sendSyncIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lde/danoeh/antennapod/core/service/GpodnetSyncService;&quot;)"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.AudioplayerActivity: void onResume()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.AudioplayerActivity: void onResume()&gt;,&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: void onResume()&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void checkShouldRefreshFeeds(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List,java.lang.Runnable)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks$$Lambda$0: void run()&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncIntent(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;,void enqueueWork(android.content.Context,android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.activity.AudioplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.AudioplayerActivity: void onResume()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: void onResume()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void checkShouldRefreshFeeds(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List,java.lang.Runnable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks$$Lambda$0: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncIntent(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.AudioplayerActivity: void onResume()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.AudioplayerActivity: void onResume()&gt;,&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: void onResume()&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void checkShouldRefreshFeeds(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List,java.lang.Runnable)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks$$Lambda$0: void run()&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshFeeds(android.content.Context,java.util.List)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;,boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)"/>  
      <source name="de.danoeh.antennapod.activity.AudioplayerActivity"/>  
      <destinition name="de.danoeh.antennapod.core.service.download.DownloadService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.AudioplayerActivity: void onResume()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: void onResume()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void checkShouldRefreshFeeds(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List,java.lang.Runnable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks$$Lambda$0: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshFeeds(android.content.Context,java.util.List)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;"/>  
        <node method="DownloadRequester download" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="DownloadRequester download" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/download/DownloadService;&quot;)"/>  
        <node method="DownloadRequester download" type="PassOutIntent" unit="staticinvoke &lt;android.support.v4.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)&gt;($r2, $r5)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.AudioplayerActivity: void onResume()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.AudioplayerActivity: void onResume()&gt;,void onResume(), &lt;de.danoeh.antennapod.activity.MediaplayerActivity: void playExternalMedia(android.content.Intent,de.danoeh.antennapod.core.feed.MediaType)&gt;"/>  
      <source name="de.danoeh.antennapod.activity.AudioplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.AudioplayerActivity: void onResume()&gt;"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.service.GpodnetSyncService"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void syncSubscriptionChanges()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void syncSubscriptionChanges()&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void processSubscriptionChanges(java.util.List,java.util.Collection,java.util.Collection,de.danoeh.antennapod.core.gpoddernet.model.GpodnetSubscriptionChange)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;,boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)"/>  
      <source name="de.danoeh.antennapod.core.service.GpodnetSyncService"/>  
      <destinition name="de.danoeh.antennapod.core.service.download.DownloadService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void syncSubscriptionChanges()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void processSubscriptionChanges(java.util.List,java.util.Collection,java.util.Collection,de.danoeh.antennapod.core.gpoddernet.model.GpodnetSubscriptionChange)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;"/>  
        <node method="DownloadRequester download" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="DownloadRequester download" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/download/DownloadService;&quot;)"/>  
        <node method="DownloadRequester download" type="PassOutIntent" unit="staticinvoke &lt;android.support.v4.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)&gt;($r2, $r5)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.fragment.ItemFragment"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemFragment$$Lambda$5: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemFragment$$Lambda$5: void onClick(android.view.View)&gt;,void onClick(android.view.View)"/>  
      <source name="de.danoeh.antennapod.fragment.ItemFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemFragment$$Lambda$5: void onClick(android.view.View)&gt;"/>  
        <node method="ItemFragment$$Lambda$5 onClick" type="CreateMethod" unit="$r10 = new android.content.Intent"/>  
        <node method="ItemFragment$$Lambda$5 onClick" type="PassOutIntent" unit="virtualinvoke $r5.&lt;android.support.v4.app.FragmentActivity: void startActivity(android.content.Intent)&gt;($r10)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemFragment$$Lambda$5: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemFragment$$Lambda$5: void onClick(android.view.View)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void playMedia$4e7c0cea(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia,boolean,boolean)&gt;,void playMedia$4e7c0cea(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia,boolean,boolean)"/>  
      <source name="de.danoeh.antennapod.fragment.ItemFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemFragment$$Lambda$5: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void playMedia$4e7c0cea(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia,boolean,boolean)&gt;"/>  
        <node method="DBTasks playMedia$4e7c0cea" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.content.Intent getPlayerActivityIntent(android.content.Context,de.danoeh.antennapod.core.util.playback.Playable)&gt;($r0, $r1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemFragment$$Lambda$5: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemFragment$$Lambda$5: void onClick(android.view.View)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void playMedia$4e7c0cea(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia,boolean,boolean)&gt;,void playMedia$4e7c0cea(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia,boolean,boolean)"/>  
      <source name="de.danoeh.antennapod.fragment.ItemFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemFragment$$Lambda$5: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void playMedia$4e7c0cea(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia,boolean,boolean)&gt;"/>  
        <node method="DBTasks playMedia$4e7c0cea" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.content.Intent getPlayerActivityIntent(android.content.Context,de.danoeh.antennapod.core.util.playback.Playable)&gt;($r0, $r1)"/>  
        <node method="DBTasks playMedia$4e7c0cea" type="PassOutIntent" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r6)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemFragment$$Lambda$5: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemFragment$$Lambda$5: void onClick(android.view.View)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void playMedia$4e7c0cea(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia,boolean,boolean)&gt;,&lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: void start()&gt;,void start(), &lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: android.content.Intent getIntent()&gt;"/>  
      <source name="de.danoeh.antennapod.fragment.ItemFragment"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemFragment$$Lambda$5: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void playMedia$4e7c0cea(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia,boolean,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: void start()&gt;"/>  
        <node method="PlaybackServiceStarter start" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: android.content.Intent getIntent()&gt;()"/>  
        <node method="PlaybackServiceStarter getIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="PlaybackServiceStarter getIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/>  
        <node method="PlaybackServiceStarter start" type="PassOutIntent" unit="staticinvoke &lt;android.support.v4.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)&gt;($r2, $r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.OpmlFeedChooserActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.OpmlFeedChooserActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.OpmlFeedChooserActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle)"/>  
      <source name="de.danoeh.antennapod.activity.OpmlFeedChooserActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.OpmlFeedChooserActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="OpmlFeedChooserActivity onCreate" type="setContentView" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.activity.OpmlFeedChooserActivity: void setContentView(int)&gt;(2131558551)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.OnlineFeedViewActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.OnlineFeedViewActivity$$Lambda$4: void call(java.lang.Object)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.OnlineFeedViewActivity$$Lambda$4: void call(java.lang.Object)&gt;,void call(java.lang.Object)"/>  
      <source name="de.danoeh.antennapod.activity.OnlineFeedViewActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.OnlineFeedViewActivity$$Lambda$4: void call(java.lang.Object)&gt;"/>  
        <node method="OnlineFeedViewActivity$$Lambda$4 call" type="setContentView" unit="virtualinvoke $r1.&lt;de.danoeh.antennapod.activity.OnlineFeedViewActivity: void setContentView(int)&gt;(2131558489)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.PodcastApp"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.PodcastApp: void onCreate()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.PodcastApp: void onCreate()&gt;,&lt;de.danoeh.antennapod.core.ClientConfig: void initialize(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.UpdateManager: void init(android.content.Context)&gt;,void init(android.content.Context), &lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.PodcastApp"/>  
      <destinition name="interICC_new android.content.Context, "/>  
      <sender action="new android.content.Context"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.PodcastApp: void onCreate()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.ClientConfig: void initialize(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.UpdateManager: void init(android.content.Context)&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.PodcastApp: void onCreate()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.PodcastApp: void onCreate()&gt;,&lt;de.danoeh.antennapod.spa.SPAUtil: boolean sendSPAppsQueryFeedsIntent(android.content.Context)&gt;,boolean sendSPAppsQueryFeedsIntent(android.content.Context)"/>  
      <source name="de.danoeh.antennapod.PodcastApp"/>  
      <destinition name="interICC_de.danoeh.antennapdsp.intent.SP_APPS_QUERY_FEEDS, "/>  
      <sender action="de.danoeh.antennapdsp.intent.SP_APPS_QUERY_FEEDS"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.PodcastApp: void onCreate()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.spa.SPAUtil: boolean sendSPAppsQueryFeedsIntent(android.content.Context)&gt;"/>  
        <node method="SPAUtil sendSPAppsQueryFeedsIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="SPAUtil sendSPAppsQueryFeedsIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;de.danoeh.antennapdsp.intent.SP_APPS_QUERY_FEEDS&quot;)"/>  
        <node method="SPAUtil sendSPAppsQueryFeedsIntent" type="PassOutIntent" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r2)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.PodcastApp: void onCreate()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.PodcastApp: void onCreate()&gt;,&lt;de.danoeh.antennapod.core.ClientConfig: void initialize(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.UpdateManager: void init(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;,boolean isIntentAvailable(android.content.Context,java.lang.String)"/>  
      <source name="de.danoeh.antennapod.PodcastApp"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.PodcastApp: void onCreate()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.ClientConfig: void initialize(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.UpdateManager: void init(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.antennapod.audio.MediaPlayer"> 
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer$4: void onServiceDisconnected(android.content.ComponentName)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer$4: void onServiceDisconnected(android.content.ComponentName)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void release()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer$4: void onServiceDisconnected(android.content.ComponentName)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void release()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer$4: void onServiceDisconnected(android.content.ComponentName)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer$4: void onServiceDisconnected(android.content.ComponentName)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void release()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer$4: void onServiceDisconnected(android.content.ComponentName)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void release()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer$4: void onServiceDisconnected(android.content.ComponentName)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer$4: void onServiceDisconnected(android.content.ComponentName)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void release()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer$4: void onServiceDisconnected(android.content.ComponentName)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void release()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer$4: void onServiceDisconnected(android.content.ComponentName)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer$4: void onServiceDisconnected(android.content.ComponentName)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void release()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer$4: void onServiceDisconnected(android.content.ComponentName)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void release()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="PassOutIntent" unit="$z0 = virtualinvoke $r4.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r1, $r2, 1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer$4: void onServiceDisconnected(android.content.ComponentName)&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer$4: void onServiceDisconnected(android.content.ComponentName)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void release()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer$4: void onServiceDisconnected(android.content.ComponentName)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void release()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.service.playback.PlaybackService"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void access$1500(de.danoeh.antennapod.core.service.playback.PlaybackService,de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void access$1500(de.danoeh.antennapod.core.service.playback.PlaybackService,de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean)&gt;,&lt;de.danoeh.antennapod.core.feed.FeedMedia: void onPlaybackCompleted(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.feed.FeedMedia: void postPlaybackTasks(android.content.Context,boolean)&gt;,&lt;de.danoeh.antennapod.core.preferences.GpodnetPreferences: void enqueueEpisodeAction(de.danoeh.antennapod.core.gpoddernet.model.GpodnetEpisodeAction)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncActionsIntent(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;,void enqueueWork(android.content.Context,android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void access$1500(de.danoeh.antennapod.core.service.playback.PlaybackService,de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.feed.FeedMedia: void onPlaybackCompleted(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.feed.FeedMedia: void postPlaybackTasks(android.content.Context,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.preferences.GpodnetPreferences: void enqueueEpisodeAction(de.danoeh.antennapod.core.gpoddernet.model.GpodnetEpisodeAction)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncActionsIntent(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void access$1500(de.danoeh.antennapod.core.service.playback.PlaybackService,de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void access$1500(de.danoeh.antennapod.core.service.playback.PlaybackService,de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean)&gt;,&lt;de.danoeh.antennapod.core.feed.FeedMedia: void onPlaybackCompleted(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.feed.FeedMedia: void postPlaybackTasks(android.content.Context,boolean)&gt;,&lt;de.danoeh.antennapod.core.preferences.GpodnetPreferences: void enqueueEpisodeAction(de.danoeh.antennapod.core.gpoddernet.model.GpodnetEpisodeAction)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncActionsIntent(android.content.Context)&gt;,void sendSyncActionsIntent(android.content.Context), &lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="de.danoeh.antennapod.core.service.GpodnetSyncService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void access$1500(de.danoeh.antennapod.core.service.playback.PlaybackService,de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.feed.FeedMedia: void onPlaybackCompleted(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.feed.FeedMedia: void postPlaybackTasks(android.content.Context,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.preferences.GpodnetPreferences: void enqueueEpisodeAction(de.danoeh.antennapod.core.gpoddernet.model.GpodnetEpisodeAction)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncActionsIntent(android.content.Context)&gt;"/>  
        <node method="GpodnetSyncService sendSyncActionsIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="GpodnetSyncService sendSyncActionsIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lde/danoeh/antennapod/core/service/GpodnetSyncService;&quot;)"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.service.playback.PlaybackService"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$2: void onPostPlayback(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$2: void onPostPlayback(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean)&gt;,&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void access$1500(de.danoeh.antennapod.core.service.playback.PlaybackService,de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean)&gt;,&lt;de.danoeh.antennapod.core.feed.FeedMedia: void onPlaybackCompleted(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.feed.FeedMedia: void postPlaybackTasks(android.content.Context,boolean)&gt;,&lt;de.danoeh.antennapod.core.preferences.GpodnetPreferences: void enqueueEpisodeAction(de.danoeh.antennapod.core.gpoddernet.model.GpodnetEpisodeAction)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncActionsIntent(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;,void enqueueWork(android.content.Context,android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$2: void onPostPlayback(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void access$1500(de.danoeh.antennapod.core.service.playback.PlaybackService,de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.feed.FeedMedia: void onPlaybackCompleted(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.feed.FeedMedia: void postPlaybackTasks(android.content.Context,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.preferences.GpodnetPreferences: void enqueueEpisodeAction(de.danoeh.antennapod.core.gpoddernet.model.GpodnetEpisodeAction)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncActionsIntent(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$2: void onPostPlayback(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$2: void onPostPlayback(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean)&gt;,&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void access$1500(de.danoeh.antennapod.core.service.playback.PlaybackService,de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean)&gt;,&lt;de.danoeh.antennapod.core.feed.FeedMedia: void onPlaybackCompleted(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.feed.FeedMedia: void postPlaybackTasks(android.content.Context,boolean)&gt;,&lt;de.danoeh.antennapod.core.preferences.GpodnetPreferences: void enqueueEpisodeAction(de.danoeh.antennapod.core.gpoddernet.model.GpodnetEpisodeAction)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncActionsIntent(android.content.Context)&gt;,void sendSyncActionsIntent(android.content.Context), &lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="de.danoeh.antennapod.core.service.GpodnetSyncService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$2: void onPostPlayback(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void access$1500(de.danoeh.antennapod.core.service.playback.PlaybackService,de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.feed.FeedMedia: void onPlaybackCompleted(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.feed.FeedMedia: void postPlaybackTasks(android.content.Context,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.preferences.GpodnetPreferences: void enqueueEpisodeAction(de.danoeh.antennapod.core.gpoddernet.model.GpodnetEpisodeAction)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncActionsIntent(android.content.Context)&gt;"/>  
        <node method="GpodnetSyncService sendSyncActionsIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="GpodnetSyncService sendSyncActionsIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lde/danoeh/antennapod/core/service/GpodnetSyncService;&quot;)"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.VideoplayerActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.VideoplayerActivity: void setupGUI()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.VideoplayerActivity: void setupGUI()&gt;,&lt;de.danoeh.antennapod.activity.MediaplayerActivity: void setupGUI()&gt;,void setupGUI()"/>  
      <source name="de.danoeh.antennapod.activity.VideoplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.VideoplayerActivity: void setupGUI()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity: void setupGUI()&gt;"/>  
        <node method="MediaplayerActivity setupGUI" type="setContentView" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MediaplayerActivity: void setContentView(int)&gt;($i0)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.service.playback.PlaybackService"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$2: void onPlaybackEnded(de.danoeh.antennapod.core.feed.MediaType,boolean)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$2: void onPlaybackEnded(de.danoeh.antennapod.core.feed.MediaType,boolean)&gt;,&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void access$1700(de.danoeh.antennapod.core.service.playback.PlaybackService,de.danoeh.antennapod.core.feed.MediaType,boolean)&gt;,&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendNotificationBroadcast(int,int)&gt;,void sendNotificationBroadcast(int,int)"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="interICC_action.de.danoeh.antennapod.core.service.playerNotification, "/>  
      <sender action="action.de.danoeh.antennapod.core.service.playerNotification"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$2: void onPlaybackEnded(de.danoeh.antennapod.core.feed.MediaType,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void access$1700(de.danoeh.antennapod.core.service.playback.PlaybackService,de.danoeh.antennapod.core.feed.MediaType,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendNotificationBroadcast(int,int)&gt;"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;action.de.danoeh.antennapod.core.service.playerNotification&quot;)"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="PassOutIntent" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendBroadcast(android.content.Intent)&gt;($r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.SplashActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.SplashActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.SplashActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle)"/>  
      <source name="de.danoeh.antennapod.activity.SplashActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.SplashActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="SplashActivity onCreate" type="setContentView" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.activity.SplashActivity: void setContentView(int)&gt;(2131558595)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.fragment.ItemFragment"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemFragment$$Lambda$4: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemFragment$$Lambda$4: void onClick(android.view.View)&gt;,&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback: void onActionButtonPressed(de.danoeh.antennapod.core.feed.FeedItem,de.danoeh.antennapod.core.util.LongList)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void cancelDownload(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void cancelDownload(android.content.Context,java.lang.String)&gt;,void cancelDownload(android.content.Context,java.lang.String)"/>  
      <source name="de.danoeh.antennapod.fragment.ItemFragment"/>  
      <destinition name="interICC_action.de.danoeh.antennapod.core.service.cancelDownload, "/>  
      <sender action="action.de.danoeh.antennapod.core.service.cancelDownload"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemFragment$$Lambda$4: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback: void onActionButtonPressed(de.danoeh.antennapod.core.feed.FeedItem,de.danoeh.antennapod.core.util.LongList)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void cancelDownload(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void cancelDownload(android.content.Context,java.lang.String)&gt;"/>  
        <node method="DownloadRequester cancelDownload" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="DownloadRequester cancelDownload" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;action.de.danoeh.antennapod.core.service.cancelDownload&quot;)"/>  
        <node method="DownloadRequester cancelDownload" type="PassOutIntent" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemFragment$$Lambda$4: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemFragment$$Lambda$4: void onClick(android.view.View)&gt;,&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback: void onActionButtonPressed(de.danoeh.antennapod.core.feed.FeedItem,de.danoeh.antennapod.core.util.LongList)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void downloadFeedItems(android.content.Context,de.danoeh.antennapod.core.feed.FeedItem[])&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void downloadFeedItems(boolean,android.content.Context,de.danoeh.antennapod.core.feed.FeedItem[])&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadMedia(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;,boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)"/>  
      <source name="de.danoeh.antennapod.fragment.ItemFragment"/>  
      <destinition name="de.danoeh.antennapod.core.service.download.DownloadService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemFragment$$Lambda$4: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback: void onActionButtonPressed(de.danoeh.antennapod.core.feed.FeedItem,de.danoeh.antennapod.core.util.LongList)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void downloadFeedItems(android.content.Context,de.danoeh.antennapod.core.feed.FeedItem[])&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void downloadFeedItems(boolean,android.content.Context,de.danoeh.antennapod.core.feed.FeedItem[])&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadMedia(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;"/>  
        <node method="DownloadRequester download" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="DownloadRequester download" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/download/DownloadService;&quot;)"/>  
        <node method="DownloadRequester download" type="PassOutIntent" unit="staticinvoke &lt;android.support.v4.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)&gt;($r2, $r5)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemFragment$$Lambda$4: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemFragment$$Lambda$4: void onClick(android.view.View)&gt;,&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback: void onActionButtonPressed(de.danoeh.antennapod.core.feed.FeedItem,de.danoeh.antennapod.core.util.LongList)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void playMedia$4e7c0cea(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia,boolean,boolean)&gt;,void playMedia$4e7c0cea(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia,boolean,boolean)"/>  
      <source name="de.danoeh.antennapod.fragment.ItemFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemFragment$$Lambda$4: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback: void onActionButtonPressed(de.danoeh.antennapod.core.feed.FeedItem,de.danoeh.antennapod.core.util.LongList)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void playMedia$4e7c0cea(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia,boolean,boolean)&gt;"/>  
        <node method="DBTasks playMedia$4e7c0cea" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.content.Intent getPlayerActivityIntent(android.content.Context,de.danoeh.antennapod.core.util.playback.Playable)&gt;($r0, $r1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemFragment$$Lambda$4: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemFragment$$Lambda$4: void onClick(android.view.View)&gt;,&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback: void onActionButtonPressed(de.danoeh.antennapod.core.feed.FeedItem,de.danoeh.antennapod.core.util.LongList)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void playMedia$4e7c0cea(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia,boolean,boolean)&gt;,void playMedia$4e7c0cea(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia,boolean,boolean)"/>  
      <source name="de.danoeh.antennapod.fragment.ItemFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemFragment$$Lambda$4: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback: void onActionButtonPressed(de.danoeh.antennapod.core.feed.FeedItem,de.danoeh.antennapod.core.util.LongList)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void playMedia$4e7c0cea(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia,boolean,boolean)&gt;"/>  
        <node method="DBTasks playMedia$4e7c0cea" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.content.Intent getPlayerActivityIntent(android.content.Context,de.danoeh.antennapod.core.util.playback.Playable)&gt;($r0, $r1)"/>  
        <node method="DBTasks playMedia$4e7c0cea" type="PassOutIntent" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r6)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemFragment$$Lambda$4: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemFragment$$Lambda$4: void onClick(android.view.View)&gt;,&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback: void onActionButtonPressed(de.danoeh.antennapod.core.feed.FeedItem,de.danoeh.antennapod.core.util.LongList)&gt;,&lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: void start()&gt;,void start(), &lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: android.content.Intent getIntent()&gt;"/>  
      <source name="de.danoeh.antennapod.fragment.ItemFragment"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemFragment$$Lambda$4: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.adapter.DefaultActionButtonCallback: void onActionButtonPressed(de.danoeh.antennapod.core.feed.FeedItem,de.danoeh.antennapod.core.util.LongList)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: void start()&gt;"/>  
        <node method="PlaybackServiceStarter start" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: android.content.Intent getIntent()&gt;()"/>  
        <node method="PlaybackServiceStarter getIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="PlaybackServiceStarter getIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/>  
        <node method="PlaybackServiceStarter start" type="PassOutIntent" unit="staticinvoke &lt;android.support.v4.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)&gt;($r2, $r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.service.playback.LocalPSMP"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,void &lt;init&gt;(android.content.Context,byte), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;,void &lt;init&gt;(android.content.Context), &lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;,void setupMpi(android.content.Context), &lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer setupMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer setupMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/>  
        <node method="MediaPlayer setupMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;,void &lt;init&gt;(android.content.Context), &lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/>  
        <node method="MediaPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;,android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;,android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean), &lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled()&gt;,boolean isPrestoLibraryInstalled(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean), &lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <destinition name="java.lang.String"/>  
      <sender action="new android.content.Context"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="LocalPSMP playMediaObject" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="LocalPSMP playMediaObject" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/>  
        <node method="LocalPSMP playMediaObject" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;,void setupMpi(android.content.Context), &lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer setupMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer setupMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer setupMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,void &lt;init&gt;(android.content.Context,byte), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;,android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,void &lt;init&gt;(android.content.Context,byte), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean), &lt;de.danoeh.antennapod.core.util.playback.AudioPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <destinition name="interICC_new android.content.Context, "/>  
      <sender action="new android.content.Context"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="LocalPSMP playMediaObject" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="LocalPSMP playMediaObject" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="LocalPSMP playMediaObject" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="PassOutIntent" unit="$z0 = virtualinvoke $r4.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r1, $r2, 1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;,void setupMpi(android.content.Context), &lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;,&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;,void &lt;init&gt;(android.content.Context), &lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context,byte)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.LocalPSMP"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP$$Lambda$28: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.LocalPSMP: void playMediaObject(de.danoeh.antennapod.core.util.playback.Playable,boolean,boolean,boolean,boolean)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void &lt;init&gt;(android.content.Context)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.antennapod.audio.MediaPlayer"> 
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled()&gt;,boolean isPrestoLibraryInstalled(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;,android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;,android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="PassOutIntent" unit="$z0 = virtualinvoke $r4.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r1, $r2, 1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;,android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void prepare()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.CastplayerActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.CastplayerActivity: void onResume()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.CastplayerActivity: void onResume()&gt;,void onResume()"/>  
      <source name="de.danoeh.antennapod.activity.CastplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.CastplayerActivity: void onResume()&gt;"/>  
        <node method="CastplayerActivity onResume" type="ReceiveIntentFromRetValue" unit="$r1 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.content.Intent getPlayerActivityIntent(android.content.Context)&gt;(r0)"/>  
        <node method="CastplayerActivity onResume" type="PassOutIntent" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.activity.CastplayerActivity: void startActivity(android.content.Intent)&gt;($r1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.CastplayerActivity: void onResume()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.CastplayerActivity: void onResume()&gt;,&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: void onResume()&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void checkShouldRefreshFeeds(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List,java.lang.Runnable)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks$$Lambda$0: void run()&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncIntent(android.content.Context)&gt;,void sendSyncIntent(android.content.Context), &lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
      <source name="de.danoeh.antennapod.activity.CastplayerActivity"/>  
      <destinition name="de.danoeh.antennapod.core.service.GpodnetSyncService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.CastplayerActivity: void onResume()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: void onResume()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void checkShouldRefreshFeeds(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List,java.lang.Runnable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks$$Lambda$0: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncIntent(android.content.Context)&gt;"/>  
        <node method="GpodnetSyncService sendSyncIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="GpodnetSyncService sendSyncIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lde/danoeh/antennapod/core/service/GpodnetSyncService;&quot;)"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.CastplayerActivity: void onResume()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.CastplayerActivity: void onResume()&gt;,&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: void onResume()&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void checkShouldRefreshFeeds(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List,java.lang.Runnable)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks$$Lambda$0: void run()&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncIntent(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;,void enqueueWork(android.content.Context,android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.activity.CastplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.CastplayerActivity: void onResume()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: void onResume()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void checkShouldRefreshFeeds(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List,java.lang.Runnable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks$$Lambda$0: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncIntent(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.CastplayerActivity: void onResume()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.CastplayerActivity: void onResume()&gt;,&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: void onResume()&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void checkShouldRefreshFeeds(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List,java.lang.Runnable)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks$$Lambda$0: void run()&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshFeeds(android.content.Context,java.util.List)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;,boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)"/>  
      <source name="de.danoeh.antennapod.activity.CastplayerActivity"/>  
      <destinition name="de.danoeh.antennapod.core.service.download.DownloadService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.CastplayerActivity: void onResume()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: void onResume()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void checkShouldRefreshFeeds(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List,java.lang.Runnable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks$$Lambda$0: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshFeeds(android.content.Context,java.util.List)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;"/>  
        <node method="DownloadRequester download" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="DownloadRequester download" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/download/DownloadService;&quot;)"/>  
        <node method="DownloadRequester download" type="PassOutIntent" unit="staticinvoke &lt;android.support.v4.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)&gt;($r2, $r5)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.CastplayerActivity: void onResume()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.CastplayerActivity: void onResume()&gt;,void onResume()"/>  
      <source name="de.danoeh.antennapod.activity.CastplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.CastplayerActivity: void onResume()&gt;"/>  
        <node method="CastplayerActivity onResume" type="ReceiveIntentFromRetValue" unit="$r1 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.content.Intent getPlayerActivityIntent(android.content.Context)&gt;(r0)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.receiver.SPAReceiver"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.receiver.SPAReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.receiver.SPAReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;,void onReceive(android.content.Context,android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.receiver.SPAReceiver"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.receiver.SPAReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="SPAReceiver onReceive" type="ReceiveIntentFromParatMethod" unit="$r3 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.receiver.SPAReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.receiver.SPAReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;,void onReceive(android.content.Context,android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.receiver.SPAReceiver"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.receiver.SPAReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="SPAReceiver onReceive" type="ReceiveIntentFromRetValue" unit="$r3 = virtualinvoke r0.&lt;de.danoeh.antennapod.receiver.SPAReceiver: android.content.Intent getIntent()&gt;()"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.receiver.SPAReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.receiver.SPAReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;,boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)"/>  
      <source name="de.danoeh.antennapod.receiver.SPAReceiver"/>  
      <destinition name="de.danoeh.antennapod.core.service.download.DownloadService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.receiver.SPAReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;"/>  
        <node method="DownloadRequester download" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="DownloadRequester download" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/download/DownloadService;&quot;)"/>  
        <node method="DownloadRequester download" type="PassOutIntent" unit="staticinvoke &lt;android.support.v4.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)&gt;($r2, $r5)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.receiver.SPAReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.receiver.SPAReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;,&lt;de.danoeh.antennapod.core.ClientConfig: void initialize(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.UpdateManager: void init(android.content.Context)&gt;,void init(android.content.Context), &lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.receiver.SPAReceiver"/>  
      <destinition name="interICC_new android.content.Context, "/>  
      <sender action="new android.content.Context"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.receiver.SPAReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.ClientConfig: void initialize(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.UpdateManager: void init(android.content.Context)&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.receiver.SPAReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.receiver.SPAReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;,void onReceive(android.content.Context,android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.receiver.SPAReceiver"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.receiver.SPAReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="SPAReceiver onReceive" type="ReceiveIntentFromRetValue" unit="$r3 = virtualinvoke r0.&lt;de.danoeh.antennapod.receiver.SPAReceiver: android.content.Intent getIntent()&gt;()"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.receiver.SPAReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.receiver.SPAReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;,&lt;de.danoeh.antennapod.core.ClientConfig: void initialize(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.UpdateManager: void init(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;,boolean isIntentAvailable(android.content.Context,java.lang.String)"/>  
      <source name="de.danoeh.antennapod.receiver.SPAReceiver"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.receiver.SPAReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.ClientConfig: void initialize(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.UpdateManager: void init(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.receiver.SPAReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.receiver.SPAReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;,void onReceive(android.content.Context,android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.receiver.SPAReceiver"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.receiver.SPAReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="SPAReceiver onReceive" type="ReceiveIntentFromParatMethod" unit="$r3 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.receiver.SPAReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.receiver.SPAReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;,void onReceive(android.content.Context,android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.receiver.SPAReceiver"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.receiver.SPAReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="SPAReceiver onReceive" type="ReceiveIntentFromRetValue" unit="$r3 = virtualinvoke r0.&lt;de.danoeh.antennapod.receiver.SPAReceiver: android.content.Intent getIntent()&gt;()"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.receiver.SPAReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.receiver.SPAReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;,void onReceive(android.content.Context,android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.receiver.SPAReceiver"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.receiver.SPAReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="SPAReceiver onReceive" type="ReceiveIntentFromParatMethod" unit="$r3 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.VideoplayerActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.VideoplayerActivity: void onResume()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.VideoplayerActivity: void onResume()&gt;,void onResume()"/>  
      <source name="de.danoeh.antennapod.activity.VideoplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.VideoplayerActivity: void onResume()&gt;"/>  
        <node method="VideoplayerActivity onResume" type="ReceiveIntentFromRetValue" unit="$r1 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.content.Intent getPlayerActivityIntent(android.content.Context)&gt;(r0)"/>  
        <node method="VideoplayerActivity onResume" type="PassOutIntent" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.activity.VideoplayerActivity: void startActivity(android.content.Intent)&gt;($r1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.VideoplayerActivity: void onResume()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.VideoplayerActivity: void onResume()&gt;,void onResume()"/>  
      <source name="de.danoeh.antennapod.activity.VideoplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.VideoplayerActivity: void onResume()&gt;"/>  
        <node method="VideoplayerActivity onResume" type="ReceiveIntentFromRetValue" unit="$r1 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.content.Intent getPlayerActivityIntent(android.content.Context)&gt;(r0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.VideoplayerActivity: void onResume()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.VideoplayerActivity: void onResume()&gt;,void onResume(), &lt;de.danoeh.antennapod.activity.MediaplayerActivity: void playExternalMedia(android.content.Intent,de.danoeh.antennapod.core.feed.MediaType)&gt;"/>  
      <source name="de.danoeh.antennapod.activity.VideoplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.VideoplayerActivity: void onResume()&gt;"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.VideoplayerActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.VideoplayerActivity: void onPlayPause()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.VideoplayerActivity: void onPlayPause()&gt;,&lt;de.danoeh.antennapod.activity.MediaplayerActivity: void onPlayPause()&gt;,&lt;de.danoeh.antennapod.core.util.playback.PlaybackController: void playPause()&gt;,&lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: void start()&gt;,void start(), &lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: android.content.Intent getIntent()&gt;"/>  
      <source name="de.danoeh.antennapod.activity.VideoplayerActivity"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.VideoplayerActivity: void onPlayPause()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity: void onPlayPause()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.PlaybackController: void playPause()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: void start()&gt;"/>  
        <node method="PlaybackServiceStarter start" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: android.content.Intent getIntent()&gt;()"/>  
        <node method="PlaybackServiceStarter getIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="PlaybackServiceStarter getIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/>  
        <node method="PlaybackServiceStarter start" type="PassOutIntent" unit="staticinvoke &lt;android.support.v4.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)&gt;($r2, $r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.preferences.PreferenceController"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$42: void call(java.lang.Object)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$42: void call(java.lang.Object)&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController: void lambda$export$44$PreferenceController(android.support.v7.app.AlertDialog$Builder,android.content.Context,java.io.File)&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$56: void onClick(android.content.DialogInterface,int)&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController: void lambda$null$43$PreferenceController$3c92ef9(android.content.Context,java.io.File)&gt;,void lambda$null$43$PreferenceController$3c92ef9(android.content.Context,java.io.File)"/>  
      <source name="de.danoeh.antennapod.preferences.PreferenceController"/>  
      <destinition name="de.danoeh.antennapod.activity.OnlineFeedViewActivity"/>  
      <sender action="android.intent.action.SEND" type="text/plain" flags="FLAG_GRANT_READ_URI_PERMISSION "/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$42: void call(java.lang.Object)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: void lambda$export$44$PreferenceController(android.support.v7.app.AlertDialog$Builder,android.content.Context,java.io.File)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$56: void onClick(android.content.DialogInterface,int)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: void lambda$null$43$PreferenceController$3c92ef9(android.content.Context,java.io.File)&gt;"/>  
        <node method="PreferenceController lambda$null$43$PreferenceController$3c92ef9" type="CreateMethod" unit="$r4 = new android.content.Intent"/>  
        <node method="PreferenceController lambda$null$43$PreferenceController$3c92ef9" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.SEND&quot;)"/>  
        <node method="PreferenceController lambda$null$43$PreferenceController$3c92ef9" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;text/plain&quot;)"/>  
        <node method="PreferenceController lambda$null$43$PreferenceController$3c92ef9" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(1)"/>  
        <node method="PreferenceController lambda$null$43$PreferenceController$3c92ef9" type="PassOutIntent" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r4)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$42: void call(java.lang.Object)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$42: void call(java.lang.Object)&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController: void lambda$export$44$PreferenceController(android.support.v7.app.AlertDialog$Builder,android.content.Context,java.io.File)&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$56: void onClick(android.content.DialogInterface,int)&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController: void lambda$null$43$PreferenceController$3c92ef9(android.content.Context,java.io.File)&gt;,void lambda$null$43$PreferenceController$3c92ef9(android.content.Context,java.io.File)"/>  
      <source name="de.danoeh.antennapod.preferences.PreferenceController"/>  
      <destinition name="de.danoeh.antennapod.activity.OnlineFeedViewActivity"/>  
      <sender action="android.intent.action.SEND" type="text/plain" flags="FLAG_GRANT_READ_URI_PERMISSION "/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$42: void call(java.lang.Object)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: void lambda$export$44$PreferenceController(android.support.v7.app.AlertDialog$Builder,android.content.Context,java.io.File)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$56: void onClick(android.content.DialogInterface,int)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: void lambda$null$43$PreferenceController$3c92ef9(android.content.Context,java.io.File)&gt;"/>  
        <node method="PreferenceController lambda$null$43$PreferenceController$3c92ef9" type="CreateMethod" unit="$r4 = new android.content.Intent"/>  
        <node method="PreferenceController lambda$null$43$PreferenceController$3c92ef9" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.SEND&quot;)"/>  
        <node method="PreferenceController lambda$null$43$PreferenceController$3c92ef9" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;text/plain&quot;)"/>  
        <node method="PreferenceController lambda$null$43$PreferenceController$3c92ef9" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(1)"/>  
        <node method="PreferenceController lambda$null$43$PreferenceController$3c92ef9" type="PassOutIntent" unit="$r8 = virtualinvoke $r7.&lt;android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)&gt;($r4, 65536)"/>  
        <node method="PreferenceController lambda$null$43$PreferenceController$3c92ef9" type="PassOutIntent" unit="virtualinvoke $r0.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r4)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.fragment.RunningDownloadsFragment"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.RunningDownloadsFragment$1: void onSecondaryActionClick(de.danoeh.antennapod.core.service.download.Downloader)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.RunningDownloadsFragment$1: void onSecondaryActionClick(de.danoeh.antennapod.core.service.download.Downloader)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void cancelDownload(android.content.Context,java.lang.String)&gt;,void cancelDownload(android.content.Context,java.lang.String)"/>  
      <source name="de.danoeh.antennapod.fragment.RunningDownloadsFragment"/>  
      <destinition name="interICC_action.de.danoeh.antennapod.core.service.cancelDownload, "/>  
      <sender action="action.de.danoeh.antennapod.core.service.cancelDownload"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.RunningDownloadsFragment$1: void onSecondaryActionClick(de.danoeh.antennapod.core.service.download.Downloader)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void cancelDownload(android.content.Context,java.lang.String)&gt;"/>  
        <node method="DownloadRequester cancelDownload" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="DownloadRequester cancelDownload" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;action.de.danoeh.antennapod.core.service.cancelDownload&quot;)"/>  
        <node method="DownloadRequester cancelDownload" type="PassOutIntent" unit="virtualinvoke $r3.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.DownloadAuthenticationActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.DownloadAuthenticationActivity$$Lambda$0: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.DownloadAuthenticationActivity$$Lambda$0: void onClick(android.view.View)&gt;,void onClick(android.view.View)"/>  
      <source name="de.danoeh.antennapod.activity.DownloadAuthenticationActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.DownloadAuthenticationActivity$$Lambda$0: void onClick(android.view.View)&gt;"/>  
        <node method="DownloadAuthenticationActivity$$Lambda$0 onClick" type="CreateMethod" unit="$r8 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.DownloadAuthenticationActivity$$Lambda$0: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.DownloadAuthenticationActivity$$Lambda$0: void onClick(android.view.View)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;,boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)"/>  
      <source name="de.danoeh.antennapod.activity.DownloadAuthenticationActivity"/>  
      <destinition name="de.danoeh.antennapod.core.service.download.DownloadService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.DownloadAuthenticationActivity$$Lambda$0: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;"/>  
        <node method="DownloadRequester download" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="DownloadRequester download" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/download/DownloadService;&quot;)"/>  
        <node method="DownloadRequester download" type="PassOutIntent" unit="staticinvoke &lt;android.support.v4.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)&gt;($r2, $r5)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.DownloadAuthenticationActivity$$Lambda$0: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.DownloadAuthenticationActivity$$Lambda$0: void onClick(android.view.View)&gt;,void onClick(android.view.View)"/>  
      <source name="de.danoeh.antennapod.activity.DownloadAuthenticationActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.DownloadAuthenticationActivity$$Lambda$0: void onClick(android.view.View)&gt;"/>  
        <node method="DownloadAuthenticationActivity$$Lambda$0 onClick" type="CreateMethod" unit="$r8 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.receiver.ConnectivityActionReceiver"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.receiver.ConnectivityActionReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.receiver.ConnectivityActionReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;,void onReceive(android.content.Context,android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.receiver.ConnectivityActionReceiver"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.receiver.ConnectivityActionReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="ConnectivityActionReceiver onReceive" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.receiver.ConnectivityActionReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.receiver.ConnectivityActionReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;,&lt;de.danoeh.antennapod.core.ClientConfig: void initialize(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.UpdateManager: void init(android.content.Context)&gt;,void init(android.content.Context), &lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.receiver.ConnectivityActionReceiver"/>  
      <destinition name="interICC_new android.content.Context, "/>  
      <sender action="new android.content.Context"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.receiver.ConnectivityActionReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.ClientConfig: void initialize(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.UpdateManager: void init(android.content.Context)&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.receiver.ConnectivityActionReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.receiver.ConnectivityActionReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;,void onReceive(android.content.Context,android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.receiver.ConnectivityActionReceiver"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.receiver.ConnectivityActionReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="ConnectivityActionReceiver onReceive" type="ReceiveIntentFromRetValue" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.receiver.ConnectivityActionReceiver: android.content.Intent getIntent()&gt;()"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.receiver.ConnectivityActionReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.receiver.ConnectivityActionReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;,void onReceive(android.content.Context,android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.receiver.ConnectivityActionReceiver"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.receiver.ConnectivityActionReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="ConnectivityActionReceiver onReceive" type="ReceiveIntentFromRetValue" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.receiver.ConnectivityActionReceiver: android.content.Intent getIntent()&gt;()"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.receiver.ConnectivityActionReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.receiver.ConnectivityActionReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;,void onReceive(android.content.Context,android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.receiver.ConnectivityActionReceiver"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.receiver.ConnectivityActionReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="ConnectivityActionReceiver onReceive" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.receiver.ConnectivityActionReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.receiver.ConnectivityActionReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;,&lt;de.danoeh.antennapod.core.ClientConfig: void initialize(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.UpdateManager: void init(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;,boolean isIntentAvailable(android.content.Context,java.lang.String)"/>  
      <source name="de.danoeh.antennapod.receiver.ConnectivityActionReceiver"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.receiver.ConnectivityActionReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.ClientConfig: void initialize(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.UpdateManager: void init(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.fragment.ItemDescriptionFragment"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemDescriptionFragment: boolean onContextItemSelected(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemDescriptionFragment: boolean onContextItemSelected(android.view.MenuItem)&gt;,boolean onContextItemSelected(android.view.MenuItem)"/>  
      <source name="de.danoeh.antennapod.fragment.ItemDescriptionFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemDescriptionFragment: boolean onContextItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="ItemDescriptionFragment onContextItemSelected" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="ItemDescriptionFragment onContextItemSelected" type="PassOutIntent" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentActivity: void startActivity(android.content.Intent)&gt;($r5)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemDescriptionFragment: boolean onContextItemSelected(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemDescriptionFragment: boolean onContextItemSelected(android.view.MenuItem)&gt;,boolean onContextItemSelected(android.view.MenuItem)"/>  
      <source name="de.danoeh.antennapod.fragment.ItemDescriptionFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemDescriptionFragment: boolean onContextItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="ItemDescriptionFragment onContextItemSelected" type="CreateMethod" unit="$r5 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.fragment.AllEpisodesFragment"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.AllEpisodesFragment: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.AllEpisodesFragment: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List,java.lang.Runnable)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks$$Lambda$0: void run()&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncIntent(android.content.Context)&gt;,void sendSyncIntent(android.content.Context), &lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
      <source name="de.danoeh.antennapod.fragment.AllEpisodesFragment"/>  
      <destinition name="de.danoeh.antennapod.core.service.GpodnetSyncService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.AllEpisodesFragment: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List,java.lang.Runnable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks$$Lambda$0: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncIntent(android.content.Context)&gt;"/>  
        <node method="GpodnetSyncService sendSyncIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="GpodnetSyncService sendSyncIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lde/danoeh/antennapod/core/service/GpodnetSyncService;&quot;)"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.AllEpisodesFragment: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.AllEpisodesFragment: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List,java.lang.Runnable)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks$$Lambda$0: void run()&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncIntent(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;,void enqueueWork(android.content.Context,android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.fragment.AllEpisodesFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.AllEpisodesFragment: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List,java.lang.Runnable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks$$Lambda$0: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncIntent(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.AllEpisodesFragment: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.AllEpisodesFragment: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List,java.lang.Runnable)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks$$Lambda$0: void run()&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshFeeds(android.content.Context,java.util.List)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;,boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)"/>  
      <source name="de.danoeh.antennapod.fragment.AllEpisodesFragment"/>  
      <destinition name="de.danoeh.antennapod.core.service.download.DownloadService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.AllEpisodesFragment: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List,java.lang.Runnable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks$$Lambda$0: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshFeeds(android.content.Context,java.util.List)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;"/>  
        <node method="DownloadRequester download" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="DownloadRequester download" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/download/DownloadService;&quot;)"/>  
        <node method="DownloadRequester download" type="PassOutIntent" unit="staticinvoke &lt;android.support.v4.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)&gt;($r2, $r5)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.fragment.ExternalPlayerFragment"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ExternalPlayerFragment$$Lambda$0: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ExternalPlayerFragment$$Lambda$0: void onClick(android.view.View)&gt;,void onClick(android.view.View)"/>  
      <source name="de.danoeh.antennapod.fragment.ExternalPlayerFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ExternalPlayerFragment$$Lambda$0: void onClick(android.view.View)&gt;"/>  
        <node method="ExternalPlayerFragment$$Lambda$0 onClick" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.content.Intent getPlayerActivityIntent(android.content.Context,de.danoeh.antennapod.core.util.playback.Playable)&gt;($r5, $r4)"/>  
        <node method="ExternalPlayerFragment$$Lambda$0 onClick" type="PassOutIntent" unit="virtualinvoke $r2.&lt;de.danoeh.antennapod.fragment.ExternalPlayerFragment: void startActivity(android.content.Intent,android.os.Bundle)&gt;($r6, $r11)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ExternalPlayerFragment$$Lambda$0: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ExternalPlayerFragment$$Lambda$0: void onClick(android.view.View)&gt;,void onClick(android.view.View)"/>  
      <source name="de.danoeh.antennapod.fragment.ExternalPlayerFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ExternalPlayerFragment$$Lambda$0: void onClick(android.view.View)&gt;"/>  
        <node method="ExternalPlayerFragment$$Lambda$0 onClick" type="ReceiveIntentFromRetValue" unit="$r6 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.content.Intent getPlayerActivityIntent(android.content.Context,de.danoeh.antennapod.core.util.playback.Playable)&gt;($r5, $r4)"/>  
        <node method="ExternalPlayerFragment$$Lambda$0 onClick" type="PassOutIntent" unit="virtualinvoke $r2.&lt;de.danoeh.antennapod.fragment.ExternalPlayerFragment: void startActivity(android.content.Intent)&gt;($r6)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.backup.OpmlBackupAgent"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.backup.OpmlBackupAgent$OpmlBackupHelper: void restoreEntity(android.app.backup.BackupDataInputStream)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.backup.OpmlBackupAgent$OpmlBackupHelper: void restoreEntity(android.app.backup.BackupDataInputStream)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;,boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)"/>  
      <source name="de.danoeh.antennapod.core.backup.OpmlBackupAgent"/>  
      <destinition name="de.danoeh.antennapod.core.service.download.DownloadService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.backup.OpmlBackupAgent$OpmlBackupHelper: void restoreEntity(android.app.backup.BackupDataInputStream)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;"/>  
        <node method="DownloadRequester download" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="DownloadRequester download" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/download/DownloadService;&quot;)"/>  
        <node method="DownloadRequester download" type="PassOutIntent" unit="staticinvoke &lt;android.support.v4.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)&gt;($r2, $r5)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.DirectoryChooserActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.DirectoryChooserActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.DirectoryChooserActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,&lt;de.danoeh.antennapod.activity.DirectoryChooserActivity: void returnSelectedFolder()&gt;,void returnSelectedFolder()"/>  
      <source name="de.danoeh.antennapod.activity.DirectoryChooserActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.DirectoryChooserActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.DirectoryChooserActivity: void returnSelectedFolder()&gt;"/>  
        <node method="DirectoryChooserActivity returnSelectedFolder" type="CreateMethod" unit="$r1 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.AudioplayerActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.AudioplayerActivity$$Lambda$1: boolean onLongClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.AudioplayerActivity$$Lambda$1: boolean onLongClick(android.view.View)&gt;,boolean onLongClick(android.view.View), &lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showDialog(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.activity.AudioplayerActivity"/>  
      <destinition name="interICC_new de.danoeh.antennapod.activity.AudioplayerActivity, "/>  
      <sender action="new de.danoeh.antennapod.activity.AudioplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.AudioplayerActivity$$Lambda$1: boolean onLongClick(android.view.View)&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="AudioplayerActivity$$Lambda$1 onLongClick" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/>  
        <node method="AudioplayerActivity$$Lambda$1 onLongClick" type="CreateMethod" unit="$r2 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.AudioplayerActivity$$Lambda$1: boolean onLongClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.AudioplayerActivity$$Lambda$1: boolean onLongClick(android.view.View)&gt;,boolean onLongClick(android.view.View), &lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showDialog(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.activity.AudioplayerActivity"/>  
      <destinition name="interICC_new de.danoeh.antennapod.activity.AudioplayerActivity, "/>  
      <sender action="new de.danoeh.antennapod.activity.AudioplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.AudioplayerActivity$$Lambda$1: boolean onLongClick(android.view.View)&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="AudioplayerActivity$$Lambda$1 onLongClick" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/>  
        <node method="AudioplayerActivity$$Lambda$1 onLongClick" type="CreateMethod" unit="$r2 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.AudioplayerActivity$$Lambda$1: boolean onLongClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.AudioplayerActivity$$Lambda$1: boolean onLongClick(android.view.View)&gt;,&lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled(android.content.Context)&gt;,boolean isPrestoLibraryInstalled(android.content.Context), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.activity.AudioplayerActivity"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.AudioplayerActivity$$Lambda$1: boolean onLongClick(android.view.View)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled(android.content.Context)&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.AudioplayerActivity$$Lambda$1: boolean onLongClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.AudioplayerActivity$$Lambda$1: boolean onLongClick(android.view.View)&gt;,&lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;,boolean isIntentAvailable(android.content.Context,java.lang.String)"/>  
      <source name="de.danoeh.antennapod.activity.AudioplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.AudioplayerActivity$$Lambda$1: boolean onLongClick(android.view.View)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.DirectoryChooserActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.DirectoryChooserActivity$1: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.DirectoryChooserActivity$1: void onClick(android.view.View)&gt;,&lt;de.danoeh.antennapod.activity.DirectoryChooserActivity$1$$Lambda$1: void onClick(android.content.DialogInterface,int)&gt;,&lt;de.danoeh.antennapod.activity.DirectoryChooserActivity: void access$200(de.danoeh.antennapod.activity.DirectoryChooserActivity)&gt;,&lt;de.danoeh.antennapod.activity.DirectoryChooserActivity: void returnSelectedFolder()&gt;,void returnSelectedFolder()"/>  
      <source name="de.danoeh.antennapod.activity.DirectoryChooserActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.DirectoryChooserActivity$1: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.DirectoryChooserActivity$1$$Lambda$1: void onClick(android.content.DialogInterface,int)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.DirectoryChooserActivity: void access$200(de.danoeh.antennapod.activity.DirectoryChooserActivity)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.DirectoryChooserActivity: void returnSelectedFolder()&gt;"/>  
        <node method="DirectoryChooserActivity returnSelectedFolder" type="CreateMethod" unit="$r1 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.antennapod.audio.MediaPlayer"> 
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void finalize()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void finalize()&gt;,&lt;org.antennapod.audio.MediaPlayer: void release()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void release()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void finalize()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void release()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void release()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void finalize()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void finalize()&gt;,&lt;org.antennapod.audio.MediaPlayer: void release()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void release()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void finalize()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void release()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void release()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void finalize()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void finalize()&gt;,&lt;org.antennapod.audio.MediaPlayer: void release()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void release()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void finalize()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void release()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void release()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void finalize()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void finalize()&gt;,&lt;org.antennapod.audio.MediaPlayer: void release()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void release()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void finalize()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void release()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void release()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="PassOutIntent" unit="$z0 = virtualinvoke $r4.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r1, $r2, 1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void finalize()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void finalize()&gt;,&lt;org.antennapod.audio.MediaPlayer: void release()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void release()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void finalize()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void release()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void release()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.service.playback.PlaybackService"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$12: boolean onMediaButtonEvent(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$12: boolean onMediaButtonEvent(android.content.Intent)&gt;,boolean onMediaButtonEvent(android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$12: boolean onMediaButtonEvent(android.content.Intent)&gt;"/>  
        <node method="PlaybackService$12 onMediaButtonEvent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.ImportExportActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.ImportExportActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.ImportExportActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle)"/>  
      <source name="de.danoeh.antennapod.activity.ImportExportActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.ImportExportActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="ImportExportActivity onCreate" type="setContentView" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.activity.ImportExportActivity: void setContentView(int)&gt;(2131558486)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.antennapod.audio.MediaPlayer"> 
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled()&gt;,boolean isPrestoLibraryInstalled(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;,android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;,android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="PassOutIntent" unit="$z0 = virtualinvoke $r4.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r1, $r2, 1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;,android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void start()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.OpmlImportFromPathActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.OpmlImportFromPathActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.OpmlImportFromPathActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle)"/>  
      <source name="de.danoeh.antennapod.activity.OpmlImportFromPathActivity"/>  
      <sender action="android.intent.action.PICK, android.intent.action.GET_CONTENT, android.intent.action.PICK, android.intent.action.GET_CONTENT, android.intent.action.PICK, android.intent.action.GET_CONTENT, android.intent.action.PICK, android.intent.action.GET_CONTENT" category="android.intent.category.OPENABLE, android.intent.category.OPENABLE, android.intent.category.OPENABLE, android.intent.category.OPENABLE" data="null, null, null, null" type="*/*, */*, */*, */*"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.OpmlImportFromPathActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.PICK&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;(null)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.GET_CONTENT&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.OPENABLE&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;*/*&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.PICK&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;(null)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.GET_CONTENT&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.OPENABLE&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;*/*&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.PICK&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;(null)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.GET_CONTENT&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.OPENABLE&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;*/*&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.PICK&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;(null)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.GET_CONTENT&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.OPENABLE&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;*/*&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.OpmlImportFromPathActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.OpmlImportFromPathActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle)"/>  
      <source name="de.danoeh.antennapod.activity.OpmlImportFromPathActivity"/>  
      <sender action="android.intent.action.PICK, android.intent.action.GET_CONTENT, android.intent.action.PICK, android.intent.action.GET_CONTENT, android.intent.action.PICK, android.intent.action.GET_CONTENT, android.intent.action.PICK, android.intent.action.GET_CONTENT" category="android.intent.category.OPENABLE, android.intent.category.OPENABLE, android.intent.category.OPENABLE, android.intent.category.OPENABLE, android.intent.category.OPENABLE" data="null, null, null, null" type="*/*, */*, */*, */*, */*"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.OpmlImportFromPathActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.PICK&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;(null)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.GET_CONTENT&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.OPENABLE&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;*/*&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.PICK&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;(null)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.GET_CONTENT&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.OPENABLE&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;*/*&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.OPENABLE&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.PICK&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;(null)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.GET_CONTENT&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.OPENABLE&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;*/*&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;*/*&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.PICK&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;(null)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.GET_CONTENT&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.OPENABLE&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;*/*&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.OpmlImportFromPathActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.OpmlImportFromPathActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle)"/>  
      <source name="de.danoeh.antennapod.activity.OpmlImportFromPathActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.OpmlImportFromPathActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="setContentView" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.activity.OpmlImportFromPathActivity: void setContentView(int)&gt;(2131558550)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.OpmlImportFromPathActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.OpmlImportFromPathActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle)"/>  
      <source name="de.danoeh.antennapod.activity.OpmlImportFromPathActivity"/>  
      <sender action="android.intent.action.GET_CONTENT, android.intent.action.PICK, android.intent.action.GET_CONTENT" category="android.intent.category.OPENABLE" data="null" type="*/*"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.OpmlImportFromPathActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.GET_CONTENT&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.PICK&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;(null)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.GET_CONTENT&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.OPENABLE&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;*/*&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.OpmlImportFromPathActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.OpmlImportFromPathActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle)"/>  
      <source name="de.danoeh.antennapod.activity.OpmlImportFromPathActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.OpmlImportFromPathActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="setContentView" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.activity.OpmlImportFromPathActivity: void setContentView(int)&gt;(2131558550)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.OpmlImportFromPathActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.OpmlImportFromPathActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle)"/>  
      <source name="de.danoeh.antennapod.activity.OpmlImportFromPathActivity"/>  
      <sender action="android.intent.action.GET_CONTENT, android.intent.action.PICK, android.intent.action.GET_CONTENT" category="android.intent.category.OPENABLE" data="null" type="*/*"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.OpmlImportFromPathActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.GET_CONTENT&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.PICK&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;(null)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.GET_CONTENT&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.OPENABLE&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;*/*&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.OpmlImportFromPathActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.OpmlImportFromPathActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle)"/>  
      <source name="de.danoeh.antennapod.activity.OpmlImportFromPathActivity"/>  
      <sender action="android.intent.action.PICK, android.intent.action.PICK, android.intent.action.GET_CONTENT" category="android.intent.category.OPENABLE" data="null" type="*/*"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.OpmlImportFromPathActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.PICK&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.PICK&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;(null)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.GET_CONTENT&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.OPENABLE&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;*/*&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.OpmlImportFromPathActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.OpmlImportFromPathActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle)"/>  
      <source name="de.danoeh.antennapod.activity.OpmlImportFromPathActivity"/>  
      <sender action="android.intent.action.PICK, android.intent.action.GET_CONTENT, android.intent.action.PICK, android.intent.action.GET_CONTENT, android.intent.action.PICK, android.intent.action.GET_CONTENT, android.intent.action.PICK, android.intent.action.GET_CONTENT" category="android.intent.category.OPENABLE, android.intent.category.OPENABLE, android.intent.category.OPENABLE, android.intent.category.OPENABLE" data="null, null, null, null" type="*/*, */*, */*, */*"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.OpmlImportFromPathActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.PICK&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;(null)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.GET_CONTENT&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.OPENABLE&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;*/*&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.PICK&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;(null)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.GET_CONTENT&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.OPENABLE&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;*/*&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.PICK&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;(null)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.GET_CONTENT&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.OPENABLE&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;*/*&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.PICK&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;(null)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.GET_CONTENT&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.OPENABLE&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;*/*&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.OpmlImportFromPathActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.OpmlImportFromPathActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle)"/>  
      <source name="de.danoeh.antennapod.activity.OpmlImportFromPathActivity"/>  
      <sender action="android.intent.action.PICK, android.intent.action.GET_CONTENT, android.intent.action.PICK, android.intent.action.GET_CONTENT, android.intent.action.PICK, android.intent.action.GET_CONTENT, android.intent.action.PICK, android.intent.action.GET_CONTENT" category="android.intent.category.OPENABLE, android.intent.category.OPENABLE, android.intent.category.OPENABLE, android.intent.category.OPENABLE" data="null, null, null, null, null" type="*/*, */*, */*, */*"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.OpmlImportFromPathActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.PICK&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;(null)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.GET_CONTENT&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.OPENABLE&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;*/*&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.PICK&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;(null)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.GET_CONTENT&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.OPENABLE&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;*/*&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.PICK&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;(null)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.GET_CONTENT&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.OPENABLE&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;*/*&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;(null)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.PICK&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;(null)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.GET_CONTENT&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.OPENABLE&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;*/*&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.OpmlImportFromPathActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.OpmlImportFromPathActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle)"/>  
      <source name="de.danoeh.antennapod.activity.OpmlImportFromPathActivity"/>  
      <sender action="android.intent.action.PICK, android.intent.action.PICK, android.intent.action.GET_CONTENT" category="android.intent.category.OPENABLE" data="null" type="*/*"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.OpmlImportFromPathActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.PICK&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.PICK&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;(null)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.GET_CONTENT&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.OPENABLE&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;*/*&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.OpmlImportFromPathActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.OpmlImportFromPathActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle)"/>  
      <source name="de.danoeh.antennapod.activity.OpmlImportFromPathActivity"/>  
      <sender action="android.intent.action.PICK, android.intent.action.GET_CONTENT, android.intent.action.PICK, android.intent.action.GET_CONTENT, android.intent.action.PICK, android.intent.action.GET_CONTENT, android.intent.action.PICK, android.intent.action.GET_CONTENT" category="android.intent.category.OPENABLE, android.intent.category.OPENABLE, android.intent.category.OPENABLE, android.intent.category.OPENABLE, android.intent.category.OPENABLE" data="null, null, null, null" type="*/*, */*, */*, */*, */*"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.OpmlImportFromPathActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.PICK&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;(null)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.GET_CONTENT&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.OPENABLE&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;*/*&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.PICK&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;(null)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.GET_CONTENT&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.OPENABLE&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;*/*&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.OPENABLE&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.PICK&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;(null)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.GET_CONTENT&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.OPENABLE&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;*/*&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;*/*&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.PICK&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;(null)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.GET_CONTENT&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.OPENABLE&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;*/*&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.OpmlImportFromPathActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.OpmlImportFromPathActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle)"/>  
      <source name="de.danoeh.antennapod.activity.OpmlImportFromPathActivity"/>  
      <sender action="android.intent.action.PICK, android.intent.action.GET_CONTENT, android.intent.action.PICK, android.intent.action.GET_CONTENT, android.intent.action.PICK, android.intent.action.GET_CONTENT, android.intent.action.PICK, android.intent.action.GET_CONTENT" category="android.intent.category.OPENABLE, android.intent.category.OPENABLE, android.intent.category.OPENABLE, android.intent.category.OPENABLE" data="null, null, null, null" type="*/*, */*, */*, */*"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.OpmlImportFromPathActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.PICK&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;(null)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.GET_CONTENT&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.OPENABLE&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;*/*&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.PICK&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;(null)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.GET_CONTENT&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.OPENABLE&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;*/*&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.PICK&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;(null)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.GET_CONTENT&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.OPENABLE&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;*/*&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.PICK&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;(null)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.GET_CONTENT&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.OPENABLE&quot;)"/>  
        <node method="OpmlImportFromPathActivity onCreate" type="SetAttribute" unit="virtualinvoke $r14.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;*/*&quot;)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.receiver.PowerConnectionReceiver"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.receiver.PowerConnectionReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.receiver.PowerConnectionReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;,void onReceive(android.content.Context,android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.receiver.PowerConnectionReceiver"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.receiver.PowerConnectionReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="PowerConnectionReceiver onReceive" type="ReceiveIntentFromParatMethod" unit="$r3 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.receiver.PowerConnectionReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.receiver.PowerConnectionReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;,void onReceive(android.content.Context,android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.receiver.PowerConnectionReceiver"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.receiver.PowerConnectionReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="PowerConnectionReceiver onReceive" type="ReceiveIntentFromRetValue" unit="$r3 = virtualinvoke r0.&lt;de.danoeh.antennapod.receiver.PowerConnectionReceiver: android.content.Intent getIntent()&gt;()"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.receiver.PowerConnectionReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.receiver.PowerConnectionReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;,&lt;de.danoeh.antennapod.core.ClientConfig: void initialize(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.UpdateManager: void init(android.content.Context)&gt;,void init(android.content.Context), &lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.receiver.PowerConnectionReceiver"/>  
      <destinition name="interICC_new android.content.Context, "/>  
      <sender action="new android.content.Context"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.receiver.PowerConnectionReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.ClientConfig: void initialize(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.UpdateManager: void init(android.content.Context)&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.receiver.PowerConnectionReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.receiver.PowerConnectionReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;,&lt;de.danoeh.antennapod.core.ClientConfig: void initialize(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.UpdateManager: void init(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;,boolean isIntentAvailable(android.content.Context,java.lang.String)"/>  
      <source name="de.danoeh.antennapod.receiver.PowerConnectionReceiver"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.receiver.PowerConnectionReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.ClientConfig: void initialize(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.UpdateManager: void init(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.service.playback.PlaybackService"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.support.v4.app.NotificationCompat$Builder access$1800(de.danoeh.antennapod.core.service.playback.PlaybackService)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.support.v4.app.NotificationCompat$Builder access$1800(de.danoeh.antennapod.core.service.playback.PlaybackService)&gt;,&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.support.v4.app.NotificationCompat$Builder createBasicNotification()&gt;,android.support.v4.app.NotificationCompat$Builder createBasicNotification()"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.support.v4.app.NotificationCompat$Builder access$1800(de.danoeh.antennapod.core.service.playback.PlaybackService)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.support.v4.app.NotificationCompat$Builder createBasicNotification()&gt;"/>  
        <node method="PlaybackService createBasicNotification" type="ReceiveIntentFromRetValue" unit="$r1 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.content.Intent getPlayerActivityIntent(android.content.Context)&gt;(r0)"/>  
        <node method="PlaybackService createBasicNotification" type="PassOutIntent" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r2)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.util.playback.PlaybackController"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.PlaybackController$$Lambda$3: void call(java.lang.Object)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.PlaybackController$$Lambda$3: void call(java.lang.Object)&gt;,void call(java.lang.Object)"/>  
      <source name="de.danoeh.antennapod.core.util.playback.PlaybackController"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.PlaybackController$$Lambda$3: void call(java.lang.Object)&gt;"/>  
        <node method="PlaybackController$$Lambda$3 call" type="CreateMethod" unit="$r4 = new android.content.Intent"/>  
        <node method="PlaybackController$$Lambda$3 call" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/>  
        <node method="PlaybackController$$Lambda$3 call" type="PassOutIntent" unit="virtualinvoke $r7.&lt;android.app.Activity: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r4, $r5, 0)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.DownloadAuthenticationActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.DownloadAuthenticationActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.DownloadAuthenticationActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle)"/>  
      <source name="de.danoeh.antennapod.activity.DownloadAuthenticationActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.DownloadAuthenticationActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="DownloadAuthenticationActivity onCreate" type="setContentView" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.activity.DownloadAuthenticationActivity: void setContentView(int)&gt;(2131558460)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.config.PlaybackServiceCallbacksImpl"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.config.PlaybackServiceCallbacksImpl: android.content.Intent getPlayerActivityIntent(android.content.Context,de.danoeh.antennapod.core.feed.MediaType,boolean)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.config.PlaybackServiceCallbacksImpl: android.content.Intent getPlayerActivityIntent(android.content.Context,de.danoeh.antennapod.core.feed.MediaType,boolean)&gt;,android.content.Intent getPlayerActivityIntent(android.content.Context,de.danoeh.antennapod.core.feed.MediaType,boolean)"/>  
      <source name="de.danoeh.antennapod.config.PlaybackServiceCallbacksImpl"/>  
      <destinition name="de.danoeh.antennapod.activity.VideoplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.config.PlaybackServiceCallbacksImpl: android.content.Intent getPlayerActivityIntent(android.content.Context,de.danoeh.antennapod.core.feed.MediaType,boolean)&gt;"/>  
        <node method="PlaybackServiceCallbacksImpl getPlayerActivityIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="PlaybackServiceCallbacksImpl getPlayerActivityIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lde/danoeh/antennapod/activity/VideoplayerActivity;&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.config.PlaybackServiceCallbacksImpl: android.content.Intent getPlayerActivityIntent(android.content.Context,de.danoeh.antennapod.core.feed.MediaType,boolean)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.config.PlaybackServiceCallbacksImpl: android.content.Intent getPlayerActivityIntent(android.content.Context,de.danoeh.antennapod.core.feed.MediaType,boolean)&gt;,android.content.Intent getPlayerActivityIntent(android.content.Context,de.danoeh.antennapod.core.feed.MediaType,boolean)"/>  
      <source name="de.danoeh.antennapod.config.PlaybackServiceCallbacksImpl"/>  
      <destinition name="de.danoeh.antennapod.activity.AudioplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.config.PlaybackServiceCallbacksImpl: android.content.Intent getPlayerActivityIntent(android.content.Context,de.danoeh.antennapod.core.feed.MediaType,boolean)&gt;"/>  
        <node method="PlaybackServiceCallbacksImpl getPlayerActivityIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="PlaybackServiceCallbacksImpl getPlayerActivityIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lde/danoeh/antennapod/activity/AudioplayerActivity;&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.config.PlaybackServiceCallbacksImpl: android.content.Intent getPlayerActivityIntent(android.content.Context,de.danoeh.antennapod.core.feed.MediaType,boolean)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.config.PlaybackServiceCallbacksImpl: android.content.Intent getPlayerActivityIntent(android.content.Context,de.danoeh.antennapod.core.feed.MediaType,boolean)&gt;,android.content.Intent getPlayerActivityIntent(android.content.Context,de.danoeh.antennapod.core.feed.MediaType,boolean)"/>  
      <source name="de.danoeh.antennapod.config.PlaybackServiceCallbacksImpl"/>  
      <destinition name="de.danoeh.antennapod.activity.VideoplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.config.PlaybackServiceCallbacksImpl: android.content.Intent getPlayerActivityIntent(android.content.Context,de.danoeh.antennapod.core.feed.MediaType,boolean)&gt;"/>  
        <node method="PlaybackServiceCallbacksImpl getPlayerActivityIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="PlaybackServiceCallbacksImpl getPlayerActivityIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lde/danoeh/antennapod/activity/VideoplayerActivity;&quot;)"/>  
        <node method="PlaybackServiceCallbacksImpl getPlayerActivityIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(524288)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.config.PlaybackServiceCallbacksImpl: android.content.Intent getPlayerActivityIntent(android.content.Context,de.danoeh.antennapod.core.feed.MediaType,boolean)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.config.PlaybackServiceCallbacksImpl: android.content.Intent getPlayerActivityIntent(android.content.Context,de.danoeh.antennapod.core.feed.MediaType,boolean)&gt;,android.content.Intent getPlayerActivityIntent(android.content.Context,de.danoeh.antennapod.core.feed.MediaType,boolean)"/>  
      <source name="de.danoeh.antennapod.config.PlaybackServiceCallbacksImpl"/>  
      <destinition name="de.danoeh.antennapod.activity.CastplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.config.PlaybackServiceCallbacksImpl: android.content.Intent getPlayerActivityIntent(android.content.Context,de.danoeh.antennapod.core.feed.MediaType,boolean)&gt;"/>  
        <node method="PlaybackServiceCallbacksImpl getPlayerActivityIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="PlaybackServiceCallbacksImpl getPlayerActivityIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lde/danoeh/antennapod/activity/CastplayerActivity;&quot;)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.antennapod.audio.MediaPlayer"> 
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled()&gt;,boolean isPrestoLibraryInstalled(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer checkMpi" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection), &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer &lt;init&gt;" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;,android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;,android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="java.lang.String"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r8)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="ReceiveIntentFromRetValue" unit="$r4 = staticinvoke &lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;($r1, &quot;com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8&quot;)"/>  
        <node method="ServiceBackedAudioPlayer ConnectPlayMediaService" type="PassOutIntent" unit="$z0 = virtualinvoke $r4.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r1, $r2, 1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;,&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;,boolean ConnectPlayMediaService(), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: void &lt;init&gt;(org.antennapod.audio.MediaPlayer,android.content.Context,android.content.ServiceConnection)&gt;"/>  
        <node method="&lt;org.antennapod.audio.ServiceBackedAudioPlayer: boolean ConnectPlayMediaService()&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,void checkMpi(), &lt;org.antennapod.audio.MediaPlayer: void setupMpi(android.content.Context)&gt;"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;"/>  
      <methodtrace value="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;,&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;,&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;,android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)"/>  
      <source name="org.antennapod.audio.MediaPlayer"/>  
      <nodes> 
        <node method="&lt;org.antennapod.audio.MediaPlayer: void stop()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: void checkMpi()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: android.content.Intent getPrestoServiceIntent(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
        <node method="MediaPlayer getPrestoServiceIntent" type="PassOutIntent" unit="$r4 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r3, 65536)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.util.playback.PlaybackController"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.util.playback.PlaybackController$$Lambda$2: java.lang.Object call()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.util.playback.PlaybackController$$Lambda$2: java.lang.Object call()&gt;,java.lang.Object call(), &lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: android.content.Intent getIntent()&gt;"/>  
      <source name="de.danoeh.antennapod.core.util.playback.PlaybackController"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.util.playback.PlaybackController$$Lambda$2: java.lang.Object call()&gt;"/>  
        <node method="PlaybackController$$Lambda$2 call" type="ReceiveIntentFromRetValue" unit="$r6 = virtualinvoke $r5.&lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: android.content.Intent getIntent()&gt;()"/>  
        <node method="PlaybackServiceStarter getIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="PlaybackServiceStarter getIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.dialog.AuthenticationDialog"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.dialog.AuthenticationDialog: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.dialog.AuthenticationDialog: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle)"/>  
      <source name="de.danoeh.antennapod.dialog.AuthenticationDialog"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.dialog.AuthenticationDialog: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="AuthenticationDialog onCreate" type="setContentView" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.dialog.AuthenticationDialog: void setContentView(int)&gt;(2131558436)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.StorageErrorActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.StorageErrorActivity$$Lambda$0: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.StorageErrorActivity$$Lambda$0: void onClick(android.view.View)&gt;,void onClick(android.view.View)"/>  
      <source name="de.danoeh.antennapod.activity.StorageErrorActivity"/>  
      <destinition name="de.danoeh.antennapod.activity.DirectoryChooserActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.StorageErrorActivity$$Lambda$0: void onClick(android.view.View)&gt;"/>  
        <node method="StorageErrorActivity$$Lambda$0 onClick" type="CreateMethod" unit="$r4 = new android.content.Intent"/>  
        <node method="StorageErrorActivity$$Lambda$0 onClick" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/activity/DirectoryChooserActivity;&quot;)"/>  
        <node method="StorageErrorActivity$$Lambda$0 onClick" type="PassOutIntent" unit="virtualinvoke $r2.&lt;de.danoeh.antennapod.activity.StorageErrorActivity: void startActivityForResult(android.content.Intent,int)&gt;($r4, 1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.service.playback.PlaybackService"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$2: boolean onMediaPlayerInfo(int,int)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$2: boolean onMediaPlayerInfo(int,int)&gt;,&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void access$200(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;,&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendNotificationBroadcast(int,int)&gt;,void sendNotificationBroadcast(int,int)"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="interICC_action.de.danoeh.antennapod.core.service.playerNotification, "/>  
      <sender action="action.de.danoeh.antennapod.core.service.playerNotification"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$2: boolean onMediaPlayerInfo(int,int)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void access$200(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendNotificationBroadcast(int,int)&gt;"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;action.de.danoeh.antennapod.core.service.playerNotification&quot;)"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="PassOutIntent" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendBroadcast(android.content.Intent)&gt;($r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.OnlineFeedViewActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.OnlineFeedViewActivity$$Lambda$6: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.OnlineFeedViewActivity$$Lambda$6: void onClick(android.view.View)&gt;,void onClick(android.view.View)"/>  
      <source name="de.danoeh.antennapod.activity.OnlineFeedViewActivity"/>  
      <destinition name="de.danoeh.antennapod.activity.MainActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.OnlineFeedViewActivity$$Lambda$6: void onClick(android.view.View)&gt;"/>  
        <node method="OnlineFeedViewActivity$$Lambda$6 onClick" type="CreateMethod" unit="$r4 = new android.content.Intent"/>  
        <node method="OnlineFeedViewActivity$$Lambda$6 onClick" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/activity/MainActivity;&quot;)"/>  
        <node method="OnlineFeedViewActivity$$Lambda$6 onClick" type="SetAttribute" unit="virtualinvoke $r4.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(67108864)"/>  
        <node method="OnlineFeedViewActivity$$Lambda$6 onClick" type="PassOutIntent" unit="virtualinvoke $r2.&lt;de.danoeh.antennapod.activity.OnlineFeedViewActivity: void startActivity(android.content.Intent)&gt;($r4)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.OnlineFeedViewActivity$$Lambda$6: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.OnlineFeedViewActivity$$Lambda$6: void onClick(android.view.View)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;,boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)"/>  
      <source name="de.danoeh.antennapod.activity.OnlineFeedViewActivity"/>  
      <destinition name="de.danoeh.antennapod.core.service.download.DownloadService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.OnlineFeedViewActivity$$Lambda$6: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;"/>  
        <node method="DownloadRequester download" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="DownloadRequester download" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/download/DownloadService;&quot;)"/>  
        <node method="DownloadRequester download" type="PassOutIntent" unit="staticinvoke &lt;android.support.v4.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)&gt;($r2, $r5)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.fragment.ExternalPlayerFragment"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ExternalPlayerFragment$$Lambda$1: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ExternalPlayerFragment$$Lambda$1: void onClick(android.view.View)&gt;,&lt;de.danoeh.antennapod.core.util.playback.PlaybackController: void playPause()&gt;,&lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: void start()&gt;,void start(), &lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: android.content.Intent getIntent()&gt;"/>  
      <source name="de.danoeh.antennapod.fragment.ExternalPlayerFragment"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ExternalPlayerFragment$$Lambda$1: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.PlaybackController: void playPause()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: void start()&gt;"/>  
        <node method="PlaybackServiceStarter start" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter: android.content.Intent getIntent()&gt;()"/>  
        <node method="PlaybackServiceStarter getIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="PlaybackServiceStarter getIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/>  
        <node method="PlaybackServiceStarter start" type="PassOutIntent" unit="staticinvoke &lt;android.support.v4.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)&gt;($r2, $r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.AudioplayerActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.AudioplayerActivity: void updatePlaybackSpeedButton()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.AudioplayerActivity: void updatePlaybackSpeedButton()&gt;,&lt;de.danoeh.antennapod.activity.AudioplayerActivity: void updatePlaybackSpeedButtonText()&gt;,&lt;de.danoeh.antennapod.core.util.playback.PlaybackController: boolean canSetPlaybackSpeed()&gt;,boolean canSetPlaybackSpeed(), &lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.activity.AudioplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.AudioplayerActivity: void updatePlaybackSpeedButton()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.AudioplayerActivity: void updatePlaybackSpeedButtonText()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.PlaybackController: boolean canSetPlaybackSpeed()&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.AudioplayerActivity: void updatePlaybackSpeedButton()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.AudioplayerActivity: void updatePlaybackSpeedButton()&gt;,&lt;de.danoeh.antennapod.core.util.playback.PlaybackController: boolean canSetPlaybackSpeed()&gt;,&lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;,boolean isIntentAvailable(android.content.Context,java.lang.String)"/>  
      <source name="de.danoeh.antennapod.activity.AudioplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.AudioplayerActivity: void updatePlaybackSpeedButton()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.util.playback.PlaybackController: boolean canSetPlaybackSpeed()&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.service.download.DownloadService"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.download.DownloadService$1: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.download.DownloadService$1: void run()&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;,boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)"/>  
      <source name="de.danoeh.antennapod.core.service.download.DownloadService"/>  
      <destinition name="de.danoeh.antennapod.core.service.download.DownloadService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.download.DownloadService$1: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;"/>  
        <node method="DownloadRequester download" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="DownloadRequester download" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/download/DownloadService;&quot;)"/>  
        <node method="DownloadRequester download" type="PassOutIntent" unit="staticinvoke &lt;android.support.v4.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)&gt;($r2, $r5)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.adapter.DownloadLogAdapter"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.adapter.DownloadLogAdapter$1: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.adapter.DownloadLogAdapter$1: void onClick(android.view.View)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void downloadFeedItems(android.content.Context,de.danoeh.antennapod.core.feed.FeedItem[])&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void downloadFeedItems(boolean,android.content.Context,de.danoeh.antennapod.core.feed.FeedItem[])&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadMedia(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;,boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)"/>  
      <source name="de.danoeh.antennapod.adapter.DownloadLogAdapter"/>  
      <destinition name="de.danoeh.antennapod.core.service.download.DownloadService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.adapter.DownloadLogAdapter$1: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void downloadFeedItems(android.content.Context,de.danoeh.antennapod.core.feed.FeedItem[])&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void downloadFeedItems(boolean,android.content.Context,de.danoeh.antennapod.core.feed.FeedItem[])&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadMedia(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;"/>  
        <node method="DownloadRequester download" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="DownloadRequester download" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/download/DownloadService;&quot;)"/>  
        <node method="DownloadRequester download" type="PassOutIntent" unit="staticinvoke &lt;android.support.v4.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)&gt;($r2, $r5)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.storage.DBTasks"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.storage.DBTasks: void forceRefreshCompleteFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.storage.DBTasks: void forceRefreshCompleteFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;,boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)"/>  
      <source name="de.danoeh.antennapod.core.storage.DBTasks"/>  
      <destinition name="de.danoeh.antennapod.core.service.download.DownloadService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void forceRefreshCompleteFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;"/>  
        <node method="DownloadRequester download" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="DownloadRequester download" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/download/DownloadService;&quot;)"/>  
        <node method="DownloadRequester download" type="PassOutIntent" unit="staticinvoke &lt;android.support.v4.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)&gt;($r2, $r5)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.service.GpodnetSyncService"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sync()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sync()&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void syncSubscriptionChanges()&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void processSubscriptionChanges(java.util.List,java.util.Collection,java.util.Collection,de.danoeh.antennapod.core.gpoddernet.model.GpodnetSubscriptionChange)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;,boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)"/>  
      <source name="de.danoeh.antennapod.core.service.GpodnetSyncService"/>  
      <destinition name="de.danoeh.antennapod.core.service.download.DownloadService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sync()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void syncSubscriptionChanges()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void processSubscriptionChanges(java.util.List,java.util.Collection,java.util.Collection,de.danoeh.antennapod.core.gpoddernet.model.GpodnetSubscriptionChange)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;"/>  
        <node method="DownloadRequester download" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="DownloadRequester download" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/download/DownloadService;&quot;)"/>  
        <node method="DownloadRequester download" type="PassOutIntent" unit="staticinvoke &lt;android.support.v4.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)&gt;($r2, $r5)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.FlattrAuthActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.FlattrAuthActivity$$Lambda$1: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.FlattrAuthActivity$$Lambda$1: void onClick(android.view.View)&gt;,void onClick(android.view.View), &lt;org.shredzone.flattr4j.oauth.AndroidAuthenticator: android.content.Intent createAuthenticateIntent()&gt;"/>  
      <source name="de.danoeh.antennapod.activity.FlattrAuthActivity"/>  
      <destinition name="interICC_android.intent.action.VIEW, "/>  
      <sender action="android.intent.action.VIEW" data="new java.lang.String?response_type=&amp;client_id=&amp;redirect_uri=&amp;scope="/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.FlattrAuthActivity$$Lambda$1: void onClick(android.view.View)&gt;"/>  
        <node method="FlattrAuthActivity$$Lambda$1 onClick" type="ReceiveIntentFromRetValue" unit="$r6 = virtualinvoke $r3.&lt;org.shredzone.flattr4j.oauth.AndroidAuthenticator: android.content.Intent createAuthenticateIntent()&gt;()"/>  
        <node method="AndroidAuthenticator createAuthenticateIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="AndroidAuthenticator createAuthenticateIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.VIEW&quot;)"/>  
        <node method="AndroidAuthenticator createAuthenticateIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r3)"/>  
        <node method="FlattrAuthActivity$$Lambda$1 onClick" type="PassOutIntent" unit="virtualinvoke $r2.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r6)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.FlattrAuthActivity$$Lambda$1: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.FlattrAuthActivity$$Lambda$1: void onClick(android.view.View)&gt;,void onClick(android.view.View), &lt;org.shredzone.flattr4j.oauth.AndroidAuthenticator: android.content.Intent createAuthenticateIntent()&gt;"/>  
      <source name="de.danoeh.antennapod.activity.FlattrAuthActivity"/>  
      <sender action="android.intent.action.VIEW" data="new java.lang.String?response_type=&amp;client_id=&amp;redirect_uri=&amp;scope="/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.FlattrAuthActivity$$Lambda$1: void onClick(android.view.View)&gt;"/>  
        <node method="FlattrAuthActivity$$Lambda$1 onClick" type="ReceiveIntentFromRetValue" unit="$r6 = virtualinvoke $r3.&lt;org.shredzone.flattr4j.oauth.AndroidAuthenticator: android.content.Intent createAuthenticateIntent()&gt;()"/>  
        <node method="AndroidAuthenticator createAuthenticateIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="AndroidAuthenticator createAuthenticateIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.VIEW&quot;)"/>  
        <node method="AndroidAuthenticator createAuthenticateIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r3)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.MainActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MainActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MainActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle)"/>  
      <source name="de.danoeh.antennapod.activity.MainActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="MainActivity onCreate" type="setContentView" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: void setContentView(int)&gt;(2131558490)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.StorageErrorActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.StorageErrorActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.StorageErrorActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle)"/>  
      <source name="de.danoeh.antennapod.activity.StorageErrorActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.StorageErrorActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="StorageErrorActivity onCreate" type="setContentView" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.activity.StorageErrorActivity: void setContentView(int)&gt;(2131558599)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.MediaplayerActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity: void onStart()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MediaplayerActivity: void onStart()&gt;,&lt;de.danoeh.antennapod.activity.MediaplayerActivity: void setupGUI()&gt;,void setupGUI()"/>  
      <source name="de.danoeh.antennapod.activity.MediaplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity: void onStart()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerActivity: void setupGUI()&gt;"/>  
        <node method="MediaplayerActivity setupGUI" type="setContentView" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MediaplayerActivity: void setContentView(int)&gt;($i0)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.service.playback.PlaybackService"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void access$1200(de.danoeh.antennapod.core.service.playback.PlaybackService,de.danoeh.antennapod.core.service.playback.PlaybackServiceMediaPlayer$PSMPInfo,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void access$1200(de.danoeh.antennapod.core.service.playback.PlaybackService,de.danoeh.antennapod.core.service.playback.PlaybackServiceMediaPlayer$PSMPInfo,java.lang.String)&gt;,void access$1200(de.danoeh.antennapod.core.service.playback.PlaybackService,de.danoeh.antennapod.core.service.playback.PlaybackServiceMediaPlayer$PSMPInfo,java.lang.String)"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void access$1200(de.danoeh.antennapod.core.service.playback.PlaybackService,de.danoeh.antennapod.core.service.playback.PlaybackServiceMediaPlayer$PSMPInfo,java.lang.String)&gt;"/>  
        <node method="PlaybackService access$1200" type="CreateMethod" unit="$r6 = new android.content.Intent"/>  
        <node method="PlaybackService access$1200" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="PlaybackService access$1200" type="PassOutIntent" unit="virtualinvoke $r0.&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendBroadcast(android.content.Intent)&gt;($r6)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.service.playback.PlaybackService"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$2: void statusChanged(de.danoeh.antennapod.core.service.playback.PlaybackServiceMediaPlayer$PSMPInfo)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$2: void statusChanged(de.danoeh.antennapod.core.service.playback.PlaybackServiceMediaPlayer$PSMPInfo)&gt;,void statusChanged(de.danoeh.antennapod.core.service.playback.PlaybackServiceMediaPlayer$PSMPInfo), &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void access$1200(de.danoeh.antennapod.core.service.playback.PlaybackService,de.danoeh.antennapod.core.service.playback.PlaybackServiceMediaPlayer$PSMPInfo,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="interICC_com.android.music.metachanged, "/>  
      <sender action="com.android.music.metachanged"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$2: void statusChanged(de.danoeh.antennapod.core.service.playback.PlaybackServiceMediaPlayer$PSMPInfo)&gt;"/>  
        <node method="PlaybackService access$1200" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="PlaybackService access$1200" type="CreateMethod" unit="$r6 = new android.content.Intent"/>  
        <node method="PlaybackService access$1200" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="PlaybackService access$1200" type="PassOutIntent" unit="virtualinvoke $r0.&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendBroadcast(android.content.Intent)&gt;($r6)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$2: void statusChanged(de.danoeh.antennapod.core.service.playback.PlaybackServiceMediaPlayer$PSMPInfo)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$2: void statusChanged(de.danoeh.antennapod.core.service.playback.PlaybackServiceMediaPlayer$PSMPInfo)&gt;,&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void setSleepTimer(long,boolean,boolean)&gt;,&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendNotificationBroadcast(int,int)&gt;,void sendNotificationBroadcast(int,int)"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="interICC_action.de.danoeh.antennapod.core.service.playerNotification, "/>  
      <sender action="action.de.danoeh.antennapod.core.service.playerNotification"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$2: void statusChanged(de.danoeh.antennapod.core.service.playback.PlaybackServiceMediaPlayer$PSMPInfo)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void setSleepTimer(long,boolean,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendNotificationBroadcast(int,int)&gt;"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;action.de.danoeh.antennapod.core.service.playerNotification&quot;)"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="PassOutIntent" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendBroadcast(android.content.Intent)&gt;($r1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$2: void statusChanged(de.danoeh.antennapod.core.service.playback.PlaybackServiceMediaPlayer$PSMPInfo)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$2: void statusChanged(de.danoeh.antennapod.core.service.playback.PlaybackServiceMediaPlayer$PSMPInfo)&gt;,void statusChanged(de.danoeh.antennapod.core.service.playback.PlaybackServiceMediaPlayer$PSMPInfo), &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void access$1200(de.danoeh.antennapod.core.service.playback.PlaybackService,de.danoeh.antennapod.core.service.playback.PlaybackServiceMediaPlayer$PSMPInfo,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="interICC_com.android.music.metachanged, "/>  
      <sender action="com.android.music.metachanged"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$2: void statusChanged(de.danoeh.antennapod.core.service.playback.PlaybackServiceMediaPlayer$PSMPInfo)&gt;"/>  
        <node method="PlaybackService access$1200" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="PlaybackService access$1200" type="CreateMethod" unit="$r6 = new android.content.Intent"/>  
        <node method="PlaybackService access$1200" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="PlaybackService access$1200" type="PassOutIntent" unit="virtualinvoke $r0.&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendBroadcast(android.content.Intent)&gt;($r6)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$2: void statusChanged(de.danoeh.antennapod.core.service.playback.PlaybackServiceMediaPlayer$PSMPInfo)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$2: void statusChanged(de.danoeh.antennapod.core.service.playback.PlaybackServiceMediaPlayer$PSMPInfo)&gt;,&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void updateWidget(android.content.Context)&gt;,void updateWidget(android.content.Context)"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="de.danoeh.antennapod.core.service.PlayerWidgetJobService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$2: void statusChanged(de.danoeh.antennapod.core.service.playback.PlaybackServiceMediaPlayer$PSMPInfo)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void updateWidget(android.content.Context)&gt;"/>  
        <node method="PlayerWidgetJobService updateWidget" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="PlayerWidgetJobService updateWidget" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lde/danoeh/antennapod/core/service/PlayerWidgetJobService;&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$2: void statusChanged(de.danoeh.antennapod.core.service.playback.PlaybackServiceMediaPlayer$PSMPInfo)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$2: void statusChanged(de.danoeh.antennapod.core.service.playback.PlaybackServiceMediaPlayer$PSMPInfo)&gt;,void statusChanged(de.danoeh.antennapod.core.service.playback.PlaybackServiceMediaPlayer$PSMPInfo), &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void access$1200(de.danoeh.antennapod.core.service.playback.PlaybackService,de.danoeh.antennapod.core.service.playback.PlaybackServiceMediaPlayer$PSMPInfo,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="interICC_com.android.music.playstatechanged, "/>  
      <sender action="com.android.music.playstatechanged"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$2: void statusChanged(de.danoeh.antennapod.core.service.playback.PlaybackServiceMediaPlayer$PSMPInfo)&gt;"/>  
        <node method="PlaybackService access$1200" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="PlaybackService access$1200" type="CreateMethod" unit="$r6 = new android.content.Intent"/>  
        <node method="PlaybackService access$1200" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="PlaybackService access$1200" type="PassOutIntent" unit="virtualinvoke $r0.&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendBroadcast(android.content.Intent)&gt;($r6)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$2: void statusChanged(de.danoeh.antennapod.core.service.playback.PlaybackServiceMediaPlayer$PSMPInfo)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$2: void statusChanged(de.danoeh.antennapod.core.service.playback.PlaybackServiceMediaPlayer$PSMPInfo)&gt;,void statusChanged(de.danoeh.antennapod.core.service.playback.PlaybackServiceMediaPlayer$PSMPInfo), &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void access$1200(de.danoeh.antennapod.core.service.playback.PlaybackService,de.danoeh.antennapod.core.service.playback.PlaybackServiceMediaPlayer$PSMPInfo,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="interICC_com.android.music.playstatechanged, "/>  
      <sender action="com.android.music.playstatechanged"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$2: void statusChanged(de.danoeh.antennapod.core.service.playback.PlaybackServiceMediaPlayer$PSMPInfo)&gt;"/>  
        <node method="PlaybackService access$1200" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="PlaybackService access$1200" type="CreateMethod" unit="$r6 = new android.content.Intent"/>  
        <node method="PlaybackService access$1200" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="PlaybackService access$1200" type="PassOutIntent" unit="virtualinvoke $r0.&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendBroadcast(android.content.Intent)&gt;($r6)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.dialog.EpisodesApplyActionFragment"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.dialog.EpisodesApplyActionFragment$$Lambda$5: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.dialog.EpisodesApplyActionFragment$$Lambda$5: void onClick(android.view.View)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void downloadFeedItems(android.content.Context,de.danoeh.antennapod.core.feed.FeedItem[])&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void downloadFeedItems(boolean,android.content.Context,de.danoeh.antennapod.core.feed.FeedItem[])&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadMedia(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;,boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)"/>  
      <source name="de.danoeh.antennapod.dialog.EpisodesApplyActionFragment"/>  
      <destinition name="de.danoeh.antennapod.core.service.download.DownloadService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.dialog.EpisodesApplyActionFragment$$Lambda$5: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void downloadFeedItems(android.content.Context,de.danoeh.antennapod.core.feed.FeedItem[])&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void downloadFeedItems(boolean,android.content.Context,de.danoeh.antennapod.core.feed.FeedItem[])&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadMedia(android.content.Context,de.danoeh.antennapod.core.feed.FeedMedia)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;"/>  
        <node method="DownloadRequester download" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="DownloadRequester download" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/download/DownloadService;&quot;)"/>  
        <node method="DownloadRequester download" type="PassOutIntent" unit="staticinvoke &lt;android.support.v4.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)&gt;($r2, $r5)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.service.download.DownloadService"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.download.DownloadService: int onStartCommand(android.content.Intent,int,int)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.download.DownloadService: int onStartCommand(android.content.Intent,int,int)&gt;,int onStartCommand(android.content.Intent,int,int)"/>  
      <source name="de.danoeh.antennapod.core.service.download.DownloadService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.download.DownloadService: int onStartCommand(android.content.Intent,int,int)&gt;"/>  
        <node method="DownloadService onStartCommand" type="ReceiveIntentFromRetValue" unit="$r3 = virtualinvoke r0.&lt;de.danoeh.antennapod.core.service.download.DownloadService: android.content.Intent getIntent()&gt;()"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.download.DownloadService: int onStartCommand(android.content.Intent,int,int)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.download.DownloadService: int onStartCommand(android.content.Intent,int,int)&gt;,int onStartCommand(android.content.Intent,int,int)"/>  
      <source name="de.danoeh.antennapod.core.service.download.DownloadService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.download.DownloadService: int onStartCommand(android.content.Intent,int,int)&gt;"/>  
        <node method="DownloadService onStartCommand" type="ReceiveIntentFromParatMethod" unit="$r3 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.service.download.DownloadService"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.download.DownloadService$MediaHandlerThread: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.download.DownloadService$MediaHandlerThread: void run()&gt;,&lt;de.danoeh.antennapod.core.preferences.GpodnetPreferences: void enqueueEpisodeAction(de.danoeh.antennapod.core.gpoddernet.model.GpodnetEpisodeAction)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncActionsIntent(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;,void enqueueWork(android.content.Context,android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.download.DownloadService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.download.DownloadService$MediaHandlerThread: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.preferences.GpodnetPreferences: void enqueueEpisodeAction(de.danoeh.antennapod.core.gpoddernet.model.GpodnetEpisodeAction)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncActionsIntent(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.download.DownloadService$MediaHandlerThread: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.download.DownloadService$MediaHandlerThread: void run()&gt;,&lt;de.danoeh.antennapod.core.preferences.GpodnetPreferences: void enqueueEpisodeAction(de.danoeh.antennapod.core.gpoddernet.model.GpodnetEpisodeAction)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncActionsIntent(android.content.Context)&gt;,void sendSyncActionsIntent(android.content.Context), &lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.download.DownloadService"/>  
      <destinition name="de.danoeh.antennapod.core.service.GpodnetSyncService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.download.DownloadService$MediaHandlerThread: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.preferences.GpodnetPreferences: void enqueueEpisodeAction(de.danoeh.antennapod.core.gpoddernet.model.GpodnetEpisodeAction)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncActionsIntent(android.content.Context)&gt;"/>  
        <node method="GpodnetSyncService sendSyncActionsIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="GpodnetSyncService sendSyncActionsIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lde/danoeh/antennapod/core/service/GpodnetSyncService;&quot;)"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.service.playback.PlaybackService"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: int onStartCommand(android.content.Intent,int,int)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: int onStartCommand(android.content.Intent,int,int)&gt;,int onStartCommand(android.content.Intent,int,int)"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: int onStartCommand(android.content.Intent,int,int)&gt;"/>  
        <node method="PlaybackService onStartCommand" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.content.Intent getIntent()&gt;()"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: int onStartCommand(android.content.Intent,int,int)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: int onStartCommand(android.content.Intent,int,int)&gt;,int onStartCommand(android.content.Intent,int,int)"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: int onStartCommand(android.content.Intent,int,int)&gt;"/>  
        <node method="PlaybackService onStartCommand" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: int onStartCommand(android.content.Intent,int,int)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: int onStartCommand(android.content.Intent,int,int)&gt;,&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendNotificationBroadcast(int,int)&gt;,void sendNotificationBroadcast(int,int)"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="interICC_action.de.danoeh.antennapod.core.service.playerNotification, "/>  
      <sender action="action.de.danoeh.antennapod.core.service.playerNotification"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: int onStartCommand(android.content.Intent,int,int)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendNotificationBroadcast(int,int)&gt;"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;action.de.danoeh.antennapod.core.service.playerNotification&quot;)"/>  
        <node method="PlaybackService sendNotificationBroadcast" type="PassOutIntent" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void sendBroadcast(android.content.Intent)&gt;($r1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: int onStartCommand(android.content.Intent,int,int)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: int onStartCommand(android.content.Intent,int,int)&gt;,int onStartCommand(android.content.Intent,int,int)"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: int onStartCommand(android.content.Intent,int,int)&gt;"/>  
        <node method="PlaybackService onStartCommand" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: int onStartCommand(android.content.Intent,int,int)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: int onStartCommand(android.content.Intent,int,int)&gt;,int onStartCommand(android.content.Intent,int,int)"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: int onStartCommand(android.content.Intent,int,int)&gt;"/>  
        <node method="PlaybackService onStartCommand" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.content.Intent getIntent()&gt;()"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.fragment.ItunesSearchFragment"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItunesSearchFragment$$Lambda$0: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItunesSearchFragment$$Lambda$0: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;,void onItemClick(android.widget.AdapterView,android.view.View,int,long)"/>  
      <source name="de.danoeh.antennapod.fragment.ItunesSearchFragment"/>  
      <destinition name="de.danoeh.antennapod.activity.OnlineFeedViewActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItunesSearchFragment$$Lambda$0: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;"/>  
        <node method="ItunesSearchFragment$$Lambda$0 onItemClick" type="CreateMethod" unit="$r8 = new android.content.Intent"/>  
        <node method="ItunesSearchFragment$$Lambda$0 onItemClick" type="SetAttribute" unit="specialinvoke $r8.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r9, class &quot;Lde/danoeh/antennapod/activity/OnlineFeedViewActivity;&quot;)"/>  
        <node method="ItunesSearchFragment$$Lambda$0 onItemClick" type="PassOutIntent" unit="virtualinvoke $r3.&lt;de.danoeh.antennapod.fragment.ItunesSearchFragment: void startActivity(android.content.Intent)&gt;($r8)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.fragment.ItemlistFragment"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment$$Lambda$3: void onClick()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment$$Lambda$3: void onClick()&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void loadNextPageOfFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;,boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)"/>  
      <source name="de.danoeh.antennapod.fragment.ItemlistFragment"/>  
      <destinition name="de.danoeh.antennapod.core.service.download.DownloadService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment$$Lambda$3: void onClick()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void loadNextPageOfFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;"/>  
        <node method="DownloadRequester download" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="DownloadRequester download" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/download/DownloadService;&quot;)"/>  
        <node method="DownloadRequester download" type="PassOutIntent" unit="staticinvoke &lt;android.support.v4.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)&gt;($r2, $r5)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.service.PlayerWidgetJobService"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;,void onHandleWork(android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.PlayerWidgetJobService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="ReceiveIntentFromRetValue" unit="$r3 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.content.Intent getPlayerActivityIntent(android.content.Context)&gt;(r0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;,void onHandleWork(android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.PlayerWidgetJobService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="ReceiveIntentFromParatMethod" unit="$r3 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;,void onHandleWork(android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.PlayerWidgetJobService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="ReceiveIntentFromRetValue" unit="$r3 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.content.Intent getPlayerActivityIntent(android.content.Context)&gt;(r0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;,void onHandleWork(android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.PlayerWidgetJobService"/>  
      <destinition name="de.danoeh.antennapod.core.receiver.MediaButtonReceiver"/>  
      <sender action="de.danoeh.antennapod.NOTIFY_BUTTON_RECEIVER"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, class &quot;Lde/danoeh/antennapod/core/receiver/MediaButtonReceiver;&quot;)"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;de.danoeh.antennapod.NOTIFY_BUTTON_RECEIVER&quot;)"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="PassOutIntent" unit="virtualinvoke $r11.&lt;android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)&gt;(2131361869, $r13)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;,void onHandleWork(android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.PlayerWidgetJobService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="ReceiveIntentFromRetValue" unit="$r3 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.content.Intent getPlayerActivityIntent(android.content.Context)&gt;(r0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;,void onHandleWork(android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.PlayerWidgetJobService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="ReceiveIntentFromRetValue" unit="$r3 = virtualinvoke r0.&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: android.content.Intent getIntent()&gt;()"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;,void onHandleWork(android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.PlayerWidgetJobService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="ReceiveIntentFromRetValue" unit="$r3 = virtualinvoke r0.&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: android.content.Intent getIntent()&gt;()"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;,void onHandleWork(android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.PlayerWidgetJobService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="ReceiveIntentFromRetValue" unit="$r3 = virtualinvoke r0.&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: android.content.Intent getIntent()&gt;()"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;,void onHandleWork(android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.PlayerWidgetJobService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="ReceiveIntentFromParatMethod" unit="$r3 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;,void onHandleWork(android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.PlayerWidgetJobService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="ReceiveIntentFromRetValue" unit="$r3 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.content.Intent getPlayerActivityIntent(android.content.Context)&gt;(r0)"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="PassOutIntent" unit="virtualinvoke $r11.&lt;android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)&gt;(2131362054, $r13)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;,void onHandleWork(android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.PlayerWidgetJobService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="ReceiveIntentFromParatMethod" unit="$r3 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;,void onHandleWork(android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.PlayerWidgetJobService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="ReceiveIntentFromRetValue" unit="$r3 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.content.Intent getPlayerActivityIntent(android.content.Context)&gt;(r0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;,void onHandleWork(android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.PlayerWidgetJobService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="ReceiveIntentFromRetValue" unit="$r3 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.content.Intent getPlayerActivityIntent(android.content.Context)&gt;(r0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;,void onHandleWork(android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.PlayerWidgetJobService"/>  
      <destinition name="de.danoeh.antennapod.core.receiver.MediaButtonReceiver"/>  
      <sender action="de.danoeh.antennapod.NOTIFY_BUTTON_RECEIVER"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, class &quot;Lde/danoeh/antennapod/core/receiver/MediaButtonReceiver;&quot;)"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;de.danoeh.antennapod.NOTIFY_BUTTON_RECEIVER&quot;)"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="PassOutIntent" unit="virtualinvoke $r11.&lt;android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)&gt;(2131361869, $r13)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;,void onHandleWork(android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.PlayerWidgetJobService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="ReceiveIntentFromRetValue" unit="$r3 = virtualinvoke r0.&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: android.content.Intent getIntent()&gt;()"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;,void onHandleWork(android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.PlayerWidgetJobService"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="PassOutIntent" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r3, $r7, 0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;,void onHandleWork(android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.PlayerWidgetJobService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="ReceiveIntentFromRetValue" unit="$r3 = virtualinvoke r0.&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: android.content.Intent getIntent()&gt;()"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;,void onHandleWork(android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.PlayerWidgetJobService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="ReceiveIntentFromRetValue" unit="$r3 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.content.Intent getPlayerActivityIntent(android.content.Context)&gt;(r0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;,void onHandleWork(android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.PlayerWidgetJobService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="ReceiveIntentFromParatMethod" unit="$r3 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;,void onHandleWork(android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.PlayerWidgetJobService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="ReceiveIntentFromRetValue" unit="$r3 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.content.Intent getPlayerActivityIntent(android.content.Context)&gt;(r0)"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="PassOutIntent" unit="virtualinvoke $r11.&lt;android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)&gt;(2131362054, $r13)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;,void onHandleWork(android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.PlayerWidgetJobService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="ReceiveIntentFromRetValue" unit="$r3 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.content.Intent getPlayerActivityIntent(android.content.Context)&gt;(r0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;,void onHandleWork(android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.PlayerWidgetJobService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="ReceiveIntentFromRetValue" unit="$r3 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.content.Intent getPlayerActivityIntent(android.content.Context)&gt;(r0)"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="PassOutIntent" unit="virtualinvoke $r11.&lt;android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)&gt;(2131362054, $r14)"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="PassOutIntent" unit="virtualinvoke $r11.&lt;android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)&gt;(2131361869, $r14)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;,void onHandleWork(android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.PlayerWidgetJobService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="ReceiveIntentFromParatMethod" unit="$r3 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;,void onHandleWork(android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.PlayerWidgetJobService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="ReceiveIntentFromRetValue" unit="$r3 = virtualinvoke r0.&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: android.content.Intent getIntent()&gt;()"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;,void onHandleWork(android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.PlayerWidgetJobService"/>  
      <destinition name="de.danoeh.antennapod.core.receiver.MediaButtonReceiver"/>  
      <sender action="de.danoeh.antennapod.NOTIFY_BUTTON_RECEIVER"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, class &quot;Lde/danoeh/antennapod/core/receiver/MediaButtonReceiver;&quot;)"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;de.danoeh.antennapod.NOTIFY_BUTTON_RECEIVER&quot;)"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="PassOutIntent" unit="virtualinvoke $r11.&lt;android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)&gt;(2131361869, $r13)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;,void onHandleWork(android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.PlayerWidgetJobService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="ReceiveIntentFromRetValue" unit="$r3 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.content.Intent getPlayerActivityIntent(android.content.Context)&gt;(r0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;,void onHandleWork(android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.PlayerWidgetJobService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="ReceiveIntentFromRetValue" unit="$r3 = virtualinvoke r0.&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: android.content.Intent getIntent()&gt;()"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;,void onHandleWork(android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.PlayerWidgetJobService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="ReceiveIntentFromParatMethod" unit="$r3 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;,void onHandleWork(android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.PlayerWidgetJobService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="ReceiveIntentFromRetValue" unit="$r3 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.content.Intent getPlayerActivityIntent(android.content.Context)&gt;(r0)"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="PassOutIntent" unit="virtualinvoke $r11.&lt;android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)&gt;(2131362054, $r14)"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="PassOutIntent" unit="virtualinvoke $r11.&lt;android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)&gt;(2131361869, $r14)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;,void onHandleWork(android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.PlayerWidgetJobService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="ReceiveIntentFromParatMethod" unit="$r3 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;,void onHandleWork(android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.PlayerWidgetJobService"/>  
      <destinition name="de.danoeh.antennapod.core.receiver.MediaButtonReceiver"/>  
      <sender action="de.danoeh.antennapod.NOTIFY_BUTTON_RECEIVER"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, class &quot;Lde/danoeh/antennapod/core/receiver/MediaButtonReceiver;&quot;)"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;de.danoeh.antennapod.NOTIFY_BUTTON_RECEIVER&quot;)"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="PassOutIntent" unit="virtualinvoke $r11.&lt;android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)&gt;(2131361869, $r13)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;,void onHandleWork(android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.PlayerWidgetJobService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="ReceiveIntentFromParatMethod" unit="$r3 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;,void onHandleWork(android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.PlayerWidgetJobService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="ReceiveIntentFromParatMethod" unit="$r3 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;,void onHandleWork(android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.PlayerWidgetJobService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="ReceiveIntentFromRetValue" unit="$r3 = virtualinvoke r0.&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: android.content.Intent getIntent()&gt;()"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;,void onHandleWork(android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.PlayerWidgetJobService"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="PassOutIntent" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r3, $r7, 0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;,void onHandleWork(android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.PlayerWidgetJobService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="ReceiveIntentFromRetValue" unit="$r3 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.content.Intent getPlayerActivityIntent(android.content.Context)&gt;(r0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;,void onHandleWork(android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.PlayerWidgetJobService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="ReceiveIntentFromRetValue" unit="$r3 = virtualinvoke r0.&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: android.content.Intent getIntent()&gt;()"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;,void onHandleWork(android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.PlayerWidgetJobService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="ReceiveIntentFromRetValue" unit="$r3 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.content.Intent getPlayerActivityIntent(android.content.Context)&gt;(r0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;,void onHandleWork(android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.PlayerWidgetJobService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="ReceiveIntentFromParatMethod" unit="$r3 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;,void onHandleWork(android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.PlayerWidgetJobService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="ReceiveIntentFromRetValue" unit="$r3 = virtualinvoke r0.&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: android.content.Intent getIntent()&gt;()"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;,void onHandleWork(android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.PlayerWidgetJobService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="ReceiveIntentFromRetValue" unit="$r3 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.content.Intent getPlayerActivityIntent(android.content.Context)&gt;(r0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;,void onHandleWork(android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.PlayerWidgetJobService"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="PassOutIntent" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r3, $r7, 0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;,void onHandleWork(android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.PlayerWidgetJobService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="ReceiveIntentFromRetValue" unit="$r3 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.content.Intent getPlayerActivityIntent(android.content.Context)&gt;(r0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;,void onHandleWork(android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.PlayerWidgetJobService"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="PassOutIntent" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r3, $r7, 0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;,void onHandleWork(android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.PlayerWidgetJobService"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: void onHandleWork(android.content.Intent)&gt;"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/>  
        <node method="PlayerWidgetJobService onHandleWork" type="PassOutIntent" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.core.service.PlayerWidgetJobService: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r3, $r7, 0)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.dialog.RatingDialog"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.dialog.RatingDialog: void check()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.dialog.RatingDialog: void check()&gt;,&lt;de.danoeh.antennapod.dialog.RatingDialog$$Lambda$0: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;,&lt;de.danoeh.antennapod.dialog.RatingDialog: void lambda$createDialog$0$RatingDialog$2fd15666()&gt;,void lambda$createDialog$0$RatingDialog$2fd15666()"/>  
      <source name="de.danoeh.antennapod.dialog.RatingDialog"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.dialog.RatingDialog: void check()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.RatingDialog$$Lambda$0: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.RatingDialog: void lambda$createDialog$0$RatingDialog$2fd15666()&gt;"/>  
        <node method="RatingDialog lambda$createDialog$0$RatingDialog$2fd15666" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="RatingDialog lambda$createDialog$0$RatingDialog$2fd15666" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>  
        <node method="RatingDialog lambda$createDialog$0$RatingDialog$2fd15666" type="PassOutIntent" unit="virtualinvoke $r3.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r0)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.service.playback.PlaybackService"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;,void run(), &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
        <node method="PlaybackService$3 run" type="ReceiveIntentFromRetValue" unit="$r24 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;($r2, 89, $b1)"/>  
        <node method="PlaybackService access$1900" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="PlaybackService access$1900" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/>  
        <node method="PlaybackService$3 run" type="PassOutIntent" unit="virtualinvoke $r19.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)&gt;(17301542, $r7, $r24)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;,void run(), &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
        <node method="PlaybackService$3 run" type="ReceiveIntentFromRetValue" unit="$r24 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;($r2, 86, $i0)"/>  
        <node method="PlaybackService access$1900" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="PlaybackService access$1900" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/>  
        <node method="PlaybackService$3 run" type="PassOutIntent" unit="$r26 = virtualinvoke $r26.&lt;android.support.v4.media.app.NotificationCompat$MediaStyle: android.support.v4.media.app.NotificationCompat$MediaStyle setCancelButtonIntent(android.app.PendingIntent)&gt;($r24)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;,void run(), &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
        <node method="PlaybackService$3 run" type="CreateMethod" unit="$r23 = new android.content.Intent"/>  
        <node method="PlaybackService$3 run" type="SetAttribute" unit="specialinvoke $r23.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/>  
        <node method="PlaybackService$3 run" type="PassOutIntent" unit="virtualinvoke $r19.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)&gt;(2131231036, $r7, $r24)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;,void run(), &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
        <node method="PlaybackService$3 run" type="ReceiveIntentFromRetValue" unit="$r24 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;($r2, 127, $i0)"/>  
        <node method="PlaybackService access$1900" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="PlaybackService access$1900" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/>  
        <node method="PlaybackService$3 run" type="PassOutIntent" unit="virtualinvoke $r19.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)&gt;(17301539, $r7, $r24)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;,void run(), &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
        <node method="PlaybackService$3 run" type="ReceiveIntentFromRetValue" unit="$r24 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;($r2, 90, $i2)"/>  
        <node method="PlaybackService access$1900" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="PlaybackService access$1900" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/>  
        <node method="PlaybackService$3 run" type="PassOutIntent" unit="virtualinvoke $r19.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)&gt;(17301537, $r7, $r24)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;,void run(), &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
        <node method="PlaybackService$3 run" type="ReceiveIntentFromRetValue" unit="$r24 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;($r2, 87, $i0)"/>  
        <node method="PlaybackService access$1900" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="PlaybackService access$1900" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/>  
        <node method="PlaybackService$3 run" type="PassOutIntent" unit="virtualinvoke $r19.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)&gt;(17301538, $r7, $r24)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;,void run(), &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
        <node method="PlaybackService$3 run" type="ReceiveIntentFromRetValue" unit="$r24 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;($r2, 87, $i0)"/>  
        <node method="PlaybackService access$1900" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="PlaybackService access$1900" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/>  
        <node method="PlaybackService$3 run" type="PassOutIntent" unit="virtualinvoke $r19.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)&gt;(17301538, $r7, $r24)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;,void run(), &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
        <node method="PlaybackService$3 run" type="ReceiveIntentFromRetValue" unit="$r24 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;($r2, 90, $i2)"/>  
        <node method="PlaybackService access$1900" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="PlaybackService access$1900" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/>  
        <node method="PlaybackService$3 run" type="PassOutIntent" unit="virtualinvoke $r19.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)&gt;(17301537, $r7, $r24)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;,void run(), &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
        <node method="PlaybackService$3 run" type="ReceiveIntentFromRetValue" unit="$r24 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;($r2, 86, $i0)"/>  
        <node method="PlaybackService access$1900" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="PlaybackService access$1900" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/>  
        <node method="PlaybackService$3 run" type="PassOutIntent" unit="$r26 = virtualinvoke $r26.&lt;android.support.v4.media.app.NotificationCompat$MediaStyle: android.support.v4.media.app.NotificationCompat$MediaStyle setCancelButtonIntent(android.app.PendingIntent)&gt;($r24)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;,void run(), &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
        <node method="PlaybackService$3 run" type="ReceiveIntentFromRetValue" unit="$r24 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;($r2, 86, $i0)"/>  
        <node method="PlaybackService access$1900" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="PlaybackService access$1900" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/>  
        <node method="PlaybackService$3 run" type="PassOutIntent" unit="$r26 = virtualinvoke $r26.&lt;android.support.v4.media.app.NotificationCompat$MediaStyle: android.support.v4.media.app.NotificationCompat$MediaStyle setCancelButtonIntent(android.app.PendingIntent)&gt;($r24)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;,void run(), &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
        <node method="PlaybackService$3 run" type="ReceiveIntentFromRetValue" unit="$r24 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;($r2, 90, $i2)"/>  
        <node method="PlaybackService access$1900" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="PlaybackService access$1900" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/>  
        <node method="PlaybackService$3 run" type="PassOutIntent" unit="virtualinvoke $r19.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)&gt;(17301537, $r7, $r24)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;,void run(), &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
        <node method="PlaybackService$3 run" type="ReceiveIntentFromRetValue" unit="$r24 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;($r2, 89, $b1)"/>  
        <node method="PlaybackService access$1900" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="PlaybackService access$1900" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/>  
        <node method="PlaybackService$3 run" type="PassOutIntent" unit="virtualinvoke $r19.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)&gt;(17301542, $r7, $r24)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;,void run(), &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
        <node method="PlaybackService$3 run" type="ReceiveIntentFromRetValue" unit="$r24 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;($r2, 86, $i0)"/>  
        <node method="PlaybackService access$1900" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="PlaybackService access$1900" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/>  
        <node method="PlaybackService$3 run" type="PassOutIntent" unit="$r26 = virtualinvoke $r26.&lt;android.support.v4.media.app.NotificationCompat$MediaStyle: android.support.v4.media.app.NotificationCompat$MediaStyle setCancelButtonIntent(android.app.PendingIntent)&gt;($r24)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;,void run(), &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
        <node method="PlaybackService$3 run" type="ReceiveIntentFromRetValue" unit="$r24 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;($r2, 89, $b1)"/>  
        <node method="PlaybackService access$1900" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="PlaybackService access$1900" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/>  
        <node method="PlaybackService$3 run" type="PassOutIntent" unit="virtualinvoke $r19.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)&gt;(17301542, $r7, $r24)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;,void run(), &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
        <node method="PlaybackService$3 run" type="ReceiveIntentFromRetValue" unit="$r24 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;($r2, 89, $b1)"/>  
        <node method="PlaybackService access$1900" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="PlaybackService access$1900" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/>  
        <node method="PlaybackService$3 run" type="PassOutIntent" unit="virtualinvoke $r19.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)&gt;(17301542, $r7, $r24)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;,void run(), &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
        <node method="PlaybackService$3 run" type="ReceiveIntentFromRetValue" unit="$r24 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;($r2, 126, $i0)"/>  
        <node method="PlaybackService access$1900" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="PlaybackService access$1900" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/>  
        <node method="PlaybackService$3 run" type="PassOutIntent" unit="virtualinvoke $r19.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)&gt;(17301540, $r7, $r24)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;,void run(), &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
        <node method="PlaybackService$3 run" type="CreateMethod" unit="$r23 = new android.content.Intent"/>  
        <node method="PlaybackService$3 run" type="SetAttribute" unit="specialinvoke $r23.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/>  
        <node method="PlaybackService$3 run" type="PassOutIntent" unit="virtualinvoke $r19.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)&gt;(2131231036, $r7, $r24)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;,void run(), &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
        <node method="PlaybackService$3 run" type="ReceiveIntentFromRetValue" unit="$r24 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;($r2, 90, $i2)"/>  
        <node method="PlaybackService access$1900" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="PlaybackService access$1900" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/>  
        <node method="PlaybackService$3 run" type="PassOutIntent" unit="virtualinvoke $r19.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)&gt;(17301537, $r7, $r24)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;,void run(), &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
        <node method="PlaybackService$3 run" type="ReceiveIntentFromRetValue" unit="$r24 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;($r2, 89, $b1)"/>  
        <node method="PlaybackService access$1900" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="PlaybackService access$1900" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/>  
        <node method="PlaybackService$3 run" type="PassOutIntent" unit="virtualinvoke $r19.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)&gt;(17301542, $r7, $r24)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;,void run(), &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
        <node method="PlaybackService$3 run" type="ReceiveIntentFromRetValue" unit="$r24 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;($r2, 87, $i0)"/>  
        <node method="PlaybackService access$1900" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="PlaybackService access$1900" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/>  
        <node method="PlaybackService$3 run" type="PassOutIntent" unit="virtualinvoke $r19.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)&gt;(17301538, $r7, $r24)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;,void run(), &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
        <node method="PlaybackService$3 run" type="ReceiveIntentFromRetValue" unit="$r24 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;($r2, 87, $i0)"/>  
        <node method="PlaybackService access$1900" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="PlaybackService access$1900" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/>  
        <node method="PlaybackService$3 run" type="PassOutIntent" unit="virtualinvoke $r19.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)&gt;(17301538, $r7, $r24)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;,void run(), &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
        <node method="PlaybackService$3 run" type="ReceiveIntentFromRetValue" unit="$r24 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;($r2, 127, $i0)"/>  
        <node method="PlaybackService access$1900" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="PlaybackService access$1900" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/>  
        <node method="PlaybackService$3 run" type="PassOutIntent" unit="virtualinvoke $r19.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)&gt;(17301539, $r7, $r24)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;,void run(), &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
        <node method="PlaybackService$3 run" type="ReceiveIntentFromRetValue" unit="$r24 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;($r2, 86, $i0)"/>  
        <node method="PlaybackService access$1900" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="PlaybackService access$1900" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/>  
        <node method="PlaybackService$3 run" type="PassOutIntent" unit="$r26 = virtualinvoke $r26.&lt;android.support.v4.media.app.NotificationCompat$MediaStyle: android.support.v4.media.app.NotificationCompat$MediaStyle setCancelButtonIntent(android.app.PendingIntent)&gt;($r24)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;,void run(), &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
        <node method="PlaybackService$3 run" type="ReceiveIntentFromRetValue" unit="$r24 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;($r2, 86, $i0)"/>  
        <node method="PlaybackService access$1900" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="PlaybackService access$1900" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/>  
        <node method="PlaybackService$3 run" type="PassOutIntent" unit="$r26 = virtualinvoke $r26.&lt;android.support.v4.media.app.NotificationCompat$MediaStyle: android.support.v4.media.app.NotificationCompat$MediaStyle setCancelButtonIntent(android.app.PendingIntent)&gt;($r24)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;,void run(), &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
        <node method="PlaybackService$3 run" type="ReceiveIntentFromRetValue" unit="$r24 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;($r2, 126, $i0)"/>  
        <node method="PlaybackService access$1900" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="PlaybackService access$1900" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/>  
        <node method="PlaybackService$3 run" type="PassOutIntent" unit="virtualinvoke $r19.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)&gt;(17301540, $r7, $r24)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;,void run(), &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
        <node method="PlaybackService$3 run" type="ReceiveIntentFromRetValue" unit="$r24 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;($r2, 127, $i0)"/>  
        <node method="PlaybackService access$1900" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="PlaybackService access$1900" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/>  
        <node method="PlaybackService$3 run" type="PassOutIntent" unit="virtualinvoke $r19.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)&gt;(17301539, $r7, $r24)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;,void run(), &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
        <node method="PlaybackService$3 run" type="ReceiveIntentFromRetValue" unit="$r24 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;($r2, 90, $i2)"/>  
        <node method="PlaybackService access$1900" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="PlaybackService access$1900" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/>  
        <node method="PlaybackService$3 run" type="PassOutIntent" unit="virtualinvoke $r19.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)&gt;(17301537, $r7, $r24)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;,void run(), &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
        <node method="PlaybackService$3 run" type="ReceiveIntentFromRetValue" unit="$r24 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;($r2, 90, $i2)"/>  
        <node method="PlaybackService access$1900" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="PlaybackService access$1900" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/>  
        <node method="PlaybackService$3 run" type="PassOutIntent" unit="virtualinvoke $r19.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)&gt;(17301537, $r7, $r24)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;,void run(), &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
        <node method="PlaybackService$3 run" type="ReceiveIntentFromRetValue" unit="$r24 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;($r2, 126, $i0)"/>  
        <node method="PlaybackService access$1900" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="PlaybackService access$1900" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/>  
        <node method="PlaybackService$3 run" type="PassOutIntent" unit="virtualinvoke $r19.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)&gt;(17301540, $r7, $r24)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;,void run(), &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
        <node method="PlaybackService$3 run" type="ReceiveIntentFromRetValue" unit="$r24 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;($r2, 90, $i2)"/>  
        <node method="PlaybackService access$1900" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="PlaybackService access$1900" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/>  
        <node method="PlaybackService$3 run" type="PassOutIntent" unit="virtualinvoke $r19.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)&gt;(17301537, $r7, $r24)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;,void run(), &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
        <node method="PlaybackService$3 run" type="ReceiveIntentFromRetValue" unit="$r24 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;($r2, 89, $b1)"/>  
        <node method="PlaybackService access$1900" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="PlaybackService access$1900" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/>  
        <node method="PlaybackService$3 run" type="PassOutIntent" unit="virtualinvoke $r19.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)&gt;(17301542, $r7, $r24)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;,void run(), &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
        <node method="PlaybackService$3 run" type="ReceiveIntentFromRetValue" unit="$r24 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;($r2, 86, $i0)"/>  
        <node method="PlaybackService access$1900" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="PlaybackService access$1900" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/>  
        <node method="PlaybackService$3 run" type="PassOutIntent" unit="$r26 = virtualinvoke $r26.&lt;android.support.v4.media.app.NotificationCompat$MediaStyle: android.support.v4.media.app.NotificationCompat$MediaStyle setCancelButtonIntent(android.app.PendingIntent)&gt;($r24)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;,void run(), &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
        <node method="PlaybackService$3 run" type="ReceiveIntentFromRetValue" unit="$r24 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;($r2, 90, $i2)"/>  
        <node method="PlaybackService access$1900" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="PlaybackService access$1900" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/>  
        <node method="PlaybackService$3 run" type="PassOutIntent" unit="virtualinvoke $r19.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)&gt;(17301537, $r7, $r24)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;,void run(), &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
        <node method="PlaybackService$3 run" type="ReceiveIntentFromRetValue" unit="$r24 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;($r2, 126, $i0)"/>  
        <node method="PlaybackService access$1900" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="PlaybackService access$1900" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/>  
        <node method="PlaybackService$3 run" type="PassOutIntent" unit="virtualinvoke $r19.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)&gt;(17301540, $r7, $r24)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;,void run(), &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
        <node method="PlaybackService$3 run" type="ReceiveIntentFromRetValue" unit="$r24 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;($r2, 127, $i0)"/>  
        <node method="PlaybackService access$1900" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="PlaybackService access$1900" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/>  
        <node method="PlaybackService$3 run" type="PassOutIntent" unit="virtualinvoke $r19.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)&gt;(17301539, $r7, $r24)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;,void run(), &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
        <node method="PlaybackService$3 run" type="CreateMethod" unit="$r23 = new android.content.Intent"/>  
        <node method="PlaybackService$3 run" type="SetAttribute" unit="specialinvoke $r23.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/>  
        <node method="PlaybackService$3 run" type="PassOutIntent" unit="virtualinvoke $r19.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)&gt;(2131231036, $r7, $r24)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;,void run(), &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
        <node method="PlaybackService$3 run" type="CreateMethod" unit="$r23 = new android.content.Intent"/>  
        <node method="PlaybackService$3 run" type="SetAttribute" unit="specialinvoke $r23.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/>  
        <node method="PlaybackService$3 run" type="PassOutIntent" unit="virtualinvoke $r19.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)&gt;(2131231036, $r7, $r24)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;,void run(), &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
        <node method="PlaybackService$3 run" type="ReceiveIntentFromRetValue" unit="$r24 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;($r2, 89, $b1)"/>  
        <node method="PlaybackService access$1900" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="PlaybackService access$1900" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/>  
        <node method="PlaybackService$3 run" type="PassOutIntent" unit="virtualinvoke $r19.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)&gt;(17301542, $r7, $r24)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;,&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.support.v4.app.NotificationCompat$Builder access$1800(de.danoeh.antennapod.core.service.playback.PlaybackService)&gt;,&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.support.v4.app.NotificationCompat$Builder createBasicNotification()&gt;,android.support.v4.app.NotificationCompat$Builder createBasicNotification()"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.support.v4.app.NotificationCompat$Builder access$1800(de.danoeh.antennapod.core.service.playback.PlaybackService)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.support.v4.app.NotificationCompat$Builder createBasicNotification()&gt;"/>  
        <node method="PlaybackService createBasicNotification" type="ReceiveIntentFromRetValue" unit="$r1 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.content.Intent getPlayerActivityIntent(android.content.Context)&gt;(r0)"/>  
        <node method="PlaybackService createBasicNotification" type="PassOutIntent" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r2)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;,void run(), &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
        <node method="PlaybackService$3 run" type="ReceiveIntentFromRetValue" unit="$r24 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;($r2, 89, $b1)"/>  
        <node method="PlaybackService access$1900" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="PlaybackService access$1900" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/>  
        <node method="PlaybackService$3 run" type="PassOutIntent" unit="virtualinvoke $r19.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)&gt;(17301542, $r7, $r24)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;,void run(), &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
        <node method="PlaybackService$3 run" type="ReceiveIntentFromRetValue" unit="$r24 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.app.PendingIntent access$1900(de.danoeh.antennapod.core.service.playback.PlaybackService,int,int)&gt;($r2, 86, $i0)"/>  
        <node method="PlaybackService access$1900" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="PlaybackService access$1900" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/playback/PlaybackService;&quot;)"/>  
        <node method="PlaybackService$3 run" type="PassOutIntent" unit="$r26 = virtualinvoke $r26.&lt;android.support.v4.media.app.NotificationCompat$MediaStyle: android.support.v4.media.app.NotificationCompat$MediaStyle setCancelButtonIntent(android.app.PendingIntent)&gt;($r24)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.MainActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MainActivity: void onResume()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MainActivity: void onResume()&gt;,&lt;de.danoeh.antennapod.dialog.RatingDialog: void check()&gt;,&lt;de.danoeh.antennapod.dialog.RatingDialog$$Lambda$0: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;,&lt;de.danoeh.antennapod.dialog.RatingDialog: void lambda$createDialog$0$RatingDialog$2fd15666()&gt;,void lambda$createDialog$0$RatingDialog$2fd15666()"/>  
      <source name="de.danoeh.antennapod.activity.MainActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity: void onResume()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.RatingDialog: void check()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.RatingDialog$$Lambda$0: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.RatingDialog: void lambda$createDialog$0$RatingDialog$2fd15666()&gt;"/>  
        <node method="RatingDialog lambda$createDialog$0$RatingDialog$2fd15666" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="RatingDialog lambda$createDialog$0$RatingDialog$2fd15666" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>  
        <node method="RatingDialog lambda$createDialog$0$RatingDialog$2fd15666" type="PassOutIntent" unit="virtualinvoke $r3.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MainActivity: void onResume()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MainActivity: void onResume()&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void checkShouldRefreshFeeds(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List,java.lang.Runnable)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks$$Lambda$0: void run()&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncIntent(android.content.Context)&gt;,void sendSyncIntent(android.content.Context), &lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
      <source name="de.danoeh.antennapod.activity.MainActivity"/>  
      <destinition name="de.danoeh.antennapod.core.service.GpodnetSyncService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity: void onResume()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void checkShouldRefreshFeeds(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List,java.lang.Runnable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks$$Lambda$0: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncIntent(android.content.Context)&gt;"/>  
        <node method="GpodnetSyncService sendSyncIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="GpodnetSyncService sendSyncIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lde/danoeh/antennapod/core/service/GpodnetSyncService;&quot;)"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MainActivity: void onResume()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MainActivity: void onResume()&gt;,&lt;de.danoeh.antennapod.activity.MainActivity: void handleNavIntent()&gt;,void handleNavIntent()"/>  
      <source name="de.danoeh.antennapod.activity.MainActivity"/>  
      <destinition name="de.danoeh.antennapod.activity.MainActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity: void onResume()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity: void handleNavIntent()&gt;"/>  
        <node method="MainActivity handleNavIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="MainActivity handleNavIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lde/danoeh/antennapod/activity/MainActivity;&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MainActivity: void onResume()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MainActivity: void onResume()&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void checkShouldRefreshFeeds(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List,java.lang.Runnable)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks$$Lambda$0: void run()&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncIntent(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;,void enqueueWork(android.content.Context,android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.activity.MainActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity: void onResume()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void checkShouldRefreshFeeds(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List,java.lang.Runnable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks$$Lambda$0: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncIntent(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MainActivity: void onResume()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MainActivity: void onResume()&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void checkShouldRefreshFeeds(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List,java.lang.Runnable)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks$$Lambda$0: void run()&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshFeeds(android.content.Context,java.util.List)&gt;,&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;,boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)"/>  
      <source name="de.danoeh.antennapod.activity.MainActivity"/>  
      <destinition name="de.danoeh.antennapod.core.service.download.DownloadService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity: void onResume()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void checkShouldRefreshFeeds(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshAllFeeds(android.content.Context,java.util.List,java.lang.Runnable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks$$Lambda$0: void run()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void lambda$refreshAllFeeds$1$DBTasks(java.util.List,android.content.Context,java.lang.Runnable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshFeeds(android.content.Context,java.util.List)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DBTasks: void refreshFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;"/>  
        <node method="DownloadRequester download" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="DownloadRequester download" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/download/DownloadService;&quot;)"/>  
        <node method="DownloadRequester download" type="PassOutIntent" unit="staticinvoke &lt;android.support.v4.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)&gt;($r2, $r5)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.PreferenceActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$39: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupMainScreen$40$PreferenceController$3014d007()&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController: void openInBrowser(java.lang.String)&gt;,void openInBrowser(java.lang.String)"/>  
      <source name="de.danoeh.antennapod.activity.PreferenceActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$39: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupMainScreen$40$PreferenceController$3014d007()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: void openInBrowser(java.lang.String)&gt;"/>  
        <node method="PreferenceController openInBrowser" type="CreateMethod" unit="$r2 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$21: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showDialog(android.content.Context)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;,void showGetPluginDialog(android.content.Context,boolean)"/>  
      <source name="de.danoeh.antennapod.activity.PreferenceActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$21: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showDialog(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;"/>  
        <node method="VariableSpeedDialog showGetPluginDialog" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="VariableSpeedDialog showGetPluginDialog" type="CreateMethod" unit="$r2 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$40: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;,boolean onPreferenceClick(android.support.v7.preference.Preference)"/>  
      <source name="de.danoeh.antennapod.activity.PreferenceActivity"/>  
      <destinition name="de.danoeh.antennapod.activity.OnlineFeedViewActivity"/>  
      <sender action="android.intent.action.SEND" type="text/plain" flags="FLAG_GRANT_READ_URI_PERMISSION "/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$40: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
        <node method="PreferenceController$$Lambda$40 onPreferenceClick" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="PreferenceController$$Lambda$40 onPreferenceClick" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.SEND&quot;)"/>  
        <node method="PreferenceController$$Lambda$40 onPreferenceClick" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;text/plain&quot;)"/>  
        <node method="PreferenceController$$Lambda$40 onPreferenceClick" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(1)"/>  
        <node method="PreferenceController$$Lambda$40 onPreferenceClick" type="PassOutIntent" unit="virtualinvoke $r5.&lt;android.support.v7.app.AppCompatActivity: void startActivity(android.content.Intent)&gt;($r1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$39: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupMainScreen$40$PreferenceController$3014d007()&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController: void openInBrowser(java.lang.String)&gt;,void openInBrowser(java.lang.String)"/>  
      <source name="de.danoeh.antennapod.activity.PreferenceActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$39: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupMainScreen$40$PreferenceController$3014d007()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: void openInBrowser(java.lang.String)&gt;"/>  
        <node method="PreferenceController openInBrowser" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="PreferenceController openInBrowser" type="PassOutIntent" unit="virtualinvoke $r5.&lt;android.support.v7.app.AppCompatActivity: void startActivity(android.content.Intent)&gt;($r2)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$17: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncIntent(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;,void enqueueWork(android.content.Context,android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.activity.PreferenceActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$17: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncIntent(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$40: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;,boolean onPreferenceClick(android.support.v7.preference.Preference)"/>  
      <source name="de.danoeh.antennapod.activity.PreferenceActivity"/>  
      <destinition name="de.danoeh.antennapod.activity.OnlineFeedViewActivity"/>  
      <sender action="android.intent.action.SEND" type="text/plain" flags="FLAG_GRANT_READ_URI_PERMISSION "/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$40: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
        <node method="PreferenceController$$Lambda$40 onPreferenceClick" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="PreferenceController$$Lambda$40 onPreferenceClick" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.SEND&quot;)"/>  
        <node method="PreferenceController$$Lambda$40 onPreferenceClick" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;text/plain&quot;)"/>  
        <node method="PreferenceController$$Lambda$40 onPreferenceClick" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(1)"/>  
        <node method="PreferenceController$$Lambda$40 onPreferenceClick" type="PassOutIntent" unit="$r12 = virtualinvoke $r11.&lt;android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)&gt;($r1, 65536)"/>  
        <node method="PreferenceController$$Lambda$40 onPreferenceClick" type="PassOutIntent" unit="virtualinvoke $r5.&lt;android.support.v7.app.AppCompatActivity: void startActivity(android.content.Intent)&gt;($r1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$21: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showDialog(android.content.Context)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog$$Lambda$1: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)&gt;,void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)"/>  
      <source name="de.danoeh.antennapod.activity.PreferenceActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$21: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showDialog(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog$$Lambda$1: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)&gt;"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$39: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupMainScreen$40$PreferenceController$3014d007()&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController: void openInBrowser(java.lang.String)&gt;,void openInBrowser(java.lang.String)"/>  
      <source name="de.danoeh.antennapod.activity.PreferenceActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$39: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupMainScreen$40$PreferenceController$3014d007()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: void openInBrowser(java.lang.String)&gt;"/>  
        <node method="PreferenceController openInBrowser" type="CreateMethod" unit="$r2 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$21: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;,boolean onPreferenceClick(android.support.v7.preference.Preference), &lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupPlaybackScreen$22$PreferenceController$7ff604e7(android.app.Activity)&gt;"/>  
      <source name="de.danoeh.antennapod.activity.PreferenceActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$21: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="PreferenceController$$Lambda$21 onPreferenceClick" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/>  
        <node method="PreferenceController$$Lambda$21 onPreferenceClick" type="CreateMethod" unit="$r2 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$37: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupMainScreen$38$PreferenceController$234e8b40(android.support.v7.app.AppCompatActivity)&gt;,boolean lambda$setupMainScreen$38$PreferenceController$234e8b40(android.support.v7.app.AppCompatActivity)"/>  
      <source name="de.danoeh.antennapod.activity.PreferenceActivity"/>  
      <destinition name="de.danoeh.antennapod.activity.StatisticsActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$37: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupMainScreen$38$PreferenceController$234e8b40(android.support.v7.app.AppCompatActivity)&gt;"/>  
        <node method="PreferenceController lambda$setupMainScreen$38$PreferenceController$234e8b40" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="PreferenceController lambda$setupMainScreen$38$PreferenceController$234e8b40" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lde/danoeh/antennapod/activity/StatisticsActivity;&quot;)"/>  
        <node method="PreferenceController lambda$setupMainScreen$38$PreferenceController$234e8b40" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.support.v7.app.AppCompatActivity: void startActivity(android.content.Intent)&gt;($r0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$21: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showDialog(android.content.Context)&gt;,void showDialog(android.content.Context), &lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.activity.PreferenceActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$21: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showDialog(android.content.Context)&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$36: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupMainScreen$37$PreferenceController$234e8b40(android.support.v7.app.AppCompatActivity)&gt;,boolean lambda$setupMainScreen$37$PreferenceController$234e8b40(android.support.v7.app.AppCompatActivity)"/>  
      <source name="de.danoeh.antennapod.activity.PreferenceActivity"/>  
      <destinition name="de.danoeh.antennapod.activity.AboutActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$36: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupMainScreen$37$PreferenceController$234e8b40(android.support.v7.app.AppCompatActivity)&gt;"/>  
        <node method="PreferenceController lambda$setupMainScreen$37$PreferenceController$234e8b40" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="PreferenceController lambda$setupMainScreen$37$PreferenceController$234e8b40" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lde/danoeh/antennapod/activity/AboutActivity;&quot;)"/>  
        <node method="PreferenceController lambda$setupMainScreen$37$PreferenceController$234e8b40" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.support.v7.app.AppCompatActivity: void startActivity(android.content.Intent)&gt;($r0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$10: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;,boolean onPreferenceClick(android.support.v7.preference.Preference)"/>  
      <source name="de.danoeh.antennapod.activity.PreferenceActivity"/>  
      <destinition name="de.danoeh.antennapod.activity.DirectoryChooserActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$10: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
        <node method="PreferenceController$$Lambda$10 onPreferenceClick" type="CreateMethod" unit="$r4 = new android.content.Intent"/>  
        <node method="PreferenceController$$Lambda$10 onPreferenceClick" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lde/danoeh/antennapod/activity/DirectoryChooserActivity;&quot;)"/>  
        <node method="PreferenceController$$Lambda$10 onPreferenceClick" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int)&gt;($r4, 1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$21: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;,boolean onPreferenceClick(android.support.v7.preference.Preference), &lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupPlaybackScreen$22$PreferenceController$7ff604e7(android.app.Activity)&gt;"/>  
      <source name="de.danoeh.antennapod.activity.PreferenceActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$21: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="PreferenceController$$Lambda$21 onPreferenceClick" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/>  
        <node method="PreferenceController$$Lambda$21 onPreferenceClick" type="CreateMethod" unit="$r2 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$5: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupStorageScreen$5$PreferenceController$7ff604e7(android.app.Activity)&gt;,boolean lambda$setupStorageScreen$5$PreferenceController$7ff604e7(android.app.Activity)"/>  
      <source name="de.danoeh.antennapod.activity.PreferenceActivity"/>  
      <destinition name="de.danoeh.antennapod.activity.ImportExportActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$5: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupStorageScreen$5$PreferenceController$7ff604e7(android.app.Activity)&gt;"/>  
        <node method="PreferenceController lambda$setupStorageScreen$5$PreferenceController$7ff604e7" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="PreferenceController lambda$setupStorageScreen$5$PreferenceController$7ff604e7" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lde/danoeh/antennapod/activity/ImportExportActivity;&quot;)"/>  
        <node method="PreferenceController lambda$setupStorageScreen$5$PreferenceController$7ff604e7" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;($r0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$8: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupStorageScreen$8$PreferenceController$7ff604e7(android.app.Activity)&gt;,boolean lambda$setupStorageScreen$8$PreferenceController$7ff604e7(android.app.Activity)"/>  
      <source name="de.danoeh.antennapod.activity.PreferenceActivity"/>  
      <destinition name="de.danoeh.antennapod.activity.OpmlImportFromPathActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$8: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupStorageScreen$8$PreferenceController$7ff604e7(android.app.Activity)&gt;"/>  
        <node method="PreferenceController lambda$setupStorageScreen$8$PreferenceController$7ff604e7" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="PreferenceController lambda$setupStorageScreen$8$PreferenceController$7ff604e7" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lde/danoeh/antennapod/activity/OpmlImportFromPathActivity;&quot;)"/>  
        <node method="PreferenceController lambda$setupStorageScreen$8$PreferenceController$7ff604e7" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;($r0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$9: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;,boolean onPreferenceClick(android.support.v7.preference.Preference)"/>  
      <source name="de.danoeh.antennapod.activity.PreferenceActivity"/>  
      <destinition name="de.danoeh.antennapod.activity.DirectoryChooserActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$9: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
        <node method="PreferenceController$$Lambda$9 onPreferenceClick" type="CreateMethod" unit="$r6 = new android.content.Intent"/>  
        <node method="PreferenceController$$Lambda$9 onPreferenceClick" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lde/danoeh/antennapod/activity/DirectoryChooserActivity;&quot;)"/>  
        <node method="PreferenceController$$Lambda$9 onPreferenceClick" type="PassOutIntent" unit="virtualinvoke $r5.&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int)&gt;($r6, 1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$18: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncIntent(android.content.Context)&gt;,void sendSyncIntent(android.content.Context), &lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
      <source name="de.danoeh.antennapod.activity.PreferenceActivity"/>  
      <destinition name="de.danoeh.antennapod.core.service.GpodnetSyncService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$18: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncIntent(android.content.Context)&gt;"/>  
        <node method="GpodnetSyncService sendSyncIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="GpodnetSyncService sendSyncIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lde/danoeh/antennapod/core/service/GpodnetSyncService;&quot;)"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$21: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showDialog(android.content.Context)&gt;,void showDialog(android.content.Context), &lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled(android.content.Context)&gt;"/>  
      <source name="de.danoeh.antennapod.activity.PreferenceActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$21: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showDialog(android.content.Context)&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$21: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showDialog(android.content.Context)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog$$Lambda$1: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)&gt;,void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)"/>  
      <source name="de.danoeh.antennapod.activity.PreferenceActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$21: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showDialog(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showGetPluginDialog(android.content.Context,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog$$Lambda$1: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c(android.content.Context)&gt;"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="VariableSpeedDialog lambda$showGetPluginDialog$1$VariableSpeedDialog$5531701c" type="CreateMethod" unit="$r2 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$21: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;,&lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled(android.content.Context)&gt;,boolean isPrestoLibraryInstalled(android.content.Context), &lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
      <source name="de.danoeh.antennapod.activity.PreferenceActivity"/>  
      <destinition name="interICC_com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8, "/>  
      <sender action="com.aocate.intent.PLAY_AUDIO_ADJUST_SPEED_0_8"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$21: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: boolean isPrestoLibraryInstalled(android.content.Context)&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$21: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;,&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showDialog(android.content.Context)&gt;,&lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;,boolean isIntentAvailable(android.content.Context,java.lang.String)"/>  
      <source name="de.danoeh.antennapod.activity.PreferenceActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$21: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.VariableSpeedDialog: void showDialog(android.content.Context)&gt;"/>  
        <node method="&lt;org.antennapod.audio.MediaPlayer: boolean isIntentAvailable(android.content.Context,java.lang.String)&gt;"/>  
        <node method="MediaPlayer isIntentAvailable" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="MediaPlayer isIntentAvailable" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r2)"/>  
        <node method="MediaPlayer isIntentAvailable" type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r0, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$2: boolean onPreferenceChange(android.support.v7.preference.Preference,java.lang.Object)&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupInterfaceScreen$2$PreferenceController$11df2fb5(android.app.Activity)&gt;,boolean lambda$setupInterfaceScreen$2$PreferenceController$11df2fb5(android.app.Activity)"/>  
      <source name="de.danoeh.antennapod.activity.PreferenceActivity"/>  
      <destinition name="de.danoeh.antennapod.activity.MainActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$2: boolean onPreferenceChange(android.support.v7.preference.Preference,java.lang.Object)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: boolean lambda$setupInterfaceScreen$2$PreferenceController$11df2fb5(android.app.Activity)&gt;"/>  
        <node method="PreferenceController lambda$setupInterfaceScreen$2$PreferenceController$11df2fb5" type="CreateMethod" unit="$r0 = new android.content.Intent"/>  
        <node method="PreferenceController lambda$setupInterfaceScreen$2$PreferenceController$11df2fb5" type="SetAttribute" unit="specialinvoke $r0.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lde/danoeh/antennapod/activity/MainActivity;&quot;)"/>  
        <node method="PreferenceController lambda$setupInterfaceScreen$2$PreferenceController$11df2fb5" type="SetAttribute" unit="virtualinvoke $r0.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268468224)"/>  
        <node method="PreferenceController lambda$setupInterfaceScreen$2$PreferenceController$11df2fb5" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.app.Activity: void startActivity(android.content.Intent)&gt;($r0)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.service.download.DownloadService"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.download.DownloadService: void onDestroy()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.download.DownloadService: void onDestroy()&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncActionsIntent(android.content.Context)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;,void enqueueWork(android.content.Context,android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.download.DownloadService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.download.DownloadService: void onDestroy()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncActionsIntent(android.content.Context)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.download.DownloadService: void onDestroy()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.download.DownloadService: void onDestroy()&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncActionsIntent(android.content.Context)&gt;,void sendSyncActionsIntent(android.content.Context), &lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void enqueueWork(android.content.Context,android.content.Intent)&gt;"/>  
      <source name="de.danoeh.antennapod.core.service.download.DownloadService"/>  
      <destinition name="de.danoeh.antennapod.core.service.GpodnetSyncService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.download.DownloadService: void onDestroy()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sendSyncActionsIntent(android.content.Context)&gt;"/>  
        <node method="GpodnetSyncService sendSyncActionsIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="GpodnetSyncService sendSyncActionsIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lde/danoeh/antennapod/core/service/GpodnetSyncService;&quot;)"/>  
        <node method="GpodnetSyncService enqueueWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.service.GpodnetSyncService"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void onHandleWork(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void onHandleWork(android.content.Intent)&gt;,void onHandleWork(android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.GpodnetSyncService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void onHandleWork(android.content.Intent)&gt;"/>  
        <node method="GpodnetSyncService onHandleWork" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: android.content.Intent getIntent()&gt;()"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void onHandleWork(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void onHandleWork(android.content.Intent)&gt;,void onHandleWork(android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.GpodnetSyncService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void onHandleWork(android.content.Intent)&gt;"/>  
        <node method="GpodnetSyncService onHandleWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void onHandleWork(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void onHandleWork(android.content.Intent)&gt;,void onHandleWork(android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.GpodnetSyncService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void onHandleWork(android.content.Intent)&gt;"/>  
        <node method="GpodnetSyncService onHandleWork" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void onHandleWork(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void onHandleWork(android.content.Intent)&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sync()&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void syncSubscriptionChanges()&gt;,&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void processSubscriptionChanges(java.util.List,java.util.Collection,java.util.Collection,de.danoeh.antennapod.core.gpoddernet.model.GpodnetSubscriptionChange)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;,boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)"/>  
      <source name="de.danoeh.antennapod.core.service.GpodnetSyncService"/>  
      <destinition name="de.danoeh.antennapod.core.service.download.DownloadService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void onHandleWork(android.content.Intent)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void sync()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void syncSubscriptionChanges()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void processSubscriptionChanges(java.util.List,java.util.Collection,java.util.Collection,de.danoeh.antennapod.core.gpoddernet.model.GpodnetSubscriptionChange)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void downloadFeed(android.content.Context,de.danoeh.antennapod.core.feed.Feed,boolean,boolean)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: void download(android.content.Context,de.danoeh.antennapod.core.feed.FeedFile,de.danoeh.antennapod.core.feed.FeedFile,java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.storage.DownloadRequester: boolean download(android.content.Context,de.danoeh.antennapod.core.service.download.DownloadRequest)&gt;"/>  
        <node method="DownloadRequester download" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="DownloadRequester download" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lde/danoeh/antennapod/core/service/download/DownloadService;&quot;)"/>  
        <node method="DownloadRequester download" type="PassOutIntent" unit="staticinvoke &lt;android.support.v4.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)&gt;($r2, $r5)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void onHandleWork(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void onHandleWork(android.content.Intent)&gt;,void onHandleWork(android.content.Intent)"/>  
      <source name="de.danoeh.antennapod.core.service.GpodnetSyncService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: void onHandleWork(android.content.Intent)&gt;"/>  
        <node method="GpodnetSyncService onHandleWork" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;de.danoeh.antennapod.core.service.GpodnetSyncService: android.content.Intent getIntent()&gt;()"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.core.service.playback.PlaybackService"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void onCreate()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void onCreate()&gt;,void onCreate()"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <destinition name="de.danoeh.antennapod.core.receiver.MediaButtonReceiver"/>  
      <sender action="android.intent.action.MEDIA_BUTTON"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void onCreate()&gt;"/>  
        <node method="PlaybackService onCreate" type="CreateMethod" unit="$r13 = new android.content.Intent"/>  
        <node method="PlaybackService onCreate" type="SetAttribute" unit="specialinvoke $r13.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.MEDIA_BUTTON&quot;)"/>  
        <node method="PlaybackService onCreate" type="SetAttribute" unit="virtualinvoke $r13.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r11)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void onCreate()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void onCreate()&gt;,&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.support.v4.app.NotificationCompat$Builder createBasicNotification()&gt;,android.support.v4.app.NotificationCompat$Builder createBasicNotification()"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: void onCreate()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.support.v4.app.NotificationCompat$Builder createBasicNotification()&gt;"/>  
        <node method="PlaybackService createBasicNotification" type="ReceiveIntentFromRetValue" unit="$r1 = staticinvoke &lt;de.danoeh.antennapod.core.service.playback.PlaybackService: android.content.Intent getPlayerActivityIntent(android.content.Context)&gt;(r0)"/>  
        <node method="PlaybackService createBasicNotification" type="PassOutIntent" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r2)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.FeedInfoActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.FeedInfoActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.FeedInfoActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle)"/>  
      <source name="de.danoeh.antennapod.activity.FeedInfoActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.FeedInfoActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="FeedInfoActivity onCreate" type="setContentView" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.activity.FeedInfoActivity: void setContentView(int)&gt;(2131558471)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.FeedSettingsActivity"> 
    <intentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.FeedSettingsActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.FeedSettingsActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle)"/>  
      <source name="de.danoeh.antennapod.activity.FeedSettingsActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.FeedSettingsActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="FeedSettingsActivity onCreate" type="setContentView" unit="virtualinvoke r0.&lt;de.danoeh.antennapod.activity.FeedSettingsActivity: void setContentView(int)&gt;(2131558475)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="de.danoeh.antennapod.activity.MainActivity"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MainActivity: void loadChildFragment(android.support.v4.app.Fragment)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MainActivity: void loadChildFragment(android.support.v4.app.Fragment)&gt;,void loadChildFragment(android.support.v4.app.Fragment)"/>  
      <source name="de.danoeh.antennapod.activity.MainActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity: void loadChildFragment(android.support.v4.app.Fragment)&gt;"/>  
        <node method="MainActivity loadChildFragment" type="getFragment" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="addToBackStack" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(null)"/>  
        <node method="MainActivity loadChildFragment" type="commit" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.activity.MainActivity"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(android.support.v4.app.Fragment)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(android.support.v4.app.Fragment)&gt;,void loadFragment(android.support.v4.app.Fragment)"/>  
      <source name="de.danoeh.antennapod.activity.MainActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(android.support.v4.app.Fragment)&gt;"/>  
        <node method="MainActivity loadFragment" type="getFragment" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity loadFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity loadFragment" type="replaceFunction" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadFragment" type="commit" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.core.cast.SwitchableMediaRouteActionProvider"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.cast.SwitchableMediaRouteActionProvider: boolean onPerformDefaultAction()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.cast.SwitchableMediaRouteActionProvider: boolean onPerformDefaultAction()&gt;,boolean onPerformDefaultAction(), &lt;de.danoeh.antennapod.core.cast.SwitchableMediaRouteActionProvider: android.support.v4.app.FragmentManager getFragmentManager()&gt;"/>  
      <source name="de.danoeh.antennapod.core.cast.SwitchableMediaRouteActionProvider"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.cast.SwitchableMediaRouteActionProvider: boolean onPerformDefaultAction()&gt;"/>  
        <node method="SwitchableMediaRouteActionProvider onPerformDefaultAction" type="ReceiveFromRetValue" unit="$r1 = specialinvoke r0.&lt;de.danoeh.antennapod.core.cast.SwitchableMediaRouteActionProvider: android.support.v4.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="SwitchableMediaRouteActionProvider getFragmentManager" type="getFragment" unit="$r3 = virtualinvoke $r2.&lt;android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="SwitchableMediaRouteActionProvider onPerformDefaultAction" type="dialogShow" unit="virtualinvoke $r9.&lt;android.support.v7.app.MediaRouteChooserDialogFragment: void show(android.support.v4.app.FragmentManager,java.lang.String)&gt;($r1, &quot;android.support.v7.mediarouter:MediaRouteChooserDialogFragment&quot;)"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.cast.SwitchableMediaRouteActionProvider: boolean onPerformDefaultAction()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.cast.SwitchableMediaRouteActionProvider: boolean onPerformDefaultAction()&gt;,boolean onPerformDefaultAction(), &lt;de.danoeh.antennapod.core.cast.SwitchableMediaRouteActionProvider: android.support.v4.app.FragmentManager getFragmentManager()&gt;"/>  
      <source name="de.danoeh.antennapod.core.cast.SwitchableMediaRouteActionProvider"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.cast.SwitchableMediaRouteActionProvider: boolean onPerformDefaultAction()&gt;"/>  
        <node method="SwitchableMediaRouteActionProvider onPerformDefaultAction" type="ReceiveFromRetValue" unit="$r1 = specialinvoke r0.&lt;de.danoeh.antennapod.core.cast.SwitchableMediaRouteActionProvider: android.support.v4.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="SwitchableMediaRouteActionProvider getFragmentManager" type="getFragment" unit="$r3 = virtualinvoke $r2.&lt;android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="SwitchableMediaRouteActionProvider onPerformDefaultAction" type="dialogShow" unit="virtualinvoke $r8.&lt;android.support.v7.app.MediaRouteControllerDialogFragment: void show(android.support.v4.app.FragmentManager,java.lang.String)&gt;($r1, &quot;android.support.v7.mediarouter:MediaRouteControllerDialogFragment&quot;)"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.fragment.AddFeedFragment"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.AddFeedFragment: void lambda$onCreateView$0$AddFeedFragment$6fad7229(de.danoeh.antennapod.activity.MainActivity)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.AddFeedFragment: void lambda$onCreateView$0$AddFeedFragment$6fad7229(de.danoeh.antennapod.activity.MainActivity)&gt;,void lambda$onCreateView$0$AddFeedFragment$6fad7229(de.danoeh.antennapod.activity.MainActivity), &lt;de.danoeh.antennapod.activity.MainActivity: void loadChildFragment(android.support.v4.app.Fragment)&gt;"/>  
      <source name="de.danoeh.antennapod.fragment.AddFeedFragment"/>  
      <destinition name="de.danoeh.antennapod.fragment.ItunesSearchFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.AddFeedFragment: void lambda$onCreateView$0$AddFeedFragment$6fad7229(de.danoeh.antennapod.activity.MainActivity)&gt;"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="getFragment" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="addToBackStack" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(null)"/>  
        <node method="MainActivity loadChildFragment" type="commit" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.fragment.AddFeedFragment"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.AddFeedFragment: void lambda$onCreateView$1$AddFeedFragment$6fad7229(de.danoeh.antennapod.activity.MainActivity)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.AddFeedFragment: void lambda$onCreateView$1$AddFeedFragment$6fad7229(de.danoeh.antennapod.activity.MainActivity)&gt;,void lambda$onCreateView$1$AddFeedFragment$6fad7229(de.danoeh.antennapod.activity.MainActivity), &lt;de.danoeh.antennapod.activity.MainActivity: void loadChildFragment(android.support.v4.app.Fragment)&gt;"/>  
      <source name="de.danoeh.antennapod.fragment.AddFeedFragment"/>  
      <destinition name="de.danoeh.antennapod.fragment.gpodnet.GpodnetMainFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.AddFeedFragment: void lambda$onCreateView$1$AddFeedFragment$6fad7229(de.danoeh.antennapod.activity.MainActivity)&gt;"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="getFragment" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="addToBackStack" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(null)"/>  
        <node method="MainActivity loadChildFragment" type="commit" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.fragment.AddFeedFragment$$Lambda$0"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.AddFeedFragment$$Lambda$0: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.AddFeedFragment$$Lambda$0: void onClick(android.view.View)&gt;,&lt;de.danoeh.antennapod.fragment.AddFeedFragment: void lambda$onCreateView$0$AddFeedFragment$6fad7229(de.danoeh.antennapod.activity.MainActivity)&gt;,void lambda$onCreateView$0$AddFeedFragment$6fad7229(de.danoeh.antennapod.activity.MainActivity), &lt;de.danoeh.antennapod.activity.MainActivity: void loadChildFragment(android.support.v4.app.Fragment)&gt;"/>  
      <source name="de.danoeh.antennapod.fragment.AddFeedFragment"/>  
      <destinition name="de.danoeh.antennapod.fragment.ItunesSearchFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.AddFeedFragment$$Lambda$0: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.AddFeedFragment: void lambda$onCreateView$0$AddFeedFragment$6fad7229(de.danoeh.antennapod.activity.MainActivity)&gt;"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="getFragment" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="addToBackStack" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(null)"/>  
        <node method="MainActivity loadChildFragment" type="commit" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.fragment.gpodnet.TagListFragment$$Lambda$0"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.gpodnet.TagListFragment$$Lambda$0: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.gpodnet.TagListFragment$$Lambda$0: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;,void onItemClick(android.widget.AdapterView,android.view.View,int,long), &lt;de.danoeh.antennapod.activity.MainActivity: void loadChildFragment(android.support.v4.app.Fragment)&gt;"/>  
      <source name="de.danoeh.antennapod.fragment.gpodnet.TagListFragment"/>  
      <destinition name="de.danoeh.antennapod.fragment.gpodnet.TagFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.gpodnet.TagListFragment$$Lambda$0: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="getFragment" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="addToBackStack" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(null)"/>  
        <node method="MainActivity loadChildFragment" type="commit" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.fragment.gpodnet.TagListFragment$1"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.gpodnet.TagListFragment$1: boolean onQueryTextSubmit(java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.gpodnet.TagListFragment$1: boolean onQueryTextSubmit(java.lang.String)&gt;,boolean onQueryTextSubmit(java.lang.String), &lt;de.danoeh.antennapod.activity.MainActivity: void loadChildFragment(android.support.v4.app.Fragment)&gt;"/>  
      <source name="de.danoeh.antennapod.fragment.gpodnet.TagListFragment"/>  
      <destinition name="de.danoeh.antennapod.fragment.gpodnet.SearchListFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.gpodnet.TagListFragment$1: boolean onQueryTextSubmit(java.lang.String)&gt;"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="getFragment" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="addToBackStack" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(null)"/>  
        <node method="MainActivity loadChildFragment" type="commit" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.fragment.AddFeedFragment$$Lambda$1"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.AddFeedFragment$$Lambda$1: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.AddFeedFragment$$Lambda$1: void onClick(android.view.View)&gt;,&lt;de.danoeh.antennapod.fragment.AddFeedFragment: void lambda$onCreateView$1$AddFeedFragment$6fad7229(de.danoeh.antennapod.activity.MainActivity)&gt;,void lambda$onCreateView$1$AddFeedFragment$6fad7229(de.danoeh.antennapod.activity.MainActivity), &lt;de.danoeh.antennapod.activity.MainActivity: void loadChildFragment(android.support.v4.app.Fragment)&gt;"/>  
      <source name="de.danoeh.antennapod.fragment.AddFeedFragment"/>  
      <destinition name="de.danoeh.antennapod.fragment.gpodnet.GpodnetMainFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.AddFeedFragment$$Lambda$1: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.AddFeedFragment: void lambda$onCreateView$1$AddFeedFragment$6fad7229(de.danoeh.antennapod.activity.MainActivity)&gt;"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="getFragment" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="addToBackStack" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(null)"/>  
        <node method="MainActivity loadChildFragment" type="commit" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.preferences.PreferenceController"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.preferences.PreferenceController: android.support.v7.preference.PreferenceFragmentCompat openScreen(int,android.support.v7.app.AppCompatActivity)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.preferences.PreferenceController: android.support.v7.preference.PreferenceFragmentCompat openScreen(int,android.support.v7.app.AppCompatActivity)&gt;,android.support.v7.preference.PreferenceFragmentCompat openScreen(int,android.support.v7.app.AppCompatActivity)"/>  
      <source name="de.danoeh.antennapod.preferences.PreferenceController"/>  
      <destinition name="de.danoeh.antennapod.activity.PreferenceActivity$MainFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: android.support.v7.preference.PreferenceFragmentCompat openScreen(int,android.support.v7.app.AppCompatActivity)&gt;"/>  
        <node method="PreferenceController openScreen" type="getFragment" unit="$r3 = virtualinvoke $r2.&lt;android.support.v7.app.AppCompatActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="PreferenceController openScreen" type="beginTransaction" unit="$r4 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="PreferenceController openScreen" type="replaceFunction" unit="$r4 = virtualinvoke $r4.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment)&gt;(2131361928, $r0)"/>  
        <node method="PreferenceController openScreen" type="addToBackStack" unit="$r4 = virtualinvoke $r4.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(&quot;PreferenceController&quot;)"/>  
        <node method="PreferenceController openScreen" type="commit" unit="virtualinvoke $r4.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.preferences.PreferenceController$$Lambda$31"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$31: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$31: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController: android.support.v7.preference.PreferenceFragmentCompat openScreen(int,android.support.v7.app.AppCompatActivity)&gt;,android.support.v7.preference.PreferenceFragmentCompat openScreen(int,android.support.v7.app.AppCompatActivity)"/>  
      <source name="de.danoeh.antennapod.preferences.PreferenceController"/>  
      <destinition name="de.danoeh.antennapod.activity.PreferenceActivity$MainFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$31: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: android.support.v7.preference.PreferenceFragmentCompat openScreen(int,android.support.v7.app.AppCompatActivity)&gt;"/>  
        <node method="PreferenceController openScreen" type="getFragment" unit="$r3 = virtualinvoke $r2.&lt;android.support.v7.app.AppCompatActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="PreferenceController openScreen" type="beginTransaction" unit="$r4 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="PreferenceController openScreen" type="replaceFunction" unit="$r4 = virtualinvoke $r4.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment)&gt;(2131361928, $r0)"/>  
        <node method="PreferenceController openScreen" type="addToBackStack" unit="$r4 = virtualinvoke $r4.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(&quot;PreferenceController&quot;)"/>  
        <node method="PreferenceController openScreen" type="commit" unit="virtualinvoke $r4.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.preferences.PreferenceController$$Lambda$33"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$33: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$33: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController: android.support.v7.preference.PreferenceFragmentCompat openScreen(int,android.support.v7.app.AppCompatActivity)&gt;,android.support.v7.preference.PreferenceFragmentCompat openScreen(int,android.support.v7.app.AppCompatActivity)"/>  
      <source name="de.danoeh.antennapod.preferences.PreferenceController"/>  
      <destinition name="de.danoeh.antennapod.activity.PreferenceActivity$MainFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$33: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: android.support.v7.preference.PreferenceFragmentCompat openScreen(int,android.support.v7.app.AppCompatActivity)&gt;"/>  
        <node method="PreferenceController openScreen" type="getFragment" unit="$r3 = virtualinvoke $r2.&lt;android.support.v7.app.AppCompatActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="PreferenceController openScreen" type="beginTransaction" unit="$r4 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="PreferenceController openScreen" type="replaceFunction" unit="$r4 = virtualinvoke $r4.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment)&gt;(2131361928, $r0)"/>  
        <node method="PreferenceController openScreen" type="addToBackStack" unit="$r4 = virtualinvoke $r4.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(&quot;PreferenceController&quot;)"/>  
        <node method="PreferenceController openScreen" type="commit" unit="virtualinvoke $r4.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.preferences.PreferenceController$$Lambda$34"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$34: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$34: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController: android.support.v7.preference.PreferenceFragmentCompat openScreen(int,android.support.v7.app.AppCompatActivity)&gt;,android.support.v7.preference.PreferenceFragmentCompat openScreen(int,android.support.v7.app.AppCompatActivity)"/>  
      <source name="de.danoeh.antennapod.preferences.PreferenceController"/>  
      <destinition name="de.danoeh.antennapod.activity.PreferenceActivity$MainFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$34: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: android.support.v7.preference.PreferenceFragmentCompat openScreen(int,android.support.v7.app.AppCompatActivity)&gt;"/>  
        <node method="PreferenceController openScreen" type="getFragment" unit="$r3 = virtualinvoke $r2.&lt;android.support.v7.app.AppCompatActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="PreferenceController openScreen" type="beginTransaction" unit="$r4 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="PreferenceController openScreen" type="replaceFunction" unit="$r4 = virtualinvoke $r4.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment)&gt;(2131361928, $r0)"/>  
        <node method="PreferenceController openScreen" type="addToBackStack" unit="$r4 = virtualinvoke $r4.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(&quot;PreferenceController&quot;)"/>  
        <node method="PreferenceController openScreen" type="commit" unit="virtualinvoke $r4.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.preferences.PreferenceController$$Lambda$27"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$27: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$27: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController: android.support.v7.preference.PreferenceFragmentCompat openScreen(int,android.support.v7.app.AppCompatActivity)&gt;,android.support.v7.preference.PreferenceFragmentCompat openScreen(int,android.support.v7.app.AppCompatActivity)"/>  
      <source name="de.danoeh.antennapod.preferences.PreferenceController"/>  
      <destinition name="de.danoeh.antennapod.activity.PreferenceActivity$MainFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$27: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: android.support.v7.preference.PreferenceFragmentCompat openScreen(int,android.support.v7.app.AppCompatActivity)&gt;"/>  
        <node method="PreferenceController openScreen" type="getFragment" unit="$r3 = virtualinvoke $r2.&lt;android.support.v7.app.AppCompatActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="PreferenceController openScreen" type="beginTransaction" unit="$r4 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="PreferenceController openScreen" type="replaceFunction" unit="$r4 = virtualinvoke $r4.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment)&gt;(2131361928, $r0)"/>  
        <node method="PreferenceController openScreen" type="addToBackStack" unit="$r4 = virtualinvoke $r4.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(&quot;PreferenceController&quot;)"/>  
        <node method="PreferenceController openScreen" type="commit" unit="virtualinvoke $r4.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.preferences.PreferenceController$$Lambda$35"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$35: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$35: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController: android.support.v7.preference.PreferenceFragmentCompat openScreen(int,android.support.v7.app.AppCompatActivity)&gt;,android.support.v7.preference.PreferenceFragmentCompat openScreen(int,android.support.v7.app.AppCompatActivity)"/>  
      <source name="de.danoeh.antennapod.preferences.PreferenceController"/>  
      <destinition name="de.danoeh.antennapod.activity.PreferenceActivity$MainFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$35: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: android.support.v7.preference.PreferenceFragmentCompat openScreen(int,android.support.v7.app.AppCompatActivity)&gt;"/>  
        <node method="PreferenceController openScreen" type="getFragment" unit="$r3 = virtualinvoke $r2.&lt;android.support.v7.app.AppCompatActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="PreferenceController openScreen" type="beginTransaction" unit="$r4 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="PreferenceController openScreen" type="replaceFunction" unit="$r4 = virtualinvoke $r4.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment)&gt;(2131361928, $r0)"/>  
        <node method="PreferenceController openScreen" type="addToBackStack" unit="$r4 = virtualinvoke $r4.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(&quot;PreferenceController&quot;)"/>  
        <node method="PreferenceController openScreen" type="commit" unit="virtualinvoke $r4.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.fragment.gpodnet.PodcastListFragment$1"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.gpodnet.PodcastListFragment$1: boolean onQueryTextSubmit(java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.gpodnet.PodcastListFragment$1: boolean onQueryTextSubmit(java.lang.String)&gt;,boolean onQueryTextSubmit(java.lang.String), &lt;de.danoeh.antennapod.activity.MainActivity: void loadChildFragment(android.support.v4.app.Fragment)&gt;"/>  
      <source name="de.danoeh.antennapod.fragment.gpodnet.PodcastListFragment"/>  
      <destinition name="de.danoeh.antennapod.fragment.gpodnet.SearchListFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.gpodnet.PodcastListFragment$1: boolean onQueryTextSubmit(java.lang.String)&gt;"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="getFragment" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="addToBackStack" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(null)"/>  
        <node method="MainActivity loadChildFragment" type="commit" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.preferences.PreferenceController$$Lambda$32"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$32: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$32: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController: android.support.v7.preference.PreferenceFragmentCompat openScreen(int,android.support.v7.app.AppCompatActivity)&gt;,android.support.v7.preference.PreferenceFragmentCompat openScreen(int,android.support.v7.app.AppCompatActivity)"/>  
      <source name="de.danoeh.antennapod.preferences.PreferenceController"/>  
      <destinition name="de.danoeh.antennapod.activity.PreferenceActivity$MainFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$32: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: android.support.v7.preference.PreferenceFragmentCompat openScreen(int,android.support.v7.app.AppCompatActivity)&gt;"/>  
        <node method="PreferenceController openScreen" type="getFragment" unit="$r3 = virtualinvoke $r2.&lt;android.support.v7.app.AppCompatActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="PreferenceController openScreen" type="beginTransaction" unit="$r4 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="PreferenceController openScreen" type="replaceFunction" unit="$r4 = virtualinvoke $r4.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment)&gt;(2131361928, $r0)"/>  
        <node method="PreferenceController openScreen" type="addToBackStack" unit="$r4 = virtualinvoke $r4.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(&quot;PreferenceController&quot;)"/>  
        <node method="PreferenceController openScreen" type="commit" unit="virtualinvoke $r4.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.preferences.PreferenceController$$Lambda$13"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$13: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$13: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController: android.support.v7.preference.PreferenceFragmentCompat openScreen(int,android.support.v7.app.AppCompatActivity)&gt;,android.support.v7.preference.PreferenceFragmentCompat openScreen(int,android.support.v7.app.AppCompatActivity)"/>  
      <source name="de.danoeh.antennapod.preferences.PreferenceController"/>  
      <destinition name="de.danoeh.antennapod.activity.PreferenceActivity$MainFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$13: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: android.support.v7.preference.PreferenceFragmentCompat openScreen(int,android.support.v7.app.AppCompatActivity)&gt;"/>  
        <node method="PreferenceController openScreen" type="getFragment" unit="$r3 = virtualinvoke $r2.&lt;android.support.v7.app.AppCompatActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="PreferenceController openScreen" type="beginTransaction" unit="$r4 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="PreferenceController openScreen" type="replaceFunction" unit="$r4 = virtualinvoke $r4.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment)&gt;(2131361928, $r0)"/>  
        <node method="PreferenceController openScreen" type="addToBackStack" unit="$r4 = virtualinvoke $r4.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(&quot;PreferenceController&quot;)"/>  
        <node method="PreferenceController openScreen" type="commit" unit="virtualinvoke $r4.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.preferences.PreferenceController$$Lambda$12"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$12: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$12: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController: android.support.v7.preference.PreferenceFragmentCompat openScreen(int,android.support.v7.app.AppCompatActivity)&gt;,android.support.v7.preference.PreferenceFragmentCompat openScreen(int,android.support.v7.app.AppCompatActivity)"/>  
      <source name="de.danoeh.antennapod.preferences.PreferenceController"/>  
      <destinition name="de.danoeh.antennapod.activity.PreferenceActivity$MainFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$12: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: android.support.v7.preference.PreferenceFragmentCompat openScreen(int,android.support.v7.app.AppCompatActivity)&gt;"/>  
        <node method="PreferenceController openScreen" type="getFragment" unit="$r3 = virtualinvoke $r2.&lt;android.support.v7.app.AppCompatActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="PreferenceController openScreen" type="beginTransaction" unit="$r4 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="PreferenceController openScreen" type="replaceFunction" unit="$r4 = virtualinvoke $r4.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment)&gt;(2131361928, $r0)"/>  
        <node method="PreferenceController openScreen" type="addToBackStack" unit="$r4 = virtualinvoke $r4.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(&quot;PreferenceController&quot;)"/>  
        <node method="PreferenceController openScreen" type="commit" unit="virtualinvoke $r4.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.bumptech.glide.manager.RequestManagerRetriever"> 
    <FragmentSummary> 
      <method value="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>  
      <methodtrace value="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>  
      <source name="com.bumptech.glide.manager.RequestManagerRetriever"/>  
      <nodes> 
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.bumptech.glide.manager.RequestManagerRetriever"> 
    <FragmentSummary> 
      <method value="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.app.Activity)&gt;"/>  
      <methodtrace value="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.app.Activity)&gt;,com.bumptech.glide.RequestManager get(android.app.Activity), &lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;, &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>  
      <source name="com.bumptech.glide.manager.RequestManagerRetriever"/>  
      <nodes> 
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.app.Activity)&gt;"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.bumptech.glide.manager.RequestManagerRetriever"> 
    <FragmentSummary> 
      <method value="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>  
      <source name="com.bumptech.glide.manager.RequestManagerRetriever"/>  
      <nodes> 
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.bumptech.glide.manager.RequestManagerRetriever"> 
    <FragmentSummary> 
      <method value="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>  
      <methodtrace value="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>  
      <source name="com.bumptech.glide.manager.RequestManagerRetriever"/>  
      <nodes> 
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.bumptech.glide.manager.RequestManagerRetriever"> 
    <FragmentSummary> 
      <method value="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager supportFragmentGet(android.content.Context,android.support.v4.app.FragmentManager)&gt;"/>  
      <methodtrace value="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager supportFragmentGet(android.content.Context,android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.RequestManager supportFragmentGet(android.content.Context,android.support.v4.app.FragmentManager), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>  
      <source name="com.bumptech.glide.manager.RequestManagerRetriever"/>  
      <nodes> 
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager supportFragmentGet(android.content.Context,android.support.v4.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.bumptech.glide.manager.RequestManagerRetriever"> 
    <FragmentSummary> 
      <method value="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>  
      <methodtrace value="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>  
      <source name="com.bumptech.glide.manager.RequestManagerRetriever"/>  
      <nodes> 
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>  
      <methodtrace value="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>  
      <source name="com.bumptech.glide.manager.RequestManagerRetriever"/>  
      <nodes> 
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.bumptech.glide.Glide"> 
    <FragmentSummary> 
      <method value="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;"/>  
      <methodtrace value="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>  
      <source name="com.bumptech.glide.Glide"/>  
      <nodes> 
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;"/>  
      <methodtrace value="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>  
      <source name="com.bumptech.glide.Glide"/>  
      <nodes> 
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.fragment.ItemlistFragment"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void loadFeedImage()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void loadFeedImage()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>  
      <source name="de.danoeh.antennapod.fragment.ItemlistFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void loadFeedImage()&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void loadFeedImage()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void loadFeedImage()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>  
      <source name="de.danoeh.antennapod.fragment.ItemlistFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void loadFeedImage()&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.fragment.ItemlistFragment"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void refreshHeaderView()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void refreshHeaderView()&gt;,&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void loadFeedImage()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>  
      <source name="de.danoeh.antennapod.fragment.ItemlistFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void refreshHeaderView()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void loadFeedImage()&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void refreshHeaderView()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void refreshHeaderView()&gt;,&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void loadFeedImage()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>  
      <source name="de.danoeh.antennapod.fragment.ItemlistFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void refreshHeaderView()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void loadFeedImage()&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.fragment.ItemlistFragment"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void access$300(de.danoeh.antennapod.fragment.ItemlistFragment)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void access$300(de.danoeh.antennapod.fragment.ItemlistFragment)&gt;,&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void refreshHeaderView()&gt;,&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void loadFeedImage()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>  
      <source name="de.danoeh.antennapod.fragment.ItemlistFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void access$300(de.danoeh.antennapod.fragment.ItemlistFragment)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void refreshHeaderView()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void loadFeedImage()&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void access$300(de.danoeh.antennapod.fragment.ItemlistFragment)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void access$300(de.danoeh.antennapod.fragment.ItemlistFragment)&gt;,&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void refreshHeaderView()&gt;,&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void loadFeedImage()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>  
      <source name="de.danoeh.antennapod.fragment.ItemlistFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void access$300(de.danoeh.antennapod.fragment.ItemlistFragment)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void refreshHeaderView()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void loadFeedImage()&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.activity.MainActivity"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MainActivity: void loadFeedFragmentById(long,android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MainActivity: void loadFeedFragmentById(long,android.os.Bundle)&gt;,void loadFeedFragmentById(long,android.os.Bundle), &lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(android.support.v4.app.Fragment)&gt;"/>  
      <source name="de.danoeh.antennapod.activity.MainActivity"/>  
      <destinition name="de.danoeh.antennapod.fragment.ItemlistFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity: void loadFeedFragmentById(long,android.os.Bundle)&gt;"/>  
        <node method="MainActivity loadFragment" type="replaceFunction" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadFragment" type="getFragment" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity loadFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity loadFragment" type="replaceFunction" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadFragment" type="commit" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.fragment.SearchFragment"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.SearchFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.SearchFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)&gt;,&lt;de.danoeh.antennapod.activity.MainActivity: void loadFeedFragmentById(long,android.os.Bundle)&gt;,void loadFeedFragmentById(long,android.os.Bundle), &lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(android.support.v4.app.Fragment)&gt;"/>  
      <source name="de.danoeh.antennapod.fragment.SearchFragment"/>  
      <destinition name="de.danoeh.antennapod.fragment.ItemlistFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.SearchFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity: void loadFeedFragmentById(long,android.os.Bundle)&gt;"/>  
        <node method="MainActivity loadFragment" type="replaceFunction" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadFragment" type="getFragment" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity loadFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity loadFragment" type="replaceFunction" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadFragment" type="commit" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.SearchFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.SearchFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)&gt;,void onListItemClick(android.widget.ListView,android.view.View,int,long), &lt;de.danoeh.antennapod.activity.MainActivity: void loadChildFragment(android.support.v4.app.Fragment)&gt;"/>  
      <source name="de.danoeh.antennapod.fragment.SearchFragment"/>  
      <destinition name="de.danoeh.antennapod.fragment.ItemFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.SearchFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)&gt;"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="getFragment" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="addToBackStack" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(null)"/>  
        <node method="MainActivity loadChildFragment" type="commit" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.adapter.AllEpisodesRecycleAdapter$Holder"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.adapter.AllEpisodesRecycleAdapter$Holder: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.adapter.AllEpisodesRecycleAdapter$Holder: void onClick(android.view.View)&gt;,void onClick(android.view.View), &lt;de.danoeh.antennapod.activity.MainActivity: void loadChildFragment(android.support.v4.app.Fragment)&gt;"/>  
      <source name="de.danoeh.antennapod.adapter.AllEpisodesRecycleAdapter"/>  
      <destinition name="de.danoeh.antennapod.fragment.ItemFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.adapter.AllEpisodesRecycleAdapter$Holder: void onClick(android.view.View)&gt;"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="getFragment" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="addToBackStack" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(null)"/>  
        <node method="MainActivity loadChildFragment" type="commit" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.adapter.AllEpisodesRecycleAdapter$Holder"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.adapter.AllEpisodesRecycleAdapter$Holder: void &lt;init&gt;(de.danoeh.antennapod.adapter.AllEpisodesRecycleAdapter,android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.adapter.AllEpisodesRecycleAdapter$Holder: void &lt;init&gt;(de.danoeh.antennapod.adapter.AllEpisodesRecycleAdapter,android.view.View)&gt;,&lt;de.danoeh.antennapod.adapter.AllEpisodesRecycleAdapter$Holder: void onClick(android.view.View)&gt;,void onClick(android.view.View), &lt;de.danoeh.antennapod.activity.MainActivity: void loadChildFragment(android.support.v4.app.Fragment)&gt;"/>  
      <source name="de.danoeh.antennapod.adapter.AllEpisodesRecycleAdapter"/>  
      <destinition name="de.danoeh.antennapod.fragment.ItemFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.adapter.AllEpisodesRecycleAdapter$Holder: void &lt;init&gt;(de.danoeh.antennapod.adapter.AllEpisodesRecycleAdapter,android.view.View)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.adapter.AllEpisodesRecycleAdapter$Holder: void onClick(android.view.View)&gt;"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="getFragment" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="addToBackStack" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(null)"/>  
        <node method="MainActivity loadChildFragment" type="commit" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.fragment.ItemlistFragment$2"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment$2: boolean onQueryTextSubmit(java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment$2: boolean onQueryTextSubmit(java.lang.String)&gt;,boolean onQueryTextSubmit(java.lang.String), &lt;de.danoeh.antennapod.activity.MainActivity: void loadChildFragment(android.support.v4.app.Fragment)&gt;"/>  
      <source name="de.danoeh.antennapod.fragment.ItemlistFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment$2: boolean onQueryTextSubmit(java.lang.String)&gt;"/>  
        <node method="MainActivity loadChildFragment" type="getFragment" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="addToBackStack" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(null)"/>  
        <node method="MainActivity loadChildFragment" type="commit" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.fragment.ItemlistFragment"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)&gt;,&lt;de.danoeh.antennapod.fragment.ItemlistFragment$2: boolean onQueryTextSubmit(java.lang.String)&gt;,boolean onQueryTextSubmit(java.lang.String), &lt;de.danoeh.antennapod.activity.MainActivity: void loadChildFragment(android.support.v4.app.Fragment)&gt;"/>  
      <source name="de.danoeh.antennapod.fragment.ItemlistFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment$2: boolean onQueryTextSubmit(java.lang.String)&gt;"/>  
        <node method="MainActivity loadChildFragment" type="getFragment" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="addToBackStack" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(null)"/>  
        <node method="MainActivity loadChildFragment" type="commit" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.bumptech.glide.Glide"> 
    <FragmentSummary> 
      <method value="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>  
      <source name="com.bumptech.glide.Glide"/>  
      <nodes> 
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.bumptech.glide.load.resource.gif.GifFrameLoader"> 
    <FragmentSummary> 
      <method value="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;"/>  
      <methodtrace value="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>  
      <source name="com.bumptech.glide.load.resource.gif.GifFrameLoader"/>  
      <nodes> 
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.bumptech.glide.load.resource.gif.GifDrawable"> 
    <FragmentSummary> 
      <method value="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;"/>  
      <methodtrace value="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>  
      <source name="com.bumptech.glide.load.resource.gif.GifDrawable"/>  
      <nodes> 
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;"/>  
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.bumptech.glide.load.resource.gif.GifDrawable"> 
    <FragmentSummary> 
      <method value="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.Transformation,int,int,com.bumptech.glide.gifdecoder.GifHeader,byte[],android.graphics.Bitmap)&gt;"/>  
      <methodtrace value="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.Transformation,int,int,com.bumptech.glide.gifdecoder.GifHeader,byte[],android.graphics.Bitmap)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>  
      <source name="com.bumptech.glide.load.resource.gif.GifDrawable"/>  
      <nodes> 
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.Transformation,int,int,com.bumptech.glide.gifdecoder.GifHeader,byte[],android.graphics.Bitmap)&gt;"/>  
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;"/>  
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.bumptech.glide.load.resource.gif.GifResourceDecoder"> 
    <FragmentSummary> 
      <method value="&lt;com.bumptech.glide.load.resource.gif.GifResourceDecoder: com.bumptech.glide.load.resource.gif.GifDrawableResource decode(java.io.InputStream,int,int)&gt;"/>  
      <methodtrace value="&lt;com.bumptech.glide.load.resource.gif.GifResourceDecoder: com.bumptech.glide.load.resource.gif.GifDrawableResource decode(java.io.InputStream,int,int)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.Transformation,int,int,com.bumptech.glide.gifdecoder.GifHeader,byte[],android.graphics.Bitmap)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>  
      <source name="com.bumptech.glide.load.resource.gif.GifResourceDecoder"/>  
      <nodes> 
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifResourceDecoder: com.bumptech.glide.load.resource.gif.GifDrawableResource decode(java.io.InputStream,int,int)&gt;"/>  
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.Transformation,int,int,com.bumptech.glide.gifdecoder.GifHeader,byte[],android.graphics.Bitmap)&gt;"/>  
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;"/>  
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.activity.MainActivity"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(java.lang.String,android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(java.lang.String,android.os.Bundle)&gt;,void loadFragment(java.lang.String,android.os.Bundle), &lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(android.support.v4.app.Fragment)&gt;"/>  
      <source name="de.danoeh.antennapod.activity.MainActivity"/>  
      <destinition name="de.danoeh.antennapod.fragment.QueueFragment, de.danoeh.antennapod.fragment.SubscriptionFragment, de.danoeh.antennapod.fragment.AddFeedFragment, de.danoeh.antennapod.fragment.PlaybackHistoryFragment, de.danoeh.antennapod.fragment.DownloadsFragment, de.danoeh.antennapod.fragment.EpisodesFragment, de.danoeh.antennapod.fragment.QueueFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(java.lang.String,android.os.Bundle)&gt;"/>  
        <node method="MainActivity loadFragment" type="replaceFunction" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadFragment" type="getFragment" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity loadFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity loadFragment" type="replaceFunction" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadFragment" type="commit" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.activity.MainActivity"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(int,android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(int,android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.activity.MainActivity: void loadFeedFragmentById(long,android.os.Bundle)&gt;,void loadFeedFragmentById(long,android.os.Bundle), &lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(android.support.v4.app.Fragment)&gt;"/>  
      <source name="de.danoeh.antennapod.activity.MainActivity"/>  
      <destinition name="de.danoeh.antennapod.fragment.ItemlistFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(int,android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity: void loadFeedFragmentById(long,android.os.Bundle)&gt;"/>  
        <node method="MainActivity loadFragment" type="replaceFunction" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadFragment" type="getFragment" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity loadFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity loadFragment" type="replaceFunction" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadFragment" type="commit" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(int,android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(int,android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(java.lang.String,android.os.Bundle)&gt;,void loadFragment(java.lang.String,android.os.Bundle), &lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(android.support.v4.app.Fragment)&gt;"/>  
      <source name="de.danoeh.antennapod.activity.MainActivity"/>  
      <destinition name="de.danoeh.antennapod.fragment.QueueFragment, de.danoeh.antennapod.fragment.SubscriptionFragment, de.danoeh.antennapod.fragment.AddFeedFragment, de.danoeh.antennapod.fragment.PlaybackHistoryFragment, de.danoeh.antennapod.fragment.DownloadsFragment, de.danoeh.antennapod.fragment.EpisodesFragment, de.danoeh.antennapod.fragment.QueueFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(int,android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(java.lang.String,android.os.Bundle)&gt;"/>  
        <node method="MainActivity loadFragment" type="replaceFunction" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadFragment" type="getFragment" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity loadFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity loadFragment" type="replaceFunction" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadFragment" type="commit" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.activity.MainActivity"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MainActivity: void access$200$423e067a(de.danoeh.antennapod.activity.MainActivity,int)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MainActivity: void access$200$423e067a(de.danoeh.antennapod.activity.MainActivity,int)&gt;,&lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(int,android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.activity.MainActivity: void loadFeedFragmentById(long,android.os.Bundle)&gt;,void loadFeedFragmentById(long,android.os.Bundle), &lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(android.support.v4.app.Fragment)&gt;"/>  
      <source name="de.danoeh.antennapod.activity.MainActivity"/>  
      <destinition name="de.danoeh.antennapod.fragment.ItemlistFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity: void access$200$423e067a(de.danoeh.antennapod.activity.MainActivity,int)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(int,android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity: void loadFeedFragmentById(long,android.os.Bundle)&gt;"/>  
        <node method="MainActivity loadFragment" type="replaceFunction" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadFragment" type="getFragment" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity loadFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity loadFragment" type="replaceFunction" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadFragment" type="commit" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MainActivity: void access$200$423e067a(de.danoeh.antennapod.activity.MainActivity,int)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MainActivity: void access$200$423e067a(de.danoeh.antennapod.activity.MainActivity,int)&gt;,&lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(int,android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(java.lang.String,android.os.Bundle)&gt;,void loadFragment(java.lang.String,android.os.Bundle), &lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(android.support.v4.app.Fragment)&gt;"/>  
      <source name="de.danoeh.antennapod.activity.MainActivity"/>  
      <destinition name="de.danoeh.antennapod.fragment.QueueFragment, de.danoeh.antennapod.fragment.SubscriptionFragment, de.danoeh.antennapod.fragment.AddFeedFragment, de.danoeh.antennapod.fragment.PlaybackHistoryFragment, de.danoeh.antennapod.fragment.DownloadsFragment, de.danoeh.antennapod.fragment.EpisodesFragment, de.danoeh.antennapod.fragment.QueueFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity: void access$200$423e067a(de.danoeh.antennapod.activity.MainActivity,int)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(int,android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(java.lang.String,android.os.Bundle)&gt;"/>  
        <node method="MainActivity loadFragment" type="replaceFunction" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadFragment" type="getFragment" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity loadFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity loadFragment" type="replaceFunction" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadFragment" type="commit" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.core.service.playback.PlaybackService$$Lambda$2"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$$Lambda$2: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$$Lambda$2: void run()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$$Lambda$2: void run()&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.adapter.QueueRecyclerAdapter$ViewHolder"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.adapter.QueueRecyclerAdapter$ViewHolder: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.adapter.QueueRecyclerAdapter$ViewHolder: void onClick(android.view.View)&gt;,void onClick(android.view.View), &lt;de.danoeh.antennapod.activity.MainActivity: void loadChildFragment(android.support.v4.app.Fragment)&gt;"/>  
      <source name="de.danoeh.antennapod.adapter.QueueRecyclerAdapter"/>  
      <destinition name="de.danoeh.antennapod.fragment.ItemFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.adapter.QueueRecyclerAdapter$ViewHolder: void onClick(android.view.View)&gt;"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="getFragment" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="addToBackStack" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(null)"/>  
        <node method="MainActivity loadChildFragment" type="commit" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.adapter.QueueRecyclerAdapter$ViewHolder"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.adapter.QueueRecyclerAdapter$ViewHolder: void &lt;init&gt;(de.danoeh.antennapod.adapter.QueueRecyclerAdapter,android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.adapter.QueueRecyclerAdapter$ViewHolder: void &lt;init&gt;(de.danoeh.antennapod.adapter.QueueRecyclerAdapter,android.view.View)&gt;,&lt;de.danoeh.antennapod.adapter.QueueRecyclerAdapter$ViewHolder: void onClick(android.view.View)&gt;,void onClick(android.view.View), &lt;de.danoeh.antennapod.activity.MainActivity: void loadChildFragment(android.support.v4.app.Fragment)&gt;"/>  
      <source name="de.danoeh.antennapod.adapter.QueueRecyclerAdapter"/>  
      <destinition name="de.danoeh.antennapod.fragment.ItemFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.adapter.QueueRecyclerAdapter$ViewHolder: void &lt;init&gt;(de.danoeh.antennapod.adapter.QueueRecyclerAdapter,android.view.View)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.adapter.QueueRecyclerAdapter$ViewHolder: void onClick(android.view.View)&gt;"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="getFragment" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="addToBackStack" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(null)"/>  
        <node method="MainActivity loadChildFragment" type="commit" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.fragment.ItemlistFragment$3"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment$3: void onPostExecute(java.lang.Void)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment$3: void onPostExecute(java.lang.Void)&gt;,&lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(java.lang.String,android.os.Bundle)&gt;,void loadFragment(java.lang.String,android.os.Bundle), &lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(android.support.v4.app.Fragment)&gt;"/>  
      <source name="de.danoeh.antennapod.fragment.ItemlistFragment"/>  
      <destinition name="de.danoeh.antennapod.fragment.QueueFragment, de.danoeh.antennapod.fragment.SubscriptionFragment, de.danoeh.antennapod.fragment.AddFeedFragment, de.danoeh.antennapod.fragment.PlaybackHistoryFragment, de.danoeh.antennapod.fragment.DownloadsFragment, de.danoeh.antennapod.fragment.EpisodesFragment, de.danoeh.antennapod.fragment.QueueFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment$3: void onPostExecute(java.lang.Void)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(java.lang.String,android.os.Bundle)&gt;"/>  
        <node method="MainActivity loadFragment" type="replaceFunction" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadFragment" type="getFragment" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity loadFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity loadFragment" type="replaceFunction" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadFragment" type="commit" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.bumptech.glide.Glide"> 
    <FragmentSummary> 
      <method value="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.Fragment)&gt;"/>  
      <methodtrace value="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.Fragment)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>  
      <source name="com.bumptech.glide.Glide"/>  
      <nodes> 
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.Fragment)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.Fragment)&gt;"/>  
      <methodtrace value="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.Fragment)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>  
      <source name="com.bumptech.glide.Glide"/>  
      <nodes> 
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.Fragment)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.fragment.CoverFragment"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.CoverFragment: void loadMediaInfo()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.CoverFragment: void loadMediaInfo()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.Fragment)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>  
      <source name="de.danoeh.antennapod.fragment.CoverFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.CoverFragment: void loadMediaInfo()&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.Fragment)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.CoverFragment: void loadMediaInfo()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.CoverFragment: void loadMediaInfo()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.Fragment)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>  
      <source name="de.danoeh.antennapod.fragment.CoverFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.CoverFragment: void loadMediaInfo()&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.Fragment)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.activity.MediaplayerInfoActivity$MediaplayerInfoPagerAdapter"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity$MediaplayerInfoPagerAdapter: void onMediaChanged(de.danoeh.antennapod.core.util.playback.Playable)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity$MediaplayerInfoPagerAdapter: void onMediaChanged(de.danoeh.antennapod.core.util.playback.Playable)&gt;,&lt;de.danoeh.antennapod.fragment.CoverFragment: void loadMediaInfo()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.Fragment)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>  
      <source name="de.danoeh.antennapod.activity.MediaplayerInfoActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity$MediaplayerInfoPagerAdapter: void onMediaChanged(de.danoeh.antennapod.core.util.playback.Playable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.CoverFragment: void loadMediaInfo()&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.Fragment)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity$MediaplayerInfoPagerAdapter: void onMediaChanged(de.danoeh.antennapod.core.util.playback.Playable)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity$MediaplayerInfoPagerAdapter: void onMediaChanged(de.danoeh.antennapod.core.util.playback.Playable)&gt;,&lt;de.danoeh.antennapod.fragment.CoverFragment: void loadMediaInfo()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.Fragment)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>  
      <source name="de.danoeh.antennapod.activity.MediaplayerInfoActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity$MediaplayerInfoPagerAdapter: void onMediaChanged(de.danoeh.antennapod.core.util.playback.Playable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.CoverFragment: void loadMediaInfo()&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.Fragment)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.activity.MediaplayerInfoActivity"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: void onResume()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: void onResume()&gt;,&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity$MediaplayerInfoPagerAdapter: void onMediaChanged(de.danoeh.antennapod.core.util.playback.Playable)&gt;,&lt;de.danoeh.antennapod.fragment.CoverFragment: void loadMediaInfo()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.Fragment)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>  
      <source name="de.danoeh.antennapod.activity.MediaplayerInfoActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: void onResume()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity$MediaplayerInfoPagerAdapter: void onMediaChanged(de.danoeh.antennapod.core.util.playback.Playable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.CoverFragment: void loadMediaInfo()&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.Fragment)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: void onResume()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: void onResume()&gt;,&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity$MediaplayerInfoPagerAdapter: void onMediaChanged(de.danoeh.antennapod.core.util.playback.Playable)&gt;,&lt;de.danoeh.antennapod.fragment.CoverFragment: void loadMediaInfo()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.Fragment)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>  
      <source name="de.danoeh.antennapod.activity.MediaplayerInfoActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: void onResume()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity$MediaplayerInfoPagerAdapter: void onMediaChanged(de.danoeh.antennapod.core.util.playback.Playable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.CoverFragment: void loadMediaInfo()&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.Fragment)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.fragment.QueueFragment$1"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.QueueFragment$1: boolean onQueryTextSubmit(java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.QueueFragment$1: boolean onQueryTextSubmit(java.lang.String)&gt;,boolean onQueryTextSubmit(java.lang.String), &lt;de.danoeh.antennapod.activity.MainActivity: void loadChildFragment(android.support.v4.app.Fragment)&gt;"/>  
      <source name="de.danoeh.antennapod.fragment.QueueFragment"/>  
      <destinition name="de.danoeh.antennapod.fragment.SearchFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.QueueFragment$1: boolean onQueryTextSubmit(java.lang.String)&gt;"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="getFragment" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="addToBackStack" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(null)"/>  
        <node method="MainActivity loadChildFragment" type="commit" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.fragment.CompletedDownloadsFragment"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.CompletedDownloadsFragment: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.CompletedDownloadsFragment: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,boolean onOptionsItemSelected(android.view.MenuItem), &lt;de.danoeh.antennapod.activity.MainActivity: void loadChildFragment(android.support.v4.app.Fragment)&gt;"/>  
      <source name="de.danoeh.antennapod.fragment.CompletedDownloadsFragment"/>  
      <destinition name="de.danoeh.antennapod.dialog.EpisodesApplyActionFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.CompletedDownloadsFragment: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="getFragment" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="addToBackStack" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(null)"/>  
        <node method="MainActivity loadChildFragment" type="commit" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.fragment.ItemFragment"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemFragment: void updateAppearance()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemFragment: void updateAppearance()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>  
      <source name="de.danoeh.antennapod.fragment.ItemFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemFragment: void updateAppearance()&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemFragment: void updateAppearance()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemFragment: void updateAppearance()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>  
      <source name="de.danoeh.antennapod.fragment.ItemFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemFragment: void updateAppearance()&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.fragment.ItemFragment$$Lambda$7"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemFragment$$Lambda$7: void call(java.lang.Object)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemFragment$$Lambda$7: void call(java.lang.Object)&gt;,&lt;de.danoeh.antennapod.fragment.ItemFragment: void updateAppearance()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>  
      <source name="de.danoeh.antennapod.fragment.ItemFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemFragment$$Lambda$7: void call(java.lang.Object)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ItemFragment: void updateAppearance()&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemFragment$$Lambda$7: void call(java.lang.Object)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemFragment$$Lambda$7: void call(java.lang.Object)&gt;,&lt;de.danoeh.antennapod.fragment.ItemFragment: void updateAppearance()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>  
      <source name="de.danoeh.antennapod.fragment.ItemFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemFragment$$Lambda$7: void call(java.lang.Object)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ItemFragment: void updateAppearance()&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.fragment.ItemFragment"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemFragment: void openPodcast()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemFragment: void openPodcast()&gt;,void openPodcast(), &lt;de.danoeh.antennapod.activity.MainActivity: void loadChildFragment(android.support.v4.app.Fragment)&gt;"/>  
      <source name="de.danoeh.antennapod.fragment.ItemFragment"/>  
      <destinition name="de.danoeh.antennapod.fragment.ItemlistFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemFragment: void openPodcast()&gt;"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="getFragment" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="addToBackStack" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(null)"/>  
        <node method="MainActivity loadChildFragment" type="commit" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.bumptech.glide.manager.SupportRequestManagerFragment"> 
    <FragmentSummary> 
      <method value="&lt;com.bumptech.glide.manager.SupportRequestManagerFragment: void onAttach(android.app.Activity)&gt;"/>  
      <methodtrace value="&lt;com.bumptech.glide.manager.SupportRequestManagerFragment: void onAttach(android.app.Activity)&gt;,void onAttach(android.app.Activity), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>  
      <source name="com.bumptech.glide.manager.SupportRequestManagerFragment"/>  
      <nodes> 
        <node method="&lt;com.bumptech.glide.manager.SupportRequestManagerFragment: void onAttach(android.app.Activity)&gt;"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.adapter.CoverTarget"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.adapter.CoverTarget: void onLoadFailed(java.lang.Exception,android.graphics.drawable.Drawable)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.adapter.CoverTarget: void onLoadFailed(java.lang.Exception,android.graphics.drawable.Drawable)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>  
      <source name="de.danoeh.antennapod.adapter.CoverTarget"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.adapter.CoverTarget: void onLoadFailed(java.lang.Exception,android.graphics.drawable.Drawable)&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.adapter.CoverTarget: void onLoadFailed(java.lang.Exception,android.graphics.drawable.Drawable)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.adapter.CoverTarget: void onLoadFailed(java.lang.Exception,android.graphics.drawable.Drawable)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>  
      <source name="de.danoeh.antennapod.adapter.CoverTarget"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.adapter.CoverTarget: void onLoadFailed(java.lang.Exception,android.graphics.drawable.Drawable)&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.fragment.ItemlistFragment"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onFragmentLoaded()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onFragmentLoaded()&gt;,&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void refreshHeaderView()&gt;,&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void loadFeedImage()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>  
      <source name="de.danoeh.antennapod.fragment.ItemlistFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onFragmentLoaded()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void refreshHeaderView()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void loadFeedImage()&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onFragmentLoaded()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onFragmentLoaded()&gt;,&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void refreshHeaderView()&gt;,&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void loadFeedImage()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>  
      <source name="de.danoeh.antennapod.fragment.ItemlistFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onFragmentLoaded()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void refreshHeaderView()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void loadFeedImage()&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.fragment.ItemlistFragment"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onViewCreated(android.view.View,android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onViewCreated(android.view.View,android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onFragmentLoaded()&gt;,&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void refreshHeaderView()&gt;,&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void loadFeedImage()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>  
      <source name="de.danoeh.antennapod.fragment.ItemlistFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onViewCreated(android.view.View,android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onFragmentLoaded()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void refreshHeaderView()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void loadFeedImage()&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onViewCreated(android.view.View,android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onViewCreated(android.view.View,android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onFragmentLoaded()&gt;,&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void refreshHeaderView()&gt;,&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void loadFeedImage()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>  
      <source name="de.danoeh.antennapod.fragment.ItemlistFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onViewCreated(android.view.View,android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onFragmentLoaded()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void refreshHeaderView()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void loadFeedImage()&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.adapter.gpodnet.PodcastListAdapter"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.adapter.gpodnet.PodcastListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.adapter.gpodnet.PodcastListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>  
      <source name="de.danoeh.antennapod.adapter.gpodnet.PodcastListAdapter"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.adapter.gpodnet.PodcastListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.fragment.gpodnet.TagListFragment"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.gpodnet.TagListFragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.gpodnet.TagListFragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)&gt;,&lt;de.danoeh.antennapod.fragment.gpodnet.TagListFragment$1: boolean onQueryTextSubmit(java.lang.String)&gt;,boolean onQueryTextSubmit(java.lang.String), &lt;de.danoeh.antennapod.activity.MainActivity: void loadChildFragment(android.support.v4.app.Fragment)&gt;"/>  
      <source name="de.danoeh.antennapod.fragment.gpodnet.TagListFragment"/>  
      <destinition name="de.danoeh.antennapod.fragment.gpodnet.SearchListFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.gpodnet.TagListFragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.gpodnet.TagListFragment$1: boolean onQueryTextSubmit(java.lang.String)&gt;"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="getFragment" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="addToBackStack" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(null)"/>  
        <node method="MainActivity loadChildFragment" type="commit" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.adapter.StatisticsListAdapter"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.adapter.StatisticsListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.adapter.StatisticsListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>  
      <source name="de.danoeh.antennapod.adapter.StatisticsListAdapter"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.adapter.StatisticsListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.activity.MainActivity$6"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MainActivity$6: void onPostExecute(java.lang.Void)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MainActivity$6: void onPostExecute(java.lang.Void)&gt;,&lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(java.lang.String,android.os.Bundle)&gt;,void loadFragment(java.lang.String,android.os.Bundle), &lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(android.support.v4.app.Fragment)&gt;"/>  
      <source name="de.danoeh.antennapod.activity.MainActivity"/>  
      <destinition name="de.danoeh.antennapod.fragment.QueueFragment, de.danoeh.antennapod.fragment.SubscriptionFragment, de.danoeh.antennapod.fragment.AddFeedFragment, de.danoeh.antennapod.fragment.PlaybackHistoryFragment, de.danoeh.antennapod.fragment.DownloadsFragment, de.danoeh.antennapod.fragment.EpisodesFragment, de.danoeh.antennapod.fragment.QueueFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity$6: void onPostExecute(java.lang.Void)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(java.lang.String,android.os.Bundle)&gt;"/>  
        <node method="MainActivity loadFragment" type="replaceFunction" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadFragment" type="getFragment" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity loadFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity loadFragment" type="replaceFunction" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadFragment" type="commit" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.bumptech.glide.Glide"> 
    <FragmentSummary> 
      <method value="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.app.Activity)&gt;"/>  
      <methodtrace value="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.app.Activity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>  
      <source name="com.bumptech.glide.Glide"/>  
      <nodes> 
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.app.Activity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.app.Activity)&gt;"/>  
      <methodtrace value="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.app.Activity)&gt;,com.bumptech.glide.RequestManager 'with'(android.app.Activity), &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.app.Activity)&gt;"/>  
      <source name="com.bumptech.glide.Glide"/>  
      <nodes> 
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.app.Activity)&gt;"/>  
        <node method="RequestManagerRetriever get" type="ReceiveFromRetValue" unit="$r3 = virtualinvoke $r2.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="RequestManagerRetriever get" type="ReceiveFromRetValue" unit="$r3 = virtualinvoke $r2.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.bumptech.glide.manager.RequestManagerFragment"> 
    <FragmentSummary> 
      <method value="&lt;com.bumptech.glide.manager.RequestManagerFragment: void onAttach(android.app.Activity)&gt;"/>  
      <methodtrace value="&lt;com.bumptech.glide.manager.RequestManagerFragment: void onAttach(android.app.Activity)&gt;,void onAttach(android.app.Activity), &lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;, &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>  
      <source name="com.bumptech.glide.manager.RequestManagerFragment"/>  
      <nodes> 
        <node method="&lt;com.bumptech.glide.manager.RequestManagerFragment: void onAttach(android.app.Activity)&gt;"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.activity.PreferenceActivity"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.PreferenceActivity: void showPreferenceScreen(int,boolean)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.PreferenceActivity: void showPreferenceScreen(int,boolean)&gt;,void showPreferenceScreen(int,boolean)"/>  
      <source name="de.danoeh.antennapod.activity.PreferenceActivity"/>  
      <destinition name="de.danoeh.antennapod.activity.PreferenceActivity$MainFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.PreferenceActivity: void showPreferenceScreen(int,boolean)&gt;"/>  
        <node method="PreferenceActivity showPreferenceScreen" type="getFragment" unit="$r4 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.PreferenceActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="PreferenceActivity showPreferenceScreen" type="beginTransaction" unit="$r5 = virtualinvoke $r4.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="PreferenceActivity showPreferenceScreen" type="replaceFunction" unit="$r5 = virtualinvoke $r5.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment)&gt;(2131361928, $r1)"/>  
        <node method="PreferenceActivity showPreferenceScreen" type="addToBackStack" unit="$r5 = virtualinvoke $r5.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;($r6)"/>  
        <node method="PreferenceActivity showPreferenceScreen" type="commit" unit="virtualinvoke $r5.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.PreferenceActivity: void showPreferenceScreen(int,boolean)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.PreferenceActivity: void showPreferenceScreen(int,boolean)&gt;,void showPreferenceScreen(int,boolean)"/>  
      <source name="de.danoeh.antennapod.activity.PreferenceActivity"/>  
      <destinition name="de.danoeh.antennapod.activity.PreferenceActivity$MainFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.PreferenceActivity: void showPreferenceScreen(int,boolean)&gt;"/>  
        <node method="PreferenceActivity showPreferenceScreen" type="getFragment" unit="$r4 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.PreferenceActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="PreferenceActivity showPreferenceScreen" type="beginTransaction" unit="$r5 = virtualinvoke $r4.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="PreferenceActivity showPreferenceScreen" type="replaceFunction" unit="$r5 = virtualinvoke $r5.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment)&gt;(2131361928, $r1)"/>  
        <node method="PreferenceActivity showPreferenceScreen" type="commit" unit="virtualinvoke $r5.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.activity.PreferenceActivity"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.PreferenceActivity: void onSearchResultClicked(com.bytehamster.lib.preferencesearch.SearchPreferenceResult)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.PreferenceActivity: void onSearchResultClicked(com.bytehamster.lib.preferencesearch.SearchPreferenceResult)&gt;,&lt;de.danoeh.antennapod.activity.PreferenceActivity: void showPreferenceScreen(int,boolean)&gt;,void showPreferenceScreen(int,boolean)"/>  
      <source name="de.danoeh.antennapod.activity.PreferenceActivity"/>  
      <destinition name="de.danoeh.antennapod.activity.PreferenceActivity$MainFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.PreferenceActivity: void onSearchResultClicked(com.bytehamster.lib.preferencesearch.SearchPreferenceResult)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.PreferenceActivity: void showPreferenceScreen(int,boolean)&gt;"/>  
        <node method="PreferenceActivity showPreferenceScreen" type="getFragment" unit="$r4 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.PreferenceActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="PreferenceActivity showPreferenceScreen" type="beginTransaction" unit="$r5 = virtualinvoke $r4.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="PreferenceActivity showPreferenceScreen" type="replaceFunction" unit="$r5 = virtualinvoke $r5.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment)&gt;(2131361928, $r1)"/>  
        <node method="PreferenceActivity showPreferenceScreen" type="addToBackStack" unit="$r5 = virtualinvoke $r5.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;($r6)"/>  
        <node method="PreferenceActivity showPreferenceScreen" type="commit" unit="virtualinvoke $r5.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.PreferenceActivity: void onSearchResultClicked(com.bytehamster.lib.preferencesearch.SearchPreferenceResult)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.PreferenceActivity: void onSearchResultClicked(com.bytehamster.lib.preferencesearch.SearchPreferenceResult)&gt;,&lt;de.danoeh.antennapod.activity.PreferenceActivity: void showPreferenceScreen(int,boolean)&gt;,void showPreferenceScreen(int,boolean)"/>  
      <source name="de.danoeh.antennapod.activity.PreferenceActivity"/>  
      <destinition name="de.danoeh.antennapod.activity.PreferenceActivity$MainFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.PreferenceActivity: void onSearchResultClicked(com.bytehamster.lib.preferencesearch.SearchPreferenceResult)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.PreferenceActivity: void showPreferenceScreen(int,boolean)&gt;"/>  
        <node method="PreferenceActivity showPreferenceScreen" type="getFragment" unit="$r4 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.PreferenceActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="PreferenceActivity showPreferenceScreen" type="beginTransaction" unit="$r5 = virtualinvoke $r4.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="PreferenceActivity showPreferenceScreen" type="replaceFunction" unit="$r5 = virtualinvoke $r5.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment)&gt;(2131361928, $r1)"/>  
        <node method="PreferenceActivity showPreferenceScreen" type="commit" unit="virtualinvoke $r5.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.fragment.AddFeedFragment"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.AddFeedFragment: void lambda$onCreateView$2$AddFeedFragment$6fad7229(de.danoeh.antennapod.activity.MainActivity)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.AddFeedFragment: void lambda$onCreateView$2$AddFeedFragment$6fad7229(de.danoeh.antennapod.activity.MainActivity)&gt;,void lambda$onCreateView$2$AddFeedFragment$6fad7229(de.danoeh.antennapod.activity.MainActivity), &lt;de.danoeh.antennapod.activity.MainActivity: void loadChildFragment(android.support.v4.app.Fragment)&gt;"/>  
      <source name="de.danoeh.antennapod.fragment.AddFeedFragment"/>  
      <destinition name="de.danoeh.antennapod.fragment.FyydSearchFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.AddFeedFragment: void lambda$onCreateView$2$AddFeedFragment$6fad7229(de.danoeh.antennapod.activity.MainActivity)&gt;"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="getFragment" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="addToBackStack" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(null)"/>  
        <node method="MainActivity loadChildFragment" type="commit" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.dialog.CustomMRControllerDialog"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.dialog.CustomMRControllerDialog: android.support.v4.util.Pair fetchArt(android.support.v4.media.MediaDescriptionCompat)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.dialog.CustomMRControllerDialog: android.support.v4.util.Pair fetchArt(android.support.v4.media.MediaDescriptionCompat)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>  
      <source name="de.danoeh.antennapod.dialog.CustomMRControllerDialog"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.dialog.CustomMRControllerDialog: android.support.v4.util.Pair fetchArt(android.support.v4.media.MediaDescriptionCompat)&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.dialog.CustomMRControllerDialog$$Lambda$2"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.dialog.CustomMRControllerDialog$$Lambda$2: java.lang.Object call()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.dialog.CustomMRControllerDialog$$Lambda$2: java.lang.Object call()&gt;,&lt;de.danoeh.antennapod.dialog.CustomMRControllerDialog: android.support.v4.util.Pair fetchArt(android.support.v4.media.MediaDescriptionCompat)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>  
      <source name="de.danoeh.antennapod.dialog.CustomMRControllerDialog"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.dialog.CustomMRControllerDialog$$Lambda$2: java.lang.Object call()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.dialog.CustomMRControllerDialog: android.support.v4.util.Pair fetchArt(android.support.v4.media.MediaDescriptionCompat)&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.fragment.AllEpisodesFragment$1"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.AllEpisodesFragment$1: boolean onQueryTextSubmit(java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.AllEpisodesFragment$1: boolean onQueryTextSubmit(java.lang.String)&gt;,boolean onQueryTextSubmit(java.lang.String), &lt;de.danoeh.antennapod.activity.MainActivity: void loadChildFragment(android.support.v4.app.Fragment)&gt;"/>  
      <source name="de.danoeh.antennapod.fragment.AllEpisodesFragment"/>  
      <destinition name="de.danoeh.antennapod.fragment.SearchFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.AllEpisodesFragment$1: boolean onQueryTextSubmit(java.lang.String)&gt;"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="getFragment" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="addToBackStack" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(null)"/>  
        <node method="MainActivity loadChildFragment" type="commit" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.activity.MediaplayerInfoActivity"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: boolean loadMediaInfo()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: boolean loadMediaInfo()&gt;,&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity$MediaplayerInfoPagerAdapter: void onMediaChanged(de.danoeh.antennapod.core.util.playback.Playable)&gt;,&lt;de.danoeh.antennapod.fragment.CoverFragment: void loadMediaInfo()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.Fragment)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>  
      <source name="de.danoeh.antennapod.activity.MediaplayerInfoActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: boolean loadMediaInfo()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity$MediaplayerInfoPagerAdapter: void onMediaChanged(de.danoeh.antennapod.core.util.playback.Playable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.CoverFragment: void loadMediaInfo()&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.Fragment)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: boolean loadMediaInfo()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: boolean loadMediaInfo()&gt;,&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity$MediaplayerInfoPagerAdapter: void onMediaChanged(de.danoeh.antennapod.core.util.playback.Playable)&gt;,&lt;de.danoeh.antennapod.fragment.CoverFragment: void loadMediaInfo()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.Fragment)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>  
      <source name="de.danoeh.antennapod.activity.MediaplayerInfoActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: boolean loadMediaInfo()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity$MediaplayerInfoPagerAdapter: void onMediaChanged(de.danoeh.antennapod.core.util.playback.Playable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.CoverFragment: void loadMediaInfo()&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.Fragment)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.bytehamster.lib.preferencesearch.SearchPreference"> 
    <FragmentSummary> 
      <method value="&lt;com.bytehamster.lib.preferencesearch.SearchPreference: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;com.bytehamster.lib.preferencesearch.SearchPreference: void onClick(android.view.View)&gt;,void onClick(android.view.View)"/>  
      <source name="com.bytehamster.lib.preferencesearch.SearchPreference"/>  
      <destinition name="com.bytehamster.lib.preferencesearch.SearchPreferenceFragment"/>  
      <nodes> 
        <node method="&lt;com.bytehamster.lib.preferencesearch.SearchPreference: void onClick(android.view.View)&gt;"/>  
        <node method="SearchPreference onClick" type="getFragment" unit="$r8 = virtualinvoke $r3.&lt;android.support.v7.app.AppCompatActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="SearchPreference onClick" type="beginTransaction" unit="$r9 = virtualinvoke $r8.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="SearchPreference onClick" type="replaceFunction" unit="$r9 = virtualinvoke $r9.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment)&gt;($i0, $r7)"/>  
        <node method="SearchPreference onClick" type="addToBackStack" unit="$r9 = virtualinvoke $r9.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(&quot;SearchPreferenceFragment&quot;)"/>  
        <node method="SearchPreference onClick" type="commit" unit="virtualinvoke $r9.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.bytehamster.lib.preferencesearch.SearchPreference"> 
    <FragmentSummary> 
      <method value="&lt;com.bytehamster.lib.preferencesearch.SearchPreference: void onBindViewHolder(android.support.v7.preference.PreferenceViewHolder)&gt;"/>  
      <methodtrace value="&lt;com.bytehamster.lib.preferencesearch.SearchPreference: void onBindViewHolder(android.support.v7.preference.PreferenceViewHolder)&gt;,&lt;com.bytehamster.lib.preferencesearch.SearchPreference: void onClick(android.view.View)&gt;,void onClick(android.view.View)"/>  
      <source name="com.bytehamster.lib.preferencesearch.SearchPreference"/>  
      <destinition name="com.bytehamster.lib.preferencesearch.SearchPreferenceFragment"/>  
      <nodes> 
        <node method="&lt;com.bytehamster.lib.preferencesearch.SearchPreference: void onBindViewHolder(android.support.v7.preference.PreferenceViewHolder)&gt;"/>  
        <node method="&lt;com.bytehamster.lib.preferencesearch.SearchPreference: void onClick(android.view.View)&gt;"/>  
        <node method="SearchPreference onClick" type="getFragment" unit="$r8 = virtualinvoke $r3.&lt;android.support.v7.app.AppCompatActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="SearchPreference onClick" type="beginTransaction" unit="$r9 = virtualinvoke $r8.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="SearchPreference onClick" type="replaceFunction" unit="$r9 = virtualinvoke $r9.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment)&gt;($i0, $r7)"/>  
        <node method="SearchPreference onClick" type="addToBackStack" unit="$r9 = virtualinvoke $r9.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(&quot;SearchPreferenceFragment&quot;)"/>  
        <node method="SearchPreference onClick" type="commit" unit="virtualinvoke $r9.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.bumptech.glide.load.resource.gif.GifDrawable$GifState"> 
    <FragmentSummary> 
      <method value="&lt;com.bumptech.glide.load.resource.gif.GifDrawable$GifState: android.graphics.drawable.Drawable newDrawable()&gt;"/>  
      <methodtrace value="&lt;com.bumptech.glide.load.resource.gif.GifDrawable$GifState: android.graphics.drawable.Drawable newDrawable()&gt;,&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>  
      <source name="com.bumptech.glide.load.resource.gif.GifDrawable"/>  
      <nodes> 
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable$GifState: android.graphics.drawable.Drawable newDrawable()&gt;"/>  
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;"/>  
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.bumptech.glide.load.resource.gif.GifDrawable$GifState"> 
    <FragmentSummary> 
      <method value="&lt;com.bumptech.glide.load.resource.gif.GifDrawable$GifState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)&gt;"/>  
      <methodtrace value="&lt;com.bumptech.glide.load.resource.gif.GifDrawable$GifState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifDrawable$GifState: android.graphics.drawable.Drawable newDrawable()&gt;,&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>  
      <source name="com.bumptech.glide.load.resource.gif.GifDrawable"/>  
      <nodes> 
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable$GifState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)&gt;"/>  
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable$GifState: android.graphics.drawable.Drawable newDrawable()&gt;"/>  
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;"/>  
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.fragment.CoverFragment"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.CoverFragment: void onStart()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.CoverFragment: void onStart()&gt;,&lt;de.danoeh.antennapod.fragment.CoverFragment: void loadMediaInfo()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.Fragment)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>  
      <source name="de.danoeh.antennapod.fragment.CoverFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.CoverFragment: void onStart()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.CoverFragment: void loadMediaInfo()&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.Fragment)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.CoverFragment: void onStart()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.CoverFragment: void onStart()&gt;,&lt;de.danoeh.antennapod.fragment.CoverFragment: void loadMediaInfo()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.Fragment)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>  
      <source name="de.danoeh.antennapod.fragment.CoverFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.CoverFragment: void onStart()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.CoverFragment: void loadMediaInfo()&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.Fragment)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.activity.MainActivity"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MainActivity: void handleNavIntent()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MainActivity: void handleNavIntent()&gt;,&lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(int,android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.activity.MainActivity: void loadFeedFragmentById(long,android.os.Bundle)&gt;,void loadFeedFragmentById(long,android.os.Bundle), &lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(android.support.v4.app.Fragment)&gt;"/>  
      <source name="de.danoeh.antennapod.activity.MainActivity"/>  
      <destinition name="de.danoeh.antennapod.fragment.ItemlistFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity: void handleNavIntent()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(int,android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity: void loadFeedFragmentById(long,android.os.Bundle)&gt;"/>  
        <node method="MainActivity loadFragment" type="replaceFunction" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadFragment" type="getFragment" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity loadFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity loadFragment" type="replaceFunction" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadFragment" type="commit" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MainActivity: void handleNavIntent()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MainActivity: void handleNavIntent()&gt;,&lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(int,android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(java.lang.String,android.os.Bundle)&gt;,void loadFragment(java.lang.String,android.os.Bundle), &lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(android.support.v4.app.Fragment)&gt;"/>  
      <source name="de.danoeh.antennapod.activity.MainActivity"/>  
      <destinition name="de.danoeh.antennapod.fragment.QueueFragment, de.danoeh.antennapod.fragment.SubscriptionFragment, de.danoeh.antennapod.fragment.AddFeedFragment, de.danoeh.antennapod.fragment.PlaybackHistoryFragment, de.danoeh.antennapod.fragment.DownloadsFragment, de.danoeh.antennapod.fragment.EpisodesFragment, de.danoeh.antennapod.fragment.QueueFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity: void handleNavIntent()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(int,android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(java.lang.String,android.os.Bundle)&gt;"/>  
        <node method="MainActivity loadFragment" type="replaceFunction" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadFragment" type="getFragment" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity loadFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity loadFragment" type="replaceFunction" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadFragment" type="commit" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.activity.MainActivity$$Lambda$6"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MainActivity$$Lambda$6: void call(java.lang.Object)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MainActivity$$Lambda$6: void call(java.lang.Object)&gt;,&lt;de.danoeh.antennapod.activity.MainActivity: void handleNavIntent()&gt;,&lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(int,android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.activity.MainActivity: void loadFeedFragmentById(long,android.os.Bundle)&gt;,void loadFeedFragmentById(long,android.os.Bundle), &lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(android.support.v4.app.Fragment)&gt;"/>  
      <source name="de.danoeh.antennapod.activity.MainActivity"/>  
      <destinition name="de.danoeh.antennapod.fragment.ItemlistFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity$$Lambda$6: void call(java.lang.Object)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity: void handleNavIntent()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(int,android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity: void loadFeedFragmentById(long,android.os.Bundle)&gt;"/>  
        <node method="MainActivity loadFragment" type="replaceFunction" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadFragment" type="getFragment" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity loadFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity loadFragment" type="replaceFunction" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadFragment" type="commit" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MainActivity$$Lambda$6: void call(java.lang.Object)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MainActivity$$Lambda$6: void call(java.lang.Object)&gt;,&lt;de.danoeh.antennapod.activity.MainActivity: void handleNavIntent()&gt;,&lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(int,android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(java.lang.String,android.os.Bundle)&gt;,void loadFragment(java.lang.String,android.os.Bundle), &lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(android.support.v4.app.Fragment)&gt;"/>  
      <source name="de.danoeh.antennapod.activity.MainActivity"/>  
      <destinition name="de.danoeh.antennapod.fragment.QueueFragment, de.danoeh.antennapod.fragment.SubscriptionFragment, de.danoeh.antennapod.fragment.AddFeedFragment, de.danoeh.antennapod.fragment.PlaybackHistoryFragment, de.danoeh.antennapod.fragment.DownloadsFragment, de.danoeh.antennapod.fragment.EpisodesFragment, de.danoeh.antennapod.fragment.QueueFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity$$Lambda$6: void call(java.lang.Object)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity: void handleNavIntent()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(int,android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(java.lang.String,android.os.Bundle)&gt;"/>  
        <node method="MainActivity loadFragment" type="replaceFunction" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadFragment" type="getFragment" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity loadFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity loadFragment" type="replaceFunction" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadFragment" type="commit" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.fragment.ItemlistFragment"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onStart()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onStart()&gt;,&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onFragmentLoaded()&gt;,&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void refreshHeaderView()&gt;,&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void loadFeedImage()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>  
      <source name="de.danoeh.antennapod.fragment.ItemlistFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onStart()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onFragmentLoaded()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void refreshHeaderView()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void loadFeedImage()&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onStart()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onStart()&gt;,&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onFragmentLoaded()&gt;,&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void refreshHeaderView()&gt;,&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void loadFeedImage()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>  
      <source name="de.danoeh.antennapod.fragment.ItemlistFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onStart()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onFragmentLoaded()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void refreshHeaderView()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void loadFeedImage()&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.fragment.ItemFragment"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemFragment: void onEventMainThread(de.danoeh.antennapod.core.event.DownloadEvent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemFragment: void onEventMainThread(de.danoeh.antennapod.core.event.DownloadEvent)&gt;,&lt;de.danoeh.antennapod.fragment.ItemFragment: void updateAppearance()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>  
      <source name="de.danoeh.antennapod.fragment.ItemFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemFragment: void onEventMainThread(de.danoeh.antennapod.core.event.DownloadEvent)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ItemFragment: void updateAppearance()&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemFragment: void onEventMainThread(de.danoeh.antennapod.core.event.DownloadEvent)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemFragment: void onEventMainThread(de.danoeh.antennapod.core.event.DownloadEvent)&gt;,&lt;de.danoeh.antennapod.fragment.ItemFragment: void updateAppearance()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>  
      <source name="de.danoeh.antennapod.fragment.ItemFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemFragment: void onEventMainThread(de.danoeh.antennapod.core.event.DownloadEvent)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ItemFragment: void updateAppearance()&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.fragment.ItemlistFragment$$Lambda$5"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment$$Lambda$5: void call(java.lang.Object)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment$$Lambda$5: void call(java.lang.Object)&gt;,&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onFragmentLoaded()&gt;,&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void refreshHeaderView()&gt;,&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void loadFeedImage()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>  
      <source name="de.danoeh.antennapod.fragment.ItemlistFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment$$Lambda$5: void call(java.lang.Object)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onFragmentLoaded()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void refreshHeaderView()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void loadFeedImage()&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment$$Lambda$5: void call(java.lang.Object)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment$$Lambda$5: void call(java.lang.Object)&gt;,&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onFragmentLoaded()&gt;,&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void refreshHeaderView()&gt;,&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void loadFeedImage()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>  
      <source name="de.danoeh.antennapod.fragment.ItemlistFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment$$Lambda$5: void call(java.lang.Object)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onFragmentLoaded()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void refreshHeaderView()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void loadFeedImage()&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.adapter.SubscriptionsAdapter"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.adapter.SubscriptionsAdapter: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.adapter.SubscriptionsAdapter: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;,void onItemClick(android.widget.AdapterView,android.view.View,int,long), &lt;de.danoeh.antennapod.activity.MainActivity: void loadChildFragment(android.support.v4.app.Fragment)&gt;"/>  
      <source name="de.danoeh.antennapod.adapter.SubscriptionsAdapter"/>  
      <destinition name="de.danoeh.antennapod.fragment.AddFeedFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.adapter.SubscriptionsAdapter: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="getFragment" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="addToBackStack" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(null)"/>  
        <node method="MainActivity loadChildFragment" type="commit" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.adapter.SubscriptionsAdapter: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.adapter.SubscriptionsAdapter: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;,void onItemClick(android.widget.AdapterView,android.view.View,int,long), &lt;de.danoeh.antennapod.activity.MainActivity: void loadChildFragment(android.support.v4.app.Fragment)&gt;"/>  
      <source name="de.danoeh.antennapod.adapter.SubscriptionsAdapter"/>  
      <destinition name="de.danoeh.antennapod.fragment.ItemlistFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.adapter.SubscriptionsAdapter: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="getFragment" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="addToBackStack" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(null)"/>  
        <node method="MainActivity loadChildFragment" type="commit" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.fragment.ItemFragment$$Lambda$1"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemFragment$$Lambda$1: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemFragment$$Lambda$1: void onClick(android.view.View)&gt;,&lt;de.danoeh.antennapod.fragment.ItemFragment: void openPodcast()&gt;,void openPodcast(), &lt;de.danoeh.antennapod.activity.MainActivity: void loadChildFragment(android.support.v4.app.Fragment)&gt;"/>  
      <source name="de.danoeh.antennapod.fragment.ItemFragment"/>  
      <destinition name="de.danoeh.antennapod.fragment.ItemlistFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemFragment$$Lambda$1: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ItemFragment: void openPodcast()&gt;"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="getFragment" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="addToBackStack" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(null)"/>  
        <node method="MainActivity loadChildFragment" type="commit" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.adapter.DownloadedEpisodesListAdapter"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.adapter.DownloadedEpisodesListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.adapter.DownloadedEpisodesListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>  
      <source name="de.danoeh.antennapod.adapter.DownloadedEpisodesListAdapter"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.adapter.DownloadedEpisodesListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.fragment.ItemFragment"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemFragment: void onResume()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemFragment: void onResume()&gt;,&lt;de.danoeh.antennapod.fragment.ItemFragment: void updateAppearance()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>  
      <source name="de.danoeh.antennapod.fragment.ItemFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemFragment: void onResume()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ItemFragment: void updateAppearance()&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemFragment: void onResume()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemFragment: void onResume()&gt;,&lt;de.danoeh.antennapod.fragment.ItemFragment: void updateAppearance()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>  
      <source name="de.danoeh.antennapod.fragment.ItemFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemFragment: void onResume()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ItemFragment: void updateAppearance()&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.fragment.QueueFragment"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.QueueFragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.QueueFragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)&gt;,&lt;de.danoeh.antennapod.fragment.QueueFragment$1: boolean onQueryTextSubmit(java.lang.String)&gt;,boolean onQueryTextSubmit(java.lang.String), &lt;de.danoeh.antennapod.activity.MainActivity: void loadChildFragment(android.support.v4.app.Fragment)&gt;"/>  
      <source name="de.danoeh.antennapod.fragment.QueueFragment"/>  
      <destinition name="de.danoeh.antennapod.fragment.SearchFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.QueueFragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.QueueFragment$1: boolean onQueryTextSubmit(java.lang.String)&gt;"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="getFragment" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="addToBackStack" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(null)"/>  
        <node method="MainActivity loadChildFragment" type="commit" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.fragment.ItemFragment"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemFragment: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemFragment: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,&lt;de.danoeh.antennapod.fragment.ItemFragment: void openPodcast()&gt;,void openPodcast(), &lt;de.danoeh.antennapod.activity.MainActivity: void loadChildFragment(android.support.v4.app.Fragment)&gt;"/>  
      <source name="de.danoeh.antennapod.fragment.ItemFragment"/>  
      <destinition name="de.danoeh.antennapod.fragment.ItemlistFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemFragment: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ItemFragment: void openPodcast()&gt;"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="getFragment" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="addToBackStack" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(null)"/>  
        <node method="MainActivity loadChildFragment" type="commit" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.activity.AudioplayerActivity"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.AudioplayerActivity: void onResume()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.AudioplayerActivity: void onResume()&gt;,&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: void onResume()&gt;,&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity$MediaplayerInfoPagerAdapter: void onMediaChanged(de.danoeh.antennapod.core.util.playback.Playable)&gt;,&lt;de.danoeh.antennapod.fragment.CoverFragment: void loadMediaInfo()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.Fragment)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>  
      <source name="de.danoeh.antennapod.activity.AudioplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.AudioplayerActivity: void onResume()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: void onResume()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity$MediaplayerInfoPagerAdapter: void onMediaChanged(de.danoeh.antennapod.core.util.playback.Playable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.CoverFragment: void loadMediaInfo()&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.Fragment)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.AudioplayerActivity: void onResume()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.AudioplayerActivity: void onResume()&gt;,&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: void onResume()&gt;,&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity$MediaplayerInfoPagerAdapter: void onMediaChanged(de.danoeh.antennapod.core.util.playback.Playable)&gt;,&lt;de.danoeh.antennapod.fragment.CoverFragment: void loadMediaInfo()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.Fragment)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>  
      <source name="de.danoeh.antennapod.activity.AudioplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.AudioplayerActivity: void onResume()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: void onResume()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity$MediaplayerInfoPagerAdapter: void onMediaChanged(de.danoeh.antennapod.core.util.playback.Playable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.CoverFragment: void loadMediaInfo()&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.Fragment)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.fragment.PlaybackHistoryFragment"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.PlaybackHistoryFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.PlaybackHistoryFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)&gt;,void onListItemClick(android.widget.ListView,android.view.View,int,long), &lt;de.danoeh.antennapod.activity.MainActivity: void loadChildFragment(android.support.v4.app.Fragment)&gt;"/>  
      <source name="de.danoeh.antennapod.fragment.PlaybackHistoryFragment"/>  
      <destinition name="de.danoeh.antennapod.fragment.ItemFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.PlaybackHistoryFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)&gt;"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="getFragment" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="addToBackStack" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(null)"/>  
        <node method="MainActivity loadChildFragment" type="commit" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.fragment.gpodnet.PodcastListFragment"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.gpodnet.PodcastListFragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.gpodnet.PodcastListFragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)&gt;,&lt;de.danoeh.antennapod.fragment.gpodnet.PodcastListFragment$1: boolean onQueryTextSubmit(java.lang.String)&gt;,boolean onQueryTextSubmit(java.lang.String), &lt;de.danoeh.antennapod.activity.MainActivity: void loadChildFragment(android.support.v4.app.Fragment)&gt;"/>  
      <source name="de.danoeh.antennapod.fragment.gpodnet.PodcastListFragment"/>  
      <destinition name="de.danoeh.antennapod.fragment.gpodnet.SearchListFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.gpodnet.PodcastListFragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.gpodnet.PodcastListFragment$1: boolean onQueryTextSubmit(java.lang.String)&gt;"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="getFragment" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="addToBackStack" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(null)"/>  
        <node method="MainActivity loadChildFragment" type="commit" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.bumptech.glide.load.resource.gif.GifDrawable"> 
    <FragmentSummary> 
      <method value="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable,android.graphics.Bitmap,com.bumptech.glide.load.Transformation)&gt;"/>  
      <methodtrace value="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable,android.graphics.Bitmap,com.bumptech.glide.load.Transformation)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>  
      <source name="com.bumptech.glide.load.resource.gif.GifDrawable"/>  
      <nodes> 
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable,android.graphics.Bitmap,com.bumptech.glide.load.Transformation)&gt;"/>  
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;"/>  
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.bumptech.glide.load.resource.gif.GifDrawableTransformation"> 
    <FragmentSummary> 
      <method value="&lt;com.bumptech.glide.load.resource.gif.GifDrawableTransformation: com.bumptech.glide.load.engine.Resource transform(com.bumptech.glide.load.engine.Resource,int,int)&gt;"/>  
      <methodtrace value="&lt;com.bumptech.glide.load.resource.gif.GifDrawableTransformation: com.bumptech.glide.load.engine.Resource transform(com.bumptech.glide.load.engine.Resource,int,int)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable,android.graphics.Bitmap,com.bumptech.glide.load.Transformation)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>  
      <source name="com.bumptech.glide.load.resource.gif.GifDrawableTransformation"/>  
      <nodes> 
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawableTransformation: com.bumptech.glide.load.engine.Resource transform(com.bumptech.glide.load.engine.Resource,int,int)&gt;"/>  
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable,android.graphics.Bitmap,com.bumptech.glide.load.Transformation)&gt;"/>  
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;"/>  
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.adapter.SubscriptionsAdapter"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.adapter.SubscriptionsAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.adapter.SubscriptionsAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>  
      <source name="de.danoeh.antennapod.adapter.SubscriptionsAdapter"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.adapter.SubscriptionsAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.adapter.SubscriptionsAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.adapter.SubscriptionsAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>  
      <source name="de.danoeh.antennapod.adapter.SubscriptionsAdapter"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.adapter.SubscriptionsAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.activity.OnlineFeedViewActivity$$Lambda$4"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.OnlineFeedViewActivity$$Lambda$4: void call(java.lang.Object)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.OnlineFeedViewActivity$$Lambda$4: void call(java.lang.Object)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>  
      <source name="de.danoeh.antennapod.activity.OnlineFeedViewActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.OnlineFeedViewActivity$$Lambda$4: void call(java.lang.Object)&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.OnlineFeedViewActivity$$Lambda$4: void call(java.lang.Object)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.OnlineFeedViewActivity$$Lambda$4: void call(java.lang.Object)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>  
      <source name="de.danoeh.antennapod.activity.OnlineFeedViewActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.OnlineFeedViewActivity$$Lambda$4: void call(java.lang.Object)&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.fragment.ItemlistFragment$3"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment$3: void onPostExecute(java.lang.Object)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment$3: void onPostExecute(java.lang.Object)&gt;,&lt;de.danoeh.antennapod.fragment.ItemlistFragment$3: void onPostExecute(java.lang.Void)&gt;,&lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(java.lang.String,android.os.Bundle)&gt;,void loadFragment(java.lang.String,android.os.Bundle), &lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(android.support.v4.app.Fragment)&gt;"/>  
      <source name="de.danoeh.antennapod.fragment.ItemlistFragment"/>  
      <destinition name="de.danoeh.antennapod.fragment.QueueFragment, de.danoeh.antennapod.fragment.SubscriptionFragment, de.danoeh.antennapod.fragment.AddFeedFragment, de.danoeh.antennapod.fragment.PlaybackHistoryFragment, de.danoeh.antennapod.fragment.DownloadsFragment, de.danoeh.antennapod.fragment.EpisodesFragment, de.danoeh.antennapod.fragment.QueueFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment$3: void onPostExecute(java.lang.Object)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment$3: void onPostExecute(java.lang.Void)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(java.lang.String,android.os.Bundle)&gt;"/>  
        <node method="MainActivity loadFragment" type="replaceFunction" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadFragment" type="getFragment" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity loadFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity loadFragment" type="replaceFunction" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadFragment" type="commit" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.activity.CastplayerActivity"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.CastplayerActivity: void onResume()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.CastplayerActivity: void onResume()&gt;,&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: void onResume()&gt;,&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity$MediaplayerInfoPagerAdapter: void onMediaChanged(de.danoeh.antennapod.core.util.playback.Playable)&gt;,&lt;de.danoeh.antennapod.fragment.CoverFragment: void loadMediaInfo()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.Fragment)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>  
      <source name="de.danoeh.antennapod.activity.CastplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.CastplayerActivity: void onResume()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: void onResume()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity$MediaplayerInfoPagerAdapter: void onMediaChanged(de.danoeh.antennapod.core.util.playback.Playable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.CoverFragment: void loadMediaInfo()&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.Fragment)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.CastplayerActivity: void onResume()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.CastplayerActivity: void onResume()&gt;,&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: void onResume()&gt;,&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity$MediaplayerInfoPagerAdapter: void onMediaChanged(de.danoeh.antennapod.core.util.playback.Playable)&gt;,&lt;de.danoeh.antennapod.fragment.CoverFragment: void loadMediaInfo()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.Fragment)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>  
      <source name="de.danoeh.antennapod.activity.CastplayerActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.CastplayerActivity: void onResume()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity: void onResume()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MediaplayerInfoActivity$MediaplayerInfoPagerAdapter: void onMediaChanged(de.danoeh.antennapod.core.util.playback.Playable)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.CoverFragment: void loadMediaInfo()&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.Fragment)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.fragment.ItemlistFragment"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)&gt;,void onListItemClick(android.widget.ListView,android.view.View,int,long), &lt;de.danoeh.antennapod.activity.MainActivity: void loadChildFragment(android.support.v4.app.Fragment)&gt;"/>  
      <source name="de.danoeh.antennapod.fragment.ItemlistFragment"/>  
      <destinition name="de.danoeh.antennapod.fragment.ItemFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)&gt;"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="getFragment" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="addToBackStack" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(null)"/>  
        <node method="MainActivity loadChildFragment" type="commit" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.fragment.AddFeedFragment$$Lambda$2"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.AddFeedFragment$$Lambda$2: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.AddFeedFragment$$Lambda$2: void onClick(android.view.View)&gt;,&lt;de.danoeh.antennapod.fragment.AddFeedFragment: void lambda$onCreateView$2$AddFeedFragment$6fad7229(de.danoeh.antennapod.activity.MainActivity)&gt;,void lambda$onCreateView$2$AddFeedFragment$6fad7229(de.danoeh.antennapod.activity.MainActivity), &lt;de.danoeh.antennapod.activity.MainActivity: void loadChildFragment(android.support.v4.app.Fragment)&gt;"/>  
      <source name="de.danoeh.antennapod.fragment.AddFeedFragment"/>  
      <destinition name="de.danoeh.antennapod.fragment.FyydSearchFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.AddFeedFragment$$Lambda$2: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.AddFeedFragment: void lambda$onCreateView$2$AddFeedFragment$6fad7229(de.danoeh.antennapod.activity.MainActivity)&gt;"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="getFragment" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="addToBackStack" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(null)"/>  
        <node method="MainActivity loadChildFragment" type="commit" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.fragment.AddFeedFragment"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.AddFeedFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.AddFeedFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.fragment.AddFeedFragment$$Lambda$2: void onClick(android.view.View)&gt;,&lt;de.danoeh.antennapod.fragment.AddFeedFragment: void lambda$onCreateView$2$AddFeedFragment$6fad7229(de.danoeh.antennapod.activity.MainActivity)&gt;,void lambda$onCreateView$2$AddFeedFragment$6fad7229(de.danoeh.antennapod.activity.MainActivity), &lt;de.danoeh.antennapod.activity.MainActivity: void loadChildFragment(android.support.v4.app.Fragment)&gt;"/>  
      <source name="de.danoeh.antennapod.fragment.AddFeedFragment"/>  
      <destinition name="de.danoeh.antennapod.fragment.FyydSearchFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.AddFeedFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.AddFeedFragment$$Lambda$2: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.AddFeedFragment: void lambda$onCreateView$2$AddFeedFragment$6fad7229(de.danoeh.antennapod.activity.MainActivity)&gt;"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="getFragment" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="addToBackStack" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(null)"/>  
        <node method="MainActivity loadChildFragment" type="commit" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.AddFeedFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.AddFeedFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.fragment.AddFeedFragment$$Lambda$0: void onClick(android.view.View)&gt;,&lt;de.danoeh.antennapod.fragment.AddFeedFragment: void lambda$onCreateView$0$AddFeedFragment$6fad7229(de.danoeh.antennapod.activity.MainActivity)&gt;,void lambda$onCreateView$0$AddFeedFragment$6fad7229(de.danoeh.antennapod.activity.MainActivity), &lt;de.danoeh.antennapod.activity.MainActivity: void loadChildFragment(android.support.v4.app.Fragment)&gt;"/>  
      <source name="de.danoeh.antennapod.fragment.AddFeedFragment"/>  
      <destinition name="de.danoeh.antennapod.fragment.ItunesSearchFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.AddFeedFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.AddFeedFragment$$Lambda$0: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.AddFeedFragment: void lambda$onCreateView$0$AddFeedFragment$6fad7229(de.danoeh.antennapod.activity.MainActivity)&gt;"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="getFragment" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="addToBackStack" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(null)"/>  
        <node method="MainActivity loadChildFragment" type="commit" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.AddFeedFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.AddFeedFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.fragment.AddFeedFragment$$Lambda$1: void onClick(android.view.View)&gt;,&lt;de.danoeh.antennapod.fragment.AddFeedFragment: void lambda$onCreateView$1$AddFeedFragment$6fad7229(de.danoeh.antennapod.activity.MainActivity)&gt;,void lambda$onCreateView$1$AddFeedFragment$6fad7229(de.danoeh.antennapod.activity.MainActivity), &lt;de.danoeh.antennapod.activity.MainActivity: void loadChildFragment(android.support.v4.app.Fragment)&gt;"/>  
      <source name="de.danoeh.antennapod.fragment.AddFeedFragment"/>  
      <destinition name="de.danoeh.antennapod.fragment.gpodnet.GpodnetMainFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.AddFeedFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.AddFeedFragment$$Lambda$1: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.AddFeedFragment: void lambda$onCreateView$1$AddFeedFragment$6fad7229(de.danoeh.antennapod.activity.MainActivity)&gt;"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="getFragment" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="addToBackStack" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(null)"/>  
        <node method="MainActivity loadChildFragment" type="commit" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.fragment.CompletedDownloadsFragment"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.CompletedDownloadsFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.CompletedDownloadsFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)&gt;,void onListItemClick(android.widget.ListView,android.view.View,int,long), &lt;de.danoeh.antennapod.activity.MainActivity: void loadChildFragment(android.support.v4.app.Fragment)&gt;"/>  
      <source name="de.danoeh.antennapod.fragment.CompletedDownloadsFragment"/>  
      <destinition name="de.danoeh.antennapod.fragment.ItemFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.CompletedDownloadsFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)&gt;"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="getFragment" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="addToBackStack" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(null)"/>  
        <node method="MainActivity loadChildFragment" type="commit" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.activity.MainActivity$2"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MainActivity$2: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MainActivity$2: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;,&lt;de.danoeh.antennapod.activity.MainActivity: void access$200$423e067a(de.danoeh.antennapod.activity.MainActivity,int)&gt;,&lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(int,android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.activity.MainActivity: void loadFeedFragmentById(long,android.os.Bundle)&gt;,void loadFeedFragmentById(long,android.os.Bundle), &lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(android.support.v4.app.Fragment)&gt;"/>  
      <source name="de.danoeh.antennapod.activity.MainActivity"/>  
      <destinition name="de.danoeh.antennapod.fragment.ItemlistFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity$2: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity: void access$200$423e067a(de.danoeh.antennapod.activity.MainActivity,int)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(int,android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity: void loadFeedFragmentById(long,android.os.Bundle)&gt;"/>  
        <node method="MainActivity loadFragment" type="replaceFunction" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadFragment" type="getFragment" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity loadFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity loadFragment" type="replaceFunction" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadFragment" type="commit" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MainActivity$2: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MainActivity$2: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;,&lt;de.danoeh.antennapod.activity.MainActivity: void access$200$423e067a(de.danoeh.antennapod.activity.MainActivity,int)&gt;,&lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(int,android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(java.lang.String,android.os.Bundle)&gt;,void loadFragment(java.lang.String,android.os.Bundle), &lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(android.support.v4.app.Fragment)&gt;"/>  
      <source name="de.danoeh.antennapod.activity.MainActivity"/>  
      <destinition name="de.danoeh.antennapod.fragment.QueueFragment, de.danoeh.antennapod.fragment.SubscriptionFragment, de.danoeh.antennapod.fragment.AddFeedFragment, de.danoeh.antennapod.fragment.PlaybackHistoryFragment, de.danoeh.antennapod.fragment.DownloadsFragment, de.danoeh.antennapod.fragment.EpisodesFragment, de.danoeh.antennapod.fragment.QueueFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity$2: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity: void access$200$423e067a(de.danoeh.antennapod.activity.MainActivity,int)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(int,android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(java.lang.String,android.os.Bundle)&gt;"/>  
        <node method="MainActivity loadFragment" type="replaceFunction" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadFragment" type="getFragment" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity loadFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity loadFragment" type="replaceFunction" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadFragment" type="commit" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.adapter.QueueRecyclerAdapter"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.adapter.QueueRecyclerAdapter: android.support.v7.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.adapter.QueueRecyclerAdapter: android.support.v7.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int)&gt;,&lt;de.danoeh.antennapod.adapter.QueueRecyclerAdapter$ViewHolder: void &lt;init&gt;(de.danoeh.antennapod.adapter.QueueRecyclerAdapter,android.view.View)&gt;,&lt;de.danoeh.antennapod.adapter.QueueRecyclerAdapter$ViewHolder: void onClick(android.view.View)&gt;,void onClick(android.view.View), &lt;de.danoeh.antennapod.activity.MainActivity: void loadChildFragment(android.support.v4.app.Fragment)&gt;"/>  
      <source name="de.danoeh.antennapod.adapter.QueueRecyclerAdapter"/>  
      <destinition name="de.danoeh.antennapod.fragment.ItemFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.adapter.QueueRecyclerAdapter: android.support.v7.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.adapter.QueueRecyclerAdapter$ViewHolder: void &lt;init&gt;(de.danoeh.antennapod.adapter.QueueRecyclerAdapter,android.view.View)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.adapter.QueueRecyclerAdapter$ViewHolder: void onClick(android.view.View)&gt;"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="getFragment" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="addToBackStack" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(null)"/>  
        <node method="MainActivity loadChildFragment" type="commit" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.adapter.AllEpisodesRecycleAdapter"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.adapter.AllEpisodesRecycleAdapter: android.support.v7.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.adapter.AllEpisodesRecycleAdapter: android.support.v7.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int)&gt;,&lt;de.danoeh.antennapod.adapter.AllEpisodesRecycleAdapter$Holder: void &lt;init&gt;(de.danoeh.antennapod.adapter.AllEpisodesRecycleAdapter,android.view.View)&gt;,&lt;de.danoeh.antennapod.adapter.AllEpisodesRecycleAdapter$Holder: void onClick(android.view.View)&gt;,void onClick(android.view.View), &lt;de.danoeh.antennapod.activity.MainActivity: void loadChildFragment(android.support.v4.app.Fragment)&gt;"/>  
      <source name="de.danoeh.antennapod.adapter.AllEpisodesRecycleAdapter"/>  
      <destinition name="de.danoeh.antennapod.fragment.ItemFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.adapter.AllEpisodesRecycleAdapter: android.support.v7.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.adapter.AllEpisodesRecycleAdapter$Holder: void &lt;init&gt;(de.danoeh.antennapod.adapter.AllEpisodesRecycleAdapter,android.view.View)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.adapter.AllEpisodesRecycleAdapter$Holder: void onClick(android.view.View)&gt;"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="getFragment" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="addToBackStack" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(null)"/>  
        <node method="MainActivity loadChildFragment" type="commit" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.fragment.AllEpisodesFragment"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.AllEpisodesFragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.AllEpisodesFragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)&gt;,&lt;de.danoeh.antennapod.fragment.AllEpisodesFragment$1: boolean onQueryTextSubmit(java.lang.String)&gt;,boolean onQueryTextSubmit(java.lang.String), &lt;de.danoeh.antennapod.activity.MainActivity: void loadChildFragment(android.support.v4.app.Fragment)&gt;"/>  
      <source name="de.danoeh.antennapod.fragment.AllEpisodesFragment"/>  
      <destinition name="de.danoeh.antennapod.fragment.SearchFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.AllEpisodesFragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.AllEpisodesFragment$1: boolean onQueryTextSubmit(java.lang.String)&gt;"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="getFragment" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="addToBackStack" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(null)"/>  
        <node method="MainActivity loadChildFragment" type="commit" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.fragment.ItemFragment$$Lambda$3"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemFragment$$Lambda$3: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemFragment$$Lambda$3: void onClick(android.view.View)&gt;,&lt;de.danoeh.antennapod.fragment.ItemFragment: void openPodcast()&gt;,void openPodcast(), &lt;de.danoeh.antennapod.activity.MainActivity: void loadChildFragment(android.support.v4.app.Fragment)&gt;"/>  
      <source name="de.danoeh.antennapod.fragment.ItemFragment"/>  
      <destinition name="de.danoeh.antennapod.fragment.ItemlistFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemFragment$$Lambda$3: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ItemFragment: void openPodcast()&gt;"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="getFragment" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="addToBackStack" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(null)"/>  
        <node method="MainActivity loadChildFragment" type="commit" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.bumptech.glide.load.resource.gif.GifResourceDecoder"> 
    <FragmentSummary> 
      <method value="&lt;com.bumptech.glide.load.resource.gif.GifResourceDecoder: com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int)&gt;"/>  
      <methodtrace value="&lt;com.bumptech.glide.load.resource.gif.GifResourceDecoder: com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifResourceDecoder: com.bumptech.glide.load.resource.gif.GifDrawableResource decode(java.io.InputStream,int,int)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.Transformation,int,int,com.bumptech.glide.gifdecoder.GifHeader,byte[],android.graphics.Bitmap)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;,&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>  
      <source name="com.bumptech.glide.load.resource.gif.GifResourceDecoder"/>  
      <nodes> 
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifResourceDecoder: com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int)&gt;"/>  
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifResourceDecoder: com.bumptech.glide.load.resource.gif.GifDrawableResource decode(java.io.InputStream,int,int)&gt;"/>  
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.Transformation,int,int,com.bumptech.glide.gifdecoder.GifHeader,byte[],android.graphics.Bitmap)&gt;"/>  
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifDrawable: void &lt;init&gt;(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)&gt;"/>  
        <node method="&lt;com.bumptech.glide.load.resource.gif.GifFrameLoader: void &lt;init&gt;(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.activity.MainActivity$6"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MainActivity$6: void onPostExecute(java.lang.Object)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MainActivity$6: void onPostExecute(java.lang.Object)&gt;,&lt;de.danoeh.antennapod.activity.MainActivity$6: void onPostExecute(java.lang.Void)&gt;,&lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(java.lang.String,android.os.Bundle)&gt;,void loadFragment(java.lang.String,android.os.Bundle), &lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(android.support.v4.app.Fragment)&gt;"/>  
      <source name="de.danoeh.antennapod.activity.MainActivity"/>  
      <destinition name="de.danoeh.antennapod.fragment.QueueFragment, de.danoeh.antennapod.fragment.SubscriptionFragment, de.danoeh.antennapod.fragment.AddFeedFragment, de.danoeh.antennapod.fragment.PlaybackHistoryFragment, de.danoeh.antennapod.fragment.DownloadsFragment, de.danoeh.antennapod.fragment.EpisodesFragment, de.danoeh.antennapod.fragment.QueueFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity$6: void onPostExecute(java.lang.Object)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity$6: void onPostExecute(java.lang.Void)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(java.lang.String,android.os.Bundle)&gt;"/>  
        <node method="MainActivity loadFragment" type="replaceFunction" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadFragment" type="getFragment" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity loadFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity loadFragment" type="replaceFunction" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadFragment" type="commit" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.fragment.ItemlistFragment$6"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment$6: void update$7065629a(java.lang.Integer)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment$6: void update$7065629a(java.lang.Integer)&gt;,&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void access$300(de.danoeh.antennapod.fragment.ItemlistFragment)&gt;,&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void refreshHeaderView()&gt;,&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void loadFeedImage()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>  
      <source name="de.danoeh.antennapod.fragment.ItemlistFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment$6: void update$7065629a(java.lang.Integer)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void access$300(de.danoeh.antennapod.fragment.ItemlistFragment)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void refreshHeaderView()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void loadFeedImage()&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment$6: void update$7065629a(java.lang.Integer)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment$6: void update$7065629a(java.lang.Integer)&gt;,&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void access$300(de.danoeh.antennapod.fragment.ItemlistFragment)&gt;,&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void refreshHeaderView()&gt;,&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void loadFeedImage()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>  
      <source name="de.danoeh.antennapod.fragment.ItemlistFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment$6: void update$7065629a(java.lang.Integer)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void access$300(de.danoeh.antennapod.fragment.ItemlistFragment)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void refreshHeaderView()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: void loadFeedImage()&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.adapter.NavListAdapter"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.adapter.NavListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.adapter.NavListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>  
      <source name="de.danoeh.antennapod.adapter.NavListAdapter"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.adapter.NavListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.adapter.NavListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.adapter.NavListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.app.Activity)&gt;,com.bumptech.glide.RequestManager get(android.app.Activity), &lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;, &lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>  
      <source name="de.danoeh.antennapod.adapter.NavListAdapter"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.adapter.NavListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.app.Activity)&gt;"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.fragment.ExternalPlayerFragment$$Lambda$4"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ExternalPlayerFragment$$Lambda$4: void call(java.lang.Object)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ExternalPlayerFragment$$Lambda$4: void call(java.lang.Object)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>  
      <source name="de.danoeh.antennapod.fragment.ExternalPlayerFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ExternalPlayerFragment$$Lambda$4: void call(java.lang.Object)&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ExternalPlayerFragment$$Lambda$4: void call(java.lang.Object)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ExternalPlayerFragment$$Lambda$4: void call(java.lang.Object)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>  
      <source name="de.danoeh.antennapod.fragment.ExternalPlayerFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ExternalPlayerFragment$$Lambda$4: void call(java.lang.Object)&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.adapter.QueueRecyclerAdapter"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.adapter.QueueRecyclerAdapter: void onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.adapter.QueueRecyclerAdapter: void onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>  
      <source name="de.danoeh.antennapod.adapter.QueueRecyclerAdapter"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.adapter.QueueRecyclerAdapter: void onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int)&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.adapter.QueueRecyclerAdapter: void onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.adapter.QueueRecyclerAdapter: void onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>  
      <source name="de.danoeh.antennapod.adapter.QueueRecyclerAdapter"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.adapter.QueueRecyclerAdapter: void onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int)&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.activity.FeedInfoActivity$$Lambda$1"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.FeedInfoActivity$$Lambda$1: void call(java.lang.Object)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.FeedInfoActivity$$Lambda$1: void call(java.lang.Object)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>  
      <source name="de.danoeh.antennapod.activity.FeedInfoActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.FeedInfoActivity$$Lambda$1: void call(java.lang.Object)&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.FeedInfoActivity$$Lambda$1: void call(java.lang.Object)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.FeedInfoActivity$$Lambda$1: void call(java.lang.Object)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>  
      <source name="de.danoeh.antennapod.activity.FeedInfoActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.FeedInfoActivity$$Lambda$1: void call(java.lang.Object)&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.activity.MainActivity"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MainActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MainActivity: void onCreate(android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.activity.MainActivity: void loadFeedFragmentById(long,android.os.Bundle)&gt;,void loadFeedFragmentById(long,android.os.Bundle), &lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(android.support.v4.app.Fragment)&gt;"/>  
      <source name="de.danoeh.antennapod.activity.MainActivity"/>  
      <destinition name="de.danoeh.antennapod.fragment.ItemlistFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity: void loadFeedFragmentById(long,android.os.Bundle)&gt;"/>  
        <node method="MainActivity loadFragment" type="replaceFunction" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadFragment" type="getFragment" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity loadFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity loadFragment" type="replaceFunction" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadFragment" type="commit" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MainActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MainActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;de.danoeh.antennapod.activity.MainActivity$$Lambda$0: void &lt;init&gt;(de.danoeh.antennapod.activity.MainActivity,android.support.v4.app.FragmentManager)&gt;"/>  
      <source name="de.danoeh.antennapod.activity.MainActivity"/>  
      <destinition name="de.danoeh.antennapod.fragment.ExternalPlayerFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="MainActivity onCreate" type="getFragment" unit="$r12 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity onCreate" type="beginTransaction" unit="$r20 = virtualinvoke $r12.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity onCreate" type="replaceFunction" unit="virtualinvoke $r20.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362191, $r24, &quot;ExternalPlayerFragment&quot;)"/>  
        <node method="MainActivity onCreate" type="commit" unit="virtualinvoke $r20.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MainActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MainActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;de.danoeh.antennapod.activity.MainActivity$$Lambda$0: void &lt;init&gt;(de.danoeh.antennapod.activity.MainActivity,android.support.v4.app.FragmentManager)&gt;"/>  
      <source name="de.danoeh.antennapod.activity.MainActivity"/>  
      <destinition name="de.danoeh.antennapod.fragment.ExternalPlayerFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="MainActivity onCreate" type="getFragment" unit="$r12 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity onCreate" type="beginTransaction" unit="$r20 = virtualinvoke $r12.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity onCreate" type="replaceFunction" unit="virtualinvoke $r20.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362191, $r24, &quot;ExternalPlayerFragment&quot;)"/>  
        <node method="MainActivity onCreate" type="commit" unit="virtualinvoke $r20.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MainActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MainActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;de.danoeh.antennapod.activity.MainActivity$$Lambda$0: void &lt;init&gt;(de.danoeh.antennapod.activity.MainActivity,android.support.v4.app.FragmentManager)&gt;"/>  
      <source name="de.danoeh.antennapod.activity.MainActivity"/>  
      <destinition name="de.danoeh.antennapod.fragment.ExternalPlayerFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="MainActivity onCreate" type="getFragment" unit="$r12 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity onCreate" type="beginTransaction" unit="$r20 = virtualinvoke $r12.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity onCreate" type="replaceFunction" unit="virtualinvoke $r20.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment)&gt;(2131362074, $r21)"/>  
        <node method="MainActivity onCreate" type="replaceFunction" unit="virtualinvoke $r20.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362191, $r24, &quot;ExternalPlayerFragment&quot;)"/>  
        <node method="MainActivity onCreate" type="commit" unit="virtualinvoke $r20.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MainActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MainActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;de.danoeh.antennapod.activity.MainActivity$$Lambda$0: void &lt;init&gt;(de.danoeh.antennapod.activity.MainActivity,android.support.v4.app.FragmentManager)&gt;"/>  
      <source name="de.danoeh.antennapod.activity.MainActivity"/>  
      <destinition name="de.danoeh.antennapod.fragment.ExternalPlayerFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="MainActivity onCreate" type="getFragment" unit="$r12 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity onCreate" type="beginTransaction" unit="$r20 = virtualinvoke $r12.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity onCreate" type="replaceFunction" unit="virtualinvoke $r20.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362191, $r24, &quot;ExternalPlayerFragment&quot;)"/>  
        <node method="MainActivity onCreate" type="commit" unit="virtualinvoke $r20.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MainActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MainActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;de.danoeh.antennapod.activity.MainActivity$$Lambda$0: void &lt;init&gt;(de.danoeh.antennapod.activity.MainActivity,android.support.v4.app.FragmentManager)&gt;"/>  
      <source name="de.danoeh.antennapod.activity.MainActivity"/>  
      <destinition name="de.danoeh.antennapod.fragment.ExternalPlayerFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="MainActivity onCreate" type="getFragment" unit="$r12 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity onCreate" type="beginTransaction" unit="$r20 = virtualinvoke $r12.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity onCreate" type="replaceFunction" unit="virtualinvoke $r20.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362191, $r24, &quot;ExternalPlayerFragment&quot;)"/>  
        <node method="MainActivity onCreate" type="commit" unit="virtualinvoke $r20.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MainActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MainActivity: void onCreate(android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(java.lang.String,android.os.Bundle)&gt;,void loadFragment(java.lang.String,android.os.Bundle), &lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(android.support.v4.app.Fragment)&gt;"/>  
      <source name="de.danoeh.antennapod.activity.MainActivity"/>  
      <destinition name="de.danoeh.antennapod.fragment.QueueFragment, de.danoeh.antennapod.fragment.SubscriptionFragment, de.danoeh.antennapod.fragment.AddFeedFragment, de.danoeh.antennapod.fragment.PlaybackHistoryFragment, de.danoeh.antennapod.fragment.DownloadsFragment, de.danoeh.antennapod.fragment.EpisodesFragment, de.danoeh.antennapod.fragment.QueueFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(java.lang.String,android.os.Bundle)&gt;"/>  
        <node method="MainActivity loadFragment" type="replaceFunction" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadFragment" type="getFragment" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity loadFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity loadFragment" type="replaceFunction" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadFragment" type="commit" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.fragment.ItemlistFragment"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,boolean onOptionsItemSelected(android.view.MenuItem), &lt;de.danoeh.antennapod.activity.MainActivity: void loadChildFragment(android.support.v4.app.Fragment)&gt;"/>  
      <source name="de.danoeh.antennapod.fragment.ItemlistFragment"/>  
      <destinition name="de.danoeh.antennapod.dialog.EpisodesApplyActionFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.ItemlistFragment: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="getFragment" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="addToBackStack" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(null)"/>  
        <node method="MainActivity loadChildFragment" type="commit" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.fragment.gpodnet.SearchListFragment"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.fragment.gpodnet.SearchListFragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.fragment.gpodnet.SearchListFragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)&gt;,&lt;de.danoeh.antennapod.fragment.gpodnet.PodcastListFragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)&gt;,&lt;de.danoeh.antennapod.fragment.gpodnet.PodcastListFragment$1: boolean onQueryTextSubmit(java.lang.String)&gt;,boolean onQueryTextSubmit(java.lang.String), &lt;de.danoeh.antennapod.activity.MainActivity: void loadChildFragment(android.support.v4.app.Fragment)&gt;"/>  
      <source name="de.danoeh.antennapod.fragment.gpodnet.SearchListFragment"/>  
      <destinition name="de.danoeh.antennapod.fragment.gpodnet.SearchListFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.fragment.gpodnet.SearchListFragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.gpodnet.PodcastListFragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.fragment.gpodnet.PodcastListFragment$1: boolean onQueryTextSubmit(java.lang.String)&gt;"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="getFragment" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity loadChildFragment" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadChildFragment" type="addToBackStack" unit="$r3 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(null)"/>  
        <node method="MainActivity loadChildFragment" type="commit" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.adapter.SearchlistAdapter"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.adapter.SearchlistAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.adapter.SearchlistAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>  
      <source name="de.danoeh.antennapod.adapter.SearchlistAdapter"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.adapter.SearchlistAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.activity.FeedSettingsActivity$$Lambda$3"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.FeedSettingsActivity$$Lambda$3: void call(java.lang.Object)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.FeedSettingsActivity$$Lambda$3: void call(java.lang.Object)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>  
      <source name="de.danoeh.antennapod.activity.FeedSettingsActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.FeedSettingsActivity$$Lambda$3: void call(java.lang.Object)&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.FeedSettingsActivity$$Lambda$3: void call(java.lang.Object)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.FeedSettingsActivity$$Lambda$3: void call(java.lang.Object)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>  
      <source name="de.danoeh.antennapod.activity.FeedSettingsActivity"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.FeedSettingsActivity$$Lambda$3: void call(java.lang.Object)&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.adapter.AllEpisodesRecycleAdapter"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.adapter.AllEpisodesRecycleAdapter: void onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.adapter.AllEpisodesRecycleAdapter: void onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>  
      <source name="de.danoeh.antennapod.adapter.AllEpisodesRecycleAdapter"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.adapter.AllEpisodesRecycleAdapter: void onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int)&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.adapter.AllEpisodesRecycleAdapter: void onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.adapter.AllEpisodesRecycleAdapter: void onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;,com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)"/>  
      <source name="de.danoeh.antennapod.adapter.AllEpisodesRecycleAdapter"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.adapter.AllEpisodesRecycleAdapter: void onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int)&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getSupportRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.activity.PreferenceActivity"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.PreferenceActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.PreferenceActivity: void onCreate(android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.activity.PreferenceActivity: void showPreferenceScreen(int,boolean)&gt;,void showPreferenceScreen(int,boolean)"/>  
      <source name="de.danoeh.antennapod.activity.PreferenceActivity"/>  
      <destinition name="de.danoeh.antennapod.activity.PreferenceActivity$MainFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.PreferenceActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.PreferenceActivity: void showPreferenceScreen(int,boolean)&gt;"/>  
        <node method="PreferenceActivity showPreferenceScreen" type="getFragment" unit="$r4 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.PreferenceActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="PreferenceActivity showPreferenceScreen" type="beginTransaction" unit="$r5 = virtualinvoke $r4.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="PreferenceActivity showPreferenceScreen" type="replaceFunction" unit="$r5 = virtualinvoke $r5.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment)&gt;(2131361928, $r1)"/>  
        <node method="PreferenceActivity showPreferenceScreen" type="addToBackStack" unit="$r5 = virtualinvoke $r5.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;($r6)"/>  
        <node method="PreferenceActivity showPreferenceScreen" type="commit" unit="virtualinvoke $r5.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.PreferenceActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.PreferenceActivity: void onCreate(android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.activity.PreferenceActivity: void showPreferenceScreen(int,boolean)&gt;,void showPreferenceScreen(int,boolean)"/>  
      <source name="de.danoeh.antennapod.activity.PreferenceActivity"/>  
      <destinition name="de.danoeh.antennapod.activity.PreferenceActivity$MainFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.PreferenceActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.PreferenceActivity: void showPreferenceScreen(int,boolean)&gt;"/>  
        <node method="PreferenceActivity showPreferenceScreen" type="getFragment" unit="$r4 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.PreferenceActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="PreferenceActivity showPreferenceScreen" type="beginTransaction" unit="$r5 = virtualinvoke $r4.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="PreferenceActivity showPreferenceScreen" type="replaceFunction" unit="$r5 = virtualinvoke $r5.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment)&gt;(2131361928, $r1)"/>  
        <node method="PreferenceActivity showPreferenceScreen" type="commit" unit="virtualinvoke $r5.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.adapter.itunes.ItunesAdapter"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.adapter.itunes.ItunesAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.adapter.itunes.ItunesAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>  
      <source name="de.danoeh.antennapod.adapter.itunes.ItunesAdapter"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.adapter.itunes.ItunesAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.core.service.playback.PlaybackService$3"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;,&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;,&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;,com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)"/>  
      <source name="de.danoeh.antennapod.core.service.playback.PlaybackService"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.core.service.playback.PlaybackService$3: void run()&gt;"/>  
        <node method="&lt;com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)&gt;"/>  
        <node method="&lt;com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager)&gt;"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="beginTransaction" unit="$r6 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r3, &quot;com.bumptech.glide.manager&quot;)"/>  
        <node method="RequestManagerRetriever getRequestManagerFragment" type="commit" unit="virtualinvoke $r6.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.activity.MainActivity"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MainActivity: void onResume()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MainActivity: void onResume()&gt;,&lt;de.danoeh.antennapod.activity.MainActivity: void handleNavIntent()&gt;,&lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(int,android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.activity.MainActivity: void loadFeedFragmentById(long,android.os.Bundle)&gt;,void loadFeedFragmentById(long,android.os.Bundle), &lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(android.support.v4.app.Fragment)&gt;"/>  
      <source name="de.danoeh.antennapod.activity.MainActivity"/>  
      <destinition name="de.danoeh.antennapod.fragment.ItemlistFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity: void onResume()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity: void handleNavIntent()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(int,android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity: void loadFeedFragmentById(long,android.os.Bundle)&gt;"/>  
        <node method="MainActivity loadFragment" type="replaceFunction" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadFragment" type="getFragment" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity loadFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity loadFragment" type="replaceFunction" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadFragment" type="commit" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.MainActivity: void onResume()&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.MainActivity: void onResume()&gt;,&lt;de.danoeh.antennapod.activity.MainActivity: void handleNavIntent()&gt;,&lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(int,android.os.Bundle)&gt;,&lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(java.lang.String,android.os.Bundle)&gt;,void loadFragment(java.lang.String,android.os.Bundle), &lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(android.support.v4.app.Fragment)&gt;"/>  
      <source name="de.danoeh.antennapod.activity.MainActivity"/>  
      <destinition name="de.danoeh.antennapod.fragment.QueueFragment, de.danoeh.antennapod.fragment.SubscriptionFragment, de.danoeh.antennapod.fragment.AddFeedFragment, de.danoeh.antennapod.fragment.PlaybackHistoryFragment, de.danoeh.antennapod.fragment.DownloadsFragment, de.danoeh.antennapod.fragment.EpisodesFragment, de.danoeh.antennapod.fragment.QueueFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity: void onResume()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity: void handleNavIntent()&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(int,android.os.Bundle)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.activity.MainActivity: void loadFragment(java.lang.String,android.os.Bundle)&gt;"/>  
        <node method="MainActivity loadFragment" type="replaceFunction" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadFragment" type="getFragment" unit="$r2 = virtualinvoke r0.&lt;de.danoeh.antennapod.activity.MainActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="MainActivity loadFragment" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="MainActivity loadFragment" type="replaceFunction" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131362074, $r1, &quot;main&quot;)"/>  
        <node method="MainActivity loadFragment" type="commit" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="de.danoeh.antennapod.activity.PreferenceActivity$MainFragment"> 
    <FragmentSummary> 
      <method value="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$27: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;,&lt;de.danoeh.antennapod.preferences.PreferenceController: android.support.v7.preference.PreferenceFragmentCompat openScreen(int,android.support.v7.app.AppCompatActivity)&gt;,android.support.v7.preference.PreferenceFragmentCompat openScreen(int,android.support.v7.app.AppCompatActivity)"/>  
      <source name="de.danoeh.antennapod.activity.PreferenceActivity"/>  
      <destinition name="de.danoeh.antennapod.activity.PreferenceActivity$MainFragment"/>  
      <nodes> 
        <node method="&lt;de.danoeh.antennapod.activity.PreferenceActivity$MainFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController$$Lambda$27: boolean onPreferenceClick(android.support.v7.preference.Preference)&gt;"/>  
        <node method="&lt;de.danoeh.antennapod.preferences.PreferenceController: android.support.v7.preference.PreferenceFragmentCompat openScreen(int,android.support.v7.app.AppCompatActivity)&gt;"/>  
        <node method="PreferenceController openScreen" type="getFragment" unit="$r3 = virtualinvoke $r2.&lt;android.support.v7.app.AppCompatActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="PreferenceController openScreen" type="beginTransaction" unit="$r4 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="PreferenceController openScreen" type="replaceFunction" unit="$r4 = virtualinvoke $r4.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment)&gt;(2131361928, $r0)"/>  
        <node method="PreferenceController openScreen" type="addToBackStack" unit="$r4 = virtualinvoke $r4.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(&quot;PreferenceController&quot;)"/>  
        <node method="PreferenceController openScreen" type="commit" unit="virtualinvoke $r4.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
</root>
