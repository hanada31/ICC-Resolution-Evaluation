<?xml version="1.0" encoding="UTF-8"?>

<root> 
  <Component source="com.etesync.syncadapter.ui.AccountActivity"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.AccountActivity$AccountLoader: void onStartLoading()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.AccountActivity$AccountLoader: void onStartLoading()&gt;,void onStartLoading()"/>  
      <source name="com.etesync.syncadapter.ui.AccountActivity"/>  
      <destinition name="com.etesync.syncadapter.AccountUpdateService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.AccountActivity$AccountLoader: void onStartLoading()&gt;"/>  
        <node method="AccountActivity$AccountLoader onStartLoading" type="CreateMethod" unit="$r4 = new android.content.Intent"/>  
        <node method="AccountActivity$AccountLoader onStartLoading" type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lcom/etesync/syncadapter/AccountUpdateService;&quot;)"/>  
        <node method="AccountActivity$AccountLoader onStartLoading" type="PassOutIntent" unit="virtualinvoke $r3.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r4, $r6, 1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="androidx.core.app.NotificationManagerCompat"> 
    <intentSummary> 
      <method value="&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: boolean ensureServiceBound(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)&gt;"/>  
      <methodtrace value="&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: boolean ensureServiceBound(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)&gt;,boolean ensureServiceBound(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)"/>  
      <source name="androidx.core.app.NotificationManagerCompat"/>  
      <destinition name="interICC_android.support.BIND_NOTIFICATION_SIDE_CHANNEL, "/>  
      <sender action="android.support.BIND_NOTIFICATION_SIDE_CHANNEL"/>  
      <nodes> 
        <node method="&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: boolean ensureServiceBound(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)&gt;"/>  
        <node method="NotificationManagerCompat$SideChannelManager ensureServiceBound" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="NotificationManagerCompat$SideChannelManager ensureServiceBound" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.support.BIND_NOTIFICATION_SIDE_CHANNEL&quot;)"/>  
        <node method="NotificationManagerCompat$SideChannelManager ensureServiceBound" type="SetAttribute" unit="$r2 = virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r3)"/>  
        <node method="NotificationManagerCompat$SideChannelManager ensureServiceBound" type="PassOutIntent" unit="$z0 = virtualinvoke $r4.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r2, r0, 33)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.acra.sender.LegacySenderService"> 
    <intentSummary> 
      <method value="&lt;org.acra.sender.LegacySenderService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;org.acra.sender.LegacySenderService: android.os.IBinder onBind(android.content.Intent)&gt;,android.os.IBinder onBind(android.content.Intent)"/>  
      <source name="org.acra.sender.LegacySenderService"/>  
      <nodes> 
        <node method="&lt;org.acra.sender.LegacySenderService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
        <node method="LegacySenderService onBind" type="ReceiveIntentFromParatMethod" unit="parameter0 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.sender.LegacySenderService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;org.acra.sender.LegacySenderService: android.os.IBinder onBind(android.content.Intent)&gt;,android.os.IBinder onBind(android.content.Intent)"/>  
      <source name="org.acra.sender.LegacySenderService"/>  
      <nodes> 
        <node method="&lt;org.acra.sender.LegacySenderService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
        <node method="LegacySenderService onBind" type="ReceiveIntentFromRetValue" unit="parameter0 = virtualinvoke this.&lt;org.acra.sender.LegacySenderService: android.content.Intent getIntent()&gt;()"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.acra.sender.EmailIntentSender"> 
    <intentSummary> 
      <method value="&lt;org.acra.sender.EmailIntentSender: void grantPermission(android.content.Context,android.content.Intent,java.lang.String,java.util.List)&gt;"/>  
      <methodtrace value="&lt;org.acra.sender.EmailIntentSender: void grantPermission(android.content.Context,android.content.Intent,java.lang.String,java.util.List)&gt;,void grantPermission(android.content.Context,android.content.Intent,java.lang.String,java.util.List)"/>  
      <source name="org.acra.sender.EmailIntentSender"/>  
      <nodes> 
        <node method="&lt;org.acra.sender.EmailIntentSender: void grantPermission(android.content.Context,android.content.Intent,java.lang.String,java.util.List)&gt;"/>  
        <node method="EmailIntentSender grantPermission" type="ReceiveIntentFromParatMethod" unit="$r3 := @parameter1: android.content.Intent"/>  
        <node method="EmailIntentSender grantPermission" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.acra.interaction.NotificationInteraction"> 
    <intentSummary> 
      <method value="&lt;org.acra.interaction.NotificationInteraction: android.app.PendingIntent getSendIntent(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;"/>  
      <methodtrace value="&lt;org.acra.interaction.NotificationInteraction: android.app.PendingIntent getSendIntent(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;,android.app.PendingIntent getSendIntent(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)"/>  
      <source name="org.acra.interaction.NotificationInteraction"/>  
      <destinition name="org.acra.receiver.NotificationBroadcastReceiver"/>  
      <sender action="org.acra.intent.send"/>  
      <nodes> 
        <node method="&lt;org.acra.interaction.NotificationInteraction: android.app.PendingIntent getSendIntent(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;"/>  
        <node method="NotificationInteraction getSendIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="NotificationInteraction getSendIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Lorg/acra/receiver/NotificationBroadcastReceiver;&quot;)"/>  
        <node method="NotificationInteraction getSendIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.acra.intent.send&quot;)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.syncadapter.AccountAuthenticatorService"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.AccountAuthenticatorService$AccountAuthenticator: android.os.Bundle addAccount(android.accounts.AccountAuthenticatorResponse,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.AccountAuthenticatorService$AccountAuthenticator: android.os.Bundle addAccount(android.accounts.AccountAuthenticatorResponse,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)&gt;,android.os.Bundle addAccount(android.accounts.AccountAuthenticatorResponse,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)"/>  
      <source name="com.etesync.syncadapter.syncadapter.AccountAuthenticatorService"/>  
      <destinition name="com.etesync.syncadapter.ui.setup.LoginActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.AccountAuthenticatorService$AccountAuthenticator: android.os.Bundle addAccount(android.accounts.AccountAuthenticatorResponse,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)&gt;"/>  
        <node method="AccountAuthenticatorService$AccountAuthenticator addAccount" type="CreateMethod" unit="$r6 = new android.content.Intent"/>  
        <node method="AccountAuthenticatorService$AccountAuthenticator addAccount" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r7, class &quot;Lcom/etesync/syncadapter/ui/setup/LoginActivity;&quot;)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.syncadapter.NullAuthenticatorService"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.NullAuthenticatorService$AccountAuthenticator: android.os.Bundle addAccount(android.accounts.AccountAuthenticatorResponse,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.NullAuthenticatorService$AccountAuthenticator: android.os.Bundle addAccount(android.accounts.AccountAuthenticatorResponse,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)&gt;,android.os.Bundle addAccount(android.accounts.AccountAuthenticatorResponse,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)"/>  
      <source name="com.etesync.syncadapter.syncadapter.NullAuthenticatorService"/>  
      <destinition name="com.etesync.syncadapter.ui.AccountsActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.NullAuthenticatorService$AccountAuthenticator: android.os.Bundle addAccount(android.accounts.AccountAuthenticatorResponse,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)&gt;"/>  
        <node method="NullAuthenticatorService$AccountAuthenticator addAccount" type="CreateMethod" unit="$r6 = new android.content.Intent"/>  
        <node method="NullAuthenticatorService$AccountAuthenticator addAccount" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r7, class &quot;Lcom/etesync/syncadapter/ui/AccountsActivity;&quot;)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="at.bitfire.cert4android.TrustCertificateActivity"> 
    <intentSummary> 
      <method value="&lt;at.bitfire.cert4android.TrustCertificateActivity: void sendDecision(boolean)&gt;"/>  
      <methodtrace value="&lt;at.bitfire.cert4android.TrustCertificateActivity: void sendDecision(boolean)&gt;,void sendDecision(boolean)"/>  
      <source name="at.bitfire.cert4android.TrustCertificateActivity"/>  
      <destinition name="at.bitfire.cert4android.CustomCertService"/>  
      <sender action="certificateDecision"/>  
      <nodes> 
        <node method="&lt;at.bitfire.cert4android.TrustCertificateActivity: void sendDecision(boolean)&gt;"/>  
        <node method="TrustCertificateActivity sendDecision" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="TrustCertificateActivity sendDecision" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lat/bitfire/cert4android/CustomCertService;&quot;)"/>  
        <node method="TrustCertificateActivity sendDecision" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;certificateDecision&quot;)"/>  
        <node method="TrustCertificateActivity sendDecision" type="PassOutIntent" unit="virtualinvoke r0.&lt;at.bitfire.cert4android.TrustCertificateActivity: android.content.ComponentName startService(android.content.Intent)&gt;($r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.AccountsActivity"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.AccountsActivity$onCreate$1: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.AccountsActivity$onCreate$1: void onClick(android.view.View)&gt;,void onClick(android.view.View)"/>  
      <source name="com.etesync.syncadapter.ui.AccountsActivity"/>  
      <destinition name="com.etesync.syncadapter.ui.setup.LoginActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.AccountsActivity$onCreate$1: void onClick(android.view.View)&gt;"/>  
        <node method="AccountsActivity$onCreate$1 onClick" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="AccountsActivity$onCreate$1 onClick" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lcom/etesync/syncadapter/ui/setup/LoginActivity;&quot;)"/>  
        <node method="AccountsActivity$onCreate$1 onClick" type="PassOutIntent" unit="virtualinvoke $r3.&lt;com.etesync.syncadapter.ui.AccountsActivity: void startActivity(android.content.Intent)&gt;($r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.syncadapter.AccountAuthenticatorService"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.AccountAuthenticatorService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.AccountAuthenticatorService: android.os.IBinder onBind(android.content.Intent)&gt;,android.os.IBinder onBind(android.content.Intent)"/>  
      <source name="com.etesync.syncadapter.syncadapter.AccountAuthenticatorService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.AccountAuthenticatorService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
        <node method="AccountAuthenticatorService onBind" type="ReceiveIntentFromParatMethod" unit="parameter0 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.AccountAuthenticatorService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.AccountAuthenticatorService: android.os.IBinder onBind(android.content.Intent)&gt;,android.os.IBinder onBind(android.content.Intent)"/>  
      <source name="com.etesync.syncadapter.syncadapter.AccountAuthenticatorService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.AccountAuthenticatorService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
        <node method="AccountAuthenticatorService onBind" type="ReceiveIntentFromRetValue" unit="parameter0 = virtualinvoke this.&lt;com.etesync.syncadapter.syncadapter.AccountAuthenticatorService: android.content.Intent getIntent()&gt;()"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.acra.sender.EmailIntentSender"> 
    <intentSummary> 
      <method value="&lt;org.acra.sender.EmailIntentSender: void showChooser(android.content.Context,java.util.List)&gt;"/>  
      <methodtrace value="&lt;org.acra.sender.EmailIntentSender: void showChooser(android.content.Context,java.util.List)&gt;,void showChooser(android.content.Context,java.util.List)"/>  
      <source name="org.acra.sender.EmailIntentSender"/>  
      <destinition name="interICC_android.intent.action.CHOOSER, "/>  
      <sender action="android.intent.action.CHOOSER" flags="FLAG_ACTIVITY_NEW_TASK "/>  
      <nodes> 
        <node method="&lt;org.acra.sender.EmailIntentSender: void showChooser(android.content.Context,java.util.List)&gt;"/>  
        <node method="EmailIntentSender showChooser" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="EmailIntentSender showChooser" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.CHOOSER&quot;)"/>  
        <node method="EmailIntentSender showChooser" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(268435456)"/>  
        <node method="EmailIntentSender showChooser" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r2)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.syncadapter.SyncNotification"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void setDetailsIntent$app_release(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void setDetailsIntent$app_release(android.content.Intent)&gt;,void setDetailsIntent$app_release(android.content.Intent)"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncNotification"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void setDetailsIntent$app_release(android.content.Intent)&gt;"/>  
        <node method="SyncNotification setDetailsIntent$app_release" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncNotification setDetailsIntent$app_release" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncNotification setDetailsIntent$app_release" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncNotification setDetailsIntent$app_release" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncNotification setDetailsIntent$app_release" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void setDetailsIntent$app_release(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void setDetailsIntent$app_release(android.content.Intent)&gt;,void setDetailsIntent$app_release(android.content.Intent)"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncNotification"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity, com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void setDetailsIntent$app_release(android.content.Intent)&gt;"/>  
        <node method="SyncNotification setDetailsIntent$app_release" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncNotification setDetailsIntent$app_release" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncNotification setDetailsIntent$app_release" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncNotification setDetailsIntent$app_release" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/>  
        <node method="SyncNotification setDetailsIntent$app_release" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncNotification setDetailsIntent$app_release" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncNotification setDetailsIntent$app_release" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncNotification setDetailsIntent$app_release" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="androidx.core.app.NotificationCompat"> 
    <intentSummary> 
      <method value="&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
      <methodtrace value="&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;,androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)"/>  
      <source name="androidx.core.app.NotificationCompat"/>  
      <nodes> 
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
      <methodtrace value="&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;,androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)"/>  
      <source name="androidx.core.app.NotificationCompat"/>  
      <nodes> 
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.syncadapter.AddressBooksSyncAdapterService"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.AddressBooksSyncAdapterService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.AddressBooksSyncAdapterService: android.os.IBinder onBind(android.content.Intent)&gt;,android.os.IBinder onBind(android.content.Intent)"/>  
      <source name="com.etesync.syncadapter.syncadapter.AddressBooksSyncAdapterService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.AddressBooksSyncAdapterService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
        <node method="AddressBooksSyncAdapterService onBind" type="ReceiveIntentFromParatMethod" unit="parameter0 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.AddressBooksSyncAdapterService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.AddressBooksSyncAdapterService: android.os.IBinder onBind(android.content.Intent)&gt;,android.os.IBinder onBind(android.content.Intent)"/>  
      <source name="com.etesync.syncadapter.syncadapter.AddressBooksSyncAdapterService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.AddressBooksSyncAdapterService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
        <node method="AddressBooksSyncAdapterService onBind" type="ReceiveIntentFromRetValue" unit="parameter0 = virtualinvoke this.&lt;com.etesync.syncadapter.syncadapter.AddressBooksSyncAdapterService: android.content.Intent getIntent()&gt;()"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.acra.sender.EmailIntentSender"> 
    <intentSummary> 
      <method value="&lt;org.acra.sender.EmailIntentSender: java.util.List buildInitialIntents(android.content.pm.PackageManager,android.content.Intent,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;org.acra.sender.EmailIntentSender: java.util.List buildInitialIntents(android.content.pm.PackageManager,android.content.Intent,android.content.Intent)&gt;,java.util.List buildInitialIntents(android.content.pm.PackageManager,android.content.Intent,android.content.Intent)"/>  
      <source name="org.acra.sender.EmailIntentSender"/>  
      <nodes> 
        <node method="&lt;org.acra.sender.EmailIntentSender: java.util.List buildInitialIntents(android.content.pm.PackageManager,android.content.Intent,android.content.Intent)&gt;"/>  
        <node method="EmailIntentSender buildInitialIntents" type="ReceiveIntentFromParatMethod" unit="$r3 := @parameter1: android.content.Intent"/>  
        <node method="EmailIntentSender buildInitialIntents" type="PassOutIntent" unit="$r4 = virtualinvoke $r1.&lt;android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)&gt;($r3, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.sender.EmailIntentSender: java.util.List buildInitialIntents(android.content.pm.PackageManager,android.content.Intent,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;org.acra.sender.EmailIntentSender: java.util.List buildInitialIntents(android.content.pm.PackageManager,android.content.Intent,android.content.Intent)&gt;,java.util.List buildInitialIntents(android.content.pm.PackageManager,android.content.Intent,android.content.Intent)"/>  
      <source name="org.acra.sender.EmailIntentSender"/>  
      <nodes> 
        <node method="&lt;org.acra.sender.EmailIntentSender: java.util.List buildInitialIntents(android.content.pm.PackageManager,android.content.Intent,android.content.Intent)&gt;"/>  
        <node method="EmailIntentSender buildInitialIntents" type="ReceiveIntentFromParatMethod" unit="$r3 := @parameter1: android.content.Intent"/>  
        <node method="EmailIntentSender buildInitialIntents" type="PassOutIntent" unit="$r4 = virtualinvoke $r1.&lt;android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)&gt;($r3, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.sender.EmailIntentSender: java.util.List buildInitialIntents(android.content.pm.PackageManager,android.content.Intent,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;org.acra.sender.EmailIntentSender: java.util.List buildInitialIntents(android.content.pm.PackageManager,android.content.Intent,android.content.Intent)&gt;,java.util.List buildInitialIntents(android.content.pm.PackageManager,android.content.Intent,android.content.Intent)"/>  
      <source name="org.acra.sender.EmailIntentSender"/>  
      <nodes> 
        <node method="&lt;org.acra.sender.EmailIntentSender: java.util.List buildInitialIntents(android.content.pm.PackageManager,android.content.Intent,android.content.Intent)&gt;"/>  
        <node method="EmailIntentSender buildInitialIntents" type="CreateMethod" unit="$r3 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.sender.EmailIntentSender: java.util.List buildInitialIntents(android.content.pm.PackageManager,android.content.Intent,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;org.acra.sender.EmailIntentSender: java.util.List buildInitialIntents(android.content.pm.PackageManager,android.content.Intent,android.content.Intent)&gt;,java.util.List buildInitialIntents(android.content.pm.PackageManager,android.content.Intent,android.content.Intent)"/>  
      <source name="org.acra.sender.EmailIntentSender"/>  
      <nodes> 
        <node method="&lt;org.acra.sender.EmailIntentSender: java.util.List buildInitialIntents(android.content.pm.PackageManager,android.content.Intent,android.content.Intent)&gt;"/>  
        <node method="EmailIntentSender buildInitialIntents" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter2: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.sender.EmailIntentSender: java.util.List buildInitialIntents(android.content.pm.PackageManager,android.content.Intent,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;org.acra.sender.EmailIntentSender: java.util.List buildInitialIntents(android.content.pm.PackageManager,android.content.Intent,android.content.Intent)&gt;,java.util.List buildInitialIntents(android.content.pm.PackageManager,android.content.Intent,android.content.Intent)"/>  
      <source name="org.acra.sender.EmailIntentSender"/>  
      <nodes> 
        <node method="&lt;org.acra.sender.EmailIntentSender: java.util.List buildInitialIntents(android.content.pm.PackageManager,android.content.Intent,android.content.Intent)&gt;"/>  
        <node method="EmailIntentSender buildInitialIntents" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter2: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.acra.interaction.NotificationInteraction"> 
    <intentSummary> 
      <method value="&lt;org.acra.interaction.NotificationInteraction: android.app.PendingIntent getDiscardIntent(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;org.acra.interaction.NotificationInteraction: android.app.PendingIntent getDiscardIntent(android.content.Context)&gt;,android.app.PendingIntent getDiscardIntent(android.content.Context)"/>  
      <source name="org.acra.interaction.NotificationInteraction"/>  
      <destinition name="org.acra.receiver.NotificationBroadcastReceiver"/>  
      <sender action="org.acra.intent.discard"/>  
      <nodes> 
        <node method="&lt;org.acra.interaction.NotificationInteraction: android.app.PendingIntent getDiscardIntent(android.content.Context)&gt;"/>  
        <node method="NotificationInteraction getDiscardIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="NotificationInteraction getDiscardIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Lorg/acra/receiver/NotificationBroadcastReceiver;&quot;)"/>  
        <node method="NotificationInteraction getDiscardIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.acra.intent.discard&quot;)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.acra.sender.JobSenderService"> 
    <intentSummary> 
      <method value="&lt;org.acra.sender.JobSenderService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;org.acra.sender.JobSenderService: android.os.IBinder onBind(android.content.Intent)&gt;,android.os.IBinder onBind(android.content.Intent)"/>  
      <source name="org.acra.sender.JobSenderService"/>  
      <nodes> 
        <node method="&lt;org.acra.sender.JobSenderService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
        <node method="JobSenderService onBind" type="ReceiveIntentFromRetValue" unit="parameter0 = virtualinvoke this.&lt;org.acra.sender.JobSenderService: android.content.Intent getIntent()&gt;()"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.sender.JobSenderService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;org.acra.sender.JobSenderService: android.os.IBinder onBind(android.content.Intent)&gt;,android.os.IBinder onBind(android.content.Intent)"/>  
      <source name="org.acra.sender.JobSenderService"/>  
      <nodes> 
        <node method="&lt;org.acra.sender.JobSenderService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
        <node method="JobSenderService onBind" type="ReceiveIntentFromParatMethod" unit="parameter0 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService: android.os.IBinder onBind(android.content.Intent)&gt;,android.os.IBinder onBind(android.content.Intent)"/>  
      <source name="com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
        <node method="ContactsSyncAdapterService onBind" type="ReceiveIntentFromParatMethod" unit="parameter0 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService: android.os.IBinder onBind(android.content.Intent)&gt;,android.os.IBinder onBind(android.content.Intent)"/>  
      <source name="com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
        <node method="ContactsSyncAdapterService onBind" type="ReceiveIntentFromRetValue" unit="parameter0 = virtualinvoke this.&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService: android.content.Intent getIntent()&gt;()"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.CreateCollectionActivity"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.CreateCollectionActivity$Companion: android.content.Intent newIntent(android.content.Context,android.accounts.Account,com.etesync.syncadapter.model.CollectionInfo)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.CreateCollectionActivity$Companion: android.content.Intent newIntent(android.content.Context,android.accounts.Account,com.etesync.syncadapter.model.CollectionInfo)&gt;,android.content.Intent newIntent(android.content.Context,android.accounts.Account,com.etesync.syncadapter.model.CollectionInfo)"/>  
      <source name="com.etesync.syncadapter.ui.CreateCollectionActivity"/>  
      <destinition name="com.etesync.syncadapter.ui.CreateCollectionActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.CreateCollectionActivity$Companion: android.content.Intent newIntent(android.content.Context,android.accounts.Account,com.etesync.syncadapter.model.CollectionInfo)&gt;"/>  
        <node method="CreateCollectionActivity$Companion newIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="CreateCollectionActivity$Companion newIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lcom/etesync/syncadapter/ui/CreateCollectionActivity;&quot;)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="at.bitfire.cert4android.CustomCertService"> 
    <intentSummary> 
      <method value="&lt;at.bitfire.cert4android.CustomCertService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;at.bitfire.cert4android.CustomCertService: android.os.IBinder onBind(android.content.Intent)&gt;,android.os.IBinder onBind(android.content.Intent)"/>  
      <source name="at.bitfire.cert4android.CustomCertService"/>  
      <nodes> 
        <node method="&lt;at.bitfire.cert4android.CustomCertService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
        <node method="CustomCertService onBind" type="ReceiveIntentFromParatMethod" unit="parameter0 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;at.bitfire.cert4android.CustomCertService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;at.bitfire.cert4android.CustomCertService: android.os.IBinder onBind(android.content.Intent)&gt;,android.os.IBinder onBind(android.content.Intent)"/>  
      <source name="at.bitfire.cert4android.CustomCertService"/>  
      <nodes> 
        <node method="&lt;at.bitfire.cert4android.CustomCertService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
        <node method="CustomCertService onBind" type="ReceiveIntentFromRetValue" unit="parameter0 = virtualinvoke this.&lt;at.bitfire.cert4android.CustomCertService: android.content.Intent getIntent()&gt;()"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.ChangeEncryptionPasswordActivity"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.ChangeEncryptionPasswordActivity$Companion: android.content.Intent newIntent(android.content.Context,android.accounts.Account)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.ChangeEncryptionPasswordActivity$Companion: android.content.Intent newIntent(android.content.Context,android.accounts.Account)&gt;,android.content.Intent newIntent(android.content.Context,android.accounts.Account)"/>  
      <source name="com.etesync.syncadapter.ui.ChangeEncryptionPasswordActivity"/>  
      <destinition name="com.etesync.syncadapter.ui.ChangeEncryptionPasswordActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.ChangeEncryptionPasswordActivity$Companion: android.content.Intent newIntent(android.content.Context,android.accounts.Account)&gt;"/>  
        <node method="ChangeEncryptionPasswordActivity$Companion newIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="ChangeEncryptionPasswordActivity$Companion newIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Lcom/etesync/syncadapter/ui/ChangeEncryptionPasswordActivity;&quot;)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.EditCollectionActivity"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.EditCollectionActivity$Companion: android.content.Intent newIntent(android.content.Context,android.accounts.Account,com.etesync.syncadapter.model.CollectionInfo)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.EditCollectionActivity$Companion: android.content.Intent newIntent(android.content.Context,android.accounts.Account,com.etesync.syncadapter.model.CollectionInfo)&gt;,android.content.Intent newIntent(android.content.Context,android.accounts.Account,com.etesync.syncadapter.model.CollectionInfo)"/>  
      <source name="com.etesync.syncadapter.ui.EditCollectionActivity"/>  
      <destinition name="com.etesync.syncadapter.ui.EditCollectionActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.EditCollectionActivity$Companion: android.content.Intent newIntent(android.content.Context,android.accounts.Account,com.etesync.syncadapter.model.CollectionInfo)&gt;"/>  
        <node method="EditCollectionActivity$Companion newIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="EditCollectionActivity$Companion newIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lcom/etesync/syncadapter/ui/EditCollectionActivity;&quot;)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.acra.sender.EmailIntentSender"> 
    <intentSummary> 
      <method value="&lt;org.acra.sender.EmailIntentSender: android.content.Intent buildResolveIntent(java.lang.String,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;org.acra.sender.EmailIntentSender: android.content.Intent buildResolveIntent(java.lang.String,java.lang.String)&gt;,android.content.Intent buildResolveIntent(java.lang.String,java.lang.String)"/>  
      <source name="org.acra.sender.EmailIntentSender"/>  
      <sender action="android.intent.action.SENDTO" flags="FLAG_ACTIVITY_NEW_TASK "/>  
      <nodes> 
        <node method="&lt;org.acra.sender.EmailIntentSender: android.content.Intent buildResolveIntent(java.lang.String,java.lang.String)&gt;"/>  
        <node method="EmailIntentSender buildResolveIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="EmailIntentSender buildResolveIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.SENDTO&quot;)"/>  
        <node method="EmailIntentSender buildResolveIntent" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r6)"/>  
        <node method="EmailIntentSender buildResolveIntent" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(268435456)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.acra.sender.EmailIntentSender"> 
    <intentSummary> 
      <method value="&lt;org.acra.sender.EmailIntentSender: android.content.Intent buildAttachmentIntent(java.lang.String,java.lang.String,java.util.ArrayList)&gt;"/>  
      <methodtrace value="&lt;org.acra.sender.EmailIntentSender: android.content.Intent buildAttachmentIntent(java.lang.String,java.lang.String,java.util.ArrayList)&gt;,android.content.Intent buildAttachmentIntent(java.lang.String,java.lang.String,java.util.ArrayList)"/>  
      <source name="org.acra.sender.EmailIntentSender"/>  
      <sender action="android.intent.action.SEND_MULTIPLE" type="message/rfc822" flags="FLAG_ACTIVITY_NEW_TASK "/>  
      <nodes> 
        <node method="&lt;org.acra.sender.EmailIntentSender: android.content.Intent buildAttachmentIntent(java.lang.String,java.lang.String,java.util.ArrayList)&gt;"/>  
        <node method="EmailIntentSender buildAttachmentIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="EmailIntentSender buildAttachmentIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.SEND_MULTIPLE&quot;)"/>  
        <node method="EmailIntentSender buildAttachmentIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(268435456)"/>  
        <node method="EmailIntentSender buildAttachmentIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;message/rfc822&quot;)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="androidx.fragment.app.FragmentActivity"> 
    <intentSummary> 
      <method value="&lt;androidx.fragment.app.FragmentActivity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;androidx.fragment.app.FragmentActivity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)&gt;,void startActivityForResult(android.content.Intent,int,android.os.Bundle)"/>  
      <source name="androidx.fragment.app.FragmentActivity"/>  
      <nodes> 
        <node method="&lt;androidx.fragment.app.FragmentActivity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)&gt;"/>  
        <node method="FragmentActivity startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="FragmentActivity startActivityForResult" type="PassOutIntent" unit="specialinvoke r0.&lt;androidx.core.app.ComponentActivity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)&gt;($r1, $i0, $r2)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.AccountUpdateService"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.AccountUpdateService: int onStartCommand(android.content.Intent,int,int)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.AccountUpdateService: int onStartCommand(android.content.Intent,int,int)&gt;,int onStartCommand(android.content.Intent,int,int)"/>  
      <source name="com.etesync.syncadapter.AccountUpdateService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.AccountUpdateService: int onStartCommand(android.content.Intent,int,int)&gt;"/>  
        <node method="AccountUpdateService onStartCommand" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;com.etesync.syncadapter.AccountUpdateService: android.content.Intent getIntent()&gt;()"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.AccountUpdateService: int onStartCommand(android.content.Intent,int,int)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.AccountUpdateService: int onStartCommand(android.content.Intent,int,int)&gt;,int onStartCommand(android.content.Intent,int,int)"/>  
      <source name="com.etesync.syncadapter.AccountUpdateService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.AccountUpdateService: int onStartCommand(android.content.Intent,int,int)&gt;"/>  
        <node method="AccountUpdateService onStartCommand" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService: android.os.IBinder onBind(android.content.Intent)&gt;,android.os.IBinder onBind(android.content.Intent)"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
        <node method="CalendarsSyncAdapterService onBind" type="ReceiveIntentFromParatMethod" unit="parameter0 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService: android.os.IBinder onBind(android.content.Intent)&gt;,android.os.IBinder onBind(android.content.Intent)"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
        <node method="CalendarsSyncAdapterService onBind" type="ReceiveIntentFromRetValue" unit="parameter0 = virtualinvoke this.&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService: android.content.Intent getIntent()&gt;()"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.syncadapter.TasksSyncAdapterService"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService: android.os.IBinder onBind(android.content.Intent)&gt;,android.os.IBinder onBind(android.content.Intent)"/>  
      <source name="com.etesync.syncadapter.syncadapter.TasksSyncAdapterService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
        <node method="TasksSyncAdapterService onBind" type="ReceiveIntentFromRetValue" unit="parameter0 = virtualinvoke this.&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService: android.content.Intent getIntent()&gt;()"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService: android.os.IBinder onBind(android.content.Intent)&gt;,android.os.IBinder onBind(android.content.Intent)"/>  
      <source name="com.etesync.syncadapter.syncadapter.TasksSyncAdapterService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
        <node method="TasksSyncAdapterService onBind" type="ReceiveIntentFromParatMethod" unit="parameter0 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.AccountUpdateService"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.AccountUpdateService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.AccountUpdateService: android.os.IBinder onBind(android.content.Intent)&gt;,android.os.IBinder onBind(android.content.Intent)"/>  
      <source name="com.etesync.syncadapter.AccountUpdateService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.AccountUpdateService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
        <node method="AccountUpdateService onBind" type="ReceiveIntentFromRetValue" unit="parameter0 = virtualinvoke this.&lt;com.etesync.syncadapter.AccountUpdateService: android.content.Intent getIntent()&gt;()"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.AccountUpdateService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.AccountUpdateService: android.os.IBinder onBind(android.content.Intent)&gt;,android.os.IBinder onBind(android.content.Intent)"/>  
      <source name="com.etesync.syncadapter.AccountUpdateService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.AccountUpdateService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
        <node method="AccountUpdateService onBind" type="ReceiveIntentFromParatMethod" unit="parameter0 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="androidx.fragment.app.FragmentActivity"> 
    <intentSummary> 
      <method value="&lt;androidx.fragment.app.FragmentActivity: void startActivityForResult(android.content.Intent,int)&gt;"/>  
      <methodtrace value="&lt;androidx.fragment.app.FragmentActivity: void startActivityForResult(android.content.Intent,int)&gt;,void startActivityForResult(android.content.Intent,int)"/>  
      <source name="androidx.fragment.app.FragmentActivity"/>  
      <nodes> 
        <node method="&lt;androidx.fragment.app.FragmentActivity: void startActivityForResult(android.content.Intent,int)&gt;"/>  
        <node method="FragmentActivity startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="FragmentActivity startActivityForResult" type="PassOutIntent" unit="specialinvoke r0.&lt;androidx.core.app.ComponentActivity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.syncadapter.NullAuthenticatorService"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.NullAuthenticatorService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.NullAuthenticatorService: android.os.IBinder onBind(android.content.Intent)&gt;,android.os.IBinder onBind(android.content.Intent)"/>  
      <source name="com.etesync.syncadapter.syncadapter.NullAuthenticatorService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.NullAuthenticatorService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
        <node method="NullAuthenticatorService onBind" type="ReceiveIntentFromRetValue" unit="parameter0 = virtualinvoke this.&lt;com.etesync.syncadapter.syncadapter.NullAuthenticatorService: android.content.Intent getIntent()&gt;()"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.NullAuthenticatorService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.NullAuthenticatorService: android.os.IBinder onBind(android.content.Intent)&gt;,android.os.IBinder onBind(android.content.Intent)"/>  
      <source name="com.etesync.syncadapter.syncadapter.NullAuthenticatorService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.NullAuthenticatorService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
        <node method="NullAuthenticatorService onBind" type="ReceiveIntentFromParatMethod" unit="parameter0 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.acra.interaction.NotificationInteraction"> 
    <intentSummary> 
      <method value="&lt;org.acra.interaction.NotificationInteraction: android.widget.RemoteViews getSmallView(android.content.Context,org.acra.config.NotificationConfiguration,android.app.PendingIntent,android.app.PendingIntent)&gt;"/>  
      <methodtrace value="&lt;org.acra.interaction.NotificationInteraction: android.widget.RemoteViews getSmallView(android.content.Context,org.acra.config.NotificationConfiguration,android.app.PendingIntent,android.app.PendingIntent)&gt;,android.widget.RemoteViews getSmallView(android.content.Context,org.acra.config.NotificationConfiguration,android.app.PendingIntent,android.app.PendingIntent)"/>  
      <source name="org.acra.interaction.NotificationInteraction"/>  
      <nodes> 
        <node method="&lt;org.acra.interaction.NotificationInteraction: android.widget.RemoteViews getSmallView(android.content.Context,org.acra.config.NotificationConfiguration,android.app.PendingIntent,android.app.PendingIntent)&gt;"/>  
        <node method="NotificationInteraction getSmallView" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter3: android.app.PendingIntent"/>  
        <node method="NotificationInteraction getSmallView" type="PassOutIntent" unit="virtualinvoke $r3.&lt;android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)&gt;($i0, $r2)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.interaction.NotificationInteraction: android.widget.RemoteViews getSmallView(android.content.Context,org.acra.config.NotificationConfiguration,android.app.PendingIntent,android.app.PendingIntent)&gt;"/>  
      <methodtrace value="&lt;org.acra.interaction.NotificationInteraction: android.widget.RemoteViews getSmallView(android.content.Context,org.acra.config.NotificationConfiguration,android.app.PendingIntent,android.app.PendingIntent)&gt;,android.widget.RemoteViews getSmallView(android.content.Context,org.acra.config.NotificationConfiguration,android.app.PendingIntent,android.app.PendingIntent)"/>  
      <source name="org.acra.interaction.NotificationInteraction"/>  
      <nodes> 
        <node method="&lt;org.acra.interaction.NotificationInteraction: android.widget.RemoteViews getSmallView(android.content.Context,org.acra.config.NotificationConfiguration,android.app.PendingIntent,android.app.PendingIntent)&gt;"/>  
        <node method="NotificationInteraction getSmallView" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>  
        <node method="NotificationInteraction getSmallView" type="PassOutIntent" unit="virtualinvoke $r3.&lt;android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)&gt;($i0, $r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="androidx.core.app.NotificationManagerCompat"> 
    <intentSummary> 
      <method value="&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: void processListenerQueue(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)&gt;"/>  
      <methodtrace value="&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: void processListenerQueue(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)&gt;,&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: boolean ensureServiceBound(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)&gt;,boolean ensureServiceBound(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)"/>  
      <source name="androidx.core.app.NotificationManagerCompat"/>  
      <destinition name="interICC_android.support.BIND_NOTIFICATION_SIDE_CHANNEL, "/>  
      <sender action="android.support.BIND_NOTIFICATION_SIDE_CHANNEL"/>  
      <nodes> 
        <node method="&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: void processListenerQueue(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: boolean ensureServiceBound(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)&gt;"/>  
        <node method="NotificationManagerCompat$SideChannelManager ensureServiceBound" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="NotificationManagerCompat$SideChannelManager ensureServiceBound" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.support.BIND_NOTIFICATION_SIDE_CHANNEL&quot;)"/>  
        <node method="NotificationManagerCompat$SideChannelManager ensureServiceBound" type="SetAttribute" unit="$r2 = virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r3)"/>  
        <node method="NotificationManagerCompat$SideChannelManager ensureServiceBound" type="PassOutIntent" unit="$z0 = virtualinvoke $r4.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r2, r0, 33)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="androidx.core.app.NotificationManagerCompat"> 
    <intentSummary> 
      <method value="&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: void handleRetryListenerQueue(android.content.ComponentName)&gt;"/>  
      <methodtrace value="&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: void handleRetryListenerQueue(android.content.ComponentName)&gt;,&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: void processListenerQueue(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)&gt;,&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: boolean ensureServiceBound(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)&gt;,boolean ensureServiceBound(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)"/>  
      <source name="androidx.core.app.NotificationManagerCompat"/>  
      <destinition name="interICC_android.support.BIND_NOTIFICATION_SIDE_CHANNEL, "/>  
      <sender action="android.support.BIND_NOTIFICATION_SIDE_CHANNEL"/>  
      <nodes> 
        <node method="&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: void handleRetryListenerQueue(android.content.ComponentName)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: void processListenerQueue(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: boolean ensureServiceBound(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)&gt;"/>  
        <node method="NotificationManagerCompat$SideChannelManager ensureServiceBound" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="NotificationManagerCompat$SideChannelManager ensureServiceBound" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.support.BIND_NOTIFICATION_SIDE_CHANNEL&quot;)"/>  
        <node method="NotificationManagerCompat$SideChannelManager ensureServiceBound" type="SetAttribute" unit="$r2 = virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r3)"/>  
        <node method="NotificationManagerCompat$SideChannelManager ensureServiceBound" type="PassOutIntent" unit="$z0 = virtualinvoke $r4.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r2, r0, 33)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="androidx.core.app.ActivityCompat"> 
    <intentSummary> 
      <method value="&lt;androidx.core.app.ActivityCompat: void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;androidx.core.app.ActivityCompat: void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)&gt;,void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)"/>  
      <source name="androidx.core.app.ActivityCompat"/>  
      <nodes> 
        <node method="&lt;androidx.core.app.ActivityCompat: void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)&gt;"/>  
        <node method="ActivityCompat startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>  
        <node method="ActivityCompat startActivityForResult" type="PassOutIntent" unit="virtualinvoke $r0.&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)&gt;($r1, $i0, $r2)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;androidx.core.app.ActivityCompat: void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;androidx.core.app.ActivityCompat: void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)&gt;,void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)"/>  
      <source name="androidx.core.app.ActivityCompat"/>  
      <nodes> 
        <node method="&lt;androidx.core.app.ActivityCompat: void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)&gt;"/>  
        <node method="ActivityCompat startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>  
        <node method="ActivityCompat startActivityForResult" type="PassOutIntent" unit="virtualinvoke $r0.&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.importlocal.ImportActivity"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.importlocal.ImportActivity$Companion: android.content.Intent newIntent(android.content.Context,android.accounts.Account,com.etesync.syncadapter.model.CollectionInfo)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.importlocal.ImportActivity$Companion: android.content.Intent newIntent(android.content.Context,android.accounts.Account,com.etesync.syncadapter.model.CollectionInfo)&gt;,android.content.Intent newIntent(android.content.Context,android.accounts.Account,com.etesync.syncadapter.model.CollectionInfo)"/>  
      <source name="com.etesync.syncadapter.ui.importlocal.ImportActivity"/>  
      <destinition name="com.etesync.syncadapter.ui.importlocal.ImportActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportActivity$Companion: android.content.Intent newIntent(android.content.Context,android.accounts.Account,com.etesync.syncadapter.model.CollectionInfo)&gt;"/>  
        <node method="ImportActivity$Companion newIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="ImportActivity$Companion newIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lcom/etesync/syncadapter/ui/importlocal/ImportActivity;&quot;)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="androidx.core.app.NotificationManagerCompat"> 
    <intentSummary> 
      <method value="&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: void handleServiceConnected(android.content.ComponentName,android.os.IBinder)&gt;"/>  
      <methodtrace value="&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: void handleServiceConnected(android.content.ComponentName,android.os.IBinder)&gt;,&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: void processListenerQueue(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)&gt;,&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: boolean ensureServiceBound(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)&gt;,boolean ensureServiceBound(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)"/>  
      <source name="androidx.core.app.NotificationManagerCompat"/>  
      <destinition name="interICC_android.support.BIND_NOTIFICATION_SIDE_CHANNEL, "/>  
      <sender action="android.support.BIND_NOTIFICATION_SIDE_CHANNEL"/>  
      <nodes> 
        <node method="&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: void handleServiceConnected(android.content.ComponentName,android.os.IBinder)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: void processListenerQueue(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: boolean ensureServiceBound(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)&gt;"/>  
        <node method="NotificationManagerCompat$SideChannelManager ensureServiceBound" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="NotificationManagerCompat$SideChannelManager ensureServiceBound" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.support.BIND_NOTIFICATION_SIDE_CHANNEL&quot;)"/>  
        <node method="NotificationManagerCompat$SideChannelManager ensureServiceBound" type="SetAttribute" unit="$r2 = virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r3)"/>  
        <node method="NotificationManagerCompat$SideChannelManager ensureServiceBound" type="PassOutIntent" unit="$z0 = virtualinvoke $r4.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r2, r0, 33)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.CollectionMembersActivity"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.CollectionMembersActivity$Companion: android.content.Intent newIntent(android.content.Context,android.accounts.Account,com.etesync.syncadapter.model.CollectionInfo)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.CollectionMembersActivity$Companion: android.content.Intent newIntent(android.content.Context,android.accounts.Account,com.etesync.syncadapter.model.CollectionInfo)&gt;,android.content.Intent newIntent(android.content.Context,android.accounts.Account,com.etesync.syncadapter.model.CollectionInfo)"/>  
      <source name="com.etesync.syncadapter.ui.CollectionMembersActivity"/>  
      <destinition name="com.etesync.syncadapter.ui.CollectionMembersActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.CollectionMembersActivity$Companion: android.content.Intent newIntent(android.content.Context,android.accounts.Account,com.etesync.syncadapter.model.CollectionInfo)&gt;"/>  
        <node method="CollectionMembersActivity$Companion newIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="CollectionMembersActivity$Companion newIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lcom/etesync/syncadapter/ui/CollectionMembersActivity;&quot;)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.WebViewActivity"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.WebViewActivity: boolean shouldOverrideUrl(android.net.Uri)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.WebViewActivity: boolean shouldOverrideUrl(android.net.Uri)&gt;,boolean shouldOverrideUrl(android.net.Uri)"/>  
      <source name="com.etesync.syncadapter.ui.WebViewActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.WebViewActivity: boolean shouldOverrideUrl(android.net.Uri)&gt;"/>  
        <node method="WebViewActivity shouldOverrideUrl" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="WebViewActivity shouldOverrideUrl" type="PassOutIntent" unit="virtualinvoke r0.&lt;com.etesync.syncadapter.ui.WebViewActivity: void startActivity(android.content.Intent)&gt;($r5)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.WebViewActivity"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.WebViewActivity: boolean access$shouldOverrideUrl(com.etesync.syncadapter.ui.WebViewActivity,android.net.Uri)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.WebViewActivity: boolean access$shouldOverrideUrl(com.etesync.syncadapter.ui.WebViewActivity,android.net.Uri)&gt;,&lt;com.etesync.syncadapter.ui.WebViewActivity: boolean shouldOverrideUrl(android.net.Uri)&gt;,boolean shouldOverrideUrl(android.net.Uri)"/>  
      <source name="com.etesync.syncadapter.ui.WebViewActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.WebViewActivity: boolean access$shouldOverrideUrl(com.etesync.syncadapter.ui.WebViewActivity,android.net.Uri)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.WebViewActivity: boolean shouldOverrideUrl(android.net.Uri)&gt;"/>  
        <node method="WebViewActivity shouldOverrideUrl" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="WebViewActivity shouldOverrideUrl" type="PassOutIntent" unit="virtualinvoke r0.&lt;com.etesync.syncadapter.ui.WebViewActivity: void startActivity(android.content.Intent)&gt;($r5)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.WebViewActivity"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.WebViewActivity$onCreate$1: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.WebViewActivity$onCreate$1: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)&gt;,&lt;com.etesync.syncadapter.ui.WebViewActivity: boolean access$shouldOverrideUrl(com.etesync.syncadapter.ui.WebViewActivity,android.net.Uri)&gt;,&lt;com.etesync.syncadapter.ui.WebViewActivity: boolean shouldOverrideUrl(android.net.Uri)&gt;,boolean shouldOverrideUrl(android.net.Uri)"/>  
      <source name="com.etesync.syncadapter.ui.WebViewActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.WebViewActivity$onCreate$1: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.WebViewActivity: boolean access$shouldOverrideUrl(com.etesync.syncadapter.ui.WebViewActivity,android.net.Uri)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.WebViewActivity: boolean shouldOverrideUrl(android.net.Uri)&gt;"/>  
        <node method="WebViewActivity shouldOverrideUrl" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="WebViewActivity shouldOverrideUrl" type="PassOutIntent" unit="virtualinvoke r0.&lt;com.etesync.syncadapter.ui.WebViewActivity: void startActivity(android.content.Intent)&gt;($r5)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="androidx.core.app.NotificationManagerCompat"> 
    <intentSummary> 
      <method value="&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: void updateListenerMap()&gt;"/>  
      <methodtrace value="&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: void updateListenerMap()&gt;,void updateListenerMap()"/>  
      <source name="androidx.core.app.NotificationManagerCompat"/>  
      <destinition name="interICC_android.support.BIND_NOTIFICATION_SIDE_CHANNEL, "/>  
      <sender action="android.support.BIND_NOTIFICATION_SIDE_CHANNEL"/>  
      <nodes> 
        <node method="&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: void updateListenerMap()&gt;"/>  
        <node method="NotificationManagerCompat$SideChannelManager updateListenerMap" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="NotificationManagerCompat$SideChannelManager updateListenerMap" type="SetAttribute" unit="$r5 = virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.support.BIND_NOTIFICATION_SIDE_CHANNEL&quot;)"/>  
        <node method="NotificationManagerCompat$SideChannelManager updateListenerMap" type="PassOutIntent" unit="$r6 = virtualinvoke $r4.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r5, 0)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="androidx.core.app.NotificationManagerCompat"> 
    <intentSummary> 
      <method value="&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: void handleQueueTask(androidx.core.app.NotificationManagerCompat$Task)&gt;"/>  
      <methodtrace value="&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: void handleQueueTask(androidx.core.app.NotificationManagerCompat$Task)&gt;,&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: void processListenerQueue(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)&gt;,&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: boolean ensureServiceBound(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)&gt;,boolean ensureServiceBound(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)"/>  
      <source name="androidx.core.app.NotificationManagerCompat"/>  
      <destinition name="interICC_android.support.BIND_NOTIFICATION_SIDE_CHANNEL, "/>  
      <sender action="android.support.BIND_NOTIFICATION_SIDE_CHANNEL"/>  
      <nodes> 
        <node method="&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: void handleQueueTask(androidx.core.app.NotificationManagerCompat$Task)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: void processListenerQueue(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: boolean ensureServiceBound(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)&gt;"/>  
        <node method="NotificationManagerCompat$SideChannelManager ensureServiceBound" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="NotificationManagerCompat$SideChannelManager ensureServiceBound" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.support.BIND_NOTIFICATION_SIDE_CHANNEL&quot;)"/>  
        <node method="NotificationManagerCompat$SideChannelManager ensureServiceBound" type="SetAttribute" unit="$r2 = virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r3)"/>  
        <node method="NotificationManagerCompat$SideChannelManager ensureServiceBound" type="PassOutIntent" unit="$z0 = virtualinvoke $r4.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r2, r0, 33)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: void handleQueueTask(androidx.core.app.NotificationManagerCompat$Task)&gt;"/>  
      <methodtrace value="&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: void handleQueueTask(androidx.core.app.NotificationManagerCompat$Task)&gt;,&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: void updateListenerMap()&gt;,void updateListenerMap()"/>  
      <source name="androidx.core.app.NotificationManagerCompat"/>  
      <destinition name="interICC_android.support.BIND_NOTIFICATION_SIDE_CHANNEL, "/>  
      <sender action="android.support.BIND_NOTIFICATION_SIDE_CHANNEL"/>  
      <nodes> 
        <node method="&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: void handleQueueTask(androidx.core.app.NotificationManagerCompat$Task)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: void updateListenerMap()&gt;"/>  
        <node method="NotificationManagerCompat$SideChannelManager updateListenerMap" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="NotificationManagerCompat$SideChannelManager updateListenerMap" type="SetAttribute" unit="$r5 = virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.support.BIND_NOTIFICATION_SIDE_CHANNEL&quot;)"/>  
        <node method="NotificationManagerCompat$SideChannelManager updateListenerMap" type="PassOutIntent" unit="$r6 = virtualinvoke $r4.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r5, 0)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="androidx.core.app.NotificationManagerCompat"> 
    <intentSummary> 
      <method value="&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: boolean handleMessage(android.os.Message)&gt;"/>  
      <methodtrace value="&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: boolean handleMessage(android.os.Message)&gt;,&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: void handleRetryListenerQueue(android.content.ComponentName)&gt;,&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: void processListenerQueue(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)&gt;,&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: boolean ensureServiceBound(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)&gt;,boolean ensureServiceBound(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)"/>  
      <source name="androidx.core.app.NotificationManagerCompat"/>  
      <destinition name="interICC_android.support.BIND_NOTIFICATION_SIDE_CHANNEL, "/>  
      <sender action="android.support.BIND_NOTIFICATION_SIDE_CHANNEL"/>  
      <nodes> 
        <node method="&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: boolean handleMessage(android.os.Message)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: void handleRetryListenerQueue(android.content.ComponentName)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: void processListenerQueue(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: boolean ensureServiceBound(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)&gt;"/>  
        <node method="NotificationManagerCompat$SideChannelManager ensureServiceBound" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="NotificationManagerCompat$SideChannelManager ensureServiceBound" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.support.BIND_NOTIFICATION_SIDE_CHANNEL&quot;)"/>  
        <node method="NotificationManagerCompat$SideChannelManager ensureServiceBound" type="SetAttribute" unit="$r2 = virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r3)"/>  
        <node method="NotificationManagerCompat$SideChannelManager ensureServiceBound" type="PassOutIntent" unit="$z0 = virtualinvoke $r4.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r2, r0, 33)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: boolean handleMessage(android.os.Message)&gt;"/>  
      <methodtrace value="&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: boolean handleMessage(android.os.Message)&gt;,&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: void handleQueueTask(androidx.core.app.NotificationManagerCompat$Task)&gt;,&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: void updateListenerMap()&gt;,void updateListenerMap()"/>  
      <source name="androidx.core.app.NotificationManagerCompat"/>  
      <destinition name="interICC_android.support.BIND_NOTIFICATION_SIDE_CHANNEL, "/>  
      <sender action="android.support.BIND_NOTIFICATION_SIDE_CHANNEL"/>  
      <nodes> 
        <node method="&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: boolean handleMessage(android.os.Message)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: void handleQueueTask(androidx.core.app.NotificationManagerCompat$Task)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationManagerCompat$SideChannelManager: void updateListenerMap()&gt;"/>  
        <node method="NotificationManagerCompat$SideChannelManager updateListenerMap" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="NotificationManagerCompat$SideChannelManager updateListenerMap" type="SetAttribute" unit="$r5 = virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.support.BIND_NOTIFICATION_SIDE_CHANNEL&quot;)"/>  
        <node method="NotificationManagerCompat$SideChannelManager updateListenerMap" type="PassOutIntent" unit="$r6 = virtualinvoke $r4.&lt;android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)&gt;($r5, 0)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="androidx.fragment.app.Fragment"> 
    <intentSummary> 
      <method value="&lt;androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int,android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int,android.os.Bundle)&gt;,void startActivityForResult(android.content.Intent,int,android.os.Bundle)"/>  
      <source name="androidx.fragment.app.Fragment"/>  
      <nodes> 
        <node method="&lt;androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int,android.os.Bundle)&gt;"/>  
        <node method="Fragment startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="androidx.fragment.app.Fragment"> 
    <intentSummary> 
      <method value="&lt;androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int)&gt;"/>  
      <methodtrace value="&lt;androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int)&gt;,&lt;androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int,android.os.Bundle)&gt;,void startActivityForResult(android.content.Intent,int,android.os.Bundle)"/>  
      <source name="androidx.fragment.app.Fragment"/>  
      <nodes> 
        <node method="&lt;androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int,android.os.Bundle)&gt;"/>  
        <node method="Fragment startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int)&gt;"/>  
      <methodtrace value="&lt;androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int)&gt;,void startActivityForResult(android.content.Intent,int), &lt;androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int,android.os.Bundle)&gt;"/>  
      <source name="androidx.fragment.app.Fragment"/>  
      <nodes> 
        <node method="&lt;androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int)&gt;"/>  
        <node method="Fragment startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="Fragment startActivityForResult" type="PassOutIntent" unit="virtualinvoke r0.&lt;androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int,android.os.Bundle)&gt;($r1, $i0, null)"/>  
        <node method="Fragment startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.acra.util.ProcessFinisher"> 
    <intentSummary> 
      <method value="&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;"/>  
      <methodtrace value="&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;,void stopServices()"/>  
      <source name="org.acra.util.ProcessFinisher"/>  
      <nodes> 
        <node method="&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;"/>  
        <node method="ProcessFinisher stopServices" type="CreateMethod" unit="$r14 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;"/>  
      <methodtrace value="&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;,void stopServices()"/>  
      <source name="org.acra.util.ProcessFinisher"/>  
      <nodes> 
        <node method="&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;"/>  
        <node method="ProcessFinisher stopServices" type="CreateMethod" unit="$r14 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;"/>  
      <methodtrace value="&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;,void stopServices()"/>  
      <source name="org.acra.util.ProcessFinisher"/>  
      <nodes> 
        <node method="&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;"/>  
        <node method="ProcessFinisher stopServices" type="CreateMethod" unit="$r14 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.acra.util.ProcessFinisher"> 
    <intentSummary> 
      <method value="&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;"/>  
      <methodtrace value="&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;,&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;,void stopServices()"/>  
      <source name="org.acra.util.ProcessFinisher"/>  
      <nodes> 
        <node method="&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;"/>  
        <node method="ProcessFinisher stopServices" type="CreateMethod" unit="$r14 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;"/>  
      <methodtrace value="&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;,&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;,void stopServices()"/>  
      <source name="org.acra.util.ProcessFinisher"/>  
      <nodes> 
        <node method="&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;"/>  
        <node method="ProcessFinisher stopServices" type="CreateMethod" unit="$r14 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;"/>  
      <methodtrace value="&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;,&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;,void stopServices()"/>  
      <source name="org.acra.util.ProcessFinisher"/>  
      <nodes> 
        <node method="&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;"/>  
        <node method="ProcessFinisher stopServices" type="CreateMethod" unit="$r14 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.acra.builder.ReportExecutor"> 
    <intentSummary> 
      <method value="&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;"/>  
      <methodtrace value="&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;,&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;,&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;,void stopServices()"/>  
      <source name="org.acra.builder.ReportExecutor"/>  
      <nodes> 
        <node method="&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;"/>  
        <node method="ProcessFinisher stopServices" type="CreateMethod" unit="$r14 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;"/>  
      <methodtrace value="&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;,&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;,&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;,void stopServices()"/>  
      <source name="org.acra.builder.ReportExecutor"/>  
      <nodes> 
        <node method="&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;"/>  
        <node method="ProcessFinisher stopServices" type="CreateMethod" unit="$r14 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;"/>  
      <methodtrace value="&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;,&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;,&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;,void stopServices()"/>  
      <source name="org.acra.builder.ReportExecutor"/>  
      <nodes> 
        <node method="&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;"/>  
        <node method="ProcessFinisher stopServices" type="CreateMethod" unit="$r14 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.acra.builder.ReportExecutor"> 
    <intentSummary> 
      <method value="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
      <methodtrace value="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;,&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;,&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;,&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;,void stopServices()"/>  
      <source name="org.acra.builder.ReportExecutor"/>  
      <nodes> 
        <node method="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;"/>  
        <node method="ProcessFinisher stopServices" type="CreateMethod" unit="$r14 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
      <methodtrace value="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;,&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;,&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;,&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;,void stopServices()"/>  
      <source name="org.acra.builder.ReportExecutor"/>  
      <nodes> 
        <node method="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;"/>  
        <node method="ProcessFinisher stopServices" type="CreateMethod" unit="$r14 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
      <methodtrace value="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;,&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;,&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;,&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;,void stopServices()"/>  
      <source name="org.acra.builder.ReportExecutor"/>  
      <nodes> 
        <node method="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;"/>  
        <node method="ProcessFinisher stopServices" type="CreateMethod" unit="$r14 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.acra.builder.ReportBuilder"> 
    <intentSummary> 
      <method value="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;"/>  
      <methodtrace value="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;,&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;,&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;,&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;,&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;,void stopServices()"/>  
      <source name="org.acra.builder.ReportBuilder"/>  
      <nodes> 
        <node method="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;"/>  
        <node method="ProcessFinisher stopServices" type="CreateMethod" unit="$r14 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;"/>  
      <methodtrace value="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;,&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;,&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;,&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;,&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;,void stopServices()"/>  
      <source name="org.acra.builder.ReportBuilder"/>  
      <nodes> 
        <node method="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;"/>  
        <node method="ProcessFinisher stopServices" type="CreateMethod" unit="$r14 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;"/>  
      <methodtrace value="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;,&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;,&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;,&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;,&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;,void stopServices()"/>  
      <source name="org.acra.builder.ReportBuilder"/>  
      <nodes> 
        <node method="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;"/>  
        <node method="ProcessFinisher stopServices" type="CreateMethod" unit="$r14 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.acra.reporter.ErrorReporterImpl"> 
    <intentSummary> 
      <method value="&lt;org.acra.reporter.ErrorReporterImpl: void uncaughtException(java.lang.Thread,java.lang.Throwable)&gt;"/>  
      <methodtrace value="&lt;org.acra.reporter.ErrorReporterImpl: void uncaughtException(java.lang.Thread,java.lang.Throwable)&gt;,&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;,&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;,&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;,&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;,&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;,void stopServices()"/>  
      <source name="org.acra.reporter.ErrorReporterImpl"/>  
      <nodes> 
        <node method="&lt;org.acra.reporter.ErrorReporterImpl: void uncaughtException(java.lang.Thread,java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;"/>  
        <node method="ProcessFinisher stopServices" type="CreateMethod" unit="$r14 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.reporter.ErrorReporterImpl: void uncaughtException(java.lang.Thread,java.lang.Throwable)&gt;"/>  
      <methodtrace value="&lt;org.acra.reporter.ErrorReporterImpl: void uncaughtException(java.lang.Thread,java.lang.Throwable)&gt;,&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;,&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;,&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;,&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;,&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;,void stopServices()"/>  
      <source name="org.acra.reporter.ErrorReporterImpl"/>  
      <nodes> 
        <node method="&lt;org.acra.reporter.ErrorReporterImpl: void uncaughtException(java.lang.Thread,java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;"/>  
        <node method="ProcessFinisher stopServices" type="CreateMethod" unit="$r14 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.reporter.ErrorReporterImpl: void uncaughtException(java.lang.Thread,java.lang.Throwable)&gt;"/>  
      <methodtrace value="&lt;org.acra.reporter.ErrorReporterImpl: void uncaughtException(java.lang.Thread,java.lang.Throwable)&gt;,&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;,&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;,&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;,&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;,&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;,void stopServices()"/>  
      <source name="org.acra.reporter.ErrorReporterImpl"/>  
      <nodes> 
        <node method="&lt;org.acra.reporter.ErrorReporterImpl: void uncaughtException(java.lang.Thread,java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;"/>  
        <node method="ProcessFinisher stopServices" type="CreateMethod" unit="$r14 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.acra.ACRA"> 
    <intentSummary> 
      <method value="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfiguration,boolean)&gt;"/>  
      <methodtrace value="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfiguration,boolean)&gt;,&lt;org.acra.reporter.ErrorReporterImpl: void uncaughtException(java.lang.Thread,java.lang.Throwable)&gt;,&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;,&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;,&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;,&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;,&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;,void stopServices()"/>  
      <source name="org.acra.ACRA"/>  
      <nodes> 
        <node method="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfiguration,boolean)&gt;"/>  
        <node method="&lt;org.acra.reporter.ErrorReporterImpl: void uncaughtException(java.lang.Thread,java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;"/>  
        <node method="ProcessFinisher stopServices" type="CreateMethod" unit="$r14 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfiguration,boolean)&gt;"/>  
      <methodtrace value="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfiguration,boolean)&gt;,&lt;org.acra.reporter.ErrorReporterImpl: void uncaughtException(java.lang.Thread,java.lang.Throwable)&gt;,&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;,&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;,&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;,&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;,&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;,void stopServices()"/>  
      <source name="org.acra.ACRA"/>  
      <nodes> 
        <node method="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfiguration,boolean)&gt;"/>  
        <node method="&lt;org.acra.reporter.ErrorReporterImpl: void uncaughtException(java.lang.Thread,java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;"/>  
        <node method="ProcessFinisher stopServices" type="CreateMethod" unit="$r14 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfiguration,boolean)&gt;"/>  
      <methodtrace value="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfiguration,boolean)&gt;,&lt;org.acra.reporter.ErrorReporterImpl: void uncaughtException(java.lang.Thread,java.lang.Throwable)&gt;,&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;,&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;,&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;,&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;,&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;,void stopServices()"/>  
      <source name="org.acra.ACRA"/>  
      <nodes> 
        <node method="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfiguration,boolean)&gt;"/>  
        <node method="&lt;org.acra.reporter.ErrorReporterImpl: void uncaughtException(java.lang.Thread,java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;"/>  
        <node method="ProcessFinisher stopServices" type="CreateMethod" unit="$r14 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.acra.ACRA"> 
    <intentSummary> 
      <method value="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfigurationBuilder,boolean)&gt;"/>  
      <methodtrace value="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfigurationBuilder,boolean)&gt;,&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfiguration,boolean)&gt;,&lt;org.acra.reporter.ErrorReporterImpl: void uncaughtException(java.lang.Thread,java.lang.Throwable)&gt;,&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;,&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;,&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;,&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;,&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;,void stopServices()"/>  
      <source name="org.acra.ACRA"/>  
      <nodes> 
        <node method="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfigurationBuilder,boolean)&gt;"/>  
        <node method="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfiguration,boolean)&gt;"/>  
        <node method="&lt;org.acra.reporter.ErrorReporterImpl: void uncaughtException(java.lang.Thread,java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;"/>  
        <node method="ProcessFinisher stopServices" type="CreateMethod" unit="$r14 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfigurationBuilder,boolean)&gt;"/>  
      <methodtrace value="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfigurationBuilder,boolean)&gt;,&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfiguration,boolean)&gt;,&lt;org.acra.reporter.ErrorReporterImpl: void uncaughtException(java.lang.Thread,java.lang.Throwable)&gt;,&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;,&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;,&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;,&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;,&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;,void stopServices()"/>  
      <source name="org.acra.ACRA"/>  
      <nodes> 
        <node method="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfigurationBuilder,boolean)&gt;"/>  
        <node method="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfiguration,boolean)&gt;"/>  
        <node method="&lt;org.acra.reporter.ErrorReporterImpl: void uncaughtException(java.lang.Thread,java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;"/>  
        <node method="ProcessFinisher stopServices" type="CreateMethod" unit="$r14 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfigurationBuilder,boolean)&gt;"/>  
      <methodtrace value="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfigurationBuilder,boolean)&gt;,&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfiguration,boolean)&gt;,&lt;org.acra.reporter.ErrorReporterImpl: void uncaughtException(java.lang.Thread,java.lang.Throwable)&gt;,&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;,&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;,&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;,&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;,&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;,void stopServices()"/>  
      <source name="org.acra.ACRA"/>  
      <nodes> 
        <node method="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfigurationBuilder,boolean)&gt;"/>  
        <node method="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfiguration,boolean)&gt;"/>  
        <node method="&lt;org.acra.reporter.ErrorReporterImpl: void uncaughtException(java.lang.Thread,java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;"/>  
        <node method="ProcessFinisher stopServices" type="CreateMethod" unit="$r14 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.acra.ACRA"> 
    <intentSummary> 
      <method value="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfigurationBuilder)&gt;"/>  
      <methodtrace value="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfigurationBuilder)&gt;,&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfigurationBuilder,boolean)&gt;,&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfiguration,boolean)&gt;,&lt;org.acra.reporter.ErrorReporterImpl: void uncaughtException(java.lang.Thread,java.lang.Throwable)&gt;,&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;,&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;,&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;,&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;,&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;,void stopServices()"/>  
      <source name="org.acra.ACRA"/>  
      <nodes> 
        <node method="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfigurationBuilder)&gt;"/>  
        <node method="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfigurationBuilder,boolean)&gt;"/>  
        <node method="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfiguration,boolean)&gt;"/>  
        <node method="&lt;org.acra.reporter.ErrorReporterImpl: void uncaughtException(java.lang.Thread,java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;"/>  
        <node method="ProcessFinisher stopServices" type="CreateMethod" unit="$r14 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfigurationBuilder)&gt;"/>  
      <methodtrace value="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfigurationBuilder)&gt;,&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfigurationBuilder,boolean)&gt;,&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfiguration,boolean)&gt;,&lt;org.acra.reporter.ErrorReporterImpl: void uncaughtException(java.lang.Thread,java.lang.Throwable)&gt;,&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;,&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;,&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;,&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;,&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;,void stopServices()"/>  
      <source name="org.acra.ACRA"/>  
      <nodes> 
        <node method="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfigurationBuilder)&gt;"/>  
        <node method="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfigurationBuilder,boolean)&gt;"/>  
        <node method="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfiguration,boolean)&gt;"/>  
        <node method="&lt;org.acra.reporter.ErrorReporterImpl: void uncaughtException(java.lang.Thread,java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;"/>  
        <node method="ProcessFinisher stopServices" type="CreateMethod" unit="$r14 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfigurationBuilder)&gt;"/>  
      <methodtrace value="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfigurationBuilder)&gt;,&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfigurationBuilder,boolean)&gt;,&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfiguration,boolean)&gt;,&lt;org.acra.reporter.ErrorReporterImpl: void uncaughtException(java.lang.Thread,java.lang.Throwable)&gt;,&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;,&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;,&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;,&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;,&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;,void stopServices()"/>  
      <source name="org.acra.ACRA"/>  
      <nodes> 
        <node method="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfigurationBuilder)&gt;"/>  
        <node method="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfigurationBuilder,boolean)&gt;"/>  
        <node method="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfiguration,boolean)&gt;"/>  
        <node method="&lt;org.acra.reporter.ErrorReporterImpl: void uncaughtException(java.lang.Thread,java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;"/>  
        <node method="ProcessFinisher stopServices" type="CreateMethod" unit="$r14 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.App"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.App: void attachBaseContext(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.App: void attachBaseContext(android.content.Context)&gt;,&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfigurationBuilder)&gt;,&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfigurationBuilder,boolean)&gt;,&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfiguration,boolean)&gt;,&lt;org.acra.reporter.ErrorReporterImpl: void uncaughtException(java.lang.Thread,java.lang.Throwable)&gt;,&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;,&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;,&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;,&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;,&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;,void stopServices()"/>  
      <source name="com.etesync.syncadapter.App"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.App: void attachBaseContext(android.content.Context)&gt;"/>  
        <node method="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfigurationBuilder)&gt;"/>  
        <node method="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfigurationBuilder,boolean)&gt;"/>  
        <node method="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfiguration,boolean)&gt;"/>  
        <node method="&lt;org.acra.reporter.ErrorReporterImpl: void uncaughtException(java.lang.Thread,java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;"/>  
        <node method="ProcessFinisher stopServices" type="CreateMethod" unit="$r14 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.App: void attachBaseContext(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.App: void attachBaseContext(android.content.Context)&gt;,&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfigurationBuilder)&gt;,&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfigurationBuilder,boolean)&gt;,&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfiguration,boolean)&gt;,&lt;org.acra.reporter.ErrorReporterImpl: void uncaughtException(java.lang.Thread,java.lang.Throwable)&gt;,&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;,&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;,&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;,&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;,&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;,void stopServices()"/>  
      <source name="com.etesync.syncadapter.App"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.App: void attachBaseContext(android.content.Context)&gt;"/>  
        <node method="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfigurationBuilder)&gt;"/>  
        <node method="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfigurationBuilder,boolean)&gt;"/>  
        <node method="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfiguration,boolean)&gt;"/>  
        <node method="&lt;org.acra.reporter.ErrorReporterImpl: void uncaughtException(java.lang.Thread,java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;"/>  
        <node method="ProcessFinisher stopServices" type="CreateMethod" unit="$r14 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.App: void attachBaseContext(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.App: void attachBaseContext(android.content.Context)&gt;,&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfigurationBuilder)&gt;,&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfigurationBuilder,boolean)&gt;,&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfiguration,boolean)&gt;,&lt;org.acra.reporter.ErrorReporterImpl: void uncaughtException(java.lang.Thread,java.lang.Throwable)&gt;,&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;,&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;,&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;,&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;,&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;,void stopServices()"/>  
      <source name="com.etesync.syncadapter.App"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.App: void attachBaseContext(android.content.Context)&gt;"/>  
        <node method="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfigurationBuilder)&gt;"/>  
        <node method="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfigurationBuilder,boolean)&gt;"/>  
        <node method="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfiguration,boolean)&gt;"/>  
        <node method="&lt;org.acra.reporter.ErrorReporterImpl: void uncaughtException(java.lang.Thread,java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;"/>  
        <node method="ProcessFinisher stopServices" type="CreateMethod" unit="$r14 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="at.bitfire.cert4android.CustomCertManager"> 
    <intentSummary> 
      <method value="&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;"/>  
      <methodtrace value="&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;,void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)"/>  
      <source name="at.bitfire.cert4android.CustomCertManager"/>  
      <destinition name="at.bitfire.cert4android.CustomCertService"/>  
      <nodes> 
        <node method="&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;"/>  
        <node method="CustomCertManager &lt;init&gt;" type="CreateMethod" unit="$r11 = new android.content.Intent"/>  
        <node method="CustomCertManager &lt;init&gt;" type="SetAttribute" unit="specialinvoke $r11.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r12, class &quot;Lat/bitfire/cert4android/CustomCertService;&quot;)"/>  
        <node method="CustomCertManager &lt;init&gt;" type="PassOutIntent" unit="$z0 = virtualinvoke $r2.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r11, $r13, 1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.HttpClient"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;,&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;,void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)"/>  
      <source name="com.etesync.syncadapter.HttpClient"/>  
      <destinition name="at.bitfire.cert4android.CustomCertService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;"/>  
        <node method="&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;"/>  
        <node method="CustomCertManager &lt;init&gt;" type="CreateMethod" unit="$r11 = new android.content.Intent"/>  
        <node method="CustomCertManager &lt;init&gt;" type="SetAttribute" unit="specialinvoke $r11.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r12, class &quot;Lat/bitfire/cert4android/CustomCertService;&quot;)"/>  
        <node method="CustomCertManager &lt;init&gt;" type="PassOutIntent" unit="$z0 = virtualinvoke $r2.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r11, $r13, 1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.DeleteCollectionFragment"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.DeleteCollectionFragment$DeleteCollectionLoader: java.lang.Exception loadInBackground()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.DeleteCollectionFragment$DeleteCollectionLoader: java.lang.Exception loadInBackground()&gt;,&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;,&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;,void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)"/>  
      <source name="com.etesync.syncadapter.ui.DeleteCollectionFragment"/>  
      <destinition name="at.bitfire.cert4android.CustomCertService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.DeleteCollectionFragment$DeleteCollectionLoader: java.lang.Exception loadInBackground()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;"/>  
        <node method="&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;"/>  
        <node method="CustomCertManager &lt;init&gt;" type="CreateMethod" unit="$r11 = new android.content.Intent"/>  
        <node method="CustomCertManager &lt;init&gt;" type="SetAttribute" unit="specialinvoke $r11.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r12, class &quot;Lat/bitfire/cert4android/CustomCertService;&quot;)"/>  
        <node method="CustomCertManager &lt;init&gt;" type="PassOutIntent" unit="$z0 = virtualinvoke $r2.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r11, $r13, 1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.DeleteCollectionFragment"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.DeleteCollectionFragment$DeleteCollectionLoader: java.lang.Object loadInBackground()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.DeleteCollectionFragment$DeleteCollectionLoader: java.lang.Object loadInBackground()&gt;,&lt;com.etesync.syncadapter.ui.DeleteCollectionFragment$DeleteCollectionLoader: java.lang.Exception loadInBackground()&gt;,&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;,&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;,void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)"/>  
      <source name="com.etesync.syncadapter.ui.DeleteCollectionFragment"/>  
      <destinition name="at.bitfire.cert4android.CustomCertService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.DeleteCollectionFragment$DeleteCollectionLoader: java.lang.Object loadInBackground()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.DeleteCollectionFragment$DeleteCollectionLoader: java.lang.Exception loadInBackground()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;"/>  
        <node method="&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;"/>  
        <node method="CustomCertManager &lt;init&gt;" type="CreateMethod" unit="$r11 = new android.content.Intent"/>  
        <node method="CustomCertManager &lt;init&gt;" type="SetAttribute" unit="specialinvoke $r11.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r12, class &quot;Lat/bitfire/cert4android/CustomCertService;&quot;)"/>  
        <node method="CustomCertManager &lt;init&gt;" type="PassOutIntent" unit="$z0 = virtualinvoke $r2.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r11, $r13, 1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="androidx.fragment.app.Fragment"> 
    <intentSummary> 
      <method value="&lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)&gt;,void startActivity(android.content.Intent,android.os.Bundle)"/>  
      <source name="androidx.fragment.app.Fragment"/>  
      <nodes> 
        <node method="&lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)&gt;"/>  
        <node method="Fragment startActivity" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="androidx.fragment.app.Fragment"> 
    <intentSummary> 
      <method value="&lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent)&gt;,void startActivity(android.content.Intent), &lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)&gt;"/>  
      <source name="androidx.fragment.app.Fragment"/>  
      <nodes> 
        <node method="&lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent)&gt;"/>  
        <node method="Fragment startActivity" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="Fragment startActivity" type="PassOutIntent" unit="virtualinvoke r0.&lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)&gt;($r1, null)"/>  
        <node method="Fragment startActivity" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent)&gt;,&lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)&gt;,void startActivity(android.content.Intent,android.os.Bundle)"/>  
      <source name="androidx.fragment.app.Fragment"/>  
      <nodes> 
        <node method="&lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent)&gt;"/>  
        <node method="&lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)&gt;"/>  
        <node method="Fragment startActivity" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.ExceptionInfoFragment"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.ExceptionInfoFragment$onCreateDialog$dialog$1: void onClick(android.content.DialogInterface,int)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.ExceptionInfoFragment$onCreateDialog$dialog$1: void onClick(android.content.DialogInterface,int)&gt;,&lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent)&gt;,void startActivity(android.content.Intent), &lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.ExceptionInfoFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.ExceptionInfoFragment$onCreateDialog$dialog$1: void onClick(android.content.DialogInterface,int)&gt;"/>  
        <node method="&lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent)&gt;"/>  
        <node method="Fragment startActivity" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="Fragment startActivity" type="PassOutIntent" unit="virtualinvoke r0.&lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)&gt;($r1, null)"/>  
        <node method="Fragment startActivity" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.ExceptionInfoFragment$onCreateDialog$dialog$1: void onClick(android.content.DialogInterface,int)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.ExceptionInfoFragment$onCreateDialog$dialog$1: void onClick(android.content.DialogInterface,int)&gt;,&lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)&gt;,void startActivity(android.content.Intent,android.os.Bundle)"/>  
      <source name="com.etesync.syncadapter.ui.ExceptionInfoFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.ExceptionInfoFragment$onCreateDialog$dialog$1: void onClick(android.content.DialogInterface,int)&gt;"/>  
        <node method="&lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)&gt;"/>  
        <node method="Fragment startActivity" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.ExceptionInfoFragment$onCreateDialog$dialog$1: void onClick(android.content.DialogInterface,int)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.ExceptionInfoFragment$onCreateDialog$dialog$1: void onClick(android.content.DialogInterface,int)&gt;,void onClick(android.content.DialogInterface,int), &lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.ExceptionInfoFragment"/>  
      <destinition name="com.etesync.syncadapter.ui.DebugInfoActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.ExceptionInfoFragment$onCreateDialog$dialog$1: void onClick(android.content.DialogInterface,int)&gt;"/>  
        <node method="ExceptionInfoFragment$onCreateDialog$dialog$1 onClick" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="ExceptionInfoFragment$onCreateDialog$dialog$1 onClick" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, class &quot;Lcom/etesync/syncadapter/ui/DebugInfoActivity;&quot;)"/>  
        <node method="ExceptionInfoFragment$onCreateDialog$dialog$1 onClick" type="PassOutIntent" unit="virtualinvoke $r3.&lt;com.etesync.syncadapter.ui.ExceptionInfoFragment: void startActivity(android.content.Intent)&gt;($r2)"/>  
        <node method="Fragment startActivity" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="Fragment startActivity" type="PassOutIntent" unit="virtualinvoke r0.&lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)&gt;($r1, null)"/>  
        <node method="Fragment startActivity" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.WebViewActivity"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.WebViewActivity$onCreate$1: boolean shouldOverrideUrlLoading(android.webkit.WebView,android.webkit.WebResourceRequest)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.WebViewActivity$onCreate$1: boolean shouldOverrideUrlLoading(android.webkit.WebView,android.webkit.WebResourceRequest)&gt;,&lt;com.etesync.syncadapter.ui.WebViewActivity: boolean access$shouldOverrideUrl(com.etesync.syncadapter.ui.WebViewActivity,android.net.Uri)&gt;,&lt;com.etesync.syncadapter.ui.WebViewActivity: boolean shouldOverrideUrl(android.net.Uri)&gt;,boolean shouldOverrideUrl(android.net.Uri)"/>  
      <source name="com.etesync.syncadapter.ui.WebViewActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.WebViewActivity$onCreate$1: boolean shouldOverrideUrlLoading(android.webkit.WebView,android.webkit.WebResourceRequest)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.WebViewActivity: boolean access$shouldOverrideUrl(com.etesync.syncadapter.ui.WebViewActivity,android.net.Uri)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.WebViewActivity: boolean shouldOverrideUrl(android.net.Uri)&gt;"/>  
        <node method="WebViewActivity shouldOverrideUrl" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="WebViewActivity shouldOverrideUrl" type="PassOutIntent" unit="virtualinvoke r0.&lt;com.etesync.syncadapter.ui.WebViewActivity: void startActivity(android.content.Intent)&gt;($r5)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="androidx.core.app.NotificationCompatBuilder"> 
    <intentSummary> 
      <method value="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
      <methodtrace value="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="androidx.core.app.NotificationCompatBuilder"/>  
      <nodes> 
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setContentIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setDeleteIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
      <methodtrace value="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="androidx.core.app.NotificationCompatBuilder"/>  
      <nodes> 
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setDeleteIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
      <methodtrace value="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="androidx.core.app.NotificationCompatBuilder"/>  
      <nodes> 
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="androidx.core.app.NotificationCompat"> 
    <intentSummary> 
      <method value="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
      <methodtrace value="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="androidx.core.app.NotificationCompat"/>  
      <nodes> 
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setContentIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setDeleteIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
      <methodtrace value="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="androidx.core.app.NotificationCompat"/>  
      <nodes> 
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setDeleteIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
      <methodtrace value="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="androidx.core.app.NotificationCompat"/>  
      <nodes> 
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.syncadapter.SyncNotification"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;,androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncNotification"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int), &lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncNotification"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter3: android.content.Intent"/>  
        <node method="SyncNotification notify" type="PassOutIntent" unit="virtualinvoke $r12.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r13)"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;,androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncNotification"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncNotification"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setContentIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setDeleteIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncNotification"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setDeleteIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncNotification"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.syncadapter.SyncNotification"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;,androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncNotification"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;,void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncNotification"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
        <node method="SyncNotification notify$default" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter3: android.content.Intent"/>  
        <node method="SyncNotification notify" type="PassOutIntent" unit="virtualinvoke $r12.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r13)"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncNotification notify$default" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncNotification notify$default" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int), &lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncNotification"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter3: android.content.Intent"/>  
        <node method="SyncNotification notify" type="PassOutIntent" unit="virtualinvoke $r12.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r13)"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;,androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncNotification"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncNotification"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setContentIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setDeleteIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncNotification"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setDeleteIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncNotification"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.syncadapter.SyncNotification"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;,void notify(java.lang.String,java.lang.String), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncNotification"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity, com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncNotification notify" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncNotification notify" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncNotification notify" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncNotification notify" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncNotification notify" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncNotification notify" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/>  
        <node method="SyncNotification notify$default" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter3: android.content.Intent"/>  
        <node method="SyncNotification notify" type="PassOutIntent" unit="virtualinvoke $r12.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r13)"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;,androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncNotification"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;,void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncNotification"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
        <node method="SyncNotification notify$default" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter3: android.content.Intent"/>  
        <node method="SyncNotification notify" type="PassOutIntent" unit="virtualinvoke $r12.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r13)"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncNotification notify$default" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncNotification notify$default" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int), &lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncNotification"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter3: android.content.Intent"/>  
        <node method="SyncNotification notify" type="PassOutIntent" unit="virtualinvoke $r12.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r13)"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;,androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncNotification"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncNotification"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setContentIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setDeleteIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncNotification"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setDeleteIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncNotification"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.syncadapter.SyncManager"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void notifyDiscardedChange()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void notifyDiscardedChange()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;,androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncManager"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void notifyDiscardedChange()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void notifyDiscardedChange()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void notifyDiscardedChange()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int), &lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncManager"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void notifyDiscardedChange()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter3: android.content.Intent"/>  
        <node method="SyncNotification notify" type="PassOutIntent" unit="virtualinvoke $r12.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r13)"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void notifyDiscardedChange()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void notifyDiscardedChange()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;,androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncManager"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void notifyDiscardedChange()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void notifyDiscardedChange()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void notifyDiscardedChange()&gt;,void notifyDiscardedChange(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncManager"/>  
      <destinition name="com.etesync.syncadapter.ui.AccountsActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void notifyDiscardedChange()&gt;"/>  
        <node method="SyncManager notifyDiscardedChange" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="SyncManager notifyDiscardedChange" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Lcom/etesync/syncadapter/ui/AccountsActivity;&quot;)"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter3: android.content.Intent"/>  
        <node method="SyncNotification notify" type="PassOutIntent" unit="virtualinvoke $r12.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r13)"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncManager notifyDiscardedChange" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncManager notifyDiscardedChange" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void notifyDiscardedChange()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void notifyDiscardedChange()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncManager"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void notifyDiscardedChange()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setContentIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setDeleteIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void notifyDiscardedChange()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void notifyDiscardedChange()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncManager"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void notifyDiscardedChange()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setDeleteIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void notifyDiscardedChange()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void notifyDiscardedChange()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncManager"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void notifyDiscardedChange()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.CreateCollectionFragment"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.CreateCollectionFragment$CreateCollectionLoader: java.lang.Exception loadInBackground()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.CreateCollectionFragment$CreateCollectionLoader: java.lang.Exception loadInBackground()&gt;,&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;,&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;,void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)"/>  
      <source name="com.etesync.syncadapter.ui.CreateCollectionFragment"/>  
      <destinition name="at.bitfire.cert4android.CustomCertService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.CreateCollectionFragment$CreateCollectionLoader: java.lang.Exception loadInBackground()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;"/>  
        <node method="&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;"/>  
        <node method="CustomCertManager &lt;init&gt;" type="CreateMethod" unit="$r11 = new android.content.Intent"/>  
        <node method="CustomCertManager &lt;init&gt;" type="SetAttribute" unit="specialinvoke $r11.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r12, class &quot;Lat/bitfire/cert4android/CustomCertService;&quot;)"/>  
        <node method="CustomCertManager &lt;init&gt;" type="PassOutIntent" unit="$z0 = virtualinvoke $r2.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r11, $r13, 1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.CreateCollectionFragment"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.CreateCollectionFragment$CreateCollectionLoader: java.lang.Object loadInBackground()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.CreateCollectionFragment$CreateCollectionLoader: java.lang.Object loadInBackground()&gt;,&lt;com.etesync.syncadapter.ui.CreateCollectionFragment$CreateCollectionLoader: java.lang.Exception loadInBackground()&gt;,&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;,&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;,void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)"/>  
      <source name="com.etesync.syncadapter.ui.CreateCollectionFragment"/>  
      <destinition name="at.bitfire.cert4android.CustomCertService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.CreateCollectionFragment$CreateCollectionLoader: java.lang.Object loadInBackground()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.CreateCollectionFragment$CreateCollectionLoader: java.lang.Exception loadInBackground()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;"/>  
        <node method="&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;"/>  
        <node method="CustomCertManager &lt;init&gt;" type="CreateMethod" unit="$r11 = new android.content.Intent"/>  
        <node method="CustomCertManager &lt;init&gt;" type="SetAttribute" unit="specialinvoke $r11.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r12, class &quot;Lat/bitfire/cert4android/CustomCertService;&quot;)"/>  
        <node method="CustomCertManager &lt;init&gt;" type="PassOutIntent" unit="$z0 = virtualinvoke $r2.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r11, $r13, 1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="androidx.core.app.RemoteInput"> 
    <intentSummary> 
      <method value="&lt;androidx.core.app.RemoteInput: android.os.Bundle getResultsFromIntent(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;androidx.core.app.RemoteInput: android.os.Bundle getResultsFromIntent(android.content.Intent)&gt;,android.os.Bundle getResultsFromIntent(android.content.Intent)"/>  
      <source name="androidx.core.app.RemoteInput"/>  
      <nodes> 
        <node method="&lt;androidx.core.app.RemoteInput: android.os.Bundle getResultsFromIntent(android.content.Intent)&gt;"/>  
        <node method="RemoteInput getResultsFromIntent" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;androidx.core.app.RemoteInput: android.os.Bundle getResultsFromIntent(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;androidx.core.app.RemoteInput: android.os.Bundle getResultsFromIntent(android.content.Intent)&gt;,android.os.Bundle getResultsFromIntent(android.content.Intent)"/>  
      <source name="androidx.core.app.RemoteInput"/>  
      <nodes> 
        <node method="&lt;androidx.core.app.RemoteInput: android.os.Bundle getResultsFromIntent(android.content.Intent)&gt;"/>  
        <node method="RemoteInput getResultsFromIntent" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>  
        <node method="RemoteInput getResultsFromIntent" type="ReceiveIntentFromRetValue" unit="$r0 = staticinvoke &lt;androidx.core.app.RemoteInput: android.content.Intent getClipDataIntentFromIntent(android.content.Intent)&gt;($r0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;androidx.core.app.RemoteInput: android.os.Bundle getResultsFromIntent(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;androidx.core.app.RemoteInput: android.os.Bundle getResultsFromIntent(android.content.Intent)&gt;,android.os.Bundle getResultsFromIntent(android.content.Intent)"/>  
      <source name="androidx.core.app.RemoteInput"/>  
      <nodes> 
        <node method="&lt;androidx.core.app.RemoteInput: android.os.Bundle getResultsFromIntent(android.content.Intent)&gt;"/>  
        <node method="RemoteInput getResultsFromIntent" type="ReceiveIntentFromRetValue" unit="$r0 = staticinvoke &lt;androidx.core.app.RemoteInput: android.content.Intent getClipDataIntentFromIntent(android.content.Intent)&gt;($r0)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.acra.ACRA"> 
    <intentSummary> 
      <method value="&lt;org.acra.ACRA: void init(android.app.Application)&gt;"/>  
      <methodtrace value="&lt;org.acra.ACRA: void init(android.app.Application)&gt;,&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfigurationBuilder)&gt;,&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfigurationBuilder,boolean)&gt;,&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfiguration,boolean)&gt;,&lt;org.acra.reporter.ErrorReporterImpl: void uncaughtException(java.lang.Thread,java.lang.Throwable)&gt;,&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;,&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;,&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;,&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;,&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;,void stopServices()"/>  
      <source name="org.acra.ACRA"/>  
      <nodes> 
        <node method="&lt;org.acra.ACRA: void init(android.app.Application)&gt;"/>  
        <node method="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfigurationBuilder)&gt;"/>  
        <node method="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfigurationBuilder,boolean)&gt;"/>  
        <node method="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfiguration,boolean)&gt;"/>  
        <node method="&lt;org.acra.reporter.ErrorReporterImpl: void uncaughtException(java.lang.Thread,java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;"/>  
        <node method="ProcessFinisher stopServices" type="CreateMethod" unit="$r14 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.ACRA: void init(android.app.Application)&gt;"/>  
      <methodtrace value="&lt;org.acra.ACRA: void init(android.app.Application)&gt;,&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfigurationBuilder)&gt;,&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfigurationBuilder,boolean)&gt;,&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfiguration,boolean)&gt;,&lt;org.acra.reporter.ErrorReporterImpl: void uncaughtException(java.lang.Thread,java.lang.Throwable)&gt;,&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;,&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;,&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;,&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;,&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;,void stopServices()"/>  
      <source name="org.acra.ACRA"/>  
      <nodes> 
        <node method="&lt;org.acra.ACRA: void init(android.app.Application)&gt;"/>  
        <node method="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfigurationBuilder)&gt;"/>  
        <node method="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfigurationBuilder,boolean)&gt;"/>  
        <node method="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfiguration,boolean)&gt;"/>  
        <node method="&lt;org.acra.reporter.ErrorReporterImpl: void uncaughtException(java.lang.Thread,java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;"/>  
        <node method="ProcessFinisher stopServices" type="CreateMethod" unit="$r14 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.ACRA: void init(android.app.Application)&gt;"/>  
      <methodtrace value="&lt;org.acra.ACRA: void init(android.app.Application)&gt;,&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfigurationBuilder)&gt;,&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfigurationBuilder,boolean)&gt;,&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfiguration,boolean)&gt;,&lt;org.acra.reporter.ErrorReporterImpl: void uncaughtException(java.lang.Thread,java.lang.Throwable)&gt;,&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;,&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;,&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;,&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;,&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;,void stopServices()"/>  
      <source name="org.acra.ACRA"/>  
      <nodes> 
        <node method="&lt;org.acra.ACRA: void init(android.app.Application)&gt;"/>  
        <node method="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfigurationBuilder)&gt;"/>  
        <node method="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfigurationBuilder,boolean)&gt;"/>  
        <node method="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfiguration,boolean)&gt;"/>  
        <node method="&lt;org.acra.reporter.ErrorReporterImpl: void uncaughtException(java.lang.Thread,java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;"/>  
        <node method="ProcessFinisher stopServices" type="CreateMethod" unit="$r14 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.AddMemberFragment"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.AddMemberFragment$MemberAddSecond: com.etesync.syncadapter.ui.AddMemberFragment$MemberAddSecond$AddResultSecond doInBackground(java.lang.Void[])&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.AddMemberFragment$MemberAddSecond: com.etesync.syncadapter.ui.AddMemberFragment$MemberAddSecond$AddResultSecond doInBackground(java.lang.Void[])&gt;,&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;,&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;,void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)"/>  
      <source name="com.etesync.syncadapter.ui.AddMemberFragment"/>  
      <destinition name="at.bitfire.cert4android.CustomCertService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.AddMemberFragment$MemberAddSecond: com.etesync.syncadapter.ui.AddMemberFragment$MemberAddSecond$AddResultSecond doInBackground(java.lang.Void[])&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;"/>  
        <node method="&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;"/>  
        <node method="CustomCertManager &lt;init&gt;" type="CreateMethod" unit="$r11 = new android.content.Intent"/>  
        <node method="CustomCertManager &lt;init&gt;" type="SetAttribute" unit="specialinvoke $r11.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r12, class &quot;Lat/bitfire/cert4android/CustomCertService;&quot;)"/>  
        <node method="CustomCertManager &lt;init&gt;" type="PassOutIntent" unit="$z0 = virtualinvoke $r2.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r11, $r13, 1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.AddMemberFragment"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.AddMemberFragment$MemberAddSecond: java.lang.Object doInBackground(java.lang.Object[])&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.AddMemberFragment$MemberAddSecond: java.lang.Object doInBackground(java.lang.Object[])&gt;,&lt;com.etesync.syncadapter.ui.AddMemberFragment$MemberAddSecond: com.etesync.syncadapter.ui.AddMemberFragment$MemberAddSecond$AddResultSecond doInBackground(java.lang.Void[])&gt;,&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;,&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;,void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)"/>  
      <source name="com.etesync.syncadapter.ui.AddMemberFragment"/>  
      <destinition name="at.bitfire.cert4android.CustomCertService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.AddMemberFragment$MemberAddSecond: java.lang.Object doInBackground(java.lang.Object[])&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.AddMemberFragment$MemberAddSecond: com.etesync.syncadapter.ui.AddMemberFragment$MemberAddSecond$AddResultSecond doInBackground(java.lang.Void[])&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;"/>  
        <node method="&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;"/>  
        <node method="CustomCertManager &lt;init&gt;" type="CreateMethod" unit="$r11 = new android.content.Intent"/>  
        <node method="CustomCertManager &lt;init&gt;" type="SetAttribute" unit="specialinvoke $r11.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r12, class &quot;Lat/bitfire/cert4android/CustomCertService;&quot;)"/>  
        <node method="CustomCertManager &lt;init&gt;" type="PassOutIntent" unit="$z0 = virtualinvoke $r2.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r11, $r13, 1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.AddMemberFragment"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.AddMemberFragment$MemberAdd$onPostExecute$1: void onClick(android.content.DialogInterface,int)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.AddMemberFragment$MemberAdd$onPostExecute$1: void onClick(android.content.DialogInterface,int)&gt;,&lt;com.etesync.syncadapter.ui.AddMemberFragment$MemberAddSecond: java.lang.Object doInBackground(java.lang.Object[])&gt;,&lt;com.etesync.syncadapter.ui.AddMemberFragment$MemberAddSecond: com.etesync.syncadapter.ui.AddMemberFragment$MemberAddSecond$AddResultSecond doInBackground(java.lang.Void[])&gt;,&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;,&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;,void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)"/>  
      <source name="com.etesync.syncadapter.ui.AddMemberFragment"/>  
      <destinition name="at.bitfire.cert4android.CustomCertService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.AddMemberFragment$MemberAdd$onPostExecute$1: void onClick(android.content.DialogInterface,int)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.AddMemberFragment$MemberAddSecond: java.lang.Object doInBackground(java.lang.Object[])&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.AddMemberFragment$MemberAddSecond: com.etesync.syncadapter.ui.AddMemberFragment$MemberAddSecond$AddResultSecond doInBackground(java.lang.Void[])&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;"/>  
        <node method="&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;"/>  
        <node method="CustomCertManager &lt;init&gt;" type="CreateMethod" unit="$r11 = new android.content.Intent"/>  
        <node method="CustomCertManager &lt;init&gt;" type="SetAttribute" unit="specialinvoke $r11.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r12, class &quot;Lat/bitfire/cert4android/CustomCertService;&quot;)"/>  
        <node method="CustomCertManager &lt;init&gt;" type="PassOutIntent" unit="$z0 = virtualinvoke $r2.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r11, $r13, 1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.syncadapter.SyncNotification"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent)&gt;,void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncNotification"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent)&gt;"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter3: android.content.Intent"/>  
        <node method="SyncNotification notify$default" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter3: android.content.Intent"/>  
        <node method="SyncNotification notify" type="PassOutIntent" unit="virtualinvoke $r12.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r13)"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;,androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncNotification"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;,void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncNotification"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
        <node method="SyncNotification notify$default" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter3: android.content.Intent"/>  
        <node method="SyncNotification notify" type="PassOutIntent" unit="virtualinvoke $r12.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r13)"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncNotification notify$default" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncNotification notify$default" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int), &lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncNotification"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter3: android.content.Intent"/>  
        <node method="SyncNotification notify" type="PassOutIntent" unit="virtualinvoke $r12.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r13)"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;,androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncNotification"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncNotification"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setContentIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setDeleteIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncNotification"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setDeleteIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncNotification"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.WebViewActivity"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.WebViewActivity$Companion: void openUrl(android.content.Context,android.net.Uri)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.WebViewActivity$Companion: void openUrl(android.content.Context,android.net.Uri)&gt;,void openUrl(android.content.Context,android.net.Uri)"/>  
      <source name="com.etesync.syncadapter.ui.WebViewActivity"/>  
      <destinition name="com.etesync.syncadapter.ui.WebViewActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.WebViewActivity$Companion: void openUrl(android.content.Context,android.net.Uri)&gt;"/>  
        <node method="WebViewActivity$Companion openUrl" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="WebViewActivity$Companion openUrl" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/etesync/syncadapter/ui/WebViewActivity;&quot;)"/>  
        <node method="WebViewActivity$Companion openUrl" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.WebViewActivity$Companion: void openUrl(android.content.Context,android.net.Uri)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.WebViewActivity$Companion: void openUrl(android.content.Context,android.net.Uri)&gt;,void openUrl(android.content.Context,android.net.Uri)"/>  
      <source name="com.etesync.syncadapter.ui.WebViewActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.WebViewActivity$Companion: void openUrl(android.content.Context,android.net.Uri)&gt;"/>  
        <node method="WebViewActivity$Companion openUrl" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="WebViewActivity$Companion openUrl" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.setup.LoginActivity"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.setup.LoginActivity: void showHelp(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.setup.LoginActivity: void showHelp(android.view.MenuItem)&gt;,&lt;com.etesync.syncadapter.ui.WebViewActivity$Companion: void openUrl(android.content.Context,android.net.Uri)&gt;,void openUrl(android.content.Context,android.net.Uri)"/>  
      <source name="com.etesync.syncadapter.ui.setup.LoginActivity"/>  
      <destinition name="com.etesync.syncadapter.ui.WebViewActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.setup.LoginActivity: void showHelp(android.view.MenuItem)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.WebViewActivity$Companion: void openUrl(android.content.Context,android.net.Uri)&gt;"/>  
        <node method="WebViewActivity$Companion openUrl" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="WebViewActivity$Companion openUrl" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/etesync/syncadapter/ui/WebViewActivity;&quot;)"/>  
        <node method="WebViewActivity$Companion openUrl" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.setup.LoginActivity: void showHelp(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.setup.LoginActivity: void showHelp(android.view.MenuItem)&gt;,&lt;com.etesync.syncadapter.ui.WebViewActivity$Companion: void openUrl(android.content.Context,android.net.Uri)&gt;,void openUrl(android.content.Context,android.net.Uri)"/>  
      <source name="com.etesync.syncadapter.ui.setup.LoginActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.setup.LoginActivity: void showHelp(android.view.MenuItem)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.WebViewActivity$Companion: void openUrl(android.content.Context,android.net.Uri)&gt;"/>  
        <node method="WebViewActivity$Companion openUrl" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="WebViewActivity$Companion openUrl" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.setup.BaseConfigurationFinder"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.setup.BaseConfigurationFinder: void &lt;init&gt;(android.content.Context,com.etesync.syncadapter.ui.setup.LoginCredentials)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.setup.BaseConfigurationFinder: void &lt;init&gt;(android.content.Context,com.etesync.syncadapter.ui.setup.LoginCredentials)&gt;,&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;,&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;,void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)"/>  
      <source name="com.etesync.syncadapter.ui.setup.BaseConfigurationFinder"/>  
      <destinition name="at.bitfire.cert4android.CustomCertService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.setup.BaseConfigurationFinder: void &lt;init&gt;(android.content.Context,com.etesync.syncadapter.ui.setup.LoginCredentials)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;"/>  
        <node method="&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;"/>  
        <node method="CustomCertManager &lt;init&gt;" type="CreateMethod" unit="$r11 = new android.content.Intent"/>  
        <node method="CustomCertManager &lt;init&gt;" type="SetAttribute" unit="specialinvoke $r11.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r12, class &quot;Lat/bitfire/cert4android/CustomCertService;&quot;)"/>  
        <node method="CustomCertManager &lt;init&gt;" type="PassOutIntent" unit="$z0 = virtualinvoke $r2.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r11, $r13, 1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.setup.DetectConfigurationFragment"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.setup.DetectConfigurationFragment$ServerConfigurationLoader: com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration loadInBackground()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.setup.DetectConfigurationFragment$ServerConfigurationLoader: com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration loadInBackground()&gt;,&lt;com.etesync.syncadapter.ui.setup.BaseConfigurationFinder: void &lt;init&gt;(android.content.Context,com.etesync.syncadapter.ui.setup.LoginCredentials)&gt;,&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;,&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;,void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)"/>  
      <source name="com.etesync.syncadapter.ui.setup.DetectConfigurationFragment"/>  
      <destinition name="at.bitfire.cert4android.CustomCertService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.setup.DetectConfigurationFragment$ServerConfigurationLoader: com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration loadInBackground()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.setup.BaseConfigurationFinder: void &lt;init&gt;(android.content.Context,com.etesync.syncadapter.ui.setup.LoginCredentials)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;"/>  
        <node method="&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;"/>  
        <node method="CustomCertManager &lt;init&gt;" type="CreateMethod" unit="$r11 = new android.content.Intent"/>  
        <node method="CustomCertManager &lt;init&gt;" type="SetAttribute" unit="specialinvoke $r11.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r12, class &quot;Lat/bitfire/cert4android/CustomCertService;&quot;)"/>  
        <node method="CustomCertManager &lt;init&gt;" type="PassOutIntent" unit="$z0 = virtualinvoke $r2.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r11, $r13, 1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.setup.DetectConfigurationFragment"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.setup.DetectConfigurationFragment$ServerConfigurationLoader: java.lang.Object loadInBackground()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.setup.DetectConfigurationFragment$ServerConfigurationLoader: java.lang.Object loadInBackground()&gt;,&lt;com.etesync.syncadapter.ui.setup.DetectConfigurationFragment$ServerConfigurationLoader: com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration loadInBackground()&gt;,&lt;com.etesync.syncadapter.ui.setup.BaseConfigurationFinder: void &lt;init&gt;(android.content.Context,com.etesync.syncadapter.ui.setup.LoginCredentials)&gt;,&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;,&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;,void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)"/>  
      <source name="com.etesync.syncadapter.ui.setup.DetectConfigurationFragment"/>  
      <destinition name="at.bitfire.cert4android.CustomCertService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.setup.DetectConfigurationFragment$ServerConfigurationLoader: java.lang.Object loadInBackground()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.setup.DetectConfigurationFragment$ServerConfigurationLoader: com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration loadInBackground()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.setup.BaseConfigurationFinder: void &lt;init&gt;(android.content.Context,com.etesync.syncadapter.ui.setup.LoginCredentials)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;"/>  
        <node method="&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;"/>  
        <node method="CustomCertManager &lt;init&gt;" type="CreateMethod" unit="$r11 = new android.content.Intent"/>  
        <node method="CustomCertManager &lt;init&gt;" type="SetAttribute" unit="specialinvoke $r11.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r12, class &quot;Lat/bitfire/cert4android/CustomCertService;&quot;)"/>  
        <node method="CustomCertManager &lt;init&gt;" type="PassOutIntent" unit="$z0 = virtualinvoke $r2.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r11, $r13, 1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="androidx.appcompat.app.AppCompatActivity"> 
    <intentSummary> 
      <method value="&lt;androidx.appcompat.app.AppCompatActivity: void setContentView(int)&gt;"/>  
      <methodtrace value="&lt;androidx.appcompat.app.AppCompatActivity: void setContentView(int)&gt;,void setContentView(int)"/>  
      <source name="androidx.appcompat.app.AppCompatActivity"/>  
      <nodes> 
        <node method="&lt;androidx.appcompat.app.AppCompatActivity: void setContentView(int)&gt;"/>  
        <node method="AppCompatActivity setContentView" type="setContentView" unit="virtualinvoke $r1.&lt;androidx.appcompat.app.AppCompatDelegate: void setContentView(int)&gt;($i0)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.DebugInfoActivity"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.DebugInfoActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.DebugInfoActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle)"/>  
      <source name="com.etesync.syncadapter.ui.DebugInfoActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.DebugInfoActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="DebugInfoActivity onCreate" type="setContentView" unit="virtualinvoke r0.&lt;com.etesync.syncadapter.ui.DebugInfoActivity: void setContentView(int)&gt;(2131492901)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="androidx.fragment.app.FragmentActivity"> 
    <intentSummary> 
      <method value="&lt;androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)&gt;,&lt;androidx.core.app.ActivityCompat: void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)&gt;,void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)"/>  
      <source name="androidx.fragment.app.FragmentActivity"/>  
      <nodes> 
        <node method="&lt;androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)&gt;"/>  
        <node method="&lt;androidx.core.app.ActivityCompat: void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)&gt;"/>  
        <node method="ActivityCompat startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>  
        <node method="ActivityCompat startActivityForResult" type="PassOutIntent" unit="virtualinvoke $r0.&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)&gt;($r1, $i0, $r2)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)&gt;,void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle), &lt;androidx.core.app.ActivityCompat: void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)&gt;"/>  
      <source name="androidx.fragment.app.FragmentActivity"/>  
      <nodes> 
        <node method="&lt;androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)&gt;"/>  
        <node method="FragmentActivity startActivityFromFragment" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>  
        <node method="FragmentActivity startActivityFromFragment" type="PassOutIntent" unit="staticinvoke &lt;androidx.core.app.ActivityCompat: void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)&gt;(r0, $r1, -1, $r2)"/>  
        <node method="ActivityCompat startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>  
        <node method="ActivityCompat startActivityForResult" type="PassOutIntent" unit="virtualinvoke $r0.&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)&gt;($r1, $i0, $r2)"/>  
        <node method="ActivityCompat startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>  
        <node method="ActivityCompat startActivityForResult" type="PassOutIntent" unit="virtualinvoke $r0.&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)&gt;($r1, $i0, $r2)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)&gt;,void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle), &lt;androidx.core.app.ActivityCompat: void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)&gt;"/>  
      <source name="androidx.fragment.app.FragmentActivity"/>  
      <nodes> 
        <node method="&lt;androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)&gt;"/>  
        <node method="FragmentActivity startActivityFromFragment" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>  
        <node method="ActivityCompat startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>  
        <node method="ActivityCompat startActivityForResult" type="PassOutIntent" unit="virtualinvoke $r0.&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>  
        <node method="FragmentActivity startActivityFromFragment" type="PassOutIntent" unit="staticinvoke &lt;androidx.core.app.ActivityCompat: void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)&gt;(r0, $r1, $i1, $r2)"/>  
        <node method="ActivityCompat startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>  
        <node method="ActivityCompat startActivityForResult" type="PassOutIntent" unit="virtualinvoke $r0.&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)&gt;,void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle), &lt;androidx.core.app.ActivityCompat: void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)&gt;"/>  
      <source name="androidx.fragment.app.FragmentActivity"/>  
      <nodes> 
        <node method="&lt;androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)&gt;"/>  
        <node method="FragmentActivity startActivityFromFragment" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>  
        <node method="FragmentActivity startActivityFromFragment" type="PassOutIntent" unit="staticinvoke &lt;androidx.core.app.ActivityCompat: void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)&gt;(r0, $r1, -1, $r2)"/>  
        <node method="ActivityCompat startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>  
        <node method="ActivityCompat startActivityForResult" type="PassOutIntent" unit="virtualinvoke $r0.&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>  
        <node method="ActivityCompat startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>  
        <node method="ActivityCompat startActivityForResult" type="PassOutIntent" unit="virtualinvoke $r0.&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)&gt;,void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle), &lt;androidx.core.app.ActivityCompat: void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)&gt;"/>  
      <source name="androidx.fragment.app.FragmentActivity"/>  
      <nodes> 
        <node method="&lt;androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)&gt;"/>  
        <node method="FragmentActivity startActivityFromFragment" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>  
        <node method="ActivityCompat startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>  
        <node method="ActivityCompat startActivityForResult" type="PassOutIntent" unit="virtualinvoke $r0.&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)&gt;($r1, $i0, $r2)"/>  
        <node method="FragmentActivity startActivityFromFragment" type="PassOutIntent" unit="staticinvoke &lt;androidx.core.app.ActivityCompat: void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)&gt;(r0, $r1, $i1, $r2)"/>  
        <node method="ActivityCompat startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>  
        <node method="ActivityCompat startActivityForResult" type="PassOutIntent" unit="virtualinvoke $r0.&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)&gt;($r1, $i0, $r2)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)&gt;,&lt;androidx.core.app.ActivityCompat: void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)&gt;,void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)"/>  
      <source name="androidx.fragment.app.FragmentActivity"/>  
      <nodes> 
        <node method="&lt;androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)&gt;"/>  
        <node method="&lt;androidx.core.app.ActivityCompat: void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)&gt;"/>  
        <node method="ActivityCompat startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>  
        <node method="ActivityCompat startActivityForResult" type="PassOutIntent" unit="virtualinvoke $r0.&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="androidx.fragment.app.FragmentActivity"> 
    <intentSummary> 
      <method value="&lt;androidx.fragment.app.FragmentActivity$HostCallbacks: void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;androidx.fragment.app.FragmentActivity$HostCallbacks: void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)&gt;,&lt;androidx.core.app.ActivityCompat: void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)&gt;,void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)"/>  
      <source name="androidx.fragment.app.FragmentActivity"/>  
      <nodes> 
        <node method="&lt;androidx.fragment.app.FragmentActivity$HostCallbacks: void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)&gt;"/>  
        <node method="&lt;androidx.core.app.ActivityCompat: void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)&gt;"/>  
        <node method="ActivityCompat startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>  
        <node method="ActivityCompat startActivityForResult" type="PassOutIntent" unit="virtualinvoke $r0.&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)&gt;($r1, $i0, $r2)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;androidx.fragment.app.FragmentActivity$HostCallbacks: void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;androidx.fragment.app.FragmentActivity$HostCallbacks: void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)&gt;,&lt;androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)&gt;,void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle), &lt;androidx.core.app.ActivityCompat: void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)&gt;"/>  
      <source name="androidx.fragment.app.FragmentActivity"/>  
      <nodes> 
        <node method="&lt;androidx.fragment.app.FragmentActivity$HostCallbacks: void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)&gt;"/>  
        <node method="&lt;androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)&gt;"/>  
        <node method="FragmentActivity startActivityFromFragment" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>  
        <node method="FragmentActivity startActivityFromFragment" type="PassOutIntent" unit="staticinvoke &lt;androidx.core.app.ActivityCompat: void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)&gt;(r0, $r1, -1, $r2)"/>  
        <node method="ActivityCompat startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>  
        <node method="ActivityCompat startActivityForResult" type="PassOutIntent" unit="virtualinvoke $r0.&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)&gt;($r1, $i0, $r2)"/>  
        <node method="ActivityCompat startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>  
        <node method="ActivityCompat startActivityForResult" type="PassOutIntent" unit="virtualinvoke $r0.&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)&gt;($r1, $i0, $r2)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;androidx.fragment.app.FragmentActivity$HostCallbacks: void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;androidx.fragment.app.FragmentActivity$HostCallbacks: void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)&gt;,void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle), &lt;androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)&gt;"/>  
      <source name="androidx.fragment.app.FragmentActivity"/>  
      <nodes> 
        <node method="&lt;androidx.fragment.app.FragmentActivity$HostCallbacks: void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)&gt;"/>  
        <node method="FragmentActivity$HostCallbacks onStartActivityFromFragment" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter1: android.content.Intent"/>  
        <node method="FragmentActivity$HostCallbacks onStartActivityFromFragment" type="PassOutIntent" unit="virtualinvoke $r4.&lt;androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)&gt;($r1, $r2, $i0, $r3)"/>  
        <node method="FragmentActivity startActivityFromFragment" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>  
        <node method="FragmentActivity startActivityFromFragment" type="PassOutIntent" unit="staticinvoke &lt;androidx.core.app.ActivityCompat: void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)&gt;(r0, $r1, $i1, $r2)"/>  
        <node method="ActivityCompat startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>  
        <node method="ActivityCompat startActivityForResult" type="PassOutIntent" unit="virtualinvoke $r0.&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;androidx.fragment.app.FragmentActivity$HostCallbacks: void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;androidx.fragment.app.FragmentActivity$HostCallbacks: void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)&gt;,void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle), &lt;androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)&gt;"/>  
      <source name="androidx.fragment.app.FragmentActivity"/>  
      <nodes> 
        <node method="&lt;androidx.fragment.app.FragmentActivity$HostCallbacks: void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)&gt;"/>  
        <node method="FragmentActivity$HostCallbacks onStartActivityFromFragment" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter1: android.content.Intent"/>  
        <node method="FragmentActivity$HostCallbacks onStartActivityFromFragment" type="PassOutIntent" unit="virtualinvoke $r4.&lt;androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)&gt;($r1, $r2, $i0, $r3)"/>  
        <node method="FragmentActivity startActivityFromFragment" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>  
        <node method="FragmentActivity startActivityFromFragment" type="PassOutIntent" unit="staticinvoke &lt;androidx.core.app.ActivityCompat: void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)&gt;(r0, $r1, $i1, $r2)"/>  
        <node method="ActivityCompat startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>  
        <node method="ActivityCompat startActivityForResult" type="PassOutIntent" unit="virtualinvoke $r0.&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)&gt;($r1, $i0, $r2)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;androidx.fragment.app.FragmentActivity$HostCallbacks: void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;androidx.fragment.app.FragmentActivity$HostCallbacks: void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)&gt;,&lt;androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)&gt;,void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle), &lt;androidx.core.app.ActivityCompat: void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)&gt;"/>  
      <source name="androidx.fragment.app.FragmentActivity"/>  
      <nodes> 
        <node method="&lt;androidx.fragment.app.FragmentActivity$HostCallbacks: void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)&gt;"/>  
        <node method="&lt;androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)&gt;"/>  
        <node method="FragmentActivity startActivityFromFragment" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>  
        <node method="ActivityCompat startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>  
        <node method="ActivityCompat startActivityForResult" type="PassOutIntent" unit="virtualinvoke $r0.&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>  
        <node method="FragmentActivity startActivityFromFragment" type="PassOutIntent" unit="staticinvoke &lt;androidx.core.app.ActivityCompat: void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)&gt;(r0, $r1, $i1, $r2)"/>  
        <node method="ActivityCompat startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>  
        <node method="ActivityCompat startActivityForResult" type="PassOutIntent" unit="virtualinvoke $r0.&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;androidx.fragment.app.FragmentActivity$HostCallbacks: void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;androidx.fragment.app.FragmentActivity$HostCallbacks: void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)&gt;,void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle), &lt;androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)&gt;"/>  
      <source name="androidx.fragment.app.FragmentActivity"/>  
      <nodes> 
        <node method="&lt;androidx.fragment.app.FragmentActivity$HostCallbacks: void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)&gt;"/>  
        <node method="FragmentActivity$HostCallbacks onStartActivityFromFragment" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter1: android.content.Intent"/>  
        <node method="FragmentActivity$HostCallbacks onStartActivityFromFragment" type="PassOutIntent" unit="virtualinvoke $r4.&lt;androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)&gt;($r1, $r2, $i0, $r3)"/>  
        <node method="FragmentActivity startActivityFromFragment" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>  
        <node method="FragmentActivity startActivityFromFragment" type="PassOutIntent" unit="staticinvoke &lt;androidx.core.app.ActivityCompat: void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)&gt;(r0, $r1, -1, $r2)"/>  
        <node method="ActivityCompat startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>  
        <node method="ActivityCompat startActivityForResult" type="PassOutIntent" unit="virtualinvoke $r0.&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;androidx.fragment.app.FragmentActivity$HostCallbacks: void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;androidx.fragment.app.FragmentActivity$HostCallbacks: void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)&gt;,void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle), &lt;androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)&gt;"/>  
      <source name="androidx.fragment.app.FragmentActivity"/>  
      <nodes> 
        <node method="&lt;androidx.fragment.app.FragmentActivity$HostCallbacks: void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)&gt;"/>  
        <node method="FragmentActivity$HostCallbacks onStartActivityFromFragment" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter1: android.content.Intent"/>  
        <node method="FragmentActivity$HostCallbacks onStartActivityFromFragment" type="PassOutIntent" unit="virtualinvoke $r4.&lt;androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)&gt;($r1, $r2, $i0, $r3)"/>  
        <node method="FragmentActivity startActivityFromFragment" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>  
        <node method="FragmentActivity startActivityFromFragment" type="PassOutIntent" unit="staticinvoke &lt;androidx.core.app.ActivityCompat: void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)&gt;(r0, $r1, -1, $r2)"/>  
        <node method="ActivityCompat startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>  
        <node method="ActivityCompat startActivityForResult" type="PassOutIntent" unit="virtualinvoke $r0.&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)&gt;($r1, $i0, $r2)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;androidx.fragment.app.FragmentActivity$HostCallbacks: void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;androidx.fragment.app.FragmentActivity$HostCallbacks: void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)&gt;,&lt;androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)&gt;,void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle), &lt;androidx.core.app.ActivityCompat: void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)&gt;"/>  
      <source name="androidx.fragment.app.FragmentActivity"/>  
      <nodes> 
        <node method="&lt;androidx.fragment.app.FragmentActivity$HostCallbacks: void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)&gt;"/>  
        <node method="&lt;androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)&gt;"/>  
        <node method="FragmentActivity startActivityFromFragment" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>  
        <node method="FragmentActivity startActivityFromFragment" type="PassOutIntent" unit="staticinvoke &lt;androidx.core.app.ActivityCompat: void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)&gt;(r0, $r1, -1, $r2)"/>  
        <node method="ActivityCompat startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>  
        <node method="ActivityCompat startActivityForResult" type="PassOutIntent" unit="virtualinvoke $r0.&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/>  
        <node method="ActivityCompat startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>  
        <node method="ActivityCompat startActivityForResult" type="PassOutIntent" unit="virtualinvoke $r0.&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;androidx.fragment.app.FragmentActivity$HostCallbacks: void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;androidx.fragment.app.FragmentActivity$HostCallbacks: void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)&gt;,&lt;androidx.core.app.ActivityCompat: void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)&gt;,void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)"/>  
      <source name="androidx.fragment.app.FragmentActivity"/>  
      <nodes> 
        <node method="&lt;androidx.fragment.app.FragmentActivity$HostCallbacks: void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)&gt;"/>  
        <node method="&lt;androidx.core.app.ActivityCompat: void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)&gt;"/>  
        <node method="ActivityCompat startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>  
        <node method="ActivityCompat startActivityForResult" type="PassOutIntent" unit="virtualinvoke $r0.&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int)&gt;($r1, $i0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;androidx.fragment.app.FragmentActivity$HostCallbacks: void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;androidx.fragment.app.FragmentActivity$HostCallbacks: void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)&gt;,&lt;androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)&gt;,void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle), &lt;androidx.core.app.ActivityCompat: void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)&gt;"/>  
      <source name="androidx.fragment.app.FragmentActivity"/>  
      <nodes> 
        <node method="&lt;androidx.fragment.app.FragmentActivity$HostCallbacks: void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)&gt;"/>  
        <node method="&lt;androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)&gt;"/>  
        <node method="FragmentActivity startActivityFromFragment" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>  
        <node method="ActivityCompat startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>  
        <node method="ActivityCompat startActivityForResult" type="PassOutIntent" unit="virtualinvoke $r0.&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)&gt;($r1, $i0, $r2)"/>  
        <node method="FragmentActivity startActivityFromFragment" type="PassOutIntent" unit="staticinvoke &lt;androidx.core.app.ActivityCompat: void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)&gt;(r0, $r1, $i1, $r2)"/>  
        <node method="ActivityCompat startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>  
        <node method="ActivityCompat startActivityForResult" type="PassOutIntent" unit="virtualinvoke $r0.&lt;android.app.Activity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)&gt;($r1, $i0, $r2)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.AppSettingsActivity"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.AppSettingsActivity$SettingsFragment$onCreatePreferences$$inlined$apply$lambda$1: boolean onPreferenceClick(androidx.preference.Preference)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.AppSettingsActivity$SettingsFragment$onCreatePreferences$$inlined$apply$lambda$1: boolean onPreferenceClick(androidx.preference.Preference)&gt;,&lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent)&gt;,void startActivity(android.content.Intent), &lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.AppSettingsActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.AppSettingsActivity$SettingsFragment$onCreatePreferences$$inlined$apply$lambda$1: boolean onPreferenceClick(androidx.preference.Preference)&gt;"/>  
        <node method="&lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent)&gt;"/>  
        <node method="Fragment startActivity" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="Fragment startActivity" type="PassOutIntent" unit="virtualinvoke r0.&lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)&gt;($r1, null)"/>  
        <node method="Fragment startActivity" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.AppSettingsActivity$SettingsFragment$onCreatePreferences$$inlined$apply$lambda$1: boolean onPreferenceClick(androidx.preference.Preference)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.AppSettingsActivity$SettingsFragment$onCreatePreferences$$inlined$apply$lambda$1: boolean onPreferenceClick(androidx.preference.Preference)&gt;,&lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)&gt;,void startActivity(android.content.Intent,android.os.Bundle)"/>  
      <source name="com.etesync.syncadapter.ui.AppSettingsActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.AppSettingsActivity$SettingsFragment$onCreatePreferences$$inlined$apply$lambda$1: boolean onPreferenceClick(androidx.preference.Preference)&gt;"/>  
        <node method="&lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)&gt;"/>  
        <node method="Fragment startActivity" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.AppSettingsActivity$SettingsFragment$onCreatePreferences$$inlined$apply$lambda$1: boolean onPreferenceClick(androidx.preference.Preference)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.AppSettingsActivity$SettingsFragment$onCreatePreferences$$inlined$apply$lambda$1: boolean onPreferenceClick(androidx.preference.Preference)&gt;,boolean onPreferenceClick(androidx.preference.Preference), &lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.AppSettingsActivity"/>  
      <destinition name="interICC_android.settings.APP_NOTIFICATION_SETTINGS, "/>  
      <sender action="android.settings.APP_NOTIFICATION_SETTINGS"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.AppSettingsActivity$SettingsFragment$onCreatePreferences$$inlined$apply$lambda$1: boolean onPreferenceClick(androidx.preference.Preference)&gt;"/>  
        <node method="AppSettingsActivity$SettingsFragment$onCreatePreferences$$inlined$apply$lambda$1 onPreferenceClick" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="AppSettingsActivity$SettingsFragment$onCreatePreferences$$inlined$apply$lambda$1 onPreferenceClick" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.settings.APP_NOTIFICATION_SETTINGS&quot;)"/>  
        <node method="AppSettingsActivity$SettingsFragment$onCreatePreferences$$inlined$apply$lambda$1 onPreferenceClick" type="PassOutIntent" unit="virtualinvoke $r3.&lt;com.etesync.syncadapter.ui.AppSettingsActivity$SettingsFragment: void startActivity(android.content.Intent)&gt;($r1)"/>  
        <node method="Fragment startActivity" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="Fragment startActivity" type="PassOutIntent" unit="virtualinvoke r0.&lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)&gt;($r1, null)"/>  
        <node method="Fragment startActivity" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="at.bitfire.cert4android.CustomCertManager"> 
    <intentSummary> 
      <method value="&lt;at.bitfire.cert4android.CustomCertManager$Companion: boolean resetCertificates(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;at.bitfire.cert4android.CustomCertManager$Companion: boolean resetCertificates(android.content.Context)&gt;,boolean resetCertificates(android.content.Context)"/>  
      <source name="at.bitfire.cert4android.CustomCertManager"/>  
      <destinition name="at.bitfire.cert4android.CustomCertService"/>  
      <sender action="resetCertificates"/>  
      <nodes> 
        <node method="&lt;at.bitfire.cert4android.CustomCertManager$Companion: boolean resetCertificates(android.content.Context)&gt;"/>  
        <node method="CustomCertManager$Companion resetCertificates" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="CustomCertManager$Companion resetCertificates" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lat/bitfire/cert4android/CustomCertService;&quot;)"/>  
        <node method="CustomCertManager$Companion resetCertificates" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;resetCertificates&quot;)"/>  
        <node method="CustomCertManager$Companion resetCertificates" type="PassOutIntent" unit="$r1 = virtualinvoke $r2.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r3)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.AppSettingsActivity"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.AppSettingsActivity$SettingsFragment: void resetCertificates()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.AppSettingsActivity$SettingsFragment: void resetCertificates()&gt;,&lt;at.bitfire.cert4android.CustomCertManager$Companion: boolean resetCertificates(android.content.Context)&gt;,boolean resetCertificates(android.content.Context)"/>  
      <source name="com.etesync.syncadapter.ui.AppSettingsActivity"/>  
      <destinition name="at.bitfire.cert4android.CustomCertService"/>  
      <sender action="resetCertificates"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.AppSettingsActivity$SettingsFragment: void resetCertificates()&gt;"/>  
        <node method="&lt;at.bitfire.cert4android.CustomCertManager$Companion: boolean resetCertificates(android.content.Context)&gt;"/>  
        <node method="CustomCertManager$Companion resetCertificates" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="CustomCertManager$Companion resetCertificates" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lat/bitfire/cert4android/CustomCertService;&quot;)"/>  
        <node method="CustomCertManager$Companion resetCertificates" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;resetCertificates&quot;)"/>  
        <node method="CustomCertManager$Companion resetCertificates" type="PassOutIntent" unit="$r1 = virtualinvoke $r2.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r3)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.AppSettingsActivity"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.AppSettingsActivity$SettingsFragment: void access$resetCertificates(com.etesync.syncadapter.ui.AppSettingsActivity$SettingsFragment)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.AppSettingsActivity$SettingsFragment: void access$resetCertificates(com.etesync.syncadapter.ui.AppSettingsActivity$SettingsFragment)&gt;,&lt;com.etesync.syncadapter.ui.AppSettingsActivity$SettingsFragment: void resetCertificates()&gt;,&lt;at.bitfire.cert4android.CustomCertManager$Companion: boolean resetCertificates(android.content.Context)&gt;,boolean resetCertificates(android.content.Context)"/>  
      <source name="com.etesync.syncadapter.ui.AppSettingsActivity"/>  
      <destinition name="at.bitfire.cert4android.CustomCertService"/>  
      <sender action="resetCertificates"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.AppSettingsActivity$SettingsFragment: void access$resetCertificates(com.etesync.syncadapter.ui.AppSettingsActivity$SettingsFragment)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.AppSettingsActivity$SettingsFragment: void resetCertificates()&gt;"/>  
        <node method="&lt;at.bitfire.cert4android.CustomCertManager$Companion: boolean resetCertificates(android.content.Context)&gt;"/>  
        <node method="CustomCertManager$Companion resetCertificates" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="CustomCertManager$Companion resetCertificates" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lat/bitfire/cert4android/CustomCertService;&quot;)"/>  
        <node method="CustomCertManager$Companion resetCertificates" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;resetCertificates&quot;)"/>  
        <node method="CustomCertManager$Companion resetCertificates" type="PassOutIntent" unit="$r1 = virtualinvoke $r2.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r3)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.AppSettingsActivity"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.AppSettingsActivity$SettingsFragment$onCreatePreferences$$inlined$apply$lambda$2: boolean onPreferenceClick(androidx.preference.Preference)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.AppSettingsActivity$SettingsFragment$onCreatePreferences$$inlined$apply$lambda$2: boolean onPreferenceClick(androidx.preference.Preference)&gt;,&lt;com.etesync.syncadapter.ui.AppSettingsActivity$SettingsFragment: void access$resetCertificates(com.etesync.syncadapter.ui.AppSettingsActivity$SettingsFragment)&gt;,&lt;com.etesync.syncadapter.ui.AppSettingsActivity$SettingsFragment: void resetCertificates()&gt;,&lt;at.bitfire.cert4android.CustomCertManager$Companion: boolean resetCertificates(android.content.Context)&gt;,boolean resetCertificates(android.content.Context)"/>  
      <source name="com.etesync.syncadapter.ui.AppSettingsActivity"/>  
      <destinition name="at.bitfire.cert4android.CustomCertService"/>  
      <sender action="resetCertificates"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.AppSettingsActivity$SettingsFragment$onCreatePreferences$$inlined$apply$lambda$2: boolean onPreferenceClick(androidx.preference.Preference)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.AppSettingsActivity$SettingsFragment: void access$resetCertificates(com.etesync.syncadapter.ui.AppSettingsActivity$SettingsFragment)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.AppSettingsActivity$SettingsFragment: void resetCertificates()&gt;"/>  
        <node method="&lt;at.bitfire.cert4android.CustomCertManager$Companion: boolean resetCertificates(android.content.Context)&gt;"/>  
        <node method="CustomCertManager$Companion resetCertificates" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="CustomCertManager$Companion resetCertificates" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lat/bitfire/cert4android/CustomCertService;&quot;)"/>  
        <node method="CustomCertManager$Companion resetCertificates" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;resetCertificates&quot;)"/>  
        <node method="CustomCertManager$Companion resetCertificates" type="PassOutIntent" unit="$r1 = virtualinvoke $r2.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r3)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.RemoveMemberFragment"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.RemoveMemberFragment$MemberRemove: com.etesync.syncadapter.ui.RemoveMemberFragment$MemberRemove$RemoveResult doInBackground(java.lang.Void[])&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.RemoveMemberFragment$MemberRemove: com.etesync.syncadapter.ui.RemoveMemberFragment$MemberRemove$RemoveResult doInBackground(java.lang.Void[])&gt;,&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;,&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;,void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)"/>  
      <source name="com.etesync.syncadapter.ui.RemoveMemberFragment"/>  
      <destinition name="at.bitfire.cert4android.CustomCertService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.RemoveMemberFragment$MemberRemove: com.etesync.syncadapter.ui.RemoveMemberFragment$MemberRemove$RemoveResult doInBackground(java.lang.Void[])&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;"/>  
        <node method="&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;"/>  
        <node method="CustomCertManager &lt;init&gt;" type="CreateMethod" unit="$r11 = new android.content.Intent"/>  
        <node method="CustomCertManager &lt;init&gt;" type="SetAttribute" unit="specialinvoke $r11.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r12, class &quot;Lat/bitfire/cert4android/CustomCertService;&quot;)"/>  
        <node method="CustomCertManager &lt;init&gt;" type="PassOutIntent" unit="$z0 = virtualinvoke $r2.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r11, $r13, 1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.RemoveMemberFragment"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.RemoveMemberFragment$MemberRemove: java.lang.Object doInBackground(java.lang.Object[])&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.RemoveMemberFragment$MemberRemove: java.lang.Object doInBackground(java.lang.Object[])&gt;,&lt;com.etesync.syncadapter.ui.RemoveMemberFragment$MemberRemove: com.etesync.syncadapter.ui.RemoveMemberFragment$MemberRemove$RemoveResult doInBackground(java.lang.Void[])&gt;,&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;,&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;,void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)"/>  
      <source name="com.etesync.syncadapter.ui.RemoveMemberFragment"/>  
      <destinition name="at.bitfire.cert4android.CustomCertService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.RemoveMemberFragment$MemberRemove: java.lang.Object doInBackground(java.lang.Object[])&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.RemoveMemberFragment$MemberRemove: com.etesync.syncadapter.ui.RemoveMemberFragment$MemberRemove$RemoveResult doInBackground(java.lang.Void[])&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;"/>  
        <node method="&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;"/>  
        <node method="CustomCertManager &lt;init&gt;" type="CreateMethod" unit="$r11 = new android.content.Intent"/>  
        <node method="CustomCertManager &lt;init&gt;" type="SetAttribute" unit="specialinvoke $r11.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r12, class &quot;Lat/bitfire/cert4android/CustomCertService;&quot;)"/>  
        <node method="CustomCertManager &lt;init&gt;" type="PassOutIntent" unit="$z0 = virtualinvoke $r2.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r11, $r13, 1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.setup.SetupEncryptionFragment"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.setup.SetupEncryptionFragment$SetupEncryptionLoader: com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration doInBackground(java.lang.Void[])&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.setup.SetupEncryptionFragment$SetupEncryptionLoader: com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration doInBackground(java.lang.Void[])&gt;,&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;,&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;,void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)"/>  
      <source name="com.etesync.syncadapter.ui.setup.SetupEncryptionFragment"/>  
      <destinition name="at.bitfire.cert4android.CustomCertService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.setup.SetupEncryptionFragment$SetupEncryptionLoader: com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration doInBackground(java.lang.Void[])&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;"/>  
        <node method="&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;"/>  
        <node method="CustomCertManager &lt;init&gt;" type="CreateMethod" unit="$r11 = new android.content.Intent"/>  
        <node method="CustomCertManager &lt;init&gt;" type="SetAttribute" unit="specialinvoke $r11.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r12, class &quot;Lat/bitfire/cert4android/CustomCertService;&quot;)"/>  
        <node method="CustomCertManager &lt;init&gt;" type="PassOutIntent" unit="$z0 = virtualinvoke $r2.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r11, $r13, 1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.setup.SetupEncryptionFragment"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.setup.SetupEncryptionFragment$SetupEncryptionLoader: java.lang.Object doInBackground(java.lang.Object[])&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.setup.SetupEncryptionFragment$SetupEncryptionLoader: java.lang.Object doInBackground(java.lang.Object[])&gt;,&lt;com.etesync.syncadapter.ui.setup.SetupEncryptionFragment$SetupEncryptionLoader: com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration doInBackground(java.lang.Void[])&gt;,&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;,&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;,void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)"/>  
      <source name="com.etesync.syncadapter.ui.setup.SetupEncryptionFragment"/>  
      <destinition name="at.bitfire.cert4android.CustomCertService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.setup.SetupEncryptionFragment$SetupEncryptionLoader: java.lang.Object doInBackground(java.lang.Object[])&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.setup.SetupEncryptionFragment$SetupEncryptionLoader: com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration doInBackground(java.lang.Void[])&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;"/>  
        <node method="&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;"/>  
        <node method="CustomCertManager &lt;init&gt;" type="CreateMethod" unit="$r11 = new android.content.Intent"/>  
        <node method="CustomCertManager &lt;init&gt;" type="SetAttribute" unit="specialinvoke $r11.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r12, class &quot;Lat/bitfire/cert4android/CustomCertService;&quot;)"/>  
        <node method="CustomCertManager &lt;init&gt;" type="PassOutIntent" unit="$z0 = virtualinvoke $r2.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r11, $r13, 1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="at.bitfire.cert4android.TrustCertificateActivity"> 
    <intentSummary> 
      <method value="&lt;at.bitfire.cert4android.TrustCertificateActivity: void onNewIntent(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;at.bitfire.cert4android.TrustCertificateActivity: void onNewIntent(android.content.Intent)&gt;,void onNewIntent(android.content.Intent)"/>  
      <source name="at.bitfire.cert4android.TrustCertificateActivity"/>  
      <nodes> 
        <node method="&lt;at.bitfire.cert4android.TrustCertificateActivity: void onNewIntent(android.content.Intent)&gt;"/>  
        <node method="TrustCertificateActivity onNewIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.log.Logger"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;,void reinitialize()"/>  
      <source name="com.etesync.syncadapter.log.Logger"/>  
      <destinition name="com.etesync.syncadapter.ui.AppSettingsActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;"/>  
        <node method="Logger reinitialize" type="CreateMethod" unit="$r24 = new android.content.Intent"/>  
        <node method="Logger reinitialize" type="SetAttribute" unit="specialinvoke $r24.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r10, class &quot;Lcom/etesync/syncadapter/ui/AppSettingsActivity;&quot;)"/>  
        <node method="Logger reinitialize" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;,&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;,androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)"/>  
      <source name="com.etesync.syncadapter.log.Logger"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;,void reinitialize(), &lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
      <source name="com.etesync.syncadapter.log.Logger"/>  
      <destinition name="com.etesync.syncadapter.ui.AppSettingsActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;"/>  
        <node method="Logger reinitialize" type="CreateMethod" unit="$r24 = new android.content.Intent"/>  
        <node method="Logger reinitialize" type="SetAttribute" unit="specialinvoke $r24.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r10, class &quot;Lcom/etesync/syncadapter/ui/AppSettingsActivity;&quot;)"/>  
        <node method="Logger reinitialize" type="SetAttribute" unit="virtualinvoke $r24.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(268435456)"/>  
        <node method="Logger reinitialize" type="PassOutIntent" unit="$r14 = virtualinvoke $r14.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r25)"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="Logger reinitialize" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;,&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;,androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)"/>  
      <source name="com.etesync.syncadapter.log.Logger"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;,void reinitialize()"/>  
      <source name="com.etesync.syncadapter.log.Logger"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;"/>  
        <node method="Logger reinitialize" type="CreateMethod" unit="$r24 = new android.content.Intent"/>  
        <node method="Logger reinitialize" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;,&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="com.etesync.syncadapter.log.Logger"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setContentIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setDeleteIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;,void reinitialize()"/>  
      <source name="com.etesync.syncadapter.log.Logger"/>  
      <destinition name="com.etesync.syncadapter.ui.AppSettingsActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;"/>  
        <node method="Logger reinitialize" type="CreateMethod" unit="$r24 = new android.content.Intent"/>  
        <node method="Logger reinitialize" type="SetAttribute" unit="specialinvoke $r24.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r10, class &quot;Lcom/etesync/syncadapter/ui/AppSettingsActivity;&quot;)"/>  
        <node method="Logger reinitialize" type="SetAttribute" unit="virtualinvoke $r24.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(268435456)"/>  
        <node method="Logger reinitialize" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;,void reinitialize()"/>  
      <source name="com.etesync.syncadapter.log.Logger"/>  
      <destinition name="com.etesync.syncadapter.ui.AppSettingsActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;"/>  
        <node method="Logger reinitialize" type="CreateMethod" unit="$r24 = new android.content.Intent"/>  
        <node method="Logger reinitialize" type="SetAttribute" unit="specialinvoke $r24.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r10, class &quot;Lcom/etesync/syncadapter/ui/AppSettingsActivity;&quot;)"/>  
        <node method="Logger reinitialize" type="SetAttribute" unit="virtualinvoke $r24.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(268435456)"/>  
        <node method="Logger reinitialize" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;,&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="com.etesync.syncadapter.log.Logger"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setDeleteIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;,&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="com.etesync.syncadapter.log.Logger"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.log.Logger"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;,&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;,void reinitialize()"/>  
      <source name="com.etesync.syncadapter.log.Logger"/>  
      <destinition name="com.etesync.syncadapter.ui.AppSettingsActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;"/>  
        <node method="Logger reinitialize" type="CreateMethod" unit="$r24 = new android.content.Intent"/>  
        <node method="Logger reinitialize" type="SetAttribute" unit="specialinvoke $r24.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r10, class &quot;Lcom/etesync/syncadapter/ui/AppSettingsActivity;&quot;)"/>  
        <node method="Logger reinitialize" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;,&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;,&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;,androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)"/>  
      <source name="com.etesync.syncadapter.log.Logger"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;,&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;,void reinitialize(), &lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
      <source name="com.etesync.syncadapter.log.Logger"/>  
      <destinition name="com.etesync.syncadapter.ui.AppSettingsActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;"/>  
        <node method="Logger reinitialize" type="CreateMethod" unit="$r24 = new android.content.Intent"/>  
        <node method="Logger reinitialize" type="SetAttribute" unit="specialinvoke $r24.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r10, class &quot;Lcom/etesync/syncadapter/ui/AppSettingsActivity;&quot;)"/>  
        <node method="Logger reinitialize" type="SetAttribute" unit="virtualinvoke $r24.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(268435456)"/>  
        <node method="Logger reinitialize" type="PassOutIntent" unit="$r14 = virtualinvoke $r14.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r25)"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="Logger reinitialize" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;,&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;,&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;,androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)"/>  
      <source name="com.etesync.syncadapter.log.Logger"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;,&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;,void reinitialize()"/>  
      <source name="com.etesync.syncadapter.log.Logger"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;"/>  
        <node method="Logger reinitialize" type="CreateMethod" unit="$r24 = new android.content.Intent"/>  
        <node method="Logger reinitialize" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;,&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;,&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="com.etesync.syncadapter.log.Logger"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setContentIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setDeleteIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;,&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;,void reinitialize()"/>  
      <source name="com.etesync.syncadapter.log.Logger"/>  
      <destinition name="com.etesync.syncadapter.ui.AppSettingsActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;"/>  
        <node method="Logger reinitialize" type="CreateMethod" unit="$r24 = new android.content.Intent"/>  
        <node method="Logger reinitialize" type="SetAttribute" unit="specialinvoke $r24.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r10, class &quot;Lcom/etesync/syncadapter/ui/AppSettingsActivity;&quot;)"/>  
        <node method="Logger reinitialize" type="SetAttribute" unit="virtualinvoke $r24.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(268435456)"/>  
        <node method="Logger reinitialize" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;,&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;,void reinitialize()"/>  
      <source name="com.etesync.syncadapter.log.Logger"/>  
      <destinition name="com.etesync.syncadapter.ui.AppSettingsActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;"/>  
        <node method="Logger reinitialize" type="CreateMethod" unit="$r24 = new android.content.Intent"/>  
        <node method="Logger reinitialize" type="SetAttribute" unit="specialinvoke $r24.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r10, class &quot;Lcom/etesync/syncadapter/ui/AppSettingsActivity;&quot;)"/>  
        <node method="Logger reinitialize" type="SetAttribute" unit="virtualinvoke $r24.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(268435456)"/>  
        <node method="Logger reinitialize" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;,&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;,&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="com.etesync.syncadapter.log.Logger"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setDeleteIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;,&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;,&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="com.etesync.syncadapter.log.Logger"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.App"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.App: void reinitLogger()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.App: void reinitLogger()&gt;,&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;,&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;,void reinitialize()"/>  
      <source name="com.etesync.syncadapter.App"/>  
      <destinition name="com.etesync.syncadapter.ui.AppSettingsActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.App: void reinitLogger()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;"/>  
        <node method="Logger reinitialize" type="CreateMethod" unit="$r24 = new android.content.Intent"/>  
        <node method="Logger reinitialize" type="SetAttribute" unit="specialinvoke $r24.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r10, class &quot;Lcom/etesync/syncadapter/ui/AppSettingsActivity;&quot;)"/>  
        <node method="Logger reinitialize" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.App: void reinitLogger()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.App: void reinitLogger()&gt;,&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;,&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;,&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;,androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)"/>  
      <source name="com.etesync.syncadapter.App"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.App: void reinitLogger()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.App: void reinitLogger()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.App: void reinitLogger()&gt;,&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;,&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;,void reinitialize(), &lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
      <source name="com.etesync.syncadapter.App"/>  
      <destinition name="com.etesync.syncadapter.ui.AppSettingsActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.App: void reinitLogger()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;"/>  
        <node method="Logger reinitialize" type="CreateMethod" unit="$r24 = new android.content.Intent"/>  
        <node method="Logger reinitialize" type="SetAttribute" unit="specialinvoke $r24.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r10, class &quot;Lcom/etesync/syncadapter/ui/AppSettingsActivity;&quot;)"/>  
        <node method="Logger reinitialize" type="SetAttribute" unit="virtualinvoke $r24.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(268435456)"/>  
        <node method="Logger reinitialize" type="PassOutIntent" unit="$r14 = virtualinvoke $r14.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r25)"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="Logger reinitialize" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.App: void reinitLogger()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.App: void reinitLogger()&gt;,&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;,&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;,&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;,androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)"/>  
      <source name="com.etesync.syncadapter.App"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.App: void reinitLogger()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.App: void reinitLogger()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.App: void reinitLogger()&gt;,&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;,&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;,void reinitialize()"/>  
      <source name="com.etesync.syncadapter.App"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.App: void reinitLogger()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;"/>  
        <node method="Logger reinitialize" type="CreateMethod" unit="$r24 = new android.content.Intent"/>  
        <node method="Logger reinitialize" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.App: void reinitLogger()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.App: void reinitLogger()&gt;,&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;,&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;,&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="com.etesync.syncadapter.App"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.App: void reinitLogger()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setContentIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setDeleteIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.App: void reinitLogger()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.App: void reinitLogger()&gt;,&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;,&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;,void reinitialize()"/>  
      <source name="com.etesync.syncadapter.App"/>  
      <destinition name="com.etesync.syncadapter.ui.AppSettingsActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.App: void reinitLogger()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;"/>  
        <node method="Logger reinitialize" type="CreateMethod" unit="$r24 = new android.content.Intent"/>  
        <node method="Logger reinitialize" type="SetAttribute" unit="specialinvoke $r24.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r10, class &quot;Lcom/etesync/syncadapter/ui/AppSettingsActivity;&quot;)"/>  
        <node method="Logger reinitialize" type="SetAttribute" unit="virtualinvoke $r24.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(268435456)"/>  
        <node method="Logger reinitialize" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.App: void reinitLogger()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.App: void reinitLogger()&gt;,&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;,&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;,void reinitialize()"/>  
      <source name="com.etesync.syncadapter.App"/>  
      <destinition name="com.etesync.syncadapter.ui.AppSettingsActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.App: void reinitLogger()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;"/>  
        <node method="Logger reinitialize" type="CreateMethod" unit="$r24 = new android.content.Intent"/>  
        <node method="Logger reinitialize" type="SetAttribute" unit="specialinvoke $r24.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r10, class &quot;Lcom/etesync/syncadapter/ui/AppSettingsActivity;&quot;)"/>  
        <node method="Logger reinitialize" type="SetAttribute" unit="virtualinvoke $r24.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(268435456)"/>  
        <node method="Logger reinitialize" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.App: void reinitLogger()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.App: void reinitLogger()&gt;,&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;,&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;,&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="com.etesync.syncadapter.App"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.App: void reinitLogger()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setDeleteIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.App: void reinitLogger()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.App: void reinitLogger()&gt;,&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;,&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;,&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="com.etesync.syncadapter.App"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.App: void reinitLogger()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="at.bitfire.cert4android.TrustCertificateActivity"> 
    <intentSummary> 
      <method value="&lt;at.bitfire.cert4android.TrustCertificateActivity: void acceptCertificate(android.view.View)&gt;"/>  
      <methodtrace value="&lt;at.bitfire.cert4android.TrustCertificateActivity: void acceptCertificate(android.view.View)&gt;,&lt;at.bitfire.cert4android.TrustCertificateActivity: void sendDecision(boolean)&gt;,void sendDecision(boolean)"/>  
      <source name="at.bitfire.cert4android.TrustCertificateActivity"/>  
      <destinition name="at.bitfire.cert4android.CustomCertService"/>  
      <sender action="certificateDecision"/>  
      <nodes> 
        <node method="&lt;at.bitfire.cert4android.TrustCertificateActivity: void acceptCertificate(android.view.View)&gt;"/>  
        <node method="&lt;at.bitfire.cert4android.TrustCertificateActivity: void sendDecision(boolean)&gt;"/>  
        <node method="TrustCertificateActivity sendDecision" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="TrustCertificateActivity sendDecision" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lat/bitfire/cert4android/CustomCertService;&quot;)"/>  
        <node method="TrustCertificateActivity sendDecision" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;certificateDecision&quot;)"/>  
        <node method="TrustCertificateActivity sendDecision" type="PassOutIntent" unit="virtualinvoke r0.&lt;at.bitfire.cert4android.TrustCertificateActivity: android.content.ComponentName startService(android.content.Intent)&gt;($r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.setup.LoginCredentialsChangeFragment"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.setup.LoginCredentialsChangeFragment$ServerConfigurationLoader: com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration loadInBackground()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.setup.LoginCredentialsChangeFragment$ServerConfigurationLoader: com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration loadInBackground()&gt;,&lt;com.etesync.syncadapter.ui.setup.BaseConfigurationFinder: void &lt;init&gt;(android.content.Context,com.etesync.syncadapter.ui.setup.LoginCredentials)&gt;,&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;,&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;,void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)"/>  
      <source name="com.etesync.syncadapter.ui.setup.LoginCredentialsChangeFragment"/>  
      <destinition name="at.bitfire.cert4android.CustomCertService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.setup.LoginCredentialsChangeFragment$ServerConfigurationLoader: com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration loadInBackground()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.setup.BaseConfigurationFinder: void &lt;init&gt;(android.content.Context,com.etesync.syncadapter.ui.setup.LoginCredentials)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;"/>  
        <node method="&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;"/>  
        <node method="CustomCertManager &lt;init&gt;" type="CreateMethod" unit="$r11 = new android.content.Intent"/>  
        <node method="CustomCertManager &lt;init&gt;" type="SetAttribute" unit="specialinvoke $r11.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r12, class &quot;Lat/bitfire/cert4android/CustomCertService;&quot;)"/>  
        <node method="CustomCertManager &lt;init&gt;" type="PassOutIntent" unit="$z0 = virtualinvoke $r2.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r11, $r13, 1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.AddMemberFragment"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.AddMemberFragment$MemberAdd: com.etesync.syncadapter.ui.AddMemberFragment$MemberAdd$AddResult doInBackground(java.lang.Void[])&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.AddMemberFragment$MemberAdd: com.etesync.syncadapter.ui.AddMemberFragment$MemberAdd$AddResult doInBackground(java.lang.Void[])&gt;,&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;,&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;,void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)"/>  
      <source name="com.etesync.syncadapter.ui.AddMemberFragment"/>  
      <destinition name="at.bitfire.cert4android.CustomCertService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.AddMemberFragment$MemberAdd: com.etesync.syncadapter.ui.AddMemberFragment$MemberAdd$AddResult doInBackground(java.lang.Void[])&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;"/>  
        <node method="&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;"/>  
        <node method="CustomCertManager &lt;init&gt;" type="CreateMethod" unit="$r11 = new android.content.Intent"/>  
        <node method="CustomCertManager &lt;init&gt;" type="SetAttribute" unit="specialinvoke $r11.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r12, class &quot;Lat/bitfire/cert4android/CustomCertService;&quot;)"/>  
        <node method="CustomCertManager &lt;init&gt;" type="PassOutIntent" unit="$z0 = virtualinvoke $r2.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r11, $r13, 1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.AddMemberFragment"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.AddMemberFragment$MemberAdd: java.lang.Object doInBackground(java.lang.Object[])&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.AddMemberFragment$MemberAdd: java.lang.Object doInBackground(java.lang.Object[])&gt;,&lt;com.etesync.syncadapter.ui.AddMemberFragment$MemberAdd: com.etesync.syncadapter.ui.AddMemberFragment$MemberAdd$AddResult doInBackground(java.lang.Void[])&gt;,&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;,&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;,void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)"/>  
      <source name="com.etesync.syncadapter.ui.AddMemberFragment"/>  
      <destinition name="at.bitfire.cert4android.CustomCertService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.AddMemberFragment$MemberAdd: java.lang.Object doInBackground(java.lang.Object[])&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.AddMemberFragment$MemberAdd: com.etesync.syncadapter.ui.AddMemberFragment$MemberAdd$AddResult doInBackground(java.lang.Void[])&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;"/>  
        <node method="&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;"/>  
        <node method="CustomCertManager &lt;init&gt;" type="CreateMethod" unit="$r11 = new android.content.Intent"/>  
        <node method="CustomCertManager &lt;init&gt;" type="SetAttribute" unit="specialinvoke $r11.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r12, class &quot;Lat/bitfire/cert4android/CustomCertService;&quot;)"/>  
        <node method="CustomCertManager &lt;init&gt;" type="PassOutIntent" unit="$z0 = virtualinvoke $r2.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r11, $r13, 1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.log.Logger"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.log.Logger: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.log.Logger: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;,&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;,void reinitialize()"/>  
      <source name="com.etesync.syncadapter.log.Logger"/>  
      <destinition name="com.etesync.syncadapter.ui.AppSettingsActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.log.Logger: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;"/>  
        <node method="Logger reinitialize" type="CreateMethod" unit="$r24 = new android.content.Intent"/>  
        <node method="Logger reinitialize" type="SetAttribute" unit="specialinvoke $r24.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r10, class &quot;Lcom/etesync/syncadapter/ui/AppSettingsActivity;&quot;)"/>  
        <node method="Logger reinitialize" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.log.Logger: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.log.Logger: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;,&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;,&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;,androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)"/>  
      <source name="com.etesync.syncadapter.log.Logger"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.log.Logger: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.log.Logger: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.log.Logger: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;,&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;,void reinitialize(), &lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
      <source name="com.etesync.syncadapter.log.Logger"/>  
      <destinition name="com.etesync.syncadapter.ui.AppSettingsActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.log.Logger: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;"/>  
        <node method="Logger reinitialize" type="CreateMethod" unit="$r24 = new android.content.Intent"/>  
        <node method="Logger reinitialize" type="SetAttribute" unit="specialinvoke $r24.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r10, class &quot;Lcom/etesync/syncadapter/ui/AppSettingsActivity;&quot;)"/>  
        <node method="Logger reinitialize" type="SetAttribute" unit="virtualinvoke $r24.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(268435456)"/>  
        <node method="Logger reinitialize" type="PassOutIntent" unit="$r14 = virtualinvoke $r14.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r25)"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="Logger reinitialize" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.log.Logger: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.log.Logger: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;,&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;,&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;,androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)"/>  
      <source name="com.etesync.syncadapter.log.Logger"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.log.Logger: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.log.Logger: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.log.Logger: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;,&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;,void reinitialize()"/>  
      <source name="com.etesync.syncadapter.log.Logger"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.log.Logger: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;"/>  
        <node method="Logger reinitialize" type="CreateMethod" unit="$r24 = new android.content.Intent"/>  
        <node method="Logger reinitialize" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.log.Logger: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.log.Logger: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;,&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;,&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="com.etesync.syncadapter.log.Logger"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.log.Logger: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setContentIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setDeleteIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.log.Logger: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.log.Logger: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;,&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;,void reinitialize()"/>  
      <source name="com.etesync.syncadapter.log.Logger"/>  
      <destinition name="com.etesync.syncadapter.ui.AppSettingsActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.log.Logger: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;"/>  
        <node method="Logger reinitialize" type="CreateMethod" unit="$r24 = new android.content.Intent"/>  
        <node method="Logger reinitialize" type="SetAttribute" unit="specialinvoke $r24.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r10, class &quot;Lcom/etesync/syncadapter/ui/AppSettingsActivity;&quot;)"/>  
        <node method="Logger reinitialize" type="SetAttribute" unit="virtualinvoke $r24.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(268435456)"/>  
        <node method="Logger reinitialize" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.log.Logger: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.log.Logger: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;,&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;,void reinitialize()"/>  
      <source name="com.etesync.syncadapter.log.Logger"/>  
      <destinition name="com.etesync.syncadapter.ui.AppSettingsActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.log.Logger: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;"/>  
        <node method="Logger reinitialize" type="CreateMethod" unit="$r24 = new android.content.Intent"/>  
        <node method="Logger reinitialize" type="SetAttribute" unit="specialinvoke $r24.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r10, class &quot;Lcom/etesync/syncadapter/ui/AppSettingsActivity;&quot;)"/>  
        <node method="Logger reinitialize" type="SetAttribute" unit="virtualinvoke $r24.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(268435456)"/>  
        <node method="Logger reinitialize" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.log.Logger: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.log.Logger: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;,&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;,&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="com.etesync.syncadapter.log.Logger"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.log.Logger: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setDeleteIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.log.Logger: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.log.Logger: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;,&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;,&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="com.etesync.syncadapter.log.Logger"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.log.Logger: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="at.bitfire.cert4android.TrustCertificateActivity"> 
    <intentSummary> 
      <method value="&lt;at.bitfire.cert4android.TrustCertificateActivity: void rejectCertificate(android.view.View)&gt;"/>  
      <methodtrace value="&lt;at.bitfire.cert4android.TrustCertificateActivity: void rejectCertificate(android.view.View)&gt;,&lt;at.bitfire.cert4android.TrustCertificateActivity: void sendDecision(boolean)&gt;,void sendDecision(boolean)"/>  
      <source name="at.bitfire.cert4android.TrustCertificateActivity"/>  
      <destinition name="at.bitfire.cert4android.CustomCertService"/>  
      <sender action="certificateDecision"/>  
      <nodes> 
        <node method="&lt;at.bitfire.cert4android.TrustCertificateActivity: void rejectCertificate(android.view.View)&gt;"/>  
        <node method="&lt;at.bitfire.cert4android.TrustCertificateActivity: void sendDecision(boolean)&gt;"/>  
        <node method="TrustCertificateActivity sendDecision" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="TrustCertificateActivity sendDecision" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lat/bitfire/cert4android/CustomCertService;&quot;)"/>  
        <node method="TrustCertificateActivity sendDecision" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;certificateDecision&quot;)"/>  
        <node method="TrustCertificateActivity sendDecision" type="PassOutIntent" unit="virtualinvoke r0.&lt;at.bitfire.cert4android.TrustCertificateActivity: android.content.ComponentName startService(android.content.Intent)&gt;($r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.ViewCollectionActivity"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.ViewCollectionActivity$Companion: android.content.Intent newIntent(android.content.Context,android.accounts.Account,com.etesync.syncadapter.model.CollectionInfo)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.ViewCollectionActivity$Companion: android.content.Intent newIntent(android.content.Context,android.accounts.Account,com.etesync.syncadapter.model.CollectionInfo)&gt;,android.content.Intent newIntent(android.content.Context,android.accounts.Account,com.etesync.syncadapter.model.CollectionInfo)"/>  
      <source name="com.etesync.syncadapter.ui.ViewCollectionActivity"/>  
      <destinition name="com.etesync.syncadapter.ui.ViewCollectionActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.ViewCollectionActivity$Companion: android.content.Intent newIntent(android.content.Context,android.accounts.Account,com.etesync.syncadapter.model.CollectionInfo)&gt;"/>  
        <node method="ViewCollectionActivity$Companion newIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="ViewCollectionActivity$Companion newIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lcom/etesync/syncadapter/ui/ViewCollectionActivity;&quot;)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.setup.SetupUserInfoFragment"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.setup.SetupUserInfoFragment$SetupUserInfo: com.etesync.syncadapter.ui.setup.SetupUserInfoFragment$SetupUserInfo$SetupUserInfoResult doInBackground(android.accounts.Account[])&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.setup.SetupUserInfoFragment$SetupUserInfo: com.etesync.syncadapter.ui.setup.SetupUserInfoFragment$SetupUserInfo$SetupUserInfoResult doInBackground(android.accounts.Account[])&gt;,&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;,&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;,void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)"/>  
      <source name="com.etesync.syncadapter.ui.setup.SetupUserInfoFragment"/>  
      <destinition name="at.bitfire.cert4android.CustomCertService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.setup.SetupUserInfoFragment$SetupUserInfo: com.etesync.syncadapter.ui.setup.SetupUserInfoFragment$SetupUserInfo$SetupUserInfoResult doInBackground(android.accounts.Account[])&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;"/>  
        <node method="&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;"/>  
        <node method="CustomCertManager &lt;init&gt;" type="CreateMethod" unit="$r11 = new android.content.Intent"/>  
        <node method="CustomCertManager &lt;init&gt;" type="SetAttribute" unit="specialinvoke $r11.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r12, class &quot;Lat/bitfire/cert4android/CustomCertService;&quot;)"/>  
        <node method="CustomCertManager &lt;init&gt;" type="PassOutIntent" unit="$z0 = virtualinvoke $r2.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r11, $r13, 1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.setup.SetupUserInfoFragment"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.setup.SetupUserInfoFragment$SetupUserInfo: java.lang.Object doInBackground(java.lang.Object[])&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.setup.SetupUserInfoFragment$SetupUserInfo: java.lang.Object doInBackground(java.lang.Object[])&gt;,&lt;com.etesync.syncadapter.ui.setup.SetupUserInfoFragment$SetupUserInfo: com.etesync.syncadapter.ui.setup.SetupUserInfoFragment$SetupUserInfo$SetupUserInfoResult doInBackground(android.accounts.Account[])&gt;,&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;,&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;,void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)"/>  
      <source name="com.etesync.syncadapter.ui.setup.SetupUserInfoFragment"/>  
      <destinition name="at.bitfire.cert4android.CustomCertService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.setup.SetupUserInfoFragment$SetupUserInfo: java.lang.Object doInBackground(java.lang.Object[])&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.setup.SetupUserInfoFragment$SetupUserInfo: com.etesync.syncadapter.ui.setup.SetupUserInfoFragment$SetupUserInfo$SetupUserInfoResult doInBackground(android.accounts.Account[])&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;"/>  
        <node method="&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;"/>  
        <node method="CustomCertManager &lt;init&gt;" type="CreateMethod" unit="$r11 = new android.content.Intent"/>  
        <node method="CustomCertManager &lt;init&gt;" type="SetAttribute" unit="specialinvoke $r11.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r12, class &quot;Lat/bitfire/cert4android/CustomCertService;&quot;)"/>  
        <node method="CustomCertManager &lt;init&gt;" type="PassOutIntent" unit="$z0 = virtualinvoke $r2.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r11, $r13, 1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.ChangeEncryptionPasswordActivity"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.ChangeEncryptionPasswordActivity$changePasswordDo$1: void invoke(org.jetbrains.anko.AnkoAsyncContext)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.ChangeEncryptionPasswordActivity$changePasswordDo$1: void invoke(org.jetbrains.anko.AnkoAsyncContext)&gt;,&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;,&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;,void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)"/>  
      <source name="com.etesync.syncadapter.ui.ChangeEncryptionPasswordActivity"/>  
      <destinition name="at.bitfire.cert4android.CustomCertService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.ChangeEncryptionPasswordActivity$changePasswordDo$1: void invoke(org.jetbrains.anko.AnkoAsyncContext)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;"/>  
        <node method="&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;"/>  
        <node method="CustomCertManager &lt;init&gt;" type="CreateMethod" unit="$r11 = new android.content.Intent"/>  
        <node method="CustomCertManager &lt;init&gt;" type="SetAttribute" unit="specialinvoke $r11.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r12, class &quot;Lat/bitfire/cert4android/CustomCertService;&quot;)"/>  
        <node method="CustomCertManager &lt;init&gt;" type="PassOutIntent" unit="$z0 = virtualinvoke $r2.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r11, $r13, 1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.ChangeEncryptionPasswordActivity"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.ChangeEncryptionPasswordActivity$changePasswordDo$1: java.lang.Object invoke(java.lang.Object)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.ChangeEncryptionPasswordActivity$changePasswordDo$1: java.lang.Object invoke(java.lang.Object)&gt;,&lt;com.etesync.syncadapter.ui.ChangeEncryptionPasswordActivity$changePasswordDo$1: void invoke(org.jetbrains.anko.AnkoAsyncContext)&gt;,&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;,&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;,void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)"/>  
      <source name="com.etesync.syncadapter.ui.ChangeEncryptionPasswordActivity"/>  
      <destinition name="at.bitfire.cert4android.CustomCertService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.ChangeEncryptionPasswordActivity$changePasswordDo$1: java.lang.Object invoke(java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.ChangeEncryptionPasswordActivity$changePasswordDo$1: void invoke(org.jetbrains.anko.AnkoAsyncContext)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;"/>  
        <node method="&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;"/>  
        <node method="CustomCertManager &lt;init&gt;" type="CreateMethod" unit="$r11 = new android.content.Intent"/>  
        <node method="CustomCertManager &lt;init&gt;" type="SetAttribute" unit="specialinvoke $r11.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r12, class &quot;Lat/bitfire/cert4android/CustomCertService;&quot;)"/>  
        <node method="CustomCertManager &lt;init&gt;" type="PassOutIntent" unit="$z0 = virtualinvoke $r2.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r11, $r13, 1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.utils.EventEmailInvitation"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.utils.EventEmailInvitation: android.content.Intent createIntent(at.bitfire.ical4android.Event,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.utils.EventEmailInvitation: android.content.Intent createIntent(at.bitfire.ical4android.Event,java.lang.String)&gt;,android.content.Intent createIntent(at.bitfire.ical4android.Event,java.lang.String)"/>  
      <source name="com.etesync.syncadapter.utils.EventEmailInvitation"/>  
      <sender action="android.intent.action.SEND" type="text/plain" flags="FLAG_GRANT_READ_URI_PERMISSION "/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.utils.EventEmailInvitation: android.content.Intent createIntent(at.bitfire.ical4android.Event,java.lang.String)&gt;"/>  
        <node method="EventEmailInvitation createIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="EventEmailInvitation createIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.SEND&quot;)"/>  
        <node method="EventEmailInvitation createIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;text/plain&quot;)"/>  
        <node method="EventEmailInvitation createIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.utils.EventEmailInvitation: android.content.Intent createIntent(at.bitfire.ical4android.Event,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.utils.EventEmailInvitation: android.content.Intent createIntent(at.bitfire.ical4android.Event,java.lang.String)&gt;,android.content.Intent createIntent(at.bitfire.ical4android.Event,java.lang.String)"/>  
      <source name="com.etesync.syncadapter.utils.EventEmailInvitation"/>  
      <sender action="android.intent.action.SEND" type="text/plain"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.utils.EventEmailInvitation: android.content.Intent createIntent(at.bitfire.ical4android.Event,java.lang.String)&gt;"/>  
        <node method="EventEmailInvitation createIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="EventEmailInvitation createIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.SEND&quot;)"/>  
        <node method="EventEmailInvitation createIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;text/plain&quot;)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.syncadapter.CalendarSyncManager"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification(at.bitfire.ical4android.Event,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification(at.bitfire.ical4android.Event,java.lang.String)&gt;,void createInviteAttendeesNotification(at.bitfire.ical4android.Event,java.lang.String), &lt;com.etesync.syncadapter.utils.EventEmailInvitation: android.content.Intent createIntent(at.bitfire.ical4android.Event,java.lang.String)&gt;, &lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarSyncManager"/>  
      <destinition name="interICC_android.intent.action.SEND, "/>  
      <sender action="android.intent.action.SEND" type="text/plain" flags="FLAG_GRANT_READ_URI_PERMISSION "/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification(at.bitfire.ical4android.Event,java.lang.String)&gt;"/>  
        <node method="CalendarSyncManager createInviteAttendeesNotification" type="ReceiveIntentFromRetValue" unit="$r7 = virtualinvoke $r4.&lt;com.etesync.syncadapter.utils.EventEmailInvitation: android.content.Intent createIntent(at.bitfire.ical4android.Event,java.lang.String)&gt;($r2, $r3)"/>  
        <node method="EventEmailInvitation createIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="EventEmailInvitation createIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.SEND&quot;)"/>  
        <node method="EventEmailInvitation createIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;text/plain&quot;)"/>  
        <node method="EventEmailInvitation createIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(1)"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter3: android.content.Intent"/>  
        <node method="SyncNotification notify" type="PassOutIntent" unit="virtualinvoke $r12.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r13)"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="CalendarSyncManager createInviteAttendeesNotification" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="CalendarSyncManager createInviteAttendeesNotification" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification(at.bitfire.ical4android.Event,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification(at.bitfire.ical4android.Event,java.lang.String)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;,androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarSyncManager"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification(at.bitfire.ical4android.Event,java.lang.String)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification(at.bitfire.ical4android.Event,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification(at.bitfire.ical4android.Event,java.lang.String)&gt;,void createInviteAttendeesNotification(at.bitfire.ical4android.Event,java.lang.String), &lt;com.etesync.syncadapter.utils.EventEmailInvitation: android.content.Intent createIntent(at.bitfire.ical4android.Event,java.lang.String)&gt;, &lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarSyncManager"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification(at.bitfire.ical4android.Event,java.lang.String)&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification(at.bitfire.ical4android.Event,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification(at.bitfire.ical4android.Event,java.lang.String)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int), &lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarSyncManager"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification(at.bitfire.ical4android.Event,java.lang.String)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter3: android.content.Intent"/>  
        <node method="SyncNotification notify" type="PassOutIntent" unit="virtualinvoke $r12.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r13)"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification(at.bitfire.ical4android.Event,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification(at.bitfire.ical4android.Event,java.lang.String)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;,androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarSyncManager"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification(at.bitfire.ical4android.Event,java.lang.String)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification(at.bitfire.ical4android.Event,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification(at.bitfire.ical4android.Event,java.lang.String)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarSyncManager"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification(at.bitfire.ical4android.Event,java.lang.String)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setContentIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setDeleteIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification(at.bitfire.ical4android.Event,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification(at.bitfire.ical4android.Event,java.lang.String)&gt;,void createInviteAttendeesNotification(at.bitfire.ical4android.Event,java.lang.String), &lt;com.etesync.syncadapter.utils.EventEmailInvitation: android.content.Intent createIntent(at.bitfire.ical4android.Event,java.lang.String)&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarSyncManager"/>  
      <sender action="android.intent.action.SEND" type="text/plain" flags="FLAG_GRANT_READ_URI_PERMISSION "/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification(at.bitfire.ical4android.Event,java.lang.String)&gt;"/>  
        <node method="CalendarSyncManager createInviteAttendeesNotification" type="ReceiveIntentFromRetValue" unit="$r7 = virtualinvoke $r4.&lt;com.etesync.syncadapter.utils.EventEmailInvitation: android.content.Intent createIntent(at.bitfire.ical4android.Event,java.lang.String)&gt;($r2, $r3)"/>  
        <node method="EventEmailInvitation createIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="EventEmailInvitation createIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.SEND&quot;)"/>  
        <node method="EventEmailInvitation createIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;text/plain&quot;)"/>  
        <node method="EventEmailInvitation createIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(1)"/>  
        <node method="CalendarSyncManager createInviteAttendeesNotification" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="CalendarSyncManager createInviteAttendeesNotification" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification(at.bitfire.ical4android.Event,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification(at.bitfire.ical4android.Event,java.lang.String)&gt;,void createInviteAttendeesNotification(at.bitfire.ical4android.Event,java.lang.String), &lt;com.etesync.syncadapter.utils.EventEmailInvitation: android.content.Intent createIntent(at.bitfire.ical4android.Event,java.lang.String)&gt;, &lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarSyncManager"/>  
      <destinition name="interICC_android.intent.action.SEND, "/>  
      <sender action="android.intent.action.SEND" type="text/plain"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification(at.bitfire.ical4android.Event,java.lang.String)&gt;"/>  
        <node method="CalendarSyncManager createInviteAttendeesNotification" type="ReceiveIntentFromRetValue" unit="$r7 = virtualinvoke $r4.&lt;com.etesync.syncadapter.utils.EventEmailInvitation: android.content.Intent createIntent(at.bitfire.ical4android.Event,java.lang.String)&gt;($r2, $r3)"/>  
        <node method="EventEmailInvitation createIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="EventEmailInvitation createIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.SEND&quot;)"/>  
        <node method="EventEmailInvitation createIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;text/plain&quot;)"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter3: android.content.Intent"/>  
        <node method="SyncNotification notify" type="PassOutIntent" unit="virtualinvoke $r12.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r13)"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="CalendarSyncManager createInviteAttendeesNotification" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="CalendarSyncManager createInviteAttendeesNotification" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification(at.bitfire.ical4android.Event,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification(at.bitfire.ical4android.Event,java.lang.String)&gt;,void createInviteAttendeesNotification(at.bitfire.ical4android.Event,java.lang.String), &lt;com.etesync.syncadapter.utils.EventEmailInvitation: android.content.Intent createIntent(at.bitfire.ical4android.Event,java.lang.String)&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarSyncManager"/>  
      <sender action="android.intent.action.SEND" type="text/plain"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification(at.bitfire.ical4android.Event,java.lang.String)&gt;"/>  
        <node method="CalendarSyncManager createInviteAttendeesNotification" type="ReceiveIntentFromRetValue" unit="$r7 = virtualinvoke $r4.&lt;com.etesync.syncadapter.utils.EventEmailInvitation: android.content.Intent createIntent(at.bitfire.ical4android.Event,java.lang.String)&gt;($r2, $r3)"/>  
        <node method="EventEmailInvitation createIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="EventEmailInvitation createIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.SEND&quot;)"/>  
        <node method="EventEmailInvitation createIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;text/plain&quot;)"/>  
        <node method="CalendarSyncManager createInviteAttendeesNotification" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="CalendarSyncManager createInviteAttendeesNotification" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification(at.bitfire.ical4android.Event,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification(at.bitfire.ical4android.Event,java.lang.String)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarSyncManager"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification(at.bitfire.ical4android.Event,java.lang.String)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setDeleteIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification(at.bitfire.ical4android.Event,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification(at.bitfire.ical4android.Event,java.lang.String)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarSyncManager"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification(at.bitfire.ical4android.Event,java.lang.String)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.syncadapter.CalendarSyncManager"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;,androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarSyncManager"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification()&gt;,void createInviteAttendeesNotification(), &lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification(at.bitfire.ical4android.Event,java.lang.String)&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarSyncManager"/>  
      <sender action="android.intent.action.SEND" type="text/plain"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification()&gt;"/>  
        <node method="CalendarSyncManager createInviteAttendeesNotification" type="ReceiveIntentFromRetValue" unit="$r7 = virtualinvoke $r4.&lt;com.etesync.syncadapter.utils.EventEmailInvitation: android.content.Intent createIntent(at.bitfire.ical4android.Event,java.lang.String)&gt;($r2, $r3)"/>  
        <node method="CalendarSyncManager createInviteAttendeesNotification" type="ReceiveIntentFromRetValue" unit="$r7 = virtualinvoke $r4.&lt;com.etesync.syncadapter.utils.EventEmailInvitation: android.content.Intent createIntent(at.bitfire.ical4android.Event,java.lang.String)&gt;($r2, $r3)"/>  
        <node method="EventEmailInvitation createIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="EventEmailInvitation createIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.SEND&quot;)"/>  
        <node method="EventEmailInvitation createIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;text/plain&quot;)"/>  
        <node method="CalendarSyncManager createInviteAttendeesNotification" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="CalendarSyncManager createInviteAttendeesNotification" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;,androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarSyncManager"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification()&gt;,&lt;com.etesync.syncadapter.utils.EventEmailInvitation: android.content.Intent createIntent(at.bitfire.ical4android.Event,java.lang.String)&gt;,android.content.Intent createIntent(at.bitfire.ical4android.Event,java.lang.String)"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarSyncManager"/>  
      <sender action="android.intent.action.SEND" type="text/plain" flags="FLAG_GRANT_READ_URI_PERMISSION "/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.utils.EventEmailInvitation: android.content.Intent createIntent(at.bitfire.ical4android.Event,java.lang.String)&gt;"/>  
        <node method="EventEmailInvitation createIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="EventEmailInvitation createIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.SEND&quot;)"/>  
        <node method="EventEmailInvitation createIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;text/plain&quot;)"/>  
        <node method="EventEmailInvitation createIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarSyncManager"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setContentIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setDeleteIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarSyncManager"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification()&gt;,void createInviteAttendeesNotification(), &lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification(at.bitfire.ical4android.Event,java.lang.String)&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarSyncManager"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification()&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification()&gt;,void createInviteAttendeesNotification(), &lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification(at.bitfire.ical4android.Event,java.lang.String)&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarSyncManager"/>  
      <destinition name="interICC_android.intent.action.SEND, "/>  
      <sender action="android.intent.action.SEND" type="text/plain" flags="FLAG_GRANT_READ_URI_PERMISSION "/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification()&gt;"/>  
        <node method="CalendarSyncManager createInviteAttendeesNotification" type="ReceiveIntentFromRetValue" unit="$r7 = virtualinvoke $r4.&lt;com.etesync.syncadapter.utils.EventEmailInvitation: android.content.Intent createIntent(at.bitfire.ical4android.Event,java.lang.String)&gt;($r2, $r3)"/>  
        <node method="CalendarSyncManager createInviteAttendeesNotification" type="ReceiveIntentFromRetValue" unit="$r7 = virtualinvoke $r4.&lt;com.etesync.syncadapter.utils.EventEmailInvitation: android.content.Intent createIntent(at.bitfire.ical4android.Event,java.lang.String)&gt;($r2, $r3)"/>  
        <node method="EventEmailInvitation createIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="EventEmailInvitation createIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.SEND&quot;)"/>  
        <node method="EventEmailInvitation createIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;text/plain&quot;)"/>  
        <node method="EventEmailInvitation createIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(1)"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter3: android.content.Intent"/>  
        <node method="SyncNotification notify" type="PassOutIntent" unit="virtualinvoke $r12.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r13)"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="CalendarSyncManager createInviteAttendeesNotification" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="CalendarSyncManager createInviteAttendeesNotification" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int), &lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarSyncManager"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter3: android.content.Intent"/>  
        <node method="SyncNotification notify" type="PassOutIntent" unit="virtualinvoke $r12.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r13)"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification()&gt;,void createInviteAttendeesNotification(), &lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification(at.bitfire.ical4android.Event,java.lang.String)&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarSyncManager"/>  
      <sender action="android.intent.action.SEND" type="text/plain" flags="FLAG_GRANT_READ_URI_PERMISSION "/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification()&gt;"/>  
        <node method="CalendarSyncManager createInviteAttendeesNotification" type="ReceiveIntentFromRetValue" unit="$r7 = virtualinvoke $r4.&lt;com.etesync.syncadapter.utils.EventEmailInvitation: android.content.Intent createIntent(at.bitfire.ical4android.Event,java.lang.String)&gt;($r2, $r3)"/>  
        <node method="CalendarSyncManager createInviteAttendeesNotification" type="ReceiveIntentFromRetValue" unit="$r7 = virtualinvoke $r4.&lt;com.etesync.syncadapter.utils.EventEmailInvitation: android.content.Intent createIntent(at.bitfire.ical4android.Event,java.lang.String)&gt;($r2, $r3)"/>  
        <node method="EventEmailInvitation createIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="EventEmailInvitation createIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.SEND&quot;)"/>  
        <node method="EventEmailInvitation createIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;text/plain&quot;)"/>  
        <node method="EventEmailInvitation createIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(1)"/>  
        <node method="CalendarSyncManager createInviteAttendeesNotification" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="CalendarSyncManager createInviteAttendeesNotification" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification()&gt;,void createInviteAttendeesNotification(), &lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification(at.bitfire.ical4android.Event,java.lang.String)&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarSyncManager"/>  
      <destinition name="interICC_android.intent.action.SEND, "/>  
      <sender action="android.intent.action.SEND" type="text/plain"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification()&gt;"/>  
        <node method="CalendarSyncManager createInviteAttendeesNotification" type="ReceiveIntentFromRetValue" unit="$r7 = virtualinvoke $r4.&lt;com.etesync.syncadapter.utils.EventEmailInvitation: android.content.Intent createIntent(at.bitfire.ical4android.Event,java.lang.String)&gt;($r2, $r3)"/>  
        <node method="CalendarSyncManager createInviteAttendeesNotification" type="ReceiveIntentFromRetValue" unit="$r7 = virtualinvoke $r4.&lt;com.etesync.syncadapter.utils.EventEmailInvitation: android.content.Intent createIntent(at.bitfire.ical4android.Event,java.lang.String)&gt;($r2, $r3)"/>  
        <node method="EventEmailInvitation createIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="EventEmailInvitation createIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.SEND&quot;)"/>  
        <node method="EventEmailInvitation createIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;text/plain&quot;)"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter3: android.content.Intent"/>  
        <node method="SyncNotification notify" type="PassOutIntent" unit="virtualinvoke $r12.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r13)"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="CalendarSyncManager createInviteAttendeesNotification" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="CalendarSyncManager createInviteAttendeesNotification" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification()&gt;,&lt;com.etesync.syncadapter.utils.EventEmailInvitation: android.content.Intent createIntent(at.bitfire.ical4android.Event,java.lang.String)&gt;,android.content.Intent createIntent(at.bitfire.ical4android.Event,java.lang.String)"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarSyncManager"/>  
      <sender action="android.intent.action.SEND" type="text/plain"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.utils.EventEmailInvitation: android.content.Intent createIntent(at.bitfire.ical4android.Event,java.lang.String)&gt;"/>  
        <node method="EventEmailInvitation createIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="EventEmailInvitation createIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.SEND&quot;)"/>  
        <node method="EventEmailInvitation createIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;text/plain&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarSyncManager"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setDeleteIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.syncadapter.CalendarSyncManager"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createLocalEntries()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createLocalEntries()&gt;,&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;,androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarSyncManager"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createLocalEntries()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createLocalEntries()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createLocalEntries()&gt;,&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification()&gt;,void createInviteAttendeesNotification(), &lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification(at.bitfire.ical4android.Event,java.lang.String)&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarSyncManager"/>  
      <sender action="android.intent.action.SEND" type="text/plain"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createLocalEntries()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification()&gt;"/>  
        <node method="CalendarSyncManager createInviteAttendeesNotification" type="ReceiveIntentFromRetValue" unit="$r7 = virtualinvoke $r4.&lt;com.etesync.syncadapter.utils.EventEmailInvitation: android.content.Intent createIntent(at.bitfire.ical4android.Event,java.lang.String)&gt;($r2, $r3)"/>  
        <node method="CalendarSyncManager createInviteAttendeesNotification" type="ReceiveIntentFromRetValue" unit="$r7 = virtualinvoke $r4.&lt;com.etesync.syncadapter.utils.EventEmailInvitation: android.content.Intent createIntent(at.bitfire.ical4android.Event,java.lang.String)&gt;($r2, $r3)"/>  
        <node method="EventEmailInvitation createIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="EventEmailInvitation createIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.SEND&quot;)"/>  
        <node method="EventEmailInvitation createIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;text/plain&quot;)"/>  
        <node method="CalendarSyncManager createInviteAttendeesNotification" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="CalendarSyncManager createInviteAttendeesNotification" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createLocalEntries()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createLocalEntries()&gt;,&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;,androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarSyncManager"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createLocalEntries()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createLocalEntries()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createLocalEntries()&gt;,&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification()&gt;,&lt;com.etesync.syncadapter.utils.EventEmailInvitation: android.content.Intent createIntent(at.bitfire.ical4android.Event,java.lang.String)&gt;,android.content.Intent createIntent(at.bitfire.ical4android.Event,java.lang.String)"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarSyncManager"/>  
      <sender action="android.intent.action.SEND" type="text/plain" flags="FLAG_GRANT_READ_URI_PERMISSION "/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createLocalEntries()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.utils.EventEmailInvitation: android.content.Intent createIntent(at.bitfire.ical4android.Event,java.lang.String)&gt;"/>  
        <node method="EventEmailInvitation createIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="EventEmailInvitation createIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.SEND&quot;)"/>  
        <node method="EventEmailInvitation createIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;text/plain&quot;)"/>  
        <node method="EventEmailInvitation createIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createLocalEntries()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createLocalEntries()&gt;,&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarSyncManager"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createLocalEntries()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setContentIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setDeleteIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createLocalEntries()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createLocalEntries()&gt;,&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarSyncManager"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createLocalEntries()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createLocalEntries()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createLocalEntries()&gt;,&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification()&gt;,void createInviteAttendeesNotification(), &lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification(at.bitfire.ical4android.Event,java.lang.String)&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarSyncManager"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createLocalEntries()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification()&gt;"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createLocalEntries()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createLocalEntries()&gt;,&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification()&gt;,void createInviteAttendeesNotification(), &lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification(at.bitfire.ical4android.Event,java.lang.String)&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarSyncManager"/>  
      <destinition name="interICC_android.intent.action.SEND, "/>  
      <sender action="android.intent.action.SEND" type="text/plain" flags="FLAG_GRANT_READ_URI_PERMISSION "/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createLocalEntries()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification()&gt;"/>  
        <node method="CalendarSyncManager createInviteAttendeesNotification" type="ReceiveIntentFromRetValue" unit="$r7 = virtualinvoke $r4.&lt;com.etesync.syncadapter.utils.EventEmailInvitation: android.content.Intent createIntent(at.bitfire.ical4android.Event,java.lang.String)&gt;($r2, $r3)"/>  
        <node method="CalendarSyncManager createInviteAttendeesNotification" type="ReceiveIntentFromRetValue" unit="$r7 = virtualinvoke $r4.&lt;com.etesync.syncadapter.utils.EventEmailInvitation: android.content.Intent createIntent(at.bitfire.ical4android.Event,java.lang.String)&gt;($r2, $r3)"/>  
        <node method="EventEmailInvitation createIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="EventEmailInvitation createIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.SEND&quot;)"/>  
        <node method="EventEmailInvitation createIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;text/plain&quot;)"/>  
        <node method="EventEmailInvitation createIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(1)"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter3: android.content.Intent"/>  
        <node method="SyncNotification notify" type="PassOutIntent" unit="virtualinvoke $r12.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r13)"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="CalendarSyncManager createInviteAttendeesNotification" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="CalendarSyncManager createInviteAttendeesNotification" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createLocalEntries()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createLocalEntries()&gt;,&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int), &lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarSyncManager"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createLocalEntries()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter3: android.content.Intent"/>  
        <node method="SyncNotification notify" type="PassOutIntent" unit="virtualinvoke $r12.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r13)"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createLocalEntries()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createLocalEntries()&gt;,&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification()&gt;,void createInviteAttendeesNotification(), &lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification(at.bitfire.ical4android.Event,java.lang.String)&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarSyncManager"/>  
      <sender action="android.intent.action.SEND" type="text/plain" flags="FLAG_GRANT_READ_URI_PERMISSION "/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createLocalEntries()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification()&gt;"/>  
        <node method="CalendarSyncManager createInviteAttendeesNotification" type="ReceiveIntentFromRetValue" unit="$r7 = virtualinvoke $r4.&lt;com.etesync.syncadapter.utils.EventEmailInvitation: android.content.Intent createIntent(at.bitfire.ical4android.Event,java.lang.String)&gt;($r2, $r3)"/>  
        <node method="CalendarSyncManager createInviteAttendeesNotification" type="ReceiveIntentFromRetValue" unit="$r7 = virtualinvoke $r4.&lt;com.etesync.syncadapter.utils.EventEmailInvitation: android.content.Intent createIntent(at.bitfire.ical4android.Event,java.lang.String)&gt;($r2, $r3)"/>  
        <node method="EventEmailInvitation createIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="EventEmailInvitation createIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.SEND&quot;)"/>  
        <node method="EventEmailInvitation createIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;text/plain&quot;)"/>  
        <node method="EventEmailInvitation createIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(1)"/>  
        <node method="CalendarSyncManager createInviteAttendeesNotification" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="CalendarSyncManager createInviteAttendeesNotification" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createLocalEntries()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createLocalEntries()&gt;,&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification()&gt;,void createInviteAttendeesNotification(), &lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification(at.bitfire.ical4android.Event,java.lang.String)&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarSyncManager"/>  
      <destinition name="interICC_android.intent.action.SEND, "/>  
      <sender action="android.intent.action.SEND" type="text/plain"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createLocalEntries()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification()&gt;"/>  
        <node method="CalendarSyncManager createInviteAttendeesNotification" type="ReceiveIntentFromRetValue" unit="$r7 = virtualinvoke $r4.&lt;com.etesync.syncadapter.utils.EventEmailInvitation: android.content.Intent createIntent(at.bitfire.ical4android.Event,java.lang.String)&gt;($r2, $r3)"/>  
        <node method="CalendarSyncManager createInviteAttendeesNotification" type="ReceiveIntentFromRetValue" unit="$r7 = virtualinvoke $r4.&lt;com.etesync.syncadapter.utils.EventEmailInvitation: android.content.Intent createIntent(at.bitfire.ical4android.Event,java.lang.String)&gt;($r2, $r3)"/>  
        <node method="EventEmailInvitation createIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="EventEmailInvitation createIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.SEND&quot;)"/>  
        <node method="EventEmailInvitation createIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;text/plain&quot;)"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter3: android.content.Intent"/>  
        <node method="SyncNotification notify" type="PassOutIntent" unit="virtualinvoke $r12.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r13)"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="CalendarSyncManager createInviteAttendeesNotification" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="CalendarSyncManager createInviteAttendeesNotification" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createLocalEntries()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createLocalEntries()&gt;,&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification()&gt;,&lt;com.etesync.syncadapter.utils.EventEmailInvitation: android.content.Intent createIntent(at.bitfire.ical4android.Event,java.lang.String)&gt;,android.content.Intent createIntent(at.bitfire.ical4android.Event,java.lang.String)"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarSyncManager"/>  
      <sender action="android.intent.action.SEND" type="text/plain"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createLocalEntries()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.utils.EventEmailInvitation: android.content.Intent createIntent(at.bitfire.ical4android.Event,java.lang.String)&gt;"/>  
        <node method="EventEmailInvitation createIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="EventEmailInvitation createIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.SEND&quot;)"/>  
        <node method="EventEmailInvitation createIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;text/plain&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createLocalEntries()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createLocalEntries()&gt;,&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarSyncManager"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createLocalEntries()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void createInviteAttendeesNotification()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setDeleteIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.CollectionMembersListFragment"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.CollectionMembersListFragment$refresh$1: void invoke(org.jetbrains.anko.AnkoAsyncContext)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.CollectionMembersListFragment$refresh$1: void invoke(org.jetbrains.anko.AnkoAsyncContext)&gt;,&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;,&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;,void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)"/>  
      <source name="com.etesync.syncadapter.ui.CollectionMembersListFragment"/>  
      <destinition name="at.bitfire.cert4android.CustomCertService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.CollectionMembersListFragment$refresh$1: void invoke(org.jetbrains.anko.AnkoAsyncContext)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;"/>  
        <node method="&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;"/>  
        <node method="CustomCertManager &lt;init&gt;" type="CreateMethod" unit="$r11 = new android.content.Intent"/>  
        <node method="CustomCertManager &lt;init&gt;" type="SetAttribute" unit="specialinvoke $r11.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r12, class &quot;Lat/bitfire/cert4android/CustomCertService;&quot;)"/>  
        <node method="CustomCertManager &lt;init&gt;" type="PassOutIntent" unit="$z0 = virtualinvoke $r2.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r11, $r13, 1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.CollectionMembersListFragment"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.CollectionMembersListFragment$refresh$1: java.lang.Object invoke(java.lang.Object)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.CollectionMembersListFragment$refresh$1: java.lang.Object invoke(java.lang.Object)&gt;,&lt;com.etesync.syncadapter.ui.CollectionMembersListFragment$refresh$1: void invoke(org.jetbrains.anko.AnkoAsyncContext)&gt;,&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;,&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;,void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)"/>  
      <source name="com.etesync.syncadapter.ui.CollectionMembersListFragment"/>  
      <destinition name="at.bitfire.cert4android.CustomCertService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.CollectionMembersListFragment$refresh$1: java.lang.Object invoke(java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.CollectionMembersListFragment$refresh$1: void invoke(org.jetbrains.anko.AnkoAsyncContext)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;"/>  
        <node method="&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;"/>  
        <node method="CustomCertManager &lt;init&gt;" type="CreateMethod" unit="$r11 = new android.content.Intent"/>  
        <node method="CustomCertManager &lt;init&gt;" type="SetAttribute" unit="specialinvoke $r11.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r12, class &quot;Lat/bitfire/cert4android/CustomCertService;&quot;)"/>  
        <node method="CustomCertManager &lt;init&gt;" type="PassOutIntent" unit="$z0 = virtualinvoke $r2.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r11, $r13, 1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.setup.LoginCredentialsChangeFragment"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.setup.LoginCredentialsChangeFragment$ServerConfigurationLoader: java.lang.Object loadInBackground()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.setup.LoginCredentialsChangeFragment$ServerConfigurationLoader: java.lang.Object loadInBackground()&gt;,&lt;com.etesync.syncadapter.ui.setup.LoginCredentialsChangeFragment$ServerConfigurationLoader: com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration loadInBackground()&gt;,&lt;com.etesync.syncadapter.ui.setup.BaseConfigurationFinder: void &lt;init&gt;(android.content.Context,com.etesync.syncadapter.ui.setup.LoginCredentials)&gt;,&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;,&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;,void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)"/>  
      <source name="com.etesync.syncadapter.ui.setup.LoginCredentialsChangeFragment"/>  
      <destinition name="at.bitfire.cert4android.CustomCertService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.setup.LoginCredentialsChangeFragment$ServerConfigurationLoader: java.lang.Object loadInBackground()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.setup.LoginCredentialsChangeFragment$ServerConfigurationLoader: com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration loadInBackground()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.setup.BaseConfigurationFinder: void &lt;init&gt;(android.content.Context,com.etesync.syncadapter.ui.setup.LoginCredentials)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;"/>  
        <node method="&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;"/>  
        <node method="CustomCertManager &lt;init&gt;" type="CreateMethod" unit="$r11 = new android.content.Intent"/>  
        <node method="CustomCertManager &lt;init&gt;" type="SetAttribute" unit="specialinvoke $r11.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r12, class &quot;Lat/bitfire/cert4android/CustomCertService;&quot;)"/>  
        <node method="CustomCertManager &lt;init&gt;" type="PassOutIntent" unit="$z0 = virtualinvoke $r2.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r11, $r13, 1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.syncadapter.SyncManager"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void &lt;init&gt;(android.content.Context,android.accounts.Account,com.etesync.syncadapter.AccountSettings,android.os.Bundle,java.lang.String,android.content.SyncResult,java.lang.String,com.etesync.syncadapter.model.CollectionInfo$Type,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void &lt;init&gt;(android.content.Context,android.accounts.Account,com.etesync.syncadapter.AccountSettings,android.os.Bundle,java.lang.String,android.content.SyncResult,java.lang.String,com.etesync.syncadapter.model.CollectionInfo$Type,java.lang.String)&gt;,&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;,&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;,void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncManager"/>  
      <destinition name="at.bitfire.cert4android.CustomCertService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void &lt;init&gt;(android.content.Context,android.accounts.Account,com.etesync.syncadapter.AccountSettings,android.os.Bundle,java.lang.String,android.content.SyncResult,java.lang.String,com.etesync.syncadapter.model.CollectionInfo$Type,java.lang.String)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;"/>  
        <node method="&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;"/>  
        <node method="CustomCertManager &lt;init&gt;" type="CreateMethod" unit="$r11 = new android.content.Intent"/>  
        <node method="CustomCertManager &lt;init&gt;" type="SetAttribute" unit="specialinvoke $r11.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r12, class &quot;Lat/bitfire/cert4android/CustomCertService;&quot;)"/>  
        <node method="CustomCertManager &lt;init&gt;" type="PassOutIntent" unit="$z0 = virtualinvoke $r2.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r11, $r13, 1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.syncadapter.TasksSyncManager"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncManager: void &lt;init&gt;(android.content.Context,android.accounts.Account,com.etesync.syncadapter.AccountSettings,android.os.Bundle,java.lang.String,android.content.SyncResult,com.etesync.syncadapter.resource.LocalTaskList,okhttp3.HttpUrl)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncManager: void &lt;init&gt;(android.content.Context,android.accounts.Account,com.etesync.syncadapter.AccountSettings,android.os.Bundle,java.lang.String,android.content.SyncResult,com.etesync.syncadapter.resource.LocalTaskList,okhttp3.HttpUrl)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void &lt;init&gt;(android.content.Context,android.accounts.Account,com.etesync.syncadapter.AccountSettings,android.os.Bundle,java.lang.String,android.content.SyncResult,java.lang.String,com.etesync.syncadapter.model.CollectionInfo$Type,java.lang.String)&gt;,&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;,&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;,void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)"/>  
      <source name="com.etesync.syncadapter.syncadapter.TasksSyncManager"/>  
      <destinition name="at.bitfire.cert4android.CustomCertService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.TasksSyncManager: void &lt;init&gt;(android.content.Context,android.accounts.Account,com.etesync.syncadapter.AccountSettings,android.os.Bundle,java.lang.String,android.content.SyncResult,com.etesync.syncadapter.resource.LocalTaskList,okhttp3.HttpUrl)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void &lt;init&gt;(android.content.Context,android.accounts.Account,com.etesync.syncadapter.AccountSettings,android.os.Bundle,java.lang.String,android.content.SyncResult,java.lang.String,com.etesync.syncadapter.model.CollectionInfo$Type,java.lang.String)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;"/>  
        <node method="&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;"/>  
        <node method="CustomCertManager &lt;init&gt;" type="CreateMethod" unit="$r11 = new android.content.Intent"/>  
        <node method="CustomCertManager &lt;init&gt;" type="SetAttribute" unit="specialinvoke $r11.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r12, class &quot;Lat/bitfire/cert4android/CustomCertService;&quot;)"/>  
        <node method="CustomCertManager &lt;init&gt;" type="PassOutIntent" unit="$z0 = virtualinvoke $r2.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r11, $r13, 1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.ViewCollectionActivity"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.ViewCollectionActivity: void onImport(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.ViewCollectionActivity: void onImport(android.view.MenuItem)&gt;,void onImport(android.view.MenuItem), &lt;com.etesync.syncadapter.ui.importlocal.ImportActivity$Companion: android.content.Intent newIntent(android.content.Context,android.accounts.Account,com.etesync.syncadapter.model.CollectionInfo)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.ViewCollectionActivity"/>  
      <destinition name="com.etesync.syncadapter.ui.importlocal.ImportActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.ViewCollectionActivity: void onImport(android.view.MenuItem)&gt;"/>  
        <node method="ViewCollectionActivity onImport" type="ReceiveIntentFromRetValue" unit="$r2 = virtualinvoke $r4.&lt;com.etesync.syncadapter.ui.importlocal.ImportActivity$Companion: android.content.Intent newIntent(android.content.Context,android.accounts.Account,com.etesync.syncadapter.model.CollectionInfo)&gt;($r5, $r1, $r6)"/>  
        <node method="ImportActivity$Companion newIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="ImportActivity$Companion newIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lcom/etesync/syncadapter/ui/importlocal/ImportActivity;&quot;)"/>  
        <node method="ViewCollectionActivity onImport" type="PassOutIntent" unit="virtualinvoke r0.&lt;com.etesync.syncadapter.ui.ViewCollectionActivity: void startActivity(android.content.Intent)&gt;($r2)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.JournalItemActivity"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.JournalItemActivity$Companion: android.content.Intent newIntent(android.content.Context,android.accounts.Account,com.etesync.syncadapter.model.CollectionInfo,com.etesync.syncadapter.model.SyncEntry)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.JournalItemActivity$Companion: android.content.Intent newIntent(android.content.Context,android.accounts.Account,com.etesync.syncadapter.model.CollectionInfo,com.etesync.syncadapter.model.SyncEntry)&gt;,android.content.Intent newIntent(android.content.Context,android.accounts.Account,com.etesync.syncadapter.model.CollectionInfo,com.etesync.syncadapter.model.SyncEntry)"/>  
      <source name="com.etesync.syncadapter.ui.JournalItemActivity"/>  
      <destinition name="com.etesync.syncadapter.ui.JournalItemActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.JournalItemActivity$Companion: android.content.Intent newIntent(android.content.Context,android.accounts.Account,com.etesync.syncadapter.model.CollectionInfo,com.etesync.syncadapter.model.SyncEntry)&gt;"/>  
        <node method="JournalItemActivity$Companion newIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="JournalItemActivity$Companion newIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lcom/etesync/syncadapter/ui/JournalItemActivity;&quot;)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.AccountsActivity"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.AccountsActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.AccountsActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle)"/>  
      <source name="com.etesync.syncadapter.ui.AccountsActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.AccountsActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="AccountsActivity onCreate" type="setContentView" unit="virtualinvoke r0.&lt;com.etesync.syncadapter.ui.AccountsActivity: void setContentView(int)&gt;(2131492899)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.acra.reporter.ErrorReporterImpl"> 
    <intentSummary> 
      <method value="&lt;org.acra.reporter.ErrorReporterImpl: void handleSilentException(java.lang.Throwable)&gt;"/>  
      <methodtrace value="&lt;org.acra.reporter.ErrorReporterImpl: void handleSilentException(java.lang.Throwable)&gt;,&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;,&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;,&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;,&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;,&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;,void stopServices()"/>  
      <source name="org.acra.reporter.ErrorReporterImpl"/>  
      <nodes> 
        <node method="&lt;org.acra.reporter.ErrorReporterImpl: void handleSilentException(java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;"/>  
        <node method="ProcessFinisher stopServices" type="CreateMethod" unit="$r14 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.reporter.ErrorReporterImpl: void handleSilentException(java.lang.Throwable)&gt;"/>  
      <methodtrace value="&lt;org.acra.reporter.ErrorReporterImpl: void handleSilentException(java.lang.Throwable)&gt;,&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;,&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;,&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;,&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;,&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;,void stopServices()"/>  
      <source name="org.acra.reporter.ErrorReporterImpl"/>  
      <nodes> 
        <node method="&lt;org.acra.reporter.ErrorReporterImpl: void handleSilentException(java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;"/>  
        <node method="ProcessFinisher stopServices" type="CreateMethod" unit="$r14 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.reporter.ErrorReporterImpl: void handleSilentException(java.lang.Throwable)&gt;"/>  
      <methodtrace value="&lt;org.acra.reporter.ErrorReporterImpl: void handleSilentException(java.lang.Throwable)&gt;,&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;,&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;,&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;,&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;,&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;,void stopServices()"/>  
      <source name="org.acra.reporter.ErrorReporterImpl"/>  
      <nodes> 
        <node method="&lt;org.acra.reporter.ErrorReporterImpl: void handleSilentException(java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;"/>  
        <node method="ProcessFinisher stopServices" type="CreateMethod" unit="$r14 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.PackageChangedReceiver"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.PackageChangedReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.PackageChangedReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;,void onReceive(android.content.Context,android.content.Intent)"/>  
      <source name="com.etesync.syncadapter.PackageChangedReceiver"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.PackageChangedReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="PackageChangedReceiver onReceive" type="ReceiveIntentFromRetValue" unit="$r2 = virtualinvoke r0.&lt;com.etesync.syncadapter.PackageChangedReceiver: android.content.Intent getIntent()&gt;()"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.PackageChangedReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.PackageChangedReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;,void onReceive(android.content.Context,android.content.Intent)"/>  
      <source name="com.etesync.syncadapter.PackageChangedReceiver"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.PackageChangedReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="PackageChangedReceiver onReceive" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity: void onCreate(android.os.Bundle)&gt;,&lt;com.etesync.syncadapter.ui.WebViewActivity$Companion: void openUrl(android.content.Context,android.net.Uri)&gt;,void openUrl(android.content.Context,android.net.Uri)"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <destinition name="com.etesync.syncadapter.ui.WebViewActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.WebViewActivity$Companion: void openUrl(android.content.Context,android.net.Uri)&gt;"/>  
        <node method="WebViewActivity$Companion openUrl" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="WebViewActivity$Companion openUrl" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/etesync/syncadapter/ui/WebViewActivity;&quot;)"/>  
        <node method="WebViewActivity$Companion openUrl" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle)"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <destinition name="com.etesync.syncadapter.ui.AccountSettingsActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="SyncNotification$NotificationHandlerActivity onCreate" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="SyncNotification$NotificationHandlerActivity onCreate" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r7, class &quot;Lcom/etesync/syncadapter/ui/AccountSettingsActivity;&quot;)"/>  
        <node method="SyncNotification$NotificationHandlerActivity onCreate" type="PassOutIntent" unit="virtualinvoke r0.&lt;com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity: void startActivity(android.content.Intent)&gt;($r2)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle)"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <destinition name="com.etesync.syncadapter.ui.DebugInfoActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="SyncNotification$NotificationHandlerActivity onCreate" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="SyncNotification$NotificationHandlerActivity onCreate" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r7, class &quot;Lcom/etesync/syncadapter/ui/DebugInfoActivity;&quot;)"/>  
        <node method="SyncNotification$NotificationHandlerActivity onCreate" type="PassOutIntent" unit="virtualinvoke r0.&lt;com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity: void startActivity(android.content.Intent)&gt;($r2)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity: void onCreate(android.os.Bundle)&gt;,&lt;com.etesync.syncadapter.ui.WebViewActivity$Companion: void openUrl(android.content.Context,android.net.Uri)&gt;,void openUrl(android.content.Context,android.net.Uri)"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.WebViewActivity$Companion: void openUrl(android.content.Context,android.net.Uri)&gt;"/>  
        <node method="WebViewActivity$Companion openUrl" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="WebViewActivity$Companion openUrl" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.CreateCollectionActivity"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.CreateCollectionActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.CreateCollectionActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,boolean onOptionsItemSelected(android.view.MenuItem)"/>  
      <source name="com.etesync.syncadapter.ui.CreateCollectionActivity"/>  
      <destinition name="com.etesync.syncadapter.ui.AccountActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.CreateCollectionActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="CreateCollectionActivity onOptionsItemSelected" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="CreateCollectionActivity onOptionsItemSelected" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Lcom/etesync/syncadapter/ui/AccountActivity;&quot;)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.syncadapter.SyncNotification"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void setThrowable(java.lang.Throwable)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void setThrowable(java.lang.Throwable)&gt;,void setThrowable(java.lang.Throwable)"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncNotification"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity, com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void setThrowable(java.lang.Throwable)&gt;"/>  
        <node method="SyncNotification setThrowable" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncNotification setThrowable" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void setThrowable(java.lang.Throwable)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void setThrowable(java.lang.Throwable)&gt;,void setThrowable(java.lang.Throwable)"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncNotification"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity, com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void setThrowable(java.lang.Throwable)&gt;"/>  
        <node method="SyncNotification setThrowable" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/>  
        <node method="SyncNotification setThrowable" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void setThrowable(java.lang.Throwable)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void setThrowable(java.lang.Throwable)&gt;,void setThrowable(java.lang.Throwable)"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncNotification"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity, com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity, com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void setThrowable(java.lang.Throwable)&gt;"/>  
        <node method="SyncNotification setThrowable" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/>  
        <node method="SyncNotification setThrowable" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/>  
        <node method="SyncNotification setThrowable" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.syncadapter.SyncNotification"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;,android.content.Intent getDetailsIntent()"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncNotification"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity, com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
        <node method="SyncNotification getDetailsIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncNotification getDetailsIntent" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncNotification getDetailsIntent" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncNotification getDetailsIntent" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/>  
        <node method="SyncNotification getDetailsIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncNotification getDetailsIntent" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncNotification getDetailsIntent" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncNotification getDetailsIntent" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.syncadapter.SyncAdapterService"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncAdapterService$SyncAdapter: void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncAdapterService$SyncAdapter: void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;,void notify(java.lang.String,java.lang.String), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity, com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncAdapterService$SyncAdapter: void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncNotification notify" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncNotification notify" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncNotification notify" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncNotification notify" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncNotification notify" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncNotification notify" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/>  
        <node method="SyncNotification notify$default" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter3: android.content.Intent"/>  
        <node method="SyncNotification notify" type="PassOutIntent" unit="virtualinvoke $r12.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r13)"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncAdapterService$SyncAdapter: void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncAdapterService$SyncAdapter: void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;,androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncAdapterService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncAdapterService$SyncAdapter: void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncAdapterService$SyncAdapter: void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncAdapterService$SyncAdapter: void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;,void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncAdapterService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncAdapterService$SyncAdapter: void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
        <node method="SyncNotification notify$default" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter3: android.content.Intent"/>  
        <node method="SyncNotification notify" type="PassOutIntent" unit="virtualinvoke $r12.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r13)"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncNotification notify$default" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncNotification notify$default" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncAdapterService$SyncAdapter: void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncAdapterService$SyncAdapter: void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;,androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncAdapterService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncAdapterService$SyncAdapter: void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncAdapterService$SyncAdapter: void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncAdapterService$SyncAdapter: void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncAdapterService$SyncAdapter: void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="SyncAdapterService$SyncAdapter onPerformSync" type="ReceiveIntentFromRetValue" unit="$r22 = virtualinvoke $r19.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncAdapterService$SyncAdapter onPerformSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncAdapterService$SyncAdapter onPerformSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncAdapterService$SyncAdapter onPerformSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncAdapterService$SyncAdapter onPerformSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncAdapterService$SyncAdapter: void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncAdapterService$SyncAdapter: void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncAdapterService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncAdapterService$SyncAdapter: void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setContentIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setDeleteIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncAdapterService$SyncAdapter: void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncAdapterService$SyncAdapter: void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncAdapterService$SyncAdapter: void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="SyncAdapterService$SyncAdapter onPerformSync" type="ReceiveIntentFromRetValue" unit="$r22 = virtualinvoke $r19.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncAdapterService$SyncAdapter onPerformSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncAdapterService$SyncAdapter onPerformSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncAdapterService$SyncAdapter onPerformSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncAdapterService$SyncAdapter onPerformSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncAdapterService$SyncAdapter: void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncAdapterService$SyncAdapter: void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void setThrowable(java.lang.Throwable)&gt;,void setThrowable(java.lang.Throwable)"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity, com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncAdapterService$SyncAdapter: void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void setThrowable(java.lang.Throwable)&gt;"/>  
        <node method="SyncNotification setThrowable" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncNotification setThrowable" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncAdapterService$SyncAdapter: void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncAdapterService$SyncAdapter: void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncAdapterService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncAdapterService$SyncAdapter: void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncAdapterService$SyncAdapter: void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncAdapterService$SyncAdapter: void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int), &lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncAdapterService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncAdapterService$SyncAdapter: void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter3: android.content.Intent"/>  
        <node method="SyncNotification notify" type="PassOutIntent" unit="virtualinvoke $r12.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r13)"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncAdapterService$SyncAdapter: void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncAdapterService$SyncAdapter: void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void setThrowable(java.lang.Throwable)&gt;,void setThrowable(java.lang.Throwable)"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity, com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncAdapterService$SyncAdapter: void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void setThrowable(java.lang.Throwable)&gt;"/>  
        <node method="SyncNotification setThrowable" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/>  
        <node method="SyncNotification setThrowable" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncAdapterService$SyncAdapter: void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncAdapterService$SyncAdapter: void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncAdapterService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncAdapterService$SyncAdapter: void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setDeleteIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncAdapterService$SyncAdapter: void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncAdapterService$SyncAdapter: void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void setThrowable(java.lang.Throwable)&gt;,void setThrowable(java.lang.Throwable)"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity, com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity, com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncAdapterService$SyncAdapter: void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void setThrowable(java.lang.Throwable)&gt;"/>  
        <node method="SyncNotification setThrowable" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/>  
        <node method="SyncNotification setThrowable" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/>  
        <node method="SyncNotification setThrowable" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.importlocal.ImportFragment"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;,&lt;androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int)&gt;,&lt;androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int,android.os.Bundle)&gt;,void startActivityForResult(android.content.Intent,int,android.os.Bundle)"/>  
      <source name="com.etesync.syncadapter.ui.importlocal.ImportFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;"/>  
        <node method="&lt;androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int,android.os.Bundle)&gt;"/>  
        <node method="Fragment startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;,void chooseFile(), &lt;androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.importlocal.ImportFragment"/>  
      <destinition name="interICC_android.intent.action.GET_CONTENT, android.intent.category.OPENABLE"/>  
      <sender action="android.intent.action.GET_CONTENT" category="android.intent.category.OPENABLE"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;"/>  
        <node method="ImportFragment chooseFile" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="ImportFragment chooseFile" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.OPENABLE&quot;)"/>  
        <node method="ImportFragment chooseFile" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.GET_CONTENT&quot;)"/>  
        <node method="ImportFragment chooseFile" type="PassOutIntent" unit="virtualinvoke r0.&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void startActivityForResult(android.content.Intent,int)&gt;($r2, $i0)"/>  
        <node method="Fragment startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="Fragment startActivityForResult" type="PassOutIntent" unit="virtualinvoke r0.&lt;androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int,android.os.Bundle)&gt;($r1, $i0, null)"/>  
        <node method="Fragment startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;,void chooseFile(), &lt;androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.importlocal.ImportFragment"/>  
      <destinition name="interICC_android.intent.action.GET_CONTENT, android.intent.category.OPENABLE"/>  
      <sender action="android.intent.action.GET_CONTENT" category="android.intent.category.OPENABLE" type="text/calendar"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;"/>  
        <node method="ImportFragment chooseFile" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="ImportFragment chooseFile" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.OPENABLE&quot;)"/>  
        <node method="ImportFragment chooseFile" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.GET_CONTENT&quot;)"/>  
        <node method="ImportFragment chooseFile" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;text/calendar&quot;)"/>  
        <node method="ImportFragment chooseFile" type="PassOutIntent" unit="virtualinvoke r0.&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void startActivityForResult(android.content.Intent,int)&gt;($r2, $i0)"/>  
        <node method="Fragment startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="Fragment startActivityForResult" type="PassOutIntent" unit="virtualinvoke r0.&lt;androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int,android.os.Bundle)&gt;($r1, $i0, null)"/>  
        <node method="Fragment startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;,void chooseFile()"/>  
      <source name="com.etesync.syncadapter.ui.importlocal.ImportFragment"/>  
      <sender action="android.intent.action.GET_CONTENT" category="android.intent.category.OPENABLE" type="text/calendar"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;"/>  
        <node method="ImportFragment chooseFile" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="ImportFragment chooseFile" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.OPENABLE&quot;)"/>  
        <node method="ImportFragment chooseFile" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.GET_CONTENT&quot;)"/>  
        <node method="ImportFragment chooseFile" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;text/calendar&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;,void chooseFile()"/>  
      <source name="com.etesync.syncadapter.ui.importlocal.ImportFragment"/>  
      <sender action="android.intent.action.GET_CONTENT" category="android.intent.category.OPENABLE" type="text/calendar"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;"/>  
        <node method="ImportFragment chooseFile" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="ImportFragment chooseFile" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.OPENABLE&quot;)"/>  
        <node method="ImportFragment chooseFile" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.GET_CONTENT&quot;)"/>  
        <node method="ImportFragment chooseFile" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;text/calendar&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;,void chooseFile(), &lt;androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.importlocal.ImportFragment"/>  
      <destinition name="interICC_android.intent.action.GET_CONTENT, android.intent.category.OPENABLE"/>  
      <sender action="android.intent.action.GET_CONTENT" category="android.intent.category.OPENABLE" type="text/x-vcard"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;"/>  
        <node method="ImportFragment chooseFile" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="ImportFragment chooseFile" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.OPENABLE&quot;)"/>  
        <node method="ImportFragment chooseFile" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.GET_CONTENT&quot;)"/>  
        <node method="ImportFragment chooseFile" type="PassOutIntent" unit="virtualinvoke r0.&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void startActivityForResult(android.content.Intent,int)&gt;($r2, $i0)"/>  
        <node method="Fragment startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="Fragment startActivityForResult" type="PassOutIntent" unit="virtualinvoke r0.&lt;androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int,android.os.Bundle)&gt;($r1, $i0, null)"/>  
        <node method="ImportFragment chooseFile" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;text/x-vcard&quot;)"/>  
        <node method="Fragment startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;,void chooseFile(), &lt;androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.importlocal.ImportFragment"/>  
      <destinition name="interICC_android.intent.action.GET_CONTENT, android.intent.category.OPENABLE"/>  
      <sender action="android.intent.action.GET_CONTENT" category="android.intent.category.OPENABLE" type="text/calendar"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;"/>  
        <node method="ImportFragment chooseFile" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="ImportFragment chooseFile" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.OPENABLE&quot;)"/>  
        <node method="ImportFragment chooseFile" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.GET_CONTENT&quot;)"/>  
        <node method="ImportFragment chooseFile" type="PassOutIntent" unit="virtualinvoke r0.&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void startActivityForResult(android.content.Intent,int)&gt;($r2, $i0)"/>  
        <node method="Fragment startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="Fragment startActivityForResult" type="PassOutIntent" unit="virtualinvoke r0.&lt;androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int,android.os.Bundle)&gt;($r1, $i0, null)"/>  
        <node method="ImportFragment chooseFile" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;text/calendar&quot;)"/>  
        <node method="Fragment startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;,void chooseFile()"/>  
      <source name="com.etesync.syncadapter.ui.importlocal.ImportFragment"/>  
      <sender action="android.intent.action.GET_CONTENT" category="android.intent.category.OPENABLE" type="text/x-vcard"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;"/>  
        <node method="ImportFragment chooseFile" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="ImportFragment chooseFile" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.OPENABLE&quot;)"/>  
        <node method="ImportFragment chooseFile" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.GET_CONTENT&quot;)"/>  
        <node method="ImportFragment chooseFile" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;text/x-vcard&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;,void chooseFile()"/>  
      <source name="com.etesync.syncadapter.ui.importlocal.ImportFragment"/>  
      <sender action="android.intent.action.GET_CONTENT" category="android.intent.category.OPENABLE"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;"/>  
        <node method="ImportFragment chooseFile" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="ImportFragment chooseFile" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.OPENABLE&quot;)"/>  
        <node method="ImportFragment chooseFile" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.GET_CONTENT&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;,&lt;androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int)&gt;,void startActivityForResult(android.content.Intent,int), &lt;androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int,android.os.Bundle)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.importlocal.ImportFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;"/>  
        <node method="&lt;androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int)&gt;"/>  
        <node method="Fragment startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="Fragment startActivityForResult" type="PassOutIntent" unit="virtualinvoke r0.&lt;androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int,android.os.Bundle)&gt;($r1, $i0, null)"/>  
        <node method="Fragment startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.importlocal.ImportFragment"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void onRequestPermissionsResult(int,java.lang.String[],int[])&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void onRequestPermissionsResult(int,java.lang.String[],int[])&gt;,&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;,&lt;androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int)&gt;,&lt;androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int,android.os.Bundle)&gt;,void startActivityForResult(android.content.Intent,int,android.os.Bundle)"/>  
      <source name="com.etesync.syncadapter.ui.importlocal.ImportFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void onRequestPermissionsResult(int,java.lang.String[],int[])&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;"/>  
        <node method="&lt;androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int,android.os.Bundle)&gt;"/>  
        <node method="Fragment startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void onRequestPermissionsResult(int,java.lang.String[],int[])&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void onRequestPermissionsResult(int,java.lang.String[],int[])&gt;,&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;,void chooseFile(), &lt;androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.importlocal.ImportFragment"/>  
      <destinition name="interICC_android.intent.action.GET_CONTENT, android.intent.category.OPENABLE"/>  
      <sender action="android.intent.action.GET_CONTENT" category="android.intent.category.OPENABLE"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void onRequestPermissionsResult(int,java.lang.String[],int[])&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;"/>  
        <node method="ImportFragment chooseFile" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="ImportFragment chooseFile" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.OPENABLE&quot;)"/>  
        <node method="ImportFragment chooseFile" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.GET_CONTENT&quot;)"/>  
        <node method="ImportFragment chooseFile" type="PassOutIntent" unit="virtualinvoke r0.&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void startActivityForResult(android.content.Intent,int)&gt;($r2, $i0)"/>  
        <node method="Fragment startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="Fragment startActivityForResult" type="PassOutIntent" unit="virtualinvoke r0.&lt;androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int,android.os.Bundle)&gt;($r1, $i0, null)"/>  
        <node method="Fragment startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void onRequestPermissionsResult(int,java.lang.String[],int[])&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void onRequestPermissionsResult(int,java.lang.String[],int[])&gt;,&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;,void chooseFile(), &lt;androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.importlocal.ImportFragment"/>  
      <destinition name="interICC_android.intent.action.GET_CONTENT, android.intent.category.OPENABLE"/>  
      <sender action="android.intent.action.GET_CONTENT" category="android.intent.category.OPENABLE" type="text/calendar"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void onRequestPermissionsResult(int,java.lang.String[],int[])&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;"/>  
        <node method="ImportFragment chooseFile" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="ImportFragment chooseFile" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.OPENABLE&quot;)"/>  
        <node method="ImportFragment chooseFile" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.GET_CONTENT&quot;)"/>  
        <node method="ImportFragment chooseFile" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;text/calendar&quot;)"/>  
        <node method="ImportFragment chooseFile" type="PassOutIntent" unit="virtualinvoke r0.&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void startActivityForResult(android.content.Intent,int)&gt;($r2, $i0)"/>  
        <node method="Fragment startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="Fragment startActivityForResult" type="PassOutIntent" unit="virtualinvoke r0.&lt;androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int,android.os.Bundle)&gt;($r1, $i0, null)"/>  
        <node method="Fragment startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void onRequestPermissionsResult(int,java.lang.String[],int[])&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void onRequestPermissionsResult(int,java.lang.String[],int[])&gt;,&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;,void chooseFile()"/>  
      <source name="com.etesync.syncadapter.ui.importlocal.ImportFragment"/>  
      <sender action="android.intent.action.GET_CONTENT" category="android.intent.category.OPENABLE" type="text/calendar"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void onRequestPermissionsResult(int,java.lang.String[],int[])&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;"/>  
        <node method="ImportFragment chooseFile" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="ImportFragment chooseFile" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.OPENABLE&quot;)"/>  
        <node method="ImportFragment chooseFile" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.GET_CONTENT&quot;)"/>  
        <node method="ImportFragment chooseFile" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;text/calendar&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void onRequestPermissionsResult(int,java.lang.String[],int[])&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void onRequestPermissionsResult(int,java.lang.String[],int[])&gt;,&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;,void chooseFile()"/>  
      <source name="com.etesync.syncadapter.ui.importlocal.ImportFragment"/>  
      <sender action="android.intent.action.GET_CONTENT" category="android.intent.category.OPENABLE" type="text/calendar"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void onRequestPermissionsResult(int,java.lang.String[],int[])&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;"/>  
        <node method="ImportFragment chooseFile" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="ImportFragment chooseFile" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.OPENABLE&quot;)"/>  
        <node method="ImportFragment chooseFile" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.GET_CONTENT&quot;)"/>  
        <node method="ImportFragment chooseFile" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;text/calendar&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void onRequestPermissionsResult(int,java.lang.String[],int[])&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void onRequestPermissionsResult(int,java.lang.String[],int[])&gt;,&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;,void chooseFile(), &lt;androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.importlocal.ImportFragment"/>  
      <destinition name="interICC_android.intent.action.GET_CONTENT, android.intent.category.OPENABLE"/>  
      <sender action="android.intent.action.GET_CONTENT" category="android.intent.category.OPENABLE" type="text/x-vcard"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void onRequestPermissionsResult(int,java.lang.String[],int[])&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;"/>  
        <node method="ImportFragment chooseFile" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="ImportFragment chooseFile" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.OPENABLE&quot;)"/>  
        <node method="ImportFragment chooseFile" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.GET_CONTENT&quot;)"/>  
        <node method="ImportFragment chooseFile" type="PassOutIntent" unit="virtualinvoke r0.&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void startActivityForResult(android.content.Intent,int)&gt;($r2, $i0)"/>  
        <node method="Fragment startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="Fragment startActivityForResult" type="PassOutIntent" unit="virtualinvoke r0.&lt;androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int,android.os.Bundle)&gt;($r1, $i0, null)"/>  
        <node method="ImportFragment chooseFile" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;text/x-vcard&quot;)"/>  
        <node method="Fragment startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void onRequestPermissionsResult(int,java.lang.String[],int[])&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void onRequestPermissionsResult(int,java.lang.String[],int[])&gt;,&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;,void chooseFile(), &lt;androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.importlocal.ImportFragment"/>  
      <destinition name="interICC_android.intent.action.GET_CONTENT, android.intent.category.OPENABLE"/>  
      <sender action="android.intent.action.GET_CONTENT" category="android.intent.category.OPENABLE" type="text/calendar"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void onRequestPermissionsResult(int,java.lang.String[],int[])&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;"/>  
        <node method="ImportFragment chooseFile" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="ImportFragment chooseFile" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.OPENABLE&quot;)"/>  
        <node method="ImportFragment chooseFile" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.GET_CONTENT&quot;)"/>  
        <node method="ImportFragment chooseFile" type="PassOutIntent" unit="virtualinvoke r0.&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void startActivityForResult(android.content.Intent,int)&gt;($r2, $i0)"/>  
        <node method="Fragment startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="Fragment startActivityForResult" type="PassOutIntent" unit="virtualinvoke r0.&lt;androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int,android.os.Bundle)&gt;($r1, $i0, null)"/>  
        <node method="ImportFragment chooseFile" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;text/calendar&quot;)"/>  
        <node method="Fragment startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void onRequestPermissionsResult(int,java.lang.String[],int[])&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void onRequestPermissionsResult(int,java.lang.String[],int[])&gt;,&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;,void chooseFile()"/>  
      <source name="com.etesync.syncadapter.ui.importlocal.ImportFragment"/>  
      <sender action="android.intent.action.GET_CONTENT" category="android.intent.category.OPENABLE" type="text/x-vcard"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void onRequestPermissionsResult(int,java.lang.String[],int[])&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;"/>  
        <node method="ImportFragment chooseFile" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="ImportFragment chooseFile" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.OPENABLE&quot;)"/>  
        <node method="ImportFragment chooseFile" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.GET_CONTENT&quot;)"/>  
        <node method="ImportFragment chooseFile" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;text/x-vcard&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void onRequestPermissionsResult(int,java.lang.String[],int[])&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void onRequestPermissionsResult(int,java.lang.String[],int[])&gt;,&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;,void chooseFile()"/>  
      <source name="com.etesync.syncadapter.ui.importlocal.ImportFragment"/>  
      <sender action="android.intent.action.GET_CONTENT" category="android.intent.category.OPENABLE"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void onRequestPermissionsResult(int,java.lang.String[],int[])&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;"/>  
        <node method="ImportFragment chooseFile" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="ImportFragment chooseFile" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.OPENABLE&quot;)"/>  
        <node method="ImportFragment chooseFile" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.GET_CONTENT&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void onRequestPermissionsResult(int,java.lang.String[],int[])&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void onRequestPermissionsResult(int,java.lang.String[],int[])&gt;,&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;,&lt;androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int)&gt;,void startActivityForResult(android.content.Intent,int), &lt;androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int,android.os.Bundle)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.importlocal.ImportFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void onRequestPermissionsResult(int,java.lang.String[],int[])&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;"/>  
        <node method="&lt;androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int)&gt;"/>  
        <node method="Fragment startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="Fragment startActivityForResult" type="PassOutIntent" unit="virtualinvoke r0.&lt;androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int,android.os.Bundle)&gt;($r1, $i0, null)"/>  
        <node method="Fragment startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.ChangeEncryptionPasswordActivity"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.ChangeEncryptionPasswordActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.ChangeEncryptionPasswordActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle)"/>  
      <source name="com.etesync.syncadapter.ui.ChangeEncryptionPasswordActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.ChangeEncryptionPasswordActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="ChangeEncryptionPasswordActivity onCreate" type="setContentView" unit="virtualinvoke r0.&lt;com.etesync.syncadapter.ui.ChangeEncryptionPasswordActivity: void setContentView(int)&gt;(2131492908)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.syncadapter.ContactsSyncManager"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncManager: void &lt;init&gt;(android.content.Context,android.accounts.Account,com.etesync.syncadapter.AccountSettings,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult,com.etesync.syncadapter.resource.LocalAddressBook,okhttp3.HttpUrl)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncManager: void &lt;init&gt;(android.content.Context,android.accounts.Account,com.etesync.syncadapter.AccountSettings,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult,com.etesync.syncadapter.resource.LocalAddressBook,okhttp3.HttpUrl)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void &lt;init&gt;(android.content.Context,android.accounts.Account,com.etesync.syncadapter.AccountSettings,android.os.Bundle,java.lang.String,android.content.SyncResult,java.lang.String,com.etesync.syncadapter.model.CollectionInfo$Type,java.lang.String)&gt;,&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;,&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;,void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)"/>  
      <source name="com.etesync.syncadapter.syncadapter.ContactsSyncManager"/>  
      <destinition name="at.bitfire.cert4android.CustomCertService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncManager: void &lt;init&gt;(android.content.Context,android.accounts.Account,com.etesync.syncadapter.AccountSettings,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult,com.etesync.syncadapter.resource.LocalAddressBook,okhttp3.HttpUrl)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void &lt;init&gt;(android.content.Context,android.accounts.Account,com.etesync.syncadapter.AccountSettings,android.os.Bundle,java.lang.String,android.content.SyncResult,java.lang.String,com.etesync.syncadapter.model.CollectionInfo$Type,java.lang.String)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;"/>  
        <node method="&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;"/>  
        <node method="CustomCertManager &lt;init&gt;" type="CreateMethod" unit="$r11 = new android.content.Intent"/>  
        <node method="CustomCertManager &lt;init&gt;" type="SetAttribute" unit="specialinvoke $r11.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r12, class &quot;Lat/bitfire/cert4android/CustomCertService;&quot;)"/>  
        <node method="CustomCertManager &lt;init&gt;" type="PassOutIntent" unit="$z0 = virtualinvoke $r2.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r11, $r13, 1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.acra.sender.LegacySenderService"> 
    <intentSummary> 
      <method value="&lt;org.acra.sender.LegacySenderService: int onStartCommand(android.content.Intent,int,int)&gt;"/>  
      <methodtrace value="&lt;org.acra.sender.LegacySenderService: int onStartCommand(android.content.Intent,int,int)&gt;,int onStartCommand(android.content.Intent,int,int)"/>  
      <source name="org.acra.sender.LegacySenderService"/>  
      <nodes> 
        <node method="&lt;org.acra.sender.LegacySenderService: int onStartCommand(android.content.Intent,int,int)&gt;"/>  
        <node method="LegacySenderService onStartCommand" type="ReceiveIntentFromRetValue" unit="$r2 = virtualinvoke r0.&lt;org.acra.sender.LegacySenderService: android.content.Intent getIntent()&gt;()"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.sender.LegacySenderService: int onStartCommand(android.content.Intent,int,int)&gt;"/>  
      <methodtrace value="&lt;org.acra.sender.LegacySenderService: int onStartCommand(android.content.Intent,int,int)&gt;,int onStartCommand(android.content.Intent,int,int)"/>  
      <source name="org.acra.sender.LegacySenderService"/>  
      <nodes> 
        <node method="&lt;org.acra.sender.LegacySenderService: int onStartCommand(android.content.Intent,int,int)&gt;"/>  
        <node method="LegacySenderService onStartCommand" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.acra.sender.EmailIntentSender"> 
    <intentSummary> 
      <method value="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;"/>  
      <methodtrace value="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;,void send(android.content.Context,org.acra.data.CrashReportData), &lt;org.acra.sender.EmailIntentSender: android.content.Intent buildResolveIntent(java.lang.String,java.lang.String)&gt;, &lt;org.acra.sender.EmailIntentSender: android.content.Intent buildAttachmentIntent(java.lang.String,java.lang.String,java.util.ArrayList)&gt;, &lt;org.acra.sender.EmailIntentSender: java.util.List buildInitialIntents(android.content.pm.PackageManager,android.content.Intent,android.content.Intent)&gt;"/>  
      <source name="org.acra.sender.EmailIntentSender"/>  
      <destinition name="interICC_android.intent.action.SEND_MULTIPLE, "/>  
      <sender action="android.intent.action.SEND_MULTIPLE" type="message/rfc822" flags="FLAG_ACTIVITY_NEW_TASK "/>  
      <nodes> 
        <node method="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;"/>  
        <node method="EmailIntentSender send" type="ReceiveIntentFromRetValue" unit="$r16 = virtualinvoke r0.&lt;org.acra.sender.EmailIntentSender: android.content.Intent buildAttachmentIntent(java.lang.String,java.lang.String,java.util.ArrayList)&gt;($r4, $r11, $r13)"/>  
        <node method="EmailIntentSender buildAttachmentIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="EmailIntentSender buildAttachmentIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.SEND_MULTIPLE&quot;)"/>  
        <node method="EmailIntentSender buildAttachmentIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(268435456)"/>  
        <node method="EmailIntentSender buildAttachmentIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;message/rfc822&quot;)"/>  
        <node method="EmailIntentSender buildInitialIntents" type="ReceiveIntentFromParatMethod" unit="$r3 := @parameter1: android.content.Intent"/>  
        <node method="EmailIntentSender buildInitialIntents" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter2: android.content.Intent"/>  
        <node method="EmailIntentSender buildInitialIntents" type="PassOutIntent" unit="$r4 = virtualinvoke $r1.&lt;android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)&gt;($r3, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;"/>  
      <methodtrace value="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;,void send(android.content.Context,org.acra.data.CrashReportData), &lt;org.acra.sender.EmailIntentSender: android.content.Intent buildResolveIntent(java.lang.String,java.lang.String)&gt;, &lt;org.acra.sender.EmailIntentSender: android.content.Intent buildAttachmentIntent(java.lang.String,java.lang.String,java.util.ArrayList)&gt;, &lt;org.acra.sender.EmailIntentSender: java.util.List buildInitialIntents(android.content.pm.PackageManager,android.content.Intent,android.content.Intent)&gt;"/>  
      <source name="org.acra.sender.EmailIntentSender"/>  
      <sender action="android.intent.action.SENDTO" flags="FLAG_ACTIVITY_NEW_TASK "/>  
      <nodes> 
        <node method="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;"/>  
        <node method="EmailIntentSender send" type="ReceiveIntentFromRetValue" unit="$r14 = virtualinvoke r0.&lt;org.acra.sender.EmailIntentSender: android.content.Intent buildResolveIntent(java.lang.String,java.lang.String)&gt;($r4, $r10)"/>  
        <node method="EmailIntentSender buildResolveIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="EmailIntentSender buildResolveIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.SENDTO&quot;)"/>  
        <node method="EmailIntentSender buildResolveIntent" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r6)"/>  
        <node method="EmailIntentSender buildResolveIntent" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(268435456)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;"/>  
      <methodtrace value="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;,void send(android.content.Context,org.acra.data.CrashReportData), &lt;org.acra.sender.EmailIntentSender: android.content.Intent buildResolveIntent(java.lang.String,java.lang.String)&gt;, &lt;org.acra.sender.EmailIntentSender: android.content.Intent buildAttachmentIntent(java.lang.String,java.lang.String,java.util.ArrayList)&gt;, &lt;org.acra.sender.EmailIntentSender: java.util.List buildInitialIntents(android.content.pm.PackageManager,android.content.Intent,android.content.Intent)&gt;"/>  
      <source name="org.acra.sender.EmailIntentSender"/>  
      <destinition name="interICC_android.intent.action.SEND_MULTIPLE, "/>  
      <sender action="android.intent.action.SEND_MULTIPLE" type="message/rfc822" flags="FLAG_ACTIVITY_NEW_TASK "/>  
      <nodes> 
        <node method="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;"/>  
        <node method="EmailIntentSender send" type="ReceiveIntentFromRetValue" unit="$r16 = virtualinvoke r0.&lt;org.acra.sender.EmailIntentSender: android.content.Intent buildAttachmentIntent(java.lang.String,java.lang.String,java.util.ArrayList)&gt;($r4, $r11, $r13)"/>  
        <node method="EmailIntentSender buildAttachmentIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="EmailIntentSender buildAttachmentIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.SEND_MULTIPLE&quot;)"/>  
        <node method="EmailIntentSender buildAttachmentIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(268435456)"/>  
        <node method="EmailIntentSender buildAttachmentIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;message/rfc822&quot;)"/>  
        <node method="EmailIntentSender buildInitialIntents" type="ReceiveIntentFromParatMethod" unit="$r3 := @parameter1: android.content.Intent"/>  
        <node method="EmailIntentSender buildInitialIntents" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter2: android.content.Intent"/>  
        <node method="EmailIntentSender buildInitialIntents" type="PassOutIntent" unit="$r4 = virtualinvoke $r1.&lt;android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="EmailIntentSender buildInitialIntents" type="CreateMethod" unit="$r3 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;"/>  
      <methodtrace value="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;,void send(android.content.Context,org.acra.data.CrashReportData), &lt;org.acra.sender.EmailIntentSender: android.content.Intent buildResolveIntent(java.lang.String,java.lang.String)&gt;, &lt;org.acra.sender.EmailIntentSender: android.content.Intent buildAttachmentIntent(java.lang.String,java.lang.String,java.util.ArrayList)&gt;, &lt;org.acra.sender.EmailIntentSender: java.util.List buildInitialIntents(android.content.pm.PackageManager,android.content.Intent,android.content.Intent)&gt;, &lt;org.acra.sender.EmailIntentSender: void grantPermission(android.content.Context,android.content.Intent,java.lang.String,java.util.List)&gt;"/>  
      <source name="org.acra.sender.EmailIntentSender"/>  
      <sender action="android.intent.action.SENDTO" flags="FLAG_ACTIVITY_NEW_TASK "/>  
      <nodes> 
        <node method="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;"/>  
        <node method="EmailIntentSender send" type="ReceiveIntentFromRetValue" unit="$r14 = virtualinvoke r0.&lt;org.acra.sender.EmailIntentSender: android.content.Intent buildResolveIntent(java.lang.String,java.lang.String)&gt;($r4, $r10)"/>  
        <node method="EmailIntentSender buildResolveIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="EmailIntentSender buildResolveIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.SENDTO&quot;)"/>  
        <node method="EmailIntentSender buildResolveIntent" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r6)"/>  
        <node method="EmailIntentSender buildResolveIntent" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(268435456)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;"/>  
      <methodtrace value="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;,void send(android.content.Context,org.acra.data.CrashReportData), &lt;org.acra.sender.EmailIntentSender: android.content.Intent buildResolveIntent(java.lang.String,java.lang.String)&gt;, &lt;org.acra.sender.EmailIntentSender: android.content.Intent buildAttachmentIntent(java.lang.String,java.lang.String,java.util.ArrayList)&gt;, &lt;org.acra.sender.EmailIntentSender: java.util.List buildInitialIntents(android.content.pm.PackageManager,android.content.Intent,android.content.Intent)&gt;"/>  
      <source name="org.acra.sender.EmailIntentSender"/>  
      <sender action="android.intent.action.SEND_MULTIPLE" type="message/rfc822" flags="FLAG_ACTIVITY_NEW_TASK "/>  
      <nodes> 
        <node method="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;"/>  
        <node method="EmailIntentSender send" type="ReceiveIntentFromRetValue" unit="$r16 = virtualinvoke r0.&lt;org.acra.sender.EmailIntentSender: android.content.Intent buildAttachmentIntent(java.lang.String,java.lang.String,java.util.ArrayList)&gt;($r4, $r11, $r13)"/>  
        <node method="EmailIntentSender buildAttachmentIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="EmailIntentSender buildAttachmentIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.SEND_MULTIPLE&quot;)"/>  
        <node method="EmailIntentSender buildAttachmentIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(268435456)"/>  
        <node method="EmailIntentSender buildAttachmentIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;message/rfc822&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;"/>  
      <methodtrace value="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;,&lt;org.acra.sender.EmailIntentSender: java.util.List buildInitialIntents(android.content.pm.PackageManager,android.content.Intent,android.content.Intent)&gt;,java.util.List buildInitialIntents(android.content.pm.PackageManager,android.content.Intent,android.content.Intent)"/>  
      <source name="org.acra.sender.EmailIntentSender"/>  
      <nodes> 
        <node method="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;"/>  
        <node method="&lt;org.acra.sender.EmailIntentSender: java.util.List buildInitialIntents(android.content.pm.PackageManager,android.content.Intent,android.content.Intent)&gt;"/>  
        <node method="EmailIntentSender buildInitialIntents" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter2: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;"/>  
      <methodtrace value="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;,&lt;org.acra.sender.EmailIntentSender: void grantPermission(android.content.Context,android.content.Intent,java.lang.String,java.util.List)&gt;,void grantPermission(android.content.Context,android.content.Intent,java.lang.String,java.util.List)"/>  
      <source name="org.acra.sender.EmailIntentSender"/>  
      <nodes> 
        <node method="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;"/>  
        <node method="&lt;org.acra.sender.EmailIntentSender: void grantPermission(android.content.Context,android.content.Intent,java.lang.String,java.util.List)&gt;"/>  
        <node method="EmailIntentSender grantPermission" type="ReceiveIntentFromParatMethod" unit="$r3 := @parameter1: android.content.Intent"/>  
        <node method="EmailIntentSender grantPermission" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;"/>  
      <methodtrace value="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;,void send(android.content.Context,org.acra.data.CrashReportData), &lt;org.acra.sender.EmailIntentSender: android.content.Intent buildResolveIntent(java.lang.String,java.lang.String)&gt;, &lt;org.acra.sender.EmailIntentSender: android.content.Intent buildAttachmentIntent(java.lang.String,java.lang.String,java.util.ArrayList)&gt;, &lt;org.acra.sender.EmailIntentSender: java.util.List buildInitialIntents(android.content.pm.PackageManager,android.content.Intent,android.content.Intent)&gt;, &lt;org.acra.sender.EmailIntentSender: void grantPermission(android.content.Context,android.content.Intent,java.lang.String,java.util.List)&gt;"/>  
      <source name="org.acra.sender.EmailIntentSender"/>  
      <destinition name="interICC_android.intent.action.SEND_MULTIPLE, "/>  
      <sender action="android.intent.action.SEND_MULTIPLE" type="message/rfc822" flags="FLAG_ACTIVITY_NEW_TASK , FLAG_GRANT_READ_URI_PERMISSION , FLAG_GRANT_READ_URI_PERMISSION "/>  
      <nodes> 
        <node method="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;"/>  
        <node method="EmailIntentSender send" type="ReceiveIntentFromRetValue" unit="$r16 = virtualinvoke r0.&lt;org.acra.sender.EmailIntentSender: android.content.Intent buildAttachmentIntent(java.lang.String,java.lang.String,java.util.ArrayList)&gt;($r4, $r11, $r13)"/>  
        <node method="EmailIntentSender buildAttachmentIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="EmailIntentSender buildAttachmentIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.SEND_MULTIPLE&quot;)"/>  
        <node method="EmailIntentSender buildAttachmentIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(268435456)"/>  
        <node method="EmailIntentSender buildAttachmentIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;message/rfc822&quot;)"/>  
        <node method="EmailIntentSender buildInitialIntents" type="ReceiveIntentFromParatMethod" unit="$r3 := @parameter1: android.content.Intent"/>  
        <node method="EmailIntentSender buildInitialIntents" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter2: android.content.Intent"/>  
        <node method="EmailIntentSender buildInitialIntents" type="PassOutIntent" unit="$r4 = virtualinvoke $r1.&lt;android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="EmailIntentSender buildInitialIntents" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="EmailIntentSender grantPermission" type="ReceiveIntentFromParatMethod" unit="$r3 := @parameter1: android.content.Intent"/>  
        <node method="EmailIntentSender grantPermission" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(1)"/>  
        <node method="EmailIntentSender grantPermission" type="ReceiveIntentFromParatMethod" unit="$r3 := @parameter1: android.content.Intent"/>  
        <node method="EmailIntentSender grantPermission" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(1)"/>  
        <node method="EmailIntentSender send" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r16)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;"/>  
      <methodtrace value="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;,void send(android.content.Context,org.acra.data.CrashReportData), &lt;org.acra.sender.EmailIntentSender: android.content.Intent buildResolveIntent(java.lang.String,java.lang.String)&gt;, &lt;org.acra.sender.EmailIntentSender: android.content.Intent buildAttachmentIntent(java.lang.String,java.lang.String,java.util.ArrayList)&gt;, &lt;org.acra.sender.EmailIntentSender: java.util.List buildInitialIntents(android.content.pm.PackageManager,android.content.Intent,android.content.Intent)&gt;"/>  
      <source name="org.acra.sender.EmailIntentSender"/>  
      <destinition name="interICC_android.intent.action.SEND_MULTIPLE, "/>  
      <sender action="android.intent.action.SEND_MULTIPLE" type="message/rfc822" flags="FLAG_ACTIVITY_NEW_TASK "/>  
      <nodes> 
        <node method="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;"/>  
        <node method="EmailIntentSender send" type="ReceiveIntentFromRetValue" unit="$r16 = virtualinvoke r0.&lt;org.acra.sender.EmailIntentSender: android.content.Intent buildAttachmentIntent(java.lang.String,java.lang.String,java.util.ArrayList)&gt;($r4, $r11, $r13)"/>  
        <node method="EmailIntentSender buildAttachmentIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="EmailIntentSender buildAttachmentIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.SEND_MULTIPLE&quot;)"/>  
        <node method="EmailIntentSender buildAttachmentIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(268435456)"/>  
        <node method="EmailIntentSender buildAttachmentIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;message/rfc822&quot;)"/>  
        <node method="EmailIntentSender buildInitialIntents" type="ReceiveIntentFromParatMethod" unit="$r3 := @parameter1: android.content.Intent"/>  
        <node method="EmailIntentSender buildInitialIntents" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter2: android.content.Intent"/>  
        <node method="EmailIntentSender buildInitialIntents" type="PassOutIntent" unit="$r4 = virtualinvoke $r1.&lt;android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)&gt;($r3, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;"/>  
      <methodtrace value="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;,&lt;org.acra.sender.EmailIntentSender: void showChooser(android.content.Context,java.util.List)&gt;,void showChooser(android.content.Context,java.util.List)"/>  
      <source name="org.acra.sender.EmailIntentSender"/>  
      <destinition name="interICC_android.intent.action.CHOOSER, "/>  
      <sender action="android.intent.action.CHOOSER" flags="FLAG_ACTIVITY_NEW_TASK "/>  
      <nodes> 
        <node method="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;"/>  
        <node method="&lt;org.acra.sender.EmailIntentSender: void showChooser(android.content.Context,java.util.List)&gt;"/>  
        <node method="EmailIntentSender showChooser" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="EmailIntentSender showChooser" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.CHOOSER&quot;)"/>  
        <node method="EmailIntentSender showChooser" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(268435456)"/>  
        <node method="EmailIntentSender showChooser" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r2)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;"/>  
      <methodtrace value="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;,&lt;org.acra.sender.EmailIntentSender: java.util.List buildInitialIntents(android.content.pm.PackageManager,android.content.Intent,android.content.Intent)&gt;,java.util.List buildInitialIntents(android.content.pm.PackageManager,android.content.Intent,android.content.Intent)"/>  
      <source name="org.acra.sender.EmailIntentSender"/>  
      <nodes> 
        <node method="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;"/>  
        <node method="&lt;org.acra.sender.EmailIntentSender: java.util.List buildInitialIntents(android.content.pm.PackageManager,android.content.Intent,android.content.Intent)&gt;"/>  
        <node method="EmailIntentSender buildInitialIntents" type="CreateMethod" unit="$r3 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;"/>  
      <methodtrace value="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;,void send(android.content.Context,org.acra.data.CrashReportData), &lt;org.acra.sender.EmailIntentSender: android.content.Intent buildResolveIntent(java.lang.String,java.lang.String)&gt;, &lt;org.acra.sender.EmailIntentSender: android.content.Intent buildAttachmentIntent(java.lang.String,java.lang.String,java.util.ArrayList)&gt;, &lt;org.acra.sender.EmailIntentSender: java.util.List buildInitialIntents(android.content.pm.PackageManager,android.content.Intent,android.content.Intent)&gt;"/>  
      <source name="org.acra.sender.EmailIntentSender"/>  
      <destinition name="interICC_android.intent.action.SEND_MULTIPLE, "/>  
      <sender action="android.intent.action.SEND_MULTIPLE" type="message/rfc822" flags="FLAG_ACTIVITY_NEW_TASK "/>  
      <nodes> 
        <node method="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;"/>  
        <node method="EmailIntentSender send" type="ReceiveIntentFromRetValue" unit="$r16 = virtualinvoke r0.&lt;org.acra.sender.EmailIntentSender: android.content.Intent buildAttachmentIntent(java.lang.String,java.lang.String,java.util.ArrayList)&gt;($r4, $r11, $r13)"/>  
        <node method="EmailIntentSender buildAttachmentIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="EmailIntentSender buildAttachmentIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.SEND_MULTIPLE&quot;)"/>  
        <node method="EmailIntentSender buildAttachmentIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(268435456)"/>  
        <node method="EmailIntentSender buildAttachmentIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;message/rfc822&quot;)"/>  
        <node method="EmailIntentSender buildInitialIntents" type="ReceiveIntentFromParatMethod" unit="$r3 := @parameter1: android.content.Intent"/>  
        <node method="EmailIntentSender buildInitialIntents" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter2: android.content.Intent"/>  
        <node method="EmailIntentSender buildInitialIntents" type="PassOutIntent" unit="$r4 = virtualinvoke $r1.&lt;android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="EmailIntentSender buildInitialIntents" type="CreateMethod" unit="$r3 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;"/>  
      <methodtrace value="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;,void send(android.content.Context,org.acra.data.CrashReportData), &lt;org.acra.sender.EmailIntentSender: android.content.Intent buildResolveIntent(java.lang.String,java.lang.String)&gt;, &lt;org.acra.sender.EmailIntentSender: android.content.Intent buildAttachmentIntent(java.lang.String,java.lang.String,java.util.ArrayList)&gt;, &lt;org.acra.sender.EmailIntentSender: java.util.List buildInitialIntents(android.content.pm.PackageManager,android.content.Intent,android.content.Intent)&gt;"/>  
      <source name="org.acra.sender.EmailIntentSender"/>  
      <destinition name="interICC_android.intent.action.SENDTO, "/>  
      <sender action="android.intent.action.SENDTO" flags="FLAG_ACTIVITY_NEW_TASK "/>  
      <nodes> 
        <node method="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;"/>  
        <node method="EmailIntentSender send" type="ReceiveIntentFromRetValue" unit="$r14 = virtualinvoke r0.&lt;org.acra.sender.EmailIntentSender: android.content.Intent buildResolveIntent(java.lang.String,java.lang.String)&gt;($r4, $r10)"/>  
        <node method="EmailIntentSender buildResolveIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="EmailIntentSender buildResolveIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.SENDTO&quot;)"/>  
        <node method="EmailIntentSender buildResolveIntent" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r6)"/>  
        <node method="EmailIntentSender buildResolveIntent" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(268435456)"/>  
        <node method="EmailIntentSender send" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r14)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;"/>  
      <methodtrace value="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;,void send(android.content.Context,org.acra.data.CrashReportData), &lt;org.acra.sender.EmailIntentSender: android.content.Intent buildResolveIntent(java.lang.String,java.lang.String)&gt;, &lt;org.acra.sender.EmailIntentSender: android.content.Intent buildAttachmentIntent(java.lang.String,java.lang.String,java.util.ArrayList)&gt;, &lt;org.acra.sender.EmailIntentSender: java.util.List buildInitialIntents(android.content.pm.PackageManager,android.content.Intent,android.content.Intent)&gt;, &lt;org.acra.sender.EmailIntentSender: void grantPermission(android.content.Context,android.content.Intent,java.lang.String,java.util.List)&gt;"/>  
      <source name="org.acra.sender.EmailIntentSender"/>  
      <sender action="android.intent.action.SENDTO" flags="FLAG_ACTIVITY_NEW_TASK "/>  
      <nodes> 
        <node method="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;"/>  
        <node method="EmailIntentSender send" type="ReceiveIntentFromRetValue" unit="$r14 = virtualinvoke r0.&lt;org.acra.sender.EmailIntentSender: android.content.Intent buildResolveIntent(java.lang.String,java.lang.String)&gt;($r4, $r10)"/>  
        <node method="EmailIntentSender buildResolveIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="EmailIntentSender buildResolveIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.SENDTO&quot;)"/>  
        <node method="EmailIntentSender buildResolveIntent" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r6)"/>  
        <node method="EmailIntentSender buildResolveIntent" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(268435456)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;"/>  
      <methodtrace value="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;,void send(android.content.Context,org.acra.data.CrashReportData), &lt;org.acra.sender.EmailIntentSender: android.content.Intent buildResolveIntent(java.lang.String,java.lang.String)&gt;, &lt;org.acra.sender.EmailIntentSender: android.content.Intent buildAttachmentIntent(java.lang.String,java.lang.String,java.util.ArrayList)&gt;, &lt;org.acra.sender.EmailIntentSender: java.util.List buildInitialIntents(android.content.pm.PackageManager,android.content.Intent,android.content.Intent)&gt;, &lt;org.acra.sender.EmailIntentSender: void grantPermission(android.content.Context,android.content.Intent,java.lang.String,java.util.List)&gt;"/>  
      <source name="org.acra.sender.EmailIntentSender"/>  
      <destinition name="interICC_android.intent.action.SEND_MULTIPLE, "/>  
      <sender action="android.intent.action.SEND_MULTIPLE" type="message/rfc822" flags="FLAG_ACTIVITY_NEW_TASK , FLAG_GRANT_READ_URI_PERMISSION , FLAG_GRANT_READ_URI_PERMISSION "/>  
      <nodes> 
        <node method="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;"/>  
        <node method="EmailIntentSender send" type="ReceiveIntentFromRetValue" unit="$r16 = virtualinvoke r0.&lt;org.acra.sender.EmailIntentSender: android.content.Intent buildAttachmentIntent(java.lang.String,java.lang.String,java.util.ArrayList)&gt;($r4, $r11, $r13)"/>  
        <node method="EmailIntentSender buildAttachmentIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="EmailIntentSender buildAttachmentIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.SEND_MULTIPLE&quot;)"/>  
        <node method="EmailIntentSender buildAttachmentIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(268435456)"/>  
        <node method="EmailIntentSender buildAttachmentIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;message/rfc822&quot;)"/>  
        <node method="EmailIntentSender grantPermission" type="ReceiveIntentFromParatMethod" unit="$r3 := @parameter1: android.content.Intent"/>  
        <node method="EmailIntentSender grantPermission" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(1)"/>  
        <node method="EmailIntentSender grantPermission" type="ReceiveIntentFromParatMethod" unit="$r3 := @parameter1: android.content.Intent"/>  
        <node method="EmailIntentSender grantPermission" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(1)"/>  
        <node method="EmailIntentSender send" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r16)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;"/>  
      <methodtrace value="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;,&lt;org.acra.sender.EmailIntentSender: java.util.List buildInitialIntents(android.content.pm.PackageManager,android.content.Intent,android.content.Intent)&gt;,java.util.List buildInitialIntents(android.content.pm.PackageManager,android.content.Intent,android.content.Intent)"/>  
      <source name="org.acra.sender.EmailIntentSender"/>  
      <nodes> 
        <node method="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;"/>  
        <node method="&lt;org.acra.sender.EmailIntentSender: java.util.List buildInitialIntents(android.content.pm.PackageManager,android.content.Intent,android.content.Intent)&gt;"/>  
        <node method="EmailIntentSender buildInitialIntents" type="ReceiveIntentFromParatMethod" unit="$r3 := @parameter1: android.content.Intent"/>  
        <node method="EmailIntentSender buildInitialIntents" type="PassOutIntent" unit="$r4 = virtualinvoke $r1.&lt;android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)&gt;($r3, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;"/>  
      <methodtrace value="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;,&lt;org.acra.sender.EmailIntentSender: java.util.List buildInitialIntents(android.content.pm.PackageManager,android.content.Intent,android.content.Intent)&gt;,java.util.List buildInitialIntents(android.content.pm.PackageManager,android.content.Intent,android.content.Intent)"/>  
      <source name="org.acra.sender.EmailIntentSender"/>  
      <nodes> 
        <node method="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;"/>  
        <node method="&lt;org.acra.sender.EmailIntentSender: java.util.List buildInitialIntents(android.content.pm.PackageManager,android.content.Intent,android.content.Intent)&gt;"/>  
        <node method="EmailIntentSender buildInitialIntents" type="ReceiveIntentFromParatMethod" unit="$r3 := @parameter1: android.content.Intent"/>  
        <node method="EmailIntentSender buildInitialIntents" type="PassOutIntent" unit="$r4 = virtualinvoke $r1.&lt;android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)&gt;($r3, 65536)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;"/>  
      <methodtrace value="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;,void send(android.content.Context,org.acra.data.CrashReportData), &lt;org.acra.sender.EmailIntentSender: android.content.Intent buildResolveIntent(java.lang.String,java.lang.String)&gt;, &lt;org.acra.sender.EmailIntentSender: android.content.Intent buildAttachmentIntent(java.lang.String,java.lang.String,java.util.ArrayList)&gt;, &lt;org.acra.sender.EmailIntentSender: java.util.List buildInitialIntents(android.content.pm.PackageManager,android.content.Intent,android.content.Intent)&gt;, &lt;org.acra.sender.EmailIntentSender: void grantPermission(android.content.Context,android.content.Intent,java.lang.String,java.util.List)&gt;"/>  
      <source name="org.acra.sender.EmailIntentSender"/>  
      <destinition name="interICC_android.intent.action.SEND_MULTIPLE, "/>  
      <sender action="android.intent.action.SEND_MULTIPLE" type="message/rfc822" flags="FLAG_ACTIVITY_NEW_TASK , FLAG_GRANT_READ_URI_PERMISSION , FLAG_GRANT_READ_URI_PERMISSION "/>  
      <nodes> 
        <node method="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;"/>  
        <node method="EmailIntentSender send" type="ReceiveIntentFromRetValue" unit="$r16 = virtualinvoke r0.&lt;org.acra.sender.EmailIntentSender: android.content.Intent buildAttachmentIntent(java.lang.String,java.lang.String,java.util.ArrayList)&gt;($r4, $r11, $r13)"/>  
        <node method="EmailIntentSender buildAttachmentIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="EmailIntentSender buildAttachmentIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.SEND_MULTIPLE&quot;)"/>  
        <node method="EmailIntentSender buildAttachmentIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(268435456)"/>  
        <node method="EmailIntentSender buildAttachmentIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;message/rfc822&quot;)"/>  
        <node method="EmailIntentSender buildInitialIntents" type="ReceiveIntentFromParatMethod" unit="$r3 := @parameter1: android.content.Intent"/>  
        <node method="EmailIntentSender buildInitialIntents" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter2: android.content.Intent"/>  
        <node method="EmailIntentSender buildInitialIntents" type="PassOutIntent" unit="$r4 = virtualinvoke $r1.&lt;android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="EmailIntentSender buildInitialIntents" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="EmailIntentSender grantPermission" type="ReceiveIntentFromParatMethod" unit="$r3 := @parameter1: android.content.Intent"/>  
        <node method="EmailIntentSender grantPermission" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(1)"/>  
        <node method="EmailIntentSender grantPermission" type="ReceiveIntentFromParatMethod" unit="$r3 := @parameter1: android.content.Intent"/>  
        <node method="EmailIntentSender grantPermission" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;"/>  
      <methodtrace value="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;,&lt;org.acra.sender.EmailIntentSender: java.util.List buildInitialIntents(android.content.pm.PackageManager,android.content.Intent,android.content.Intent)&gt;,java.util.List buildInitialIntents(android.content.pm.PackageManager,android.content.Intent,android.content.Intent)"/>  
      <source name="org.acra.sender.EmailIntentSender"/>  
      <nodes> 
        <node method="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;"/>  
        <node method="&lt;org.acra.sender.EmailIntentSender: java.util.List buildInitialIntents(android.content.pm.PackageManager,android.content.Intent,android.content.Intent)&gt;"/>  
        <node method="EmailIntentSender buildInitialIntents" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter2: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;"/>  
      <methodtrace value="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;,void send(android.content.Context,org.acra.data.CrashReportData), &lt;org.acra.sender.EmailIntentSender: android.content.Intent buildResolveIntent(java.lang.String,java.lang.String)&gt;"/>  
      <source name="org.acra.sender.EmailIntentSender"/>  
      <destinition name="interICC_android.intent.action.SENDTO, "/>  
      <sender action="android.intent.action.SENDTO" flags="FLAG_ACTIVITY_NEW_TASK "/>  
      <nodes> 
        <node method="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;"/>  
        <node method="EmailIntentSender send" type="ReceiveIntentFromRetValue" unit="$r14 = virtualinvoke r0.&lt;org.acra.sender.EmailIntentSender: android.content.Intent buildResolveIntent(java.lang.String,java.lang.String)&gt;($r4, $r10)"/>  
        <node method="EmailIntentSender buildResolveIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="EmailIntentSender buildResolveIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.SENDTO&quot;)"/>  
        <node method="EmailIntentSender buildResolveIntent" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r6)"/>  
        <node method="EmailIntentSender buildResolveIntent" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(268435456)"/>  
        <node method="EmailIntentSender send" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r14)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;"/>  
      <methodtrace value="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;,void send(android.content.Context,org.acra.data.CrashReportData), &lt;org.acra.sender.EmailIntentSender: android.content.Intent buildResolveIntent(java.lang.String,java.lang.String)&gt;, &lt;org.acra.sender.EmailIntentSender: android.content.Intent buildAttachmentIntent(java.lang.String,java.lang.String,java.util.ArrayList)&gt;, &lt;org.acra.sender.EmailIntentSender: java.util.List buildInitialIntents(android.content.pm.PackageManager,android.content.Intent,android.content.Intent)&gt;, &lt;org.acra.sender.EmailIntentSender: void grantPermission(android.content.Context,android.content.Intent,java.lang.String,java.util.List)&gt;"/>  
      <source name="org.acra.sender.EmailIntentSender"/>  
      <destinition name="interICC_android.intent.action.SEND_MULTIPLE, "/>  
      <sender action="android.intent.action.SEND_MULTIPLE" type="message/rfc822" flags="FLAG_ACTIVITY_NEW_TASK , FLAG_GRANT_READ_URI_PERMISSION , FLAG_GRANT_READ_URI_PERMISSION "/>  
      <nodes> 
        <node method="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;"/>  
        <node method="EmailIntentSender send" type="ReceiveIntentFromRetValue" unit="$r16 = virtualinvoke r0.&lt;org.acra.sender.EmailIntentSender: android.content.Intent buildAttachmentIntent(java.lang.String,java.lang.String,java.util.ArrayList)&gt;($r4, $r11, $r13)"/>  
        <node method="EmailIntentSender buildAttachmentIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="EmailIntentSender buildAttachmentIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.SEND_MULTIPLE&quot;)"/>  
        <node method="EmailIntentSender buildAttachmentIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(268435456)"/>  
        <node method="EmailIntentSender buildAttachmentIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;message/rfc822&quot;)"/>  
        <node method="EmailIntentSender buildInitialIntents" type="ReceiveIntentFromParatMethod" unit="$r3 := @parameter1: android.content.Intent"/>  
        <node method="EmailIntentSender buildInitialIntents" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter2: android.content.Intent"/>  
        <node method="EmailIntentSender buildInitialIntents" type="PassOutIntent" unit="$r4 = virtualinvoke $r1.&lt;android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="EmailIntentSender grantPermission" type="ReceiveIntentFromParatMethod" unit="$r3 := @parameter1: android.content.Intent"/>  
        <node method="EmailIntentSender grantPermission" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(1)"/>  
        <node method="EmailIntentSender grantPermission" type="ReceiveIntentFromParatMethod" unit="$r3 := @parameter1: android.content.Intent"/>  
        <node method="EmailIntentSender grantPermission" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;"/>  
      <methodtrace value="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;,void send(android.content.Context,org.acra.data.CrashReportData), &lt;org.acra.sender.EmailIntentSender: android.content.Intent buildResolveIntent(java.lang.String,java.lang.String)&gt;, &lt;org.acra.sender.EmailIntentSender: android.content.Intent buildAttachmentIntent(java.lang.String,java.lang.String,java.util.ArrayList)&gt;, &lt;org.acra.sender.EmailIntentSender: java.util.List buildInitialIntents(android.content.pm.PackageManager,android.content.Intent,android.content.Intent)&gt;"/>  
      <source name="org.acra.sender.EmailIntentSender"/>  
      <destinition name="interICC_android.intent.action.SENDTO, "/>  
      <sender action="android.intent.action.SENDTO" flags="FLAG_ACTIVITY_NEW_TASK "/>  
      <nodes> 
        <node method="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;"/>  
        <node method="EmailIntentSender send" type="ReceiveIntentFromRetValue" unit="$r14 = virtualinvoke r0.&lt;org.acra.sender.EmailIntentSender: android.content.Intent buildResolveIntent(java.lang.String,java.lang.String)&gt;($r4, $r10)"/>  
        <node method="EmailIntentSender buildResolveIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="EmailIntentSender buildResolveIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.SENDTO&quot;)"/>  
        <node method="EmailIntentSender buildResolveIntent" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r6)"/>  
        <node method="EmailIntentSender buildResolveIntent" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(268435456)"/>  
        <node method="EmailIntentSender send" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r14)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;"/>  
      <methodtrace value="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;,void send(android.content.Context,org.acra.data.CrashReportData), &lt;org.acra.sender.EmailIntentSender: android.content.Intent buildResolveIntent(java.lang.String,java.lang.String)&gt;, &lt;org.acra.sender.EmailIntentSender: android.content.Intent buildAttachmentIntent(java.lang.String,java.lang.String,java.util.ArrayList)&gt;, &lt;org.acra.sender.EmailIntentSender: java.util.List buildInitialIntents(android.content.pm.PackageManager,android.content.Intent,android.content.Intent)&gt;, &lt;org.acra.sender.EmailIntentSender: void grantPermission(android.content.Context,android.content.Intent,java.lang.String,java.util.List)&gt;"/>  
      <source name="org.acra.sender.EmailIntentSender"/>  
      <sender action="android.intent.action.SENDTO" flags="FLAG_ACTIVITY_NEW_TASK "/>  
      <nodes> 
        <node method="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;"/>  
        <node method="EmailIntentSender send" type="ReceiveIntentFromRetValue" unit="$r14 = virtualinvoke r0.&lt;org.acra.sender.EmailIntentSender: android.content.Intent buildResolveIntent(java.lang.String,java.lang.String)&gt;($r4, $r10)"/>  
        <node method="EmailIntentSender buildResolveIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="EmailIntentSender buildResolveIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.SENDTO&quot;)"/>  
        <node method="EmailIntentSender buildResolveIntent" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r6)"/>  
        <node method="EmailIntentSender buildResolveIntent" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(268435456)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;"/>  
      <methodtrace value="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;,void send(android.content.Context,org.acra.data.CrashReportData), &lt;org.acra.sender.EmailIntentSender: android.content.Intent buildResolveIntent(java.lang.String,java.lang.String)&gt;, &lt;org.acra.sender.EmailIntentSender: android.content.Intent buildAttachmentIntent(java.lang.String,java.lang.String,java.util.ArrayList)&gt;, &lt;org.acra.sender.EmailIntentSender: java.util.List buildInitialIntents(android.content.pm.PackageManager,android.content.Intent,android.content.Intent)&gt;, &lt;org.acra.sender.EmailIntentSender: void grantPermission(android.content.Context,android.content.Intent,java.lang.String,java.util.List)&gt;"/>  
      <source name="org.acra.sender.EmailIntentSender"/>  
      <sender action="android.intent.action.SENDTO" flags="FLAG_ACTIVITY_NEW_TASK "/>  
      <nodes> 
        <node method="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;"/>  
        <node method="EmailIntentSender send" type="ReceiveIntentFromRetValue" unit="$r14 = virtualinvoke r0.&lt;org.acra.sender.EmailIntentSender: android.content.Intent buildResolveIntent(java.lang.String,java.lang.String)&gt;($r4, $r10)"/>  
        <node method="EmailIntentSender buildResolveIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="EmailIntentSender buildResolveIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.SENDTO&quot;)"/>  
        <node method="EmailIntentSender buildResolveIntent" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r6)"/>  
        <node method="EmailIntentSender buildResolveIntent" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(268435456)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;"/>  
      <methodtrace value="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;,void send(android.content.Context,org.acra.data.CrashReportData), &lt;org.acra.sender.EmailIntentSender: android.content.Intent buildResolveIntent(java.lang.String,java.lang.String)&gt;, &lt;org.acra.sender.EmailIntentSender: android.content.Intent buildAttachmentIntent(java.lang.String,java.lang.String,java.util.ArrayList)&gt;, &lt;org.acra.sender.EmailIntentSender: java.util.List buildInitialIntents(android.content.pm.PackageManager,android.content.Intent,android.content.Intent)&gt;"/>  
      <source name="org.acra.sender.EmailIntentSender"/>  
      <sender action="android.intent.action.SENDTO" flags="FLAG_ACTIVITY_NEW_TASK "/>  
      <nodes> 
        <node method="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;"/>  
        <node method="EmailIntentSender send" type="ReceiveIntentFromRetValue" unit="$r14 = virtualinvoke r0.&lt;org.acra.sender.EmailIntentSender: android.content.Intent buildResolveIntent(java.lang.String,java.lang.String)&gt;($r4, $r10)"/>  
        <node method="EmailIntentSender buildResolveIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="EmailIntentSender buildResolveIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.SENDTO&quot;)"/>  
        <node method="EmailIntentSender buildResolveIntent" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r6)"/>  
        <node method="EmailIntentSender buildResolveIntent" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(268435456)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;"/>  
      <methodtrace value="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;,void send(android.content.Context,org.acra.data.CrashReportData), &lt;org.acra.sender.EmailIntentSender: android.content.Intent buildResolveIntent(java.lang.String,java.lang.String)&gt;, &lt;org.acra.sender.EmailIntentSender: android.content.Intent buildAttachmentIntent(java.lang.String,java.lang.String,java.util.ArrayList)&gt;, &lt;org.acra.sender.EmailIntentSender: java.util.List buildInitialIntents(android.content.pm.PackageManager,android.content.Intent,android.content.Intent)&gt;"/>  
      <source name="org.acra.sender.EmailIntentSender"/>  
      <sender action="android.intent.action.SENDTO" flags="FLAG_ACTIVITY_NEW_TASK "/>  
      <nodes> 
        <node method="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;"/>  
        <node method="EmailIntentSender send" type="ReceiveIntentFromRetValue" unit="$r14 = virtualinvoke r0.&lt;org.acra.sender.EmailIntentSender: android.content.Intent buildResolveIntent(java.lang.String,java.lang.String)&gt;($r4, $r10)"/>  
        <node method="EmailIntentSender buildResolveIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="EmailIntentSender buildResolveIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.SENDTO&quot;)"/>  
        <node method="EmailIntentSender buildResolveIntent" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r6)"/>  
        <node method="EmailIntentSender buildResolveIntent" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(268435456)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;"/>  
      <methodtrace value="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;,void send(android.content.Context,org.acra.data.CrashReportData), &lt;org.acra.sender.EmailIntentSender: android.content.Intent buildResolveIntent(java.lang.String,java.lang.String)&gt;, &lt;org.acra.sender.EmailIntentSender: android.content.Intent buildAttachmentIntent(java.lang.String,java.lang.String,java.util.ArrayList)&gt;, &lt;org.acra.sender.EmailIntentSender: java.util.List buildInitialIntents(android.content.pm.PackageManager,android.content.Intent,android.content.Intent)&gt;, &lt;org.acra.sender.EmailIntentSender: void grantPermission(android.content.Context,android.content.Intent,java.lang.String,java.util.List)&gt;"/>  
      <source name="org.acra.sender.EmailIntentSender"/>  
      <destinition name="interICC_android.intent.action.SEND_MULTIPLE, "/>  
      <sender action="android.intent.action.SEND_MULTIPLE" type="message/rfc822" flags="FLAG_ACTIVITY_NEW_TASK , FLAG_GRANT_READ_URI_PERMISSION , FLAG_GRANT_READ_URI_PERMISSION "/>  
      <nodes> 
        <node method="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;"/>  
        <node method="EmailIntentSender send" type="ReceiveIntentFromRetValue" unit="$r16 = virtualinvoke r0.&lt;org.acra.sender.EmailIntentSender: android.content.Intent buildAttachmentIntent(java.lang.String,java.lang.String,java.util.ArrayList)&gt;($r4, $r11, $r13)"/>  
        <node method="EmailIntentSender buildAttachmentIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="EmailIntentSender buildAttachmentIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.SEND_MULTIPLE&quot;)"/>  
        <node method="EmailIntentSender buildAttachmentIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(268435456)"/>  
        <node method="EmailIntentSender buildAttachmentIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;message/rfc822&quot;)"/>  
        <node method="EmailIntentSender buildInitialIntents" type="ReceiveIntentFromParatMethod" unit="$r3 := @parameter1: android.content.Intent"/>  
        <node method="EmailIntentSender buildInitialIntents" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter2: android.content.Intent"/>  
        <node method="EmailIntentSender buildInitialIntents" type="PassOutIntent" unit="$r4 = virtualinvoke $r1.&lt;android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)&gt;($r3, 65536)"/>  
        <node method="EmailIntentSender grantPermission" type="ReceiveIntentFromParatMethod" unit="$r3 := @parameter1: android.content.Intent"/>  
        <node method="EmailIntentSender grantPermission" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(1)"/>  
        <node method="EmailIntentSender grantPermission" type="ReceiveIntentFromParatMethod" unit="$r3 := @parameter1: android.content.Intent"/>  
        <node method="EmailIntentSender grantPermission" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(1)"/>  
        <node method="EmailIntentSender send" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r16)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;"/>  
      <methodtrace value="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;,void send(android.content.Context,org.acra.data.CrashReportData), &lt;org.acra.sender.EmailIntentSender: android.content.Intent buildResolveIntent(java.lang.String,java.lang.String)&gt;, &lt;org.acra.sender.EmailIntentSender: android.content.Intent buildAttachmentIntent(java.lang.String,java.lang.String,java.util.ArrayList)&gt;, &lt;org.acra.sender.EmailIntentSender: java.util.List buildInitialIntents(android.content.pm.PackageManager,android.content.Intent,android.content.Intent)&gt;"/>  
      <source name="org.acra.sender.EmailIntentSender"/>  
      <sender action="android.intent.action.SEND_MULTIPLE" type="message/rfc822" flags="FLAG_ACTIVITY_NEW_TASK "/>  
      <nodes> 
        <node method="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;"/>  
        <node method="EmailIntentSender send" type="ReceiveIntentFromRetValue" unit="$r16 = virtualinvoke r0.&lt;org.acra.sender.EmailIntentSender: android.content.Intent buildAttachmentIntent(java.lang.String,java.lang.String,java.util.ArrayList)&gt;($r4, $r11, $r13)"/>  
        <node method="EmailIntentSender buildAttachmentIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="EmailIntentSender buildAttachmentIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.SEND_MULTIPLE&quot;)"/>  
        <node method="EmailIntentSender buildAttachmentIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(268435456)"/>  
        <node method="EmailIntentSender buildAttachmentIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;message/rfc822&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;"/>  
      <methodtrace value="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;,void send(android.content.Context,org.acra.data.CrashReportData), &lt;org.acra.sender.EmailIntentSender: android.content.Intent buildResolveIntent(java.lang.String,java.lang.String)&gt;, &lt;org.acra.sender.EmailIntentSender: android.content.Intent buildAttachmentIntent(java.lang.String,java.lang.String,java.util.ArrayList)&gt;, &lt;org.acra.sender.EmailIntentSender: java.util.List buildInitialIntents(android.content.pm.PackageManager,android.content.Intent,android.content.Intent)&gt;"/>  
      <source name="org.acra.sender.EmailIntentSender"/>  
      <destinition name="interICC_android.intent.action.SENDTO, "/>  
      <sender action="android.intent.action.SENDTO" flags="FLAG_ACTIVITY_NEW_TASK "/>  
      <nodes> 
        <node method="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;"/>  
        <node method="EmailIntentSender send" type="ReceiveIntentFromRetValue" unit="$r14 = virtualinvoke r0.&lt;org.acra.sender.EmailIntentSender: android.content.Intent buildResolveIntent(java.lang.String,java.lang.String)&gt;($r4, $r10)"/>  
        <node method="EmailIntentSender buildResolveIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="EmailIntentSender buildResolveIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.SENDTO&quot;)"/>  
        <node method="EmailIntentSender buildResolveIntent" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r6)"/>  
        <node method="EmailIntentSender buildResolveIntent" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(268435456)"/>  
        <node method="EmailIntentSender send" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r14)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;"/>  
      <methodtrace value="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;,void send(android.content.Context,org.acra.data.CrashReportData), &lt;org.acra.sender.EmailIntentSender: android.content.Intent buildResolveIntent(java.lang.String,java.lang.String)&gt;, &lt;org.acra.sender.EmailIntentSender: android.content.Intent buildAttachmentIntent(java.lang.String,java.lang.String,java.util.ArrayList)&gt;, &lt;org.acra.sender.EmailIntentSender: java.util.List buildInitialIntents(android.content.pm.PackageManager,android.content.Intent,android.content.Intent)&gt;, &lt;org.acra.sender.EmailIntentSender: void grantPermission(android.content.Context,android.content.Intent,java.lang.String,java.util.List)&gt;"/>  
      <source name="org.acra.sender.EmailIntentSender"/>  
      <sender action="android.intent.action.SEND_MULTIPLE" type="message/rfc822" flags="FLAG_ACTIVITY_NEW_TASK , FLAG_GRANT_READ_URI_PERMISSION , FLAG_GRANT_READ_URI_PERMISSION "/>  
      <nodes> 
        <node method="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;"/>  
        <node method="EmailIntentSender send" type="ReceiveIntentFromRetValue" unit="$r16 = virtualinvoke r0.&lt;org.acra.sender.EmailIntentSender: android.content.Intent buildAttachmentIntent(java.lang.String,java.lang.String,java.util.ArrayList)&gt;($r4, $r11, $r13)"/>  
        <node method="EmailIntentSender buildAttachmentIntent" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="EmailIntentSender buildAttachmentIntent" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.SEND_MULTIPLE&quot;)"/>  
        <node method="EmailIntentSender buildAttachmentIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(268435456)"/>  
        <node method="EmailIntentSender buildAttachmentIntent" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;message/rfc822&quot;)"/>  
        <node method="EmailIntentSender grantPermission" type="ReceiveIntentFromParatMethod" unit="$r3 := @parameter1: android.content.Intent"/>  
        <node method="EmailIntentSender grantPermission" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(1)"/>  
        <node method="EmailIntentSender grantPermission" type="ReceiveIntentFromParatMethod" unit="$r3 := @parameter1: android.content.Intent"/>  
        <node method="EmailIntentSender grantPermission" type="SetAttribute" unit="virtualinvoke $r3.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;"/>  
      <methodtrace value="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;,void send(android.content.Context,org.acra.data.CrashReportData), &lt;org.acra.sender.EmailIntentSender: android.content.Intent buildResolveIntent(java.lang.String,java.lang.String)&gt;, &lt;org.acra.sender.EmailIntentSender: android.content.Intent buildAttachmentIntent(java.lang.String,java.lang.String,java.util.ArrayList)&gt;, &lt;org.acra.sender.EmailIntentSender: java.util.List buildInitialIntents(android.content.pm.PackageManager,android.content.Intent,android.content.Intent)&gt;, &lt;org.acra.sender.EmailIntentSender: void grantPermission(android.content.Context,android.content.Intent,java.lang.String,java.util.List)&gt;"/>  
      <source name="org.acra.sender.EmailIntentSender"/>  
      <sender action="android.intent.action.SENDTO" flags="FLAG_ACTIVITY_NEW_TASK "/>  
      <nodes> 
        <node method="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;"/>  
        <node method="EmailIntentSender send" type="ReceiveIntentFromRetValue" unit="$r14 = virtualinvoke r0.&lt;org.acra.sender.EmailIntentSender: android.content.Intent buildResolveIntent(java.lang.String,java.lang.String)&gt;($r4, $r10)"/>  
        <node method="EmailIntentSender buildResolveIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="EmailIntentSender buildResolveIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.SENDTO&quot;)"/>  
        <node method="EmailIntentSender buildResolveIntent" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r6)"/>  
        <node method="EmailIntentSender buildResolveIntent" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(268435456)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;"/>  
      <methodtrace value="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;,void send(android.content.Context,org.acra.data.CrashReportData), &lt;org.acra.sender.EmailIntentSender: android.content.Intent buildResolveIntent(java.lang.String,java.lang.String)&gt;, &lt;org.acra.sender.EmailIntentSender: android.content.Intent buildAttachmentIntent(java.lang.String,java.lang.String,java.util.ArrayList)&gt;, &lt;org.acra.sender.EmailIntentSender: java.util.List buildInitialIntents(android.content.pm.PackageManager,android.content.Intent,android.content.Intent)&gt;, &lt;org.acra.sender.EmailIntentSender: void grantPermission(android.content.Context,android.content.Intent,java.lang.String,java.util.List)&gt;"/>  
      <source name="org.acra.sender.EmailIntentSender"/>  
      <sender action="android.intent.action.SENDTO" flags="FLAG_ACTIVITY_NEW_TASK "/>  
      <nodes> 
        <node method="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.data.CrashReportData)&gt;"/>  
        <node method="EmailIntentSender send" type="ReceiveIntentFromRetValue" unit="$r14 = virtualinvoke r0.&lt;org.acra.sender.EmailIntentSender: android.content.Intent buildResolveIntent(java.lang.String,java.lang.String)&gt;($r4, $r10)"/>  
        <node method="EmailIntentSender buildResolveIntent" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="EmailIntentSender buildResolveIntent" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.SENDTO&quot;)"/>  
        <node method="EmailIntentSender buildResolveIntent" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r6)"/>  
        <node method="EmailIntentSender buildResolveIntent" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(268435456)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.WebViewActivity"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.WebViewActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.WebViewActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle)"/>  
      <source name="com.etesync.syncadapter.ui.WebViewActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.WebViewActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="WebViewActivity onCreate" type="setContentView" unit="virtualinvoke r0.&lt;com.etesync.syncadapter.ui.WebViewActivity: void setContentView(int)&gt;(2131492904)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.StartupDialogFragment"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.StartupDialogFragment$onCreateDialog$2: void onClick(android.content.DialogInterface,int)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.StartupDialogFragment$onCreateDialog$2: void onClick(android.content.DialogInterface,int)&gt;,void onClick(android.content.DialogInterface,int)"/>  
      <source name="com.etesync.syncadapter.ui.StartupDialogFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.StartupDialogFragment$onCreateDialog$2: void onClick(android.content.DialogInterface,int)&gt;"/>  
        <node method="StartupDialogFragment$onCreateDialog$2 onClick" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="StartupDialogFragment$onCreateDialog$2 onClick" type="PassOutIntent" unit="virtualinvoke $r5.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r2)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.StartupDialogFragment$onCreateDialog$2: void onClick(android.content.DialogInterface,int)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.StartupDialogFragment$onCreateDialog$2: void onClick(android.content.DialogInterface,int)&gt;,void onClick(android.content.DialogInterface,int)"/>  
      <source name="com.etesync.syncadapter.ui.StartupDialogFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.StartupDialogFragment$onCreateDialog$2: void onClick(android.content.DialogInterface,int)&gt;"/>  
        <node method="StartupDialogFragment$onCreateDialog$2 onClick" type="CreateMethod" unit="$r2 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.syncadapter.SyncAdapterService"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncAdapterService$SyncAdapter: void onSecurityException(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncAdapterService$SyncAdapter: void onSecurityException(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.SyncResult)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;,androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncAdapterService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncAdapterService$SyncAdapter: void onSecurityException(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.SyncResult)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncAdapterService$SyncAdapter: void onSecurityException(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncAdapterService$SyncAdapter: void onSecurityException(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.SyncResult)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;,androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncAdapterService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncAdapterService$SyncAdapter: void onSecurityException(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.SyncResult)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncAdapterService$SyncAdapter: void onSecurityException(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncAdapterService$SyncAdapter: void onSecurityException(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.SyncResult)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncAdapterService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncAdapterService$SyncAdapter: void onSecurityException(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.SyncResult)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setContentIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setDeleteIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncAdapterService$SyncAdapter: void onSecurityException(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncAdapterService$SyncAdapter: void onSecurityException(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.SyncResult)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncAdapterService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncAdapterService$SyncAdapter: void onSecurityException(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.SyncResult)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setDeleteIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncAdapterService$SyncAdapter: void onSecurityException(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncAdapterService$SyncAdapter: void onSecurityException(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.SyncResult)&gt;,void onSecurityException(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.SyncResult), &lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.ui.PermissionsActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncAdapterService$SyncAdapter: void onSecurityException(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.SyncResult)&gt;"/>  
        <node method="SyncAdapterService$SyncAdapter onSecurityException" type="CreateMethod" unit="$r9 = new android.content.Intent"/>  
        <node method="SyncAdapterService$SyncAdapter onSecurityException" type="SetAttribute" unit="specialinvoke $r9.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r10, class &quot;Lcom/etesync/syncadapter/ui/PermissionsActivity;&quot;)"/>  
        <node method="SyncAdapterService$SyncAdapter onSecurityException" type="SetAttribute" unit="virtualinvoke $r9.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(268435456)"/>  
        <node method="SyncAdapterService$SyncAdapter onSecurityException" type="PassOutIntent" unit="$r12 = virtualinvoke $r12.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r16)"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncAdapterService$SyncAdapter onSecurityException" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncAdapterService$SyncAdapter: void onSecurityException(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncAdapterService$SyncAdapter: void onSecurityException(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.SyncResult)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncAdapterService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncAdapterService$SyncAdapter: void onSecurityException(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.SyncResult)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.setup.LoginCredentialsChangeFragment"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.setup.LoginCredentialsChangeFragment$NothingDetectedFragment$onCreateDialog$1: void onClick(android.content.DialogInterface,int)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.setup.LoginCredentialsChangeFragment$NothingDetectedFragment$onCreateDialog$1: void onClick(android.content.DialogInterface,int)&gt;,&lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent)&gt;,void startActivity(android.content.Intent), &lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.setup.LoginCredentialsChangeFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.setup.LoginCredentialsChangeFragment$NothingDetectedFragment$onCreateDialog$1: void onClick(android.content.DialogInterface,int)&gt;"/>  
        <node method="&lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent)&gt;"/>  
        <node method="Fragment startActivity" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="Fragment startActivity" type="PassOutIntent" unit="virtualinvoke r0.&lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)&gt;($r1, null)"/>  
        <node method="Fragment startActivity" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.setup.LoginCredentialsChangeFragment$NothingDetectedFragment$onCreateDialog$1: void onClick(android.content.DialogInterface,int)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.setup.LoginCredentialsChangeFragment$NothingDetectedFragment$onCreateDialog$1: void onClick(android.content.DialogInterface,int)&gt;,&lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)&gt;,void startActivity(android.content.Intent,android.os.Bundle)"/>  
      <source name="com.etesync.syncadapter.ui.setup.LoginCredentialsChangeFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.setup.LoginCredentialsChangeFragment$NothingDetectedFragment$onCreateDialog$1: void onClick(android.content.DialogInterface,int)&gt;"/>  
        <node method="&lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)&gt;"/>  
        <node method="Fragment startActivity" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.setup.LoginCredentialsChangeFragment$NothingDetectedFragment$onCreateDialog$1: void onClick(android.content.DialogInterface,int)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.setup.LoginCredentialsChangeFragment$NothingDetectedFragment$onCreateDialog$1: void onClick(android.content.DialogInterface,int)&gt;,void onClick(android.content.DialogInterface,int), &lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.setup.LoginCredentialsChangeFragment"/>  
      <destinition name="com.etesync.syncadapter.ui.DebugInfoActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.setup.LoginCredentialsChangeFragment$NothingDetectedFragment$onCreateDialog$1: void onClick(android.content.DialogInterface,int)&gt;"/>  
        <node method="LoginCredentialsChangeFragment$NothingDetectedFragment$onCreateDialog$1 onClick" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="LoginCredentialsChangeFragment$NothingDetectedFragment$onCreateDialog$1 onClick" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lcom/etesync/syncadapter/ui/DebugInfoActivity;&quot;)"/>  
        <node method="LoginCredentialsChangeFragment$NothingDetectedFragment$onCreateDialog$1 onClick" type="PassOutIntent" unit="virtualinvoke $r3.&lt;com.etesync.syncadapter.ui.setup.LoginCredentialsChangeFragment$NothingDetectedFragment: void startActivity(android.content.Intent)&gt;($r2)"/>  
        <node method="Fragment startActivity" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="Fragment startActivity" type="PassOutIntent" unit="virtualinvoke r0.&lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)&gt;($r1, null)"/>  
        <node method="Fragment startActivity" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.JournalItemActivity"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.JournalItemActivity: void sendEventInvite(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.JournalItemActivity: void sendEventInvite(android.view.MenuItem)&gt;,void sendEventInvite(android.view.MenuItem), &lt;com.etesync.syncadapter.utils.EventEmailInvitation: android.content.Intent createIntent(at.bitfire.ical4android.Event,java.lang.String)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.JournalItemActivity"/>  
      <destinition name="interICC_android.intent.action.SEND, "/>  
      <sender action="android.intent.action.SEND" type="text/plain" flags="FLAG_GRANT_READ_URI_PERMISSION "/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.JournalItemActivity: void sendEventInvite(android.view.MenuItem)&gt;"/>  
        <node method="JournalItemActivity sendEventInvite" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke $r3.&lt;com.etesync.syncadapter.utils.EventEmailInvitation: android.content.Intent createIntent(at.bitfire.ical4android.Event,java.lang.String)&gt;($r6, $r7)"/>  
        <node method="EventEmailInvitation createIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="EventEmailInvitation createIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.SEND&quot;)"/>  
        <node method="EventEmailInvitation createIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;text/plain&quot;)"/>  
        <node method="EventEmailInvitation createIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(1)"/>  
        <node method="JournalItemActivity sendEventInvite" type="PassOutIntent" unit="virtualinvoke r0.&lt;com.etesync.syncadapter.ui.JournalItemActivity: void startActivity(android.content.Intent)&gt;($r1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.JournalItemActivity: void sendEventInvite(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.JournalItemActivity: void sendEventInvite(android.view.MenuItem)&gt;,void sendEventInvite(android.view.MenuItem), &lt;com.etesync.syncadapter.utils.EventEmailInvitation: android.content.Intent createIntent(at.bitfire.ical4android.Event,java.lang.String)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.JournalItemActivity"/>  
      <destinition name="interICC_android.intent.action.SEND, "/>  
      <sender action="android.intent.action.SEND" type="text/plain"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.JournalItemActivity: void sendEventInvite(android.view.MenuItem)&gt;"/>  
        <node method="JournalItemActivity sendEventInvite" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke $r3.&lt;com.etesync.syncadapter.utils.EventEmailInvitation: android.content.Intent createIntent(at.bitfire.ical4android.Event,java.lang.String)&gt;($r6, $r7)"/>  
        <node method="EventEmailInvitation createIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="EventEmailInvitation createIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.SEND&quot;)"/>  
        <node method="EventEmailInvitation createIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;text/plain&quot;)"/>  
        <node method="JournalItemActivity sendEventInvite" type="PassOutIntent" unit="virtualinvoke r0.&lt;com.etesync.syncadapter.ui.JournalItemActivity: void startActivity(android.content.Intent)&gt;($r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.AccountSettingsActivity"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.AccountSettingsActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.AccountSettingsActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,boolean onOptionsItemSelected(android.view.MenuItem)"/>  
      <source name="com.etesync.syncadapter.ui.AccountSettingsActivity"/>  
      <destinition name="com.etesync.syncadapter.ui.AccountActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.AccountSettingsActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="AccountSettingsActivity onOptionsItemSelected" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="AccountSettingsActivity onOptionsItemSelected" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Lcom/etesync/syncadapter/ui/AccountActivity;&quot;)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.importlocal.ImportFragment"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: android.app.Dialog onCreateDialog(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: android.app.Dialog onCreateDialog(android.os.Bundle)&gt;,&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;,&lt;androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int)&gt;,&lt;androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int,android.os.Bundle)&gt;,void startActivityForResult(android.content.Intent,int,android.os.Bundle)"/>  
      <source name="com.etesync.syncadapter.ui.importlocal.ImportFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: android.app.Dialog onCreateDialog(android.os.Bundle)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;"/>  
        <node method="&lt;androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int,android.os.Bundle)&gt;"/>  
        <node method="Fragment startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: android.app.Dialog onCreateDialog(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: android.app.Dialog onCreateDialog(android.os.Bundle)&gt;,&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;,void chooseFile(), &lt;androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.importlocal.ImportFragment"/>  
      <destinition name="interICC_android.intent.action.GET_CONTENT, android.intent.category.OPENABLE"/>  
      <sender action="android.intent.action.GET_CONTENT" category="android.intent.category.OPENABLE"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: android.app.Dialog onCreateDialog(android.os.Bundle)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;"/>  
        <node method="ImportFragment chooseFile" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="ImportFragment chooseFile" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.OPENABLE&quot;)"/>  
        <node method="ImportFragment chooseFile" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.GET_CONTENT&quot;)"/>  
        <node method="ImportFragment chooseFile" type="PassOutIntent" unit="virtualinvoke r0.&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void startActivityForResult(android.content.Intent,int)&gt;($r2, $i0)"/>  
        <node method="Fragment startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="Fragment startActivityForResult" type="PassOutIntent" unit="virtualinvoke r0.&lt;androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int,android.os.Bundle)&gt;($r1, $i0, null)"/>  
        <node method="Fragment startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: android.app.Dialog onCreateDialog(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: android.app.Dialog onCreateDialog(android.os.Bundle)&gt;,&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;,void chooseFile(), &lt;androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.importlocal.ImportFragment"/>  
      <destinition name="interICC_android.intent.action.GET_CONTENT, android.intent.category.OPENABLE"/>  
      <sender action="android.intent.action.GET_CONTENT" category="android.intent.category.OPENABLE" type="text/calendar"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: android.app.Dialog onCreateDialog(android.os.Bundle)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;"/>  
        <node method="ImportFragment chooseFile" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="ImportFragment chooseFile" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.OPENABLE&quot;)"/>  
        <node method="ImportFragment chooseFile" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.GET_CONTENT&quot;)"/>  
        <node method="ImportFragment chooseFile" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;text/calendar&quot;)"/>  
        <node method="ImportFragment chooseFile" type="PassOutIntent" unit="virtualinvoke r0.&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void startActivityForResult(android.content.Intent,int)&gt;($r2, $i0)"/>  
        <node method="Fragment startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="Fragment startActivityForResult" type="PassOutIntent" unit="virtualinvoke r0.&lt;androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int,android.os.Bundle)&gt;($r1, $i0, null)"/>  
        <node method="Fragment startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: android.app.Dialog onCreateDialog(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: android.app.Dialog onCreateDialog(android.os.Bundle)&gt;,&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;,void chooseFile()"/>  
      <source name="com.etesync.syncadapter.ui.importlocal.ImportFragment"/>  
      <sender action="android.intent.action.GET_CONTENT" category="android.intent.category.OPENABLE" type="text/calendar"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: android.app.Dialog onCreateDialog(android.os.Bundle)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;"/>  
        <node method="ImportFragment chooseFile" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="ImportFragment chooseFile" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.OPENABLE&quot;)"/>  
        <node method="ImportFragment chooseFile" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.GET_CONTENT&quot;)"/>  
        <node method="ImportFragment chooseFile" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;text/calendar&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: android.app.Dialog onCreateDialog(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: android.app.Dialog onCreateDialog(android.os.Bundle)&gt;,&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;,void chooseFile()"/>  
      <source name="com.etesync.syncadapter.ui.importlocal.ImportFragment"/>  
      <sender action="android.intent.action.GET_CONTENT" category="android.intent.category.OPENABLE" type="text/calendar"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: android.app.Dialog onCreateDialog(android.os.Bundle)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;"/>  
        <node method="ImportFragment chooseFile" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="ImportFragment chooseFile" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.OPENABLE&quot;)"/>  
        <node method="ImportFragment chooseFile" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.GET_CONTENT&quot;)"/>  
        <node method="ImportFragment chooseFile" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;text/calendar&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: android.app.Dialog onCreateDialog(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: android.app.Dialog onCreateDialog(android.os.Bundle)&gt;,&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;,void chooseFile(), &lt;androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.importlocal.ImportFragment"/>  
      <destinition name="interICC_android.intent.action.GET_CONTENT, android.intent.category.OPENABLE"/>  
      <sender action="android.intent.action.GET_CONTENT" category="android.intent.category.OPENABLE" type="text/x-vcard"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: android.app.Dialog onCreateDialog(android.os.Bundle)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;"/>  
        <node method="ImportFragment chooseFile" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="ImportFragment chooseFile" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.OPENABLE&quot;)"/>  
        <node method="ImportFragment chooseFile" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.GET_CONTENT&quot;)"/>  
        <node method="ImportFragment chooseFile" type="PassOutIntent" unit="virtualinvoke r0.&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void startActivityForResult(android.content.Intent,int)&gt;($r2, $i0)"/>  
        <node method="Fragment startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="Fragment startActivityForResult" type="PassOutIntent" unit="virtualinvoke r0.&lt;androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int,android.os.Bundle)&gt;($r1, $i0, null)"/>  
        <node method="ImportFragment chooseFile" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;text/x-vcard&quot;)"/>  
        <node method="Fragment startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: android.app.Dialog onCreateDialog(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: android.app.Dialog onCreateDialog(android.os.Bundle)&gt;,&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;,void chooseFile(), &lt;androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.importlocal.ImportFragment"/>  
      <destinition name="interICC_android.intent.action.GET_CONTENT, android.intent.category.OPENABLE"/>  
      <sender action="android.intent.action.GET_CONTENT" category="android.intent.category.OPENABLE" type="text/calendar"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: android.app.Dialog onCreateDialog(android.os.Bundle)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;"/>  
        <node method="ImportFragment chooseFile" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="ImportFragment chooseFile" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.OPENABLE&quot;)"/>  
        <node method="ImportFragment chooseFile" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.GET_CONTENT&quot;)"/>  
        <node method="ImportFragment chooseFile" type="PassOutIntent" unit="virtualinvoke r0.&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void startActivityForResult(android.content.Intent,int)&gt;($r2, $i0)"/>  
        <node method="Fragment startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="Fragment startActivityForResult" type="PassOutIntent" unit="virtualinvoke r0.&lt;androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int,android.os.Bundle)&gt;($r1, $i0, null)"/>  
        <node method="ImportFragment chooseFile" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;text/calendar&quot;)"/>  
        <node method="Fragment startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: android.app.Dialog onCreateDialog(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: android.app.Dialog onCreateDialog(android.os.Bundle)&gt;,&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;,void chooseFile()"/>  
      <source name="com.etesync.syncadapter.ui.importlocal.ImportFragment"/>  
      <sender action="android.intent.action.GET_CONTENT" category="android.intent.category.OPENABLE" type="text/x-vcard"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: android.app.Dialog onCreateDialog(android.os.Bundle)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;"/>  
        <node method="ImportFragment chooseFile" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="ImportFragment chooseFile" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.OPENABLE&quot;)"/>  
        <node method="ImportFragment chooseFile" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.GET_CONTENT&quot;)"/>  
        <node method="ImportFragment chooseFile" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;text/x-vcard&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: android.app.Dialog onCreateDialog(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: android.app.Dialog onCreateDialog(android.os.Bundle)&gt;,&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;,void chooseFile()"/>  
      <source name="com.etesync.syncadapter.ui.importlocal.ImportFragment"/>  
      <sender action="android.intent.action.GET_CONTENT" category="android.intent.category.OPENABLE"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: android.app.Dialog onCreateDialog(android.os.Bundle)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;"/>  
        <node method="ImportFragment chooseFile" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="ImportFragment chooseFile" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.OPENABLE&quot;)"/>  
        <node method="ImportFragment chooseFile" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;android.intent.action.GET_CONTENT&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: android.app.Dialog onCreateDialog(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: android.app.Dialog onCreateDialog(android.os.Bundle)&gt;,&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;,&lt;androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int)&gt;,void startActivityForResult(android.content.Intent,int), &lt;androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int,android.os.Bundle)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.importlocal.ImportFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: android.app.Dialog onCreateDialog(android.os.Bundle)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;"/>  
        <node method="&lt;androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int)&gt;"/>  
        <node method="Fragment startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="Fragment startActivityForResult" type="PassOutIntent" unit="virtualinvoke r0.&lt;androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int,android.os.Bundle)&gt;($r1, $i0, null)"/>  
        <node method="Fragment startActivityForResult" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.acra.ACRA"> 
    <intentSummary> 
      <method value="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfiguration)&gt;"/>  
      <methodtrace value="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfiguration)&gt;,&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfiguration,boolean)&gt;,&lt;org.acra.reporter.ErrorReporterImpl: void uncaughtException(java.lang.Thread,java.lang.Throwable)&gt;,&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;,&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;,&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;,&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;,&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;,void stopServices()"/>  
      <source name="org.acra.ACRA"/>  
      <nodes> 
        <node method="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfiguration)&gt;"/>  
        <node method="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfiguration,boolean)&gt;"/>  
        <node method="&lt;org.acra.reporter.ErrorReporterImpl: void uncaughtException(java.lang.Thread,java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;"/>  
        <node method="ProcessFinisher stopServices" type="CreateMethod" unit="$r14 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfiguration)&gt;"/>  
      <methodtrace value="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfiguration)&gt;,&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfiguration,boolean)&gt;,&lt;org.acra.reporter.ErrorReporterImpl: void uncaughtException(java.lang.Thread,java.lang.Throwable)&gt;,&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;,&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;,&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;,&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;,&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;,void stopServices()"/>  
      <source name="org.acra.ACRA"/>  
      <nodes> 
        <node method="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfiguration)&gt;"/>  
        <node method="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfiguration,boolean)&gt;"/>  
        <node method="&lt;org.acra.reporter.ErrorReporterImpl: void uncaughtException(java.lang.Thread,java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;"/>  
        <node method="ProcessFinisher stopServices" type="CreateMethod" unit="$r14 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfiguration)&gt;"/>  
      <methodtrace value="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfiguration)&gt;,&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfiguration,boolean)&gt;,&lt;org.acra.reporter.ErrorReporterImpl: void uncaughtException(java.lang.Thread,java.lang.Throwable)&gt;,&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;,&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;,&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;,&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;,&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;,void stopServices()"/>  
      <source name="org.acra.ACRA"/>  
      <nodes> 
        <node method="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfiguration)&gt;"/>  
        <node method="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.CoreConfiguration,boolean)&gt;"/>  
        <node method="&lt;org.acra.reporter.ErrorReporterImpl: void uncaughtException(java.lang.Thread,java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void endApplication(java.lang.Thread,java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void endApplication()&gt;"/>  
        <node method="&lt;org.acra.util.ProcessFinisher: void stopServices()&gt;"/>  
        <node method="ProcessFinisher stopServices" type="CreateMethod" unit="$r14 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.importlocal.ImportFragment"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void onActivityResult(int,int,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void onActivityResult(int,int,android.content.Intent)&gt;,void onActivityResult(int,int,android.content.Intent)"/>  
      <source name="com.etesync.syncadapter.ui.importlocal.ImportFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void onActivityResult(int,int,android.content.Intent)&gt;"/>  
        <node method="ImportFragment onActivityResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.JournalItemActivity"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.JournalItemActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.JournalItemActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle)"/>  
      <source name="com.etesync.syncadapter.ui.JournalItemActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.JournalItemActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="JournalItemActivity onCreate" type="setContentView" unit="virtualinvoke r0.&lt;com.etesync.syncadapter.ui.JournalItemActivity: void setContentView(int)&gt;(2131492940)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.StartupDialogFragment"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.StartupDialogFragment$onCreateDialog$5: void onClick(android.content.DialogInterface,int)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.StartupDialogFragment$onCreateDialog$5: void onClick(android.content.DialogInterface,int)&gt;,&lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent)&gt;,void startActivity(android.content.Intent), &lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.StartupDialogFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.StartupDialogFragment$onCreateDialog$5: void onClick(android.content.DialogInterface,int)&gt;"/>  
        <node method="&lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent)&gt;"/>  
        <node method="Fragment startActivity" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="Fragment startActivity" type="PassOutIntent" unit="virtualinvoke r0.&lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)&gt;($r1, null)"/>  
        <node method="Fragment startActivity" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.StartupDialogFragment$onCreateDialog$5: void onClick(android.content.DialogInterface,int)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.StartupDialogFragment$onCreateDialog$5: void onClick(android.content.DialogInterface,int)&gt;,&lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)&gt;,void startActivity(android.content.Intent,android.os.Bundle)"/>  
      <source name="com.etesync.syncadapter.ui.StartupDialogFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.StartupDialogFragment$onCreateDialog$5: void onClick(android.content.DialogInterface,int)&gt;"/>  
        <node method="&lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)&gt;"/>  
        <node method="Fragment startActivity" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.StartupDialogFragment$onCreateDialog$5: void onClick(android.content.DialogInterface,int)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.StartupDialogFragment$onCreateDialog$5: void onClick(android.content.DialogInterface,int)&gt;,void onClick(android.content.DialogInterface,int), &lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.StartupDialogFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.StartupDialogFragment$onCreateDialog$5: void onClick(android.content.DialogInterface,int)&gt;"/>  
        <node method="StartupDialogFragment$onCreateDialog$5 onClick" type="CreateMethod" unit="$r4 = new android.content.Intent"/>  
        <node method="StartupDialogFragment$onCreateDialog$5 onClick" type="PassOutIntent" unit="virtualinvoke $r3.&lt;com.etesync.syncadapter.ui.StartupDialogFragment: void startActivity(android.content.Intent)&gt;($r4)"/>  
        <node method="Fragment startActivity" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="Fragment startActivity" type="PassOutIntent" unit="virtualinvoke r0.&lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)&gt;($r1, null)"/>  
        <node method="Fragment startActivity" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.PermissionsActivity"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.PermissionsActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.PermissionsActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle)"/>  
      <source name="com.etesync.syncadapter.ui.PermissionsActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.PermissionsActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="PermissionsActivity onCreate" type="setContentView" unit="virtualinvoke r0.&lt;com.etesync.syncadapter.ui.PermissionsActivity: void setContentView(int)&gt;(2131492902)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.setup.DetectConfigurationFragment"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.setup.DetectConfigurationFragment$NothingDetectedFragment$onCreateDialog$1: void onClick(android.content.DialogInterface,int)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.setup.DetectConfigurationFragment$NothingDetectedFragment$onCreateDialog$1: void onClick(android.content.DialogInterface,int)&gt;,&lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent)&gt;,void startActivity(android.content.Intent), &lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.setup.DetectConfigurationFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.setup.DetectConfigurationFragment$NothingDetectedFragment$onCreateDialog$1: void onClick(android.content.DialogInterface,int)&gt;"/>  
        <node method="&lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent)&gt;"/>  
        <node method="Fragment startActivity" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="Fragment startActivity" type="PassOutIntent" unit="virtualinvoke r0.&lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)&gt;($r1, null)"/>  
        <node method="Fragment startActivity" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.setup.DetectConfigurationFragment$NothingDetectedFragment$onCreateDialog$1: void onClick(android.content.DialogInterface,int)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.setup.DetectConfigurationFragment$NothingDetectedFragment$onCreateDialog$1: void onClick(android.content.DialogInterface,int)&gt;,&lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)&gt;,void startActivity(android.content.Intent,android.os.Bundle)"/>  
      <source name="com.etesync.syncadapter.ui.setup.DetectConfigurationFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.setup.DetectConfigurationFragment$NothingDetectedFragment$onCreateDialog$1: void onClick(android.content.DialogInterface,int)&gt;"/>  
        <node method="&lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)&gt;"/>  
        <node method="Fragment startActivity" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.setup.DetectConfigurationFragment$NothingDetectedFragment$onCreateDialog$1: void onClick(android.content.DialogInterface,int)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.setup.DetectConfigurationFragment$NothingDetectedFragment$onCreateDialog$1: void onClick(android.content.DialogInterface,int)&gt;,void onClick(android.content.DialogInterface,int), &lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.setup.DetectConfigurationFragment"/>  
      <destinition name="com.etesync.syncadapter.ui.DebugInfoActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.setup.DetectConfigurationFragment$NothingDetectedFragment$onCreateDialog$1: void onClick(android.content.DialogInterface,int)&gt;"/>  
        <node method="DetectConfigurationFragment$NothingDetectedFragment$onCreateDialog$1 onClick" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="DetectConfigurationFragment$NothingDetectedFragment$onCreateDialog$1 onClick" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lcom/etesync/syncadapter/ui/DebugInfoActivity;&quot;)"/>  
        <node method="DetectConfigurationFragment$NothingDetectedFragment$onCreateDialog$1 onClick" type="PassOutIntent" unit="virtualinvoke $r3.&lt;com.etesync.syncadapter.ui.setup.DetectConfigurationFragment$NothingDetectedFragment: void startActivity(android.content.Intent)&gt;($r2)"/>  
        <node method="Fragment startActivity" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="Fragment startActivity" type="PassOutIntent" unit="virtualinvoke r0.&lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)&gt;($r1, null)"/>  
        <node method="Fragment startActivity" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.AppSettingsActivity"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.AppSettingsActivity$SettingsFragment$LanguageTask$onPostExecute$1: boolean onPreferenceChange(androidx.preference.Preference,java.lang.Object)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.AppSettingsActivity$SettingsFragment$LanguageTask$onPostExecute$1: boolean onPreferenceChange(androidx.preference.Preference,java.lang.Object)&gt;,&lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent)&gt;,void startActivity(android.content.Intent), &lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.AppSettingsActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.AppSettingsActivity$SettingsFragment$LanguageTask$onPostExecute$1: boolean onPreferenceChange(androidx.preference.Preference,java.lang.Object)&gt;"/>  
        <node method="&lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent)&gt;"/>  
        <node method="Fragment startActivity" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="Fragment startActivity" type="PassOutIntent" unit="virtualinvoke r0.&lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)&gt;($r1, null)"/>  
        <node method="Fragment startActivity" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.AppSettingsActivity$SettingsFragment$LanguageTask$onPostExecute$1: boolean onPreferenceChange(androidx.preference.Preference,java.lang.Object)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.AppSettingsActivity$SettingsFragment$LanguageTask$onPostExecute$1: boolean onPreferenceChange(androidx.preference.Preference,java.lang.Object)&gt;,&lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)&gt;,void startActivity(android.content.Intent,android.os.Bundle)"/>  
      <source name="com.etesync.syncadapter.ui.AppSettingsActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.AppSettingsActivity$SettingsFragment$LanguageTask$onPostExecute$1: boolean onPreferenceChange(androidx.preference.Preference,java.lang.Object)&gt;"/>  
        <node method="&lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)&gt;"/>  
        <node method="Fragment startActivity" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.AppSettingsActivity$SettingsFragment$LanguageTask$onPostExecute$1: boolean onPreferenceChange(androidx.preference.Preference,java.lang.Object)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.AppSettingsActivity$SettingsFragment$LanguageTask$onPostExecute$1: boolean onPreferenceChange(androidx.preference.Preference,java.lang.Object)&gt;,boolean onPreferenceChange(androidx.preference.Preference,java.lang.Object), &lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.AppSettingsActivity"/>  
      <destinition name="com.etesync.syncadapter.ui.AccountsActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.AppSettingsActivity$SettingsFragment$LanguageTask$onPostExecute$1: boolean onPreferenceChange(androidx.preference.Preference,java.lang.Object)&gt;"/>  
        <node method="AppSettingsActivity$SettingsFragment$LanguageTask$onPostExecute$1 onPreferenceChange" type="CreateMethod" unit="$r12 = new android.content.Intent"/>  
        <node method="AppSettingsActivity$SettingsFragment$LanguageTask$onPostExecute$1 onPreferenceChange" type="SetAttribute" unit="specialinvoke $r12.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r9, class &quot;Lcom/etesync/syncadapter/ui/AccountsActivity;&quot;)"/>  
        <node method="AppSettingsActivity$SettingsFragment$LanguageTask$onPostExecute$1 onPreferenceChange" type="SetAttribute" unit="virtualinvoke $r12.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(32768)"/>  
        <node method="AppSettingsActivity$SettingsFragment$LanguageTask$onPostExecute$1 onPreferenceChange" type="SetAttribute" unit="virtualinvoke $r12.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(268435456)"/>  
        <node method="AppSettingsActivity$SettingsFragment$LanguageTask$onPostExecute$1 onPreferenceChange" type="PassOutIntent" unit="virtualinvoke $r8.&lt;com.etesync.syncadapter.ui.AppSettingsActivity$SettingsFragment: void startActivity(android.content.Intent)&gt;($r12)"/>  
        <node method="Fragment startActivity" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="Fragment startActivity" type="PassOutIntent" unit="virtualinvoke r0.&lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)&gt;($r1, null)"/>  
        <node method="Fragment startActivity" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.syncadapter.CalendarSyncManager"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void &lt;init&gt;(android.content.Context,android.accounts.Account,com.etesync.syncadapter.AccountSettings,android.os.Bundle,java.lang.String,android.content.SyncResult,com.etesync.syncadapter.resource.LocalCalendar,okhttp3.HttpUrl)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void &lt;init&gt;(android.content.Context,android.accounts.Account,com.etesync.syncadapter.AccountSettings,android.os.Bundle,java.lang.String,android.content.SyncResult,com.etesync.syncadapter.resource.LocalCalendar,okhttp3.HttpUrl)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void &lt;init&gt;(android.content.Context,android.accounts.Account,com.etesync.syncadapter.AccountSettings,android.os.Bundle,java.lang.String,android.content.SyncResult,java.lang.String,com.etesync.syncadapter.model.CollectionInfo$Type,java.lang.String)&gt;,&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;,&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;,void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarSyncManager"/>  
      <destinition name="at.bitfire.cert4android.CustomCertService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarSyncManager: void &lt;init&gt;(android.content.Context,android.accounts.Account,com.etesync.syncadapter.AccountSettings,android.os.Bundle,java.lang.String,android.content.SyncResult,com.etesync.syncadapter.resource.LocalCalendar,okhttp3.HttpUrl)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void &lt;init&gt;(android.content.Context,android.accounts.Account,com.etesync.syncadapter.AccountSettings,android.os.Bundle,java.lang.String,android.content.SyncResult,java.lang.String,com.etesync.syncadapter.model.CollectionInfo$Type,java.lang.String)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;"/>  
        <node method="&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;"/>  
        <node method="CustomCertManager &lt;init&gt;" type="CreateMethod" unit="$r11 = new android.content.Intent"/>  
        <node method="CustomCertManager &lt;init&gt;" type="SetAttribute" unit="specialinvoke $r11.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r12, class &quot;Lat/bitfire/cert4android/CustomCertService;&quot;)"/>  
        <node method="CustomCertManager &lt;init&gt;" type="PassOutIntent" unit="$z0 = virtualinvoke $r2.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r11, $r13, 1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="at.bitfire.cert4android.TrustCertificateActivity"> 
    <intentSummary> 
      <method value="&lt;at.bitfire.cert4android.TrustCertificateActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;at.bitfire.cert4android.TrustCertificateActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle)"/>  
      <source name="at.bitfire.cert4android.TrustCertificateActivity"/>  
      <nodes> 
        <node method="&lt;at.bitfire.cert4android.TrustCertificateActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="TrustCertificateActivity onCreate" type="setContentView" unit="virtualinvoke r0.&lt;at.bitfire.cert4android.TrustCertificateActivity: void setContentView(int)&gt;($i0)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.AboutActivity"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.AboutActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.AboutActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle)"/>  
      <source name="com.etesync.syncadapter.ui.AboutActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.AboutActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="AboutActivity onCreate" type="setContentView" unit="virtualinvoke r0.&lt;com.etesync.syncadapter.ui.AboutActivity: void setContentView(int)&gt;(2131492897)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.AccountActivity"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.AccountActivity: boolean onMenuItemClick(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.AccountActivity: boolean onMenuItemClick(android.view.MenuItem)&gt;,boolean onMenuItemClick(android.view.MenuItem), &lt;com.etesync.syncadapter.ui.CreateCollectionActivity$Companion: android.content.Intent newIntent(android.content.Context,android.accounts.Account,com.etesync.syncadapter.model.CollectionInfo)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.AccountActivity"/>  
      <destinition name="com.etesync.syncadapter.ui.CreateCollectionActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.AccountActivity: boolean onMenuItemClick(android.view.MenuItem)&gt;"/>  
        <node method="AccountActivity onMenuItemClick" type="ReceiveIntentFromRetValue" unit="$r7 = virtualinvoke $r4.&lt;com.etesync.syncadapter.ui.CreateCollectionActivity$Companion: android.content.Intent newIntent(android.content.Context,android.accounts.Account,com.etesync.syncadapter.model.CollectionInfo)&gt;($r5, $r6, $r2)"/>  
        <node method="CreateCollectionActivity$Companion newIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="CreateCollectionActivity$Companion newIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lcom/etesync/syncadapter/ui/CreateCollectionActivity;&quot;)"/>  
        <node method="AccountActivity onMenuItemClick" type="PassOutIntent" unit="virtualinvoke r0.&lt;com.etesync.syncadapter.ui.AccountActivity: void startActivity(android.content.Intent)&gt;($r7)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.AccountActivity: boolean onMenuItemClick(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.AccountActivity: boolean onMenuItemClick(android.view.MenuItem)&gt;,boolean onMenuItemClick(android.view.MenuItem), &lt;com.etesync.syncadapter.ui.CreateCollectionActivity$Companion: android.content.Intent newIntent(android.content.Context,android.accounts.Account,com.etesync.syncadapter.model.CollectionInfo)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.AccountActivity"/>  
      <destinition name="com.etesync.syncadapter.ui.CreateCollectionActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.AccountActivity: boolean onMenuItemClick(android.view.MenuItem)&gt;"/>  
        <node method="AccountActivity onMenuItemClick" type="ReceiveIntentFromRetValue" unit="$r7 = virtualinvoke $r4.&lt;com.etesync.syncadapter.ui.CreateCollectionActivity$Companion: android.content.Intent newIntent(android.content.Context,android.accounts.Account,com.etesync.syncadapter.model.CollectionInfo)&gt;($r5, $r6, $r2)"/>  
        <node method="CreateCollectionActivity$Companion newIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="CreateCollectionActivity$Companion newIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lcom/etesync/syncadapter/ui/CreateCollectionActivity;&quot;)"/>  
        <node method="AccountActivity onMenuItemClick" type="PassOutIntent" unit="virtualinvoke r0.&lt;com.etesync.syncadapter.ui.AccountActivity: void startActivity(android.content.Intent)&gt;($r7)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.AccountActivity: boolean onMenuItemClick(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.AccountActivity: boolean onMenuItemClick(android.view.MenuItem)&gt;,boolean onMenuItemClick(android.view.MenuItem)"/>  
      <source name="com.etesync.syncadapter.ui.AccountActivity"/>  
      <destinition name="interICC_android.intent.action.VIEW, "/>  
      <sender action="android.intent.action.VIEW" data="https://f-droid.org/en/packages/new java.lang.String47, https://play.google.com/store/apps/details?id=new java.lang.String"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.AccountActivity: boolean onMenuItemClick(android.view.MenuItem)&gt;"/>  
        <node method="AccountActivity onMenuItemClick" type="CreateMethod" unit="$r7 = new android.content.Intent"/>  
        <node method="AccountActivity onMenuItemClick" type="SetAttribute" unit="specialinvoke $r7.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.VIEW&quot;)"/>  
        <node method="AccountActivity onMenuItemClick" type="SetAttribute" unit="virtualinvoke $r7.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r10)"/>  
        <node method="AccountActivity onMenuItemClick" type="SetAttribute" unit="virtualinvoke $r7.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r10)"/>  
        <node method="AccountActivity onMenuItemClick" type="PassOutIntent" unit="virtualinvoke r0.&lt;com.etesync.syncadapter.ui.AccountActivity: void startActivity(android.content.Intent)&gt;($r7)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.AccountActivity: boolean onMenuItemClick(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.AccountActivity: boolean onMenuItemClick(android.view.MenuItem)&gt;,boolean onMenuItemClick(android.view.MenuItem), &lt;com.etesync.syncadapter.ui.CreateCollectionActivity$Companion: android.content.Intent newIntent(android.content.Context,android.accounts.Account,com.etesync.syncadapter.model.CollectionInfo)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.AccountActivity"/>  
      <destinition name="com.etesync.syncadapter.ui.CreateCollectionActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.AccountActivity: boolean onMenuItemClick(android.view.MenuItem)&gt;"/>  
        <node method="AccountActivity onMenuItemClick" type="ReceiveIntentFromRetValue" unit="$r7 = virtualinvoke $r4.&lt;com.etesync.syncadapter.ui.CreateCollectionActivity$Companion: android.content.Intent newIntent(android.content.Context,android.accounts.Account,com.etesync.syncadapter.model.CollectionInfo)&gt;($r5, $r6, $r2)"/>  
        <node method="CreateCollectionActivity$Companion newIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="CreateCollectionActivity$Companion newIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lcom/etesync/syncadapter/ui/CreateCollectionActivity;&quot;)"/>  
        <node method="AccountActivity onMenuItemClick" type="PassOutIntent" unit="virtualinvoke r0.&lt;com.etesync.syncadapter.ui.AccountActivity: void startActivity(android.content.Intent)&gt;($r7)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.AccountActivity: boolean onMenuItemClick(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.AccountActivity: boolean onMenuItemClick(android.view.MenuItem)&gt;,boolean onMenuItemClick(android.view.MenuItem)"/>  
      <source name="com.etesync.syncadapter.ui.AccountActivity"/>  
      <destinition name="interICC_android.intent.action.VIEW, "/>  
      <sender action="android.intent.action.VIEW" data="https://f-droid.org/en/packages/new java.lang.String47"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.AccountActivity: boolean onMenuItemClick(android.view.MenuItem)&gt;"/>  
        <node method="AccountActivity onMenuItemClick" type="CreateMethod" unit="$r7 = new android.content.Intent"/>  
        <node method="AccountActivity onMenuItemClick" type="SetAttribute" unit="specialinvoke $r7.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.VIEW&quot;)"/>  
        <node method="AccountActivity onMenuItemClick" type="SetAttribute" unit="virtualinvoke $r7.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r10)"/>  
        <node method="AccountActivity onMenuItemClick" type="PassOutIntent" unit="virtualinvoke r0.&lt;com.etesync.syncadapter.ui.AccountActivity: void startActivity(android.content.Intent)&gt;($r7)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.acra.scheduler.DefaultSenderScheduler"> 
    <intentSummary> 
      <method value="&lt;org.acra.scheduler.DefaultSenderScheduler: void scheduleReportSending(boolean)&gt;"/>  
      <methodtrace value="&lt;org.acra.scheduler.DefaultSenderScheduler: void scheduleReportSending(boolean)&gt;,void scheduleReportSending(boolean)"/>  
      <source name="org.acra.scheduler.DefaultSenderScheduler"/>  
      <nodes> 
        <node method="&lt;org.acra.scheduler.DefaultSenderScheduler: void scheduleReportSending(boolean)&gt;"/>  
        <node method="DefaultSenderScheduler scheduleReportSending" type="CreateMethod" unit="$r2 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.scheduler.DefaultSenderScheduler: void scheduleReportSending(boolean)&gt;"/>  
      <methodtrace value="&lt;org.acra.scheduler.DefaultSenderScheduler: void scheduleReportSending(boolean)&gt;,void scheduleReportSending(boolean)"/>  
      <source name="org.acra.scheduler.DefaultSenderScheduler"/>  
      <destinition name="org.acra.sender.LegacySenderService"/>  
      <nodes> 
        <node method="&lt;org.acra.scheduler.DefaultSenderScheduler: void scheduleReportSending(boolean)&gt;"/>  
        <node method="DefaultSenderScheduler scheduleReportSending" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="DefaultSenderScheduler scheduleReportSending" type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r9)"/>  
        <node method="DefaultSenderScheduler scheduleReportSending" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r2)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.setup.SetupUserInfoFragment"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.setup.SetupUserInfoFragment: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.setup.SetupUserInfoFragment: void onCreate(android.os.Bundle)&gt;,&lt;com.etesync.syncadapter.ui.setup.SetupUserInfoFragment$SetupUserInfo: java.lang.Object doInBackground(java.lang.Object[])&gt;,&lt;com.etesync.syncadapter.ui.setup.SetupUserInfoFragment$SetupUserInfo: com.etesync.syncadapter.ui.setup.SetupUserInfoFragment$SetupUserInfo$SetupUserInfoResult doInBackground(android.accounts.Account[])&gt;,&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;,&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;,void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)"/>  
      <source name="com.etesync.syncadapter.ui.setup.SetupUserInfoFragment"/>  
      <destinition name="at.bitfire.cert4android.CustomCertService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.setup.SetupUserInfoFragment: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.setup.SetupUserInfoFragment$SetupUserInfo: java.lang.Object doInBackground(java.lang.Object[])&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.setup.SetupUserInfoFragment$SetupUserInfo: com.etesync.syncadapter.ui.setup.SetupUserInfoFragment$SetupUserInfo$SetupUserInfoResult doInBackground(android.accounts.Account[])&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;"/>  
        <node method="&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;"/>  
        <node method="CustomCertManager &lt;init&gt;" type="CreateMethod" unit="$r11 = new android.content.Intent"/>  
        <node method="CustomCertManager &lt;init&gt;" type="SetAttribute" unit="specialinvoke $r11.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r12, class &quot;Lat/bitfire/cert4android/CustomCertService;&quot;)"/>  
        <node method="CustomCertManager &lt;init&gt;" type="PassOutIntent" unit="$z0 = virtualinvoke $r2.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r11, $r13, 1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.syncadapter.SyncManager"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void notifyUserOnSync()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void notifyUserOnSync()&gt;,void notifyUserOnSync(), &lt;com.etesync.syncadapter.ui.ViewCollectionActivity$Companion: android.content.Intent newIntent(android.content.Context,android.accounts.Account,com.etesync.syncadapter.model.CollectionInfo)&gt;, &lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncManager"/>  
      <destinition name="com.etesync.syncadapter.ui.ViewCollectionActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void notifyUserOnSync()&gt;"/>  
        <node method="SyncManager notifyUserOnSync" type="ReceiveIntentFromRetValue" unit="$r19 = virtualinvoke $r16.&lt;com.etesync.syncadapter.ui.ViewCollectionActivity$Companion: android.content.Intent newIntent(android.content.Context,android.accounts.Account,com.etesync.syncadapter.model.CollectionInfo)&gt;($r2, $r17, $r18)"/>  
        <node method="ViewCollectionActivity$Companion newIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="ViewCollectionActivity$Companion newIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lcom/etesync/syncadapter/ui/ViewCollectionActivity;&quot;)"/>  
        <node method="SyncNotification notify$default" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter3: android.content.Intent"/>  
        <node method="SyncNotification notify" type="PassOutIntent" unit="virtualinvoke $r12.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r13)"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncManager notifyUserOnSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncManager notifyUserOnSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void notifyUserOnSync()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void notifyUserOnSync()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;,androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncManager"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void notifyUserOnSync()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void notifyUserOnSync()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void notifyUserOnSync()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;,void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncManager"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void notifyUserOnSync()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
        <node method="SyncNotification notify$default" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter3: android.content.Intent"/>  
        <node method="SyncNotification notify" type="PassOutIntent" unit="virtualinvoke $r12.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r13)"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncNotification notify$default" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncNotification notify$default" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void notifyUserOnSync()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void notifyUserOnSync()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int), &lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncManager"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void notifyUserOnSync()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter3: android.content.Intent"/>  
        <node method="SyncNotification notify" type="PassOutIntent" unit="virtualinvoke $r12.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r13)"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void notifyUserOnSync()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void notifyUserOnSync()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;,androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncManager"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void notifyUserOnSync()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void notifyUserOnSync()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void notifyUserOnSync()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncManager"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void notifyUserOnSync()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setContentIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setDeleteIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void notifyUserOnSync()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void notifyUserOnSync()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncManager"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void notifyUserOnSync()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setDeleteIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void notifyUserOnSync()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void notifyUserOnSync()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncManager"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void notifyUserOnSync()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.acra.interaction.NotificationInteraction"> 
    <intentSummary> 
      <method value="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;"/>  
      <methodtrace value="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;,&lt;org.acra.interaction.NotificationInteraction: android.widget.RemoteViews getSmallView(android.content.Context,org.acra.config.NotificationConfiguration,android.app.PendingIntent,android.app.PendingIntent)&gt;,android.widget.RemoteViews getSmallView(android.content.Context,org.acra.config.NotificationConfiguration,android.app.PendingIntent,android.app.PendingIntent)"/>  
      <source name="org.acra.interaction.NotificationInteraction"/>  
      <nodes> 
        <node method="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;"/>  
        <node method="&lt;org.acra.interaction.NotificationInteraction: android.widget.RemoteViews getSmallView(android.content.Context,org.acra.config.NotificationConfiguration,android.app.PendingIntent,android.app.PendingIntent)&gt;"/>  
        <node method="NotificationInteraction getSmallView" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter3: android.app.PendingIntent"/>  
        <node method="NotificationInteraction getSmallView" type="PassOutIntent" unit="virtualinvoke $r3.&lt;android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)&gt;($i0, $r2)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;"/>  
      <methodtrace value="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;,androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)"/>  
      <source name="org.acra.interaction.NotificationInteraction"/>  
      <nodes> 
        <node method="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;"/>  
      <methodtrace value="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;,boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File), &lt;org.acra.interaction.NotificationInteraction: android.app.PendingIntent getSendIntent(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;, &lt;org.acra.interaction.NotificationInteraction: android.app.PendingIntent getDiscardIntent(android.content.Context)&gt;, &lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
      <source name="org.acra.interaction.NotificationInteraction"/>  
      <destinition name="org.acra.receiver.NotificationBroadcastReceiver"/>  
      <sender action="org.acra.intent.send"/>  
      <nodes> 
        <node method="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;"/>  
        <node method="NotificationInteraction performInteraction" type="ReceiveIntentFromRetValue" unit="$r13 = specialinvoke r0.&lt;org.acra.interaction.NotificationInteraction: android.app.PendingIntent getSendIntent(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;($r1, $r2, $r3)"/>  
        <node method="NotificationInteraction getSendIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="NotificationInteraction getSendIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Lorg/acra/receiver/NotificationBroadcastReceiver;&quot;)"/>  
        <node method="NotificationInteraction getSendIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.acra.intent.send&quot;)"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationInteraction performInteraction" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationInteraction performInteraction" type="PassOutIntent" unit="specialinvoke $r16.&lt;androidx.core.app.NotificationCompat$Action$Builder: void &lt;init&gt;(int,java.lang.CharSequence,android.app.PendingIntent)&gt;($i0, $r11, $r13)"/>  
        <node method="NotificationInteraction performInteraction" type="PassOutIntent" unit="virtualinvoke $r12.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r13)"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationInteraction performInteraction" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationInteraction performInteraction" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;"/>  
      <methodtrace value="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;,boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File), &lt;org.acra.interaction.NotificationInteraction: android.app.PendingIntent getSendIntent(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;, &lt;org.acra.interaction.NotificationInteraction: android.app.PendingIntent getDiscardIntent(android.content.Context)&gt;"/>  
      <source name="org.acra.interaction.NotificationInteraction"/>  
      <destinition name="org.acra.receiver.NotificationBroadcastReceiver"/>  
      <sender action="org.acra.intent.discard"/>  
      <nodes> 
        <node method="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;"/>  
        <node method="NotificationInteraction performInteraction" type="ReceiveIntentFromRetValue" unit="$r14 = specialinvoke r0.&lt;org.acra.interaction.NotificationInteraction: android.app.PendingIntent getDiscardIntent(android.content.Context)&gt;($r1)"/>  
        <node method="NotificationInteraction getDiscardIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="NotificationInteraction getDiscardIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Lorg/acra/receiver/NotificationBroadcastReceiver;&quot;)"/>  
        <node method="NotificationInteraction getDiscardIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.acra.intent.discard&quot;)"/>  
        <node method="NotificationInteraction performInteraction" type="PassOutIntent" unit="virtualinvoke $r12.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent)&gt;($r14)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;"/>  
      <methodtrace value="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;,boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File), &lt;org.acra.interaction.NotificationInteraction: android.app.PendingIntent getSendIntent(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;, &lt;org.acra.interaction.NotificationInteraction: android.app.PendingIntent getDiscardIntent(android.content.Context)&gt;, &lt;org.acra.interaction.NotificationInteraction: android.widget.RemoteViews getSmallView(android.content.Context,org.acra.config.NotificationConfiguration,android.app.PendingIntent,android.app.PendingIntent)&gt;, &lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
      <source name="org.acra.interaction.NotificationInteraction"/>  
      <destinition name="org.acra.receiver.NotificationBroadcastReceiver"/>  
      <sender action="org.acra.intent.discard"/>  
      <nodes> 
        <node method="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;"/>  
        <node method="NotificationInteraction performInteraction" type="ReceiveIntentFromRetValue" unit="$r14 = specialinvoke r0.&lt;org.acra.interaction.NotificationInteraction: android.app.PendingIntent getDiscardIntent(android.content.Context)&gt;($r1)"/>  
        <node method="NotificationInteraction getDiscardIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="NotificationInteraction getDiscardIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Lorg/acra/receiver/NotificationBroadcastReceiver;&quot;)"/>  
        <node method="NotificationInteraction getDiscardIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.acra.intent.discard&quot;)"/>  
        <node method="NotificationInteraction getSmallView" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>  
        <node method="NotificationInteraction getSmallView" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter3: android.app.PendingIntent"/>  
        <node method="NotificationInteraction getSmallView" type="PassOutIntent" unit="virtualinvoke $r3.&lt;android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)&gt;($i0, $r1)"/>  
        <node method="NotificationInteraction getSmallView" type="PassOutIntent" unit="virtualinvoke $r3.&lt;android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)&gt;($i0, $r2)"/>  
        <node method="NotificationInteraction performInteraction" type="PassOutIntent" unit="virtualinvoke $r12.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent)&gt;($r14)"/>  
        <node method="NotificationInteraction performInteraction" type="PassOutIntent" unit="$r20 = virtualinvoke $r20.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)&gt;($i0, $r11, $r14)"/>  
        <node method="NotificationInteraction getSmallView" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>  
        <node method="NotificationInteraction getSmallView" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter3: android.app.PendingIntent"/>  
        <node method="NotificationInteraction getSmallView" type="PassOutIntent" unit="virtualinvoke $r3.&lt;android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)&gt;($i0, $r1)"/>  
        <node method="NotificationInteraction getSmallView" type="PassOutIntent" unit="virtualinvoke $r3.&lt;android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)&gt;($i0, $r2)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;"/>  
      <methodtrace value="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;,boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File), &lt;org.acra.interaction.NotificationInteraction: android.app.PendingIntent getSendIntent(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;, &lt;org.acra.interaction.NotificationInteraction: android.app.PendingIntent getDiscardIntent(android.content.Context)&gt;"/>  
      <source name="org.acra.interaction.NotificationInteraction"/>  
      <destinition name="org.acra.receiver.NotificationBroadcastReceiver"/>  
      <sender action="org.acra.intent.send"/>  
      <nodes> 
        <node method="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;"/>  
        <node method="NotificationInteraction performInteraction" type="ReceiveIntentFromRetValue" unit="$r13 = specialinvoke r0.&lt;org.acra.interaction.NotificationInteraction: android.app.PendingIntent getSendIntent(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;($r1, $r2, $r3)"/>  
        <node method="NotificationInteraction getSendIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="NotificationInteraction getSendIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Lorg/acra/receiver/NotificationBroadcastReceiver;&quot;)"/>  
        <node method="NotificationInteraction getSendIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.acra.intent.send&quot;)"/>  
        <node method="NotificationInteraction performInteraction" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationInteraction performInteraction" type="PassOutIntent" unit="specialinvoke $r16.&lt;androidx.core.app.NotificationCompat$Action$Builder: void &lt;init&gt;(int,java.lang.CharSequence,android.app.PendingIntent)&gt;($i0, $r11, $r13)"/>  
        <node method="NotificationInteraction performInteraction" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationInteraction performInteraction" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;"/>  
      <methodtrace value="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;,androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)"/>  
      <source name="org.acra.interaction.NotificationInteraction"/>  
      <nodes> 
        <node method="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;"/>  
      <methodtrace value="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;,boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File), &lt;org.acra.interaction.NotificationInteraction: android.app.PendingIntent getSendIntent(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;, &lt;org.acra.interaction.NotificationInteraction: android.app.PendingIntent getDiscardIntent(android.content.Context)&gt;, &lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
      <source name="org.acra.interaction.NotificationInteraction"/>  
      <destinition name="org.acra.receiver.NotificationBroadcastReceiver"/>  
      <sender action="org.acra.intent.discard"/>  
      <nodes> 
        <node method="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;"/>  
        <node method="NotificationInteraction performInteraction" type="ReceiveIntentFromRetValue" unit="$r14 = specialinvoke r0.&lt;org.acra.interaction.NotificationInteraction: android.app.PendingIntent getDiscardIntent(android.content.Context)&gt;($r1)"/>  
        <node method="NotificationInteraction getDiscardIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="NotificationInteraction getDiscardIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Lorg/acra/receiver/NotificationBroadcastReceiver;&quot;)"/>  
        <node method="NotificationInteraction getDiscardIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.acra.intent.discard&quot;)"/>  
        <node method="NotificationInteraction performInteraction" type="PassOutIntent" unit="virtualinvoke $r12.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent)&gt;($r14)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;"/>  
      <methodtrace value="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;,boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File), &lt;org.acra.interaction.NotificationInteraction: android.app.PendingIntent getSendIntent(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;, &lt;org.acra.interaction.NotificationInteraction: android.app.PendingIntent getDiscardIntent(android.content.Context)&gt;, &lt;org.acra.interaction.NotificationInteraction: android.widget.RemoteViews getSmallView(android.content.Context,org.acra.config.NotificationConfiguration,android.app.PendingIntent,android.app.PendingIntent)&gt;, &lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
      <source name="org.acra.interaction.NotificationInteraction"/>  
      <destinition name="org.acra.receiver.NotificationBroadcastReceiver"/>  
      <sender action="org.acra.intent.send"/>  
      <nodes> 
        <node method="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;"/>  
        <node method="NotificationInteraction performInteraction" type="ReceiveIntentFromRetValue" unit="$r13 = specialinvoke r0.&lt;org.acra.interaction.NotificationInteraction: android.app.PendingIntent getSendIntent(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;($r1, $r2, $r3)"/>  
        <node method="NotificationInteraction getSendIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="NotificationInteraction getSendIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Lorg/acra/receiver/NotificationBroadcastReceiver;&quot;)"/>  
        <node method="NotificationInteraction getSendIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.acra.intent.send&quot;)"/>  
        <node method="NotificationInteraction performInteraction" type="PassOutIntent" unit="$r20 = virtualinvoke $r12.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)&gt;($i0, $r11, $r13)"/>  
        <node method="NotificationInteraction performInteraction" type="PassOutIntent" unit="$r20 = virtualinvoke $r20.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)&gt;($i0, $r11, $r14)"/>  
        <node method="NotificationInteraction performInteraction" type="PassOutIntent" unit="virtualinvoke $r12.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r13)"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationInteraction performInteraction" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationInteraction performInteraction" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationInteraction performInteraction" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;"/>  
      <methodtrace value="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;,boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File), &lt;org.acra.interaction.NotificationInteraction: android.app.PendingIntent getSendIntent(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;, &lt;org.acra.interaction.NotificationInteraction: android.app.PendingIntent getDiscardIntent(android.content.Context)&gt;, &lt;org.acra.interaction.NotificationInteraction: android.widget.RemoteViews getSmallView(android.content.Context,org.acra.config.NotificationConfiguration,android.app.PendingIntent,android.app.PendingIntent)&gt;, &lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
      <source name="org.acra.interaction.NotificationInteraction"/>  
      <destinition name="org.acra.receiver.NotificationBroadcastReceiver"/>  
      <sender action="org.acra.intent.send"/>  
      <nodes> 
        <node method="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;"/>  
        <node method="NotificationInteraction performInteraction" type="ReceiveIntentFromRetValue" unit="$r13 = specialinvoke r0.&lt;org.acra.interaction.NotificationInteraction: android.app.PendingIntent getSendIntent(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;($r1, $r2, $r3)"/>  
        <node method="NotificationInteraction getSendIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="NotificationInteraction getSendIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Lorg/acra/receiver/NotificationBroadcastReceiver;&quot;)"/>  
        <node method="NotificationInteraction getSendIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.acra.intent.send&quot;)"/>  
        <node method="NotificationInteraction performInteraction" type="PassOutIntent" unit="virtualinvoke $r12.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r13)"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationInteraction performInteraction" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationInteraction performInteraction" type="PassOutIntent" unit="specialinvoke $r16.&lt;androidx.core.app.NotificationCompat$Action$Builder: void &lt;init&gt;(int,java.lang.CharSequence,android.app.PendingIntent)&gt;($i0, $r11, $r13)"/>  
        <node method="NotificationInteraction performInteraction" type="PassOutIntent" unit="$r20 = virtualinvoke $r12.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)&gt;($i0, $r11, $r13)"/>  
        <node method="NotificationInteraction performInteraction" type="PassOutIntent" unit="$r20 = virtualinvoke $r20.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)&gt;($i0, $r11, $r14)"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationInteraction performInteraction" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationInteraction performInteraction" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;"/>  
      <methodtrace value="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="org.acra.interaction.NotificationInteraction"/>  
      <nodes> 
        <node method="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setContentIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setDeleteIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;"/>  
      <methodtrace value="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;,boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File), &lt;org.acra.interaction.NotificationInteraction: android.app.PendingIntent getSendIntent(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;, &lt;org.acra.interaction.NotificationInteraction: android.app.PendingIntent getDiscardIntent(android.content.Context)&gt;, &lt;org.acra.interaction.NotificationInteraction: android.widget.RemoteViews getSmallView(android.content.Context,org.acra.config.NotificationConfiguration,android.app.PendingIntent,android.app.PendingIntent)&gt;"/>  
      <source name="org.acra.interaction.NotificationInteraction"/>  
      <destinition name="org.acra.receiver.NotificationBroadcastReceiver"/>  
      <sender action="org.acra.intent.discard"/>  
      <nodes> 
        <node method="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;"/>  
        <node method="NotificationInteraction performInteraction" type="ReceiveIntentFromRetValue" unit="$r14 = specialinvoke r0.&lt;org.acra.interaction.NotificationInteraction: android.app.PendingIntent getDiscardIntent(android.content.Context)&gt;($r1)"/>  
        <node method="NotificationInteraction getDiscardIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="NotificationInteraction getDiscardIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Lorg/acra/receiver/NotificationBroadcastReceiver;&quot;)"/>  
        <node method="NotificationInteraction getDiscardIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.acra.intent.discard&quot;)"/>  
        <node method="NotificationInteraction performInteraction" type="PassOutIntent" unit="$r20 = virtualinvoke $r20.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)&gt;($i0, $r11, $r14)"/>  
        <node method="NotificationInteraction getSmallView" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>  
        <node method="NotificationInteraction getSmallView" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter3: android.app.PendingIntent"/>  
        <node method="NotificationInteraction getSmallView" type="PassOutIntent" unit="virtualinvoke $r3.&lt;android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)&gt;($i0, $r1)"/>  
        <node method="NotificationInteraction getSmallView" type="PassOutIntent" unit="virtualinvoke $r3.&lt;android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)&gt;($i0, $r2)"/>  
        <node method="NotificationInteraction performInteraction" type="PassOutIntent" unit="virtualinvoke $r12.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent)&gt;($r14)"/>  
        <node method="NotificationInteraction getSmallView" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>  
        <node method="NotificationInteraction getSmallView" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter3: android.app.PendingIntent"/>  
        <node method="NotificationInteraction getSmallView" type="PassOutIntent" unit="virtualinvoke $r3.&lt;android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)&gt;($i0, $r1)"/>  
        <node method="NotificationInteraction getSmallView" type="PassOutIntent" unit="virtualinvoke $r3.&lt;android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)&gt;($i0, $r2)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;"/>  
      <methodtrace value="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;,boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File), &lt;org.acra.interaction.NotificationInteraction: android.app.PendingIntent getSendIntent(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;, &lt;org.acra.interaction.NotificationInteraction: android.app.PendingIntent getDiscardIntent(android.content.Context)&gt;, &lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
      <source name="org.acra.interaction.NotificationInteraction"/>  
      <destinition name="org.acra.receiver.NotificationBroadcastReceiver"/>  
      <sender action="org.acra.intent.discard"/>  
      <nodes> 
        <node method="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;"/>  
        <node method="NotificationInteraction performInteraction" type="ReceiveIntentFromRetValue" unit="$r14 = specialinvoke r0.&lt;org.acra.interaction.NotificationInteraction: android.app.PendingIntent getDiscardIntent(android.content.Context)&gt;($r1)"/>  
        <node method="NotificationInteraction getDiscardIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="NotificationInteraction getDiscardIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Lorg/acra/receiver/NotificationBroadcastReceiver;&quot;)"/>  
        <node method="NotificationInteraction getDiscardIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.acra.intent.discard&quot;)"/>  
        <node method="NotificationInteraction performInteraction" type="PassOutIntent" unit="virtualinvoke $r12.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent)&gt;($r14)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;"/>  
      <methodtrace value="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;,boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File), &lt;org.acra.interaction.NotificationInteraction: android.app.PendingIntent getSendIntent(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;, &lt;org.acra.interaction.NotificationInteraction: android.app.PendingIntent getDiscardIntent(android.content.Context)&gt;, &lt;org.acra.interaction.NotificationInteraction: android.widget.RemoteViews getSmallView(android.content.Context,org.acra.config.NotificationConfiguration,android.app.PendingIntent,android.app.PendingIntent)&gt;, &lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
      <source name="org.acra.interaction.NotificationInteraction"/>  
      <destinition name="org.acra.receiver.NotificationBroadcastReceiver"/>  
      <sender action="org.acra.intent.discard"/>  
      <nodes> 
        <node method="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;"/>  
        <node method="NotificationInteraction performInteraction" type="ReceiveIntentFromRetValue" unit="$r14 = specialinvoke r0.&lt;org.acra.interaction.NotificationInteraction: android.app.PendingIntent getDiscardIntent(android.content.Context)&gt;($r1)"/>  
        <node method="NotificationInteraction getDiscardIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="NotificationInteraction getDiscardIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Lorg/acra/receiver/NotificationBroadcastReceiver;&quot;)"/>  
        <node method="NotificationInteraction getDiscardIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.acra.intent.discard&quot;)"/>  
        <node method="NotificationInteraction performInteraction" type="PassOutIntent" unit="$r20 = virtualinvoke $r20.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)&gt;($i0, $r11, $r14)"/>  
        <node method="NotificationInteraction getSmallView" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>  
        <node method="NotificationInteraction getSmallView" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter3: android.app.PendingIntent"/>  
        <node method="NotificationInteraction getSmallView" type="PassOutIntent" unit="virtualinvoke $r3.&lt;android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)&gt;($i0, $r1)"/>  
        <node method="NotificationInteraction getSmallView" type="PassOutIntent" unit="virtualinvoke $r3.&lt;android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)&gt;($i0, $r2)"/>  
        <node method="NotificationInteraction performInteraction" type="PassOutIntent" unit="virtualinvoke $r12.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent)&gt;($r14)"/>  
        <node method="NotificationInteraction getSmallView" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>  
        <node method="NotificationInteraction getSmallView" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter3: android.app.PendingIntent"/>  
        <node method="NotificationInteraction getSmallView" type="PassOutIntent" unit="virtualinvoke $r3.&lt;android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)&gt;($i0, $r1)"/>  
        <node method="NotificationInteraction getSmallView" type="PassOutIntent" unit="virtualinvoke $r3.&lt;android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)&gt;($i0, $r2)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;"/>  
      <methodtrace value="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="org.acra.interaction.NotificationInteraction"/>  
      <nodes> 
        <node method="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;"/>  
      <methodtrace value="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;,boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File), &lt;org.acra.interaction.NotificationInteraction: android.app.PendingIntent getSendIntent(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;, &lt;org.acra.interaction.NotificationInteraction: android.app.PendingIntent getDiscardIntent(android.content.Context)&gt;"/>  
      <source name="org.acra.interaction.NotificationInteraction"/>  
      <destinition name="org.acra.receiver.NotificationBroadcastReceiver"/>  
      <sender action="org.acra.intent.discard"/>  
      <nodes> 
        <node method="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;"/>  
        <node method="NotificationInteraction performInteraction" type="ReceiveIntentFromRetValue" unit="$r14 = specialinvoke r0.&lt;org.acra.interaction.NotificationInteraction: android.app.PendingIntent getDiscardIntent(android.content.Context)&gt;($r1)"/>  
        <node method="NotificationInteraction getDiscardIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="NotificationInteraction getDiscardIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Lorg/acra/receiver/NotificationBroadcastReceiver;&quot;)"/>  
        <node method="NotificationInteraction getDiscardIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.acra.intent.discard&quot;)"/>  
        <node method="NotificationInteraction performInteraction" type="PassOutIntent" unit="virtualinvoke $r12.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent)&gt;($r14)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;"/>  
      <methodtrace value="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;,boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File), &lt;org.acra.interaction.NotificationInteraction: android.app.PendingIntent getSendIntent(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;, &lt;org.acra.interaction.NotificationInteraction: android.app.PendingIntent getDiscardIntent(android.content.Context)&gt;, &lt;org.acra.interaction.NotificationInteraction: android.widget.RemoteViews getSmallView(android.content.Context,org.acra.config.NotificationConfiguration,android.app.PendingIntent,android.app.PendingIntent)&gt;"/>  
      <source name="org.acra.interaction.NotificationInteraction"/>  
      <destinition name="org.acra.receiver.NotificationBroadcastReceiver"/>  
      <sender action="org.acra.intent.discard"/>  
      <nodes> 
        <node method="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;"/>  
        <node method="NotificationInteraction performInteraction" type="ReceiveIntentFromRetValue" unit="$r14 = specialinvoke r0.&lt;org.acra.interaction.NotificationInteraction: android.app.PendingIntent getDiscardIntent(android.content.Context)&gt;($r1)"/>  
        <node method="NotificationInteraction getDiscardIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="NotificationInteraction getDiscardIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Lorg/acra/receiver/NotificationBroadcastReceiver;&quot;)"/>  
        <node method="NotificationInteraction getDiscardIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.acra.intent.discard&quot;)"/>  
        <node method="NotificationInteraction getSmallView" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>  
        <node method="NotificationInteraction getSmallView" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter3: android.app.PendingIntent"/>  
        <node method="NotificationInteraction getSmallView" type="PassOutIntent" unit="virtualinvoke $r3.&lt;android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)&gt;($i0, $r1)"/>  
        <node method="NotificationInteraction getSmallView" type="PassOutIntent" unit="virtualinvoke $r3.&lt;android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)&gt;($i0, $r2)"/>  
        <node method="NotificationInteraction performInteraction" type="PassOutIntent" unit="virtualinvoke $r12.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent)&gt;($r14)"/>  
        <node method="NotificationInteraction performInteraction" type="PassOutIntent" unit="$r20 = virtualinvoke $r20.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)&gt;($i0, $r11, $r14)"/>  
        <node method="NotificationInteraction getSmallView" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>  
        <node method="NotificationInteraction getSmallView" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter3: android.app.PendingIntent"/>  
        <node method="NotificationInteraction getSmallView" type="PassOutIntent" unit="virtualinvoke $r3.&lt;android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)&gt;($i0, $r1)"/>  
        <node method="NotificationInteraction getSmallView" type="PassOutIntent" unit="virtualinvoke $r3.&lt;android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)&gt;($i0, $r2)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;"/>  
      <methodtrace value="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;,boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File), &lt;org.acra.interaction.NotificationInteraction: android.app.PendingIntent getSendIntent(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;, &lt;org.acra.interaction.NotificationInteraction: android.app.PendingIntent getDiscardIntent(android.content.Context)&gt;"/>  
      <source name="org.acra.interaction.NotificationInteraction"/>  
      <destinition name="org.acra.receiver.NotificationBroadcastReceiver"/>  
      <sender action="org.acra.intent.send"/>  
      <nodes> 
        <node method="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;"/>  
        <node method="NotificationInteraction performInteraction" type="ReceiveIntentFromRetValue" unit="$r13 = specialinvoke r0.&lt;org.acra.interaction.NotificationInteraction: android.app.PendingIntent getSendIntent(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;($r1, $r2, $r3)"/>  
        <node method="NotificationInteraction getSendIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="NotificationInteraction getSendIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Lorg/acra/receiver/NotificationBroadcastReceiver;&quot;)"/>  
        <node method="NotificationInteraction getSendIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.acra.intent.send&quot;)"/>  
        <node method="NotificationInteraction performInteraction" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationInteraction performInteraction" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationInteraction performInteraction" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;"/>  
      <methodtrace value="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;,boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File), &lt;org.acra.interaction.NotificationInteraction: android.app.PendingIntent getSendIntent(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;, &lt;org.acra.interaction.NotificationInteraction: android.app.PendingIntent getDiscardIntent(android.content.Context)&gt;, &lt;org.acra.interaction.NotificationInteraction: android.widget.RemoteViews getSmallView(android.content.Context,org.acra.config.NotificationConfiguration,android.app.PendingIntent,android.app.PendingIntent)&gt;"/>  
      <source name="org.acra.interaction.NotificationInteraction"/>  
      <destinition name="org.acra.receiver.NotificationBroadcastReceiver"/>  
      <sender action="org.acra.intent.send"/>  
      <nodes> 
        <node method="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;"/>  
        <node method="NotificationInteraction performInteraction" type="ReceiveIntentFromRetValue" unit="$r13 = specialinvoke r0.&lt;org.acra.interaction.NotificationInteraction: android.app.PendingIntent getSendIntent(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;($r1, $r2, $r3)"/>  
        <node method="NotificationInteraction getSendIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="NotificationInteraction getSendIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Lorg/acra/receiver/NotificationBroadcastReceiver;&quot;)"/>  
        <node method="NotificationInteraction getSendIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.acra.intent.send&quot;)"/>  
        <node method="NotificationInteraction performInteraction" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationInteraction performInteraction" type="PassOutIntent" unit="specialinvoke $r16.&lt;androidx.core.app.NotificationCompat$Action$Builder: void &lt;init&gt;(int,java.lang.CharSequence,android.app.PendingIntent)&gt;($i0, $r11, $r13)"/>  
        <node method="NotificationInteraction performInteraction" type="PassOutIntent" unit="$r20 = virtualinvoke $r12.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)&gt;($i0, $r11, $r13)"/>  
        <node method="NotificationInteraction performInteraction" type="PassOutIntent" unit="$r20 = virtualinvoke $r20.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)&gt;($i0, $r11, $r14)"/>  
        <node method="NotificationInteraction performInteraction" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationInteraction performInteraction" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;"/>  
      <methodtrace value="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;,&lt;org.acra.interaction.NotificationInteraction: android.widget.RemoteViews getSmallView(android.content.Context,org.acra.config.NotificationConfiguration,android.app.PendingIntent,android.app.PendingIntent)&gt;,android.widget.RemoteViews getSmallView(android.content.Context,org.acra.config.NotificationConfiguration,android.app.PendingIntent,android.app.PendingIntent)"/>  
      <source name="org.acra.interaction.NotificationInteraction"/>  
      <nodes> 
        <node method="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;"/>  
        <node method="&lt;org.acra.interaction.NotificationInteraction: android.widget.RemoteViews getSmallView(android.content.Context,org.acra.config.NotificationConfiguration,android.app.PendingIntent,android.app.PendingIntent)&gt;"/>  
        <node method="NotificationInteraction getSmallView" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.app.PendingIntent"/>  
        <node method="NotificationInteraction getSmallView" type="PassOutIntent" unit="virtualinvoke $r3.&lt;android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)&gt;($i0, $r1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;"/>  
      <methodtrace value="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="org.acra.interaction.NotificationInteraction"/>  
      <nodes> 
        <node method="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setDeleteIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;"/>  
      <methodtrace value="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;,boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File), &lt;org.acra.interaction.NotificationInteraction: android.app.PendingIntent getSendIntent(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;, &lt;org.acra.interaction.NotificationInteraction: android.app.PendingIntent getDiscardIntent(android.content.Context)&gt;, &lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
      <source name="org.acra.interaction.NotificationInteraction"/>  
      <destinition name="org.acra.receiver.NotificationBroadcastReceiver"/>  
      <sender action="org.acra.intent.send"/>  
      <nodes> 
        <node method="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;"/>  
        <node method="NotificationInteraction performInteraction" type="ReceiveIntentFromRetValue" unit="$r13 = specialinvoke r0.&lt;org.acra.interaction.NotificationInteraction: android.app.PendingIntent getSendIntent(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;($r1, $r2, $r3)"/>  
        <node method="NotificationInteraction getSendIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="NotificationInteraction getSendIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Lorg/acra/receiver/NotificationBroadcastReceiver;&quot;)"/>  
        <node method="NotificationInteraction getSendIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.acra.intent.send&quot;)"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationInteraction performInteraction" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationInteraction performInteraction" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationInteraction performInteraction" type="PassOutIntent" unit="virtualinvoke $r12.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r13)"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationInteraction performInteraction" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;"/>  
      <methodtrace value="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;,boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File), &lt;org.acra.interaction.NotificationInteraction: android.app.PendingIntent getSendIntent(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;, &lt;org.acra.interaction.NotificationInteraction: android.app.PendingIntent getDiscardIntent(android.content.Context)&gt;, &lt;org.acra.interaction.NotificationInteraction: android.widget.RemoteViews getSmallView(android.content.Context,org.acra.config.NotificationConfiguration,android.app.PendingIntent,android.app.PendingIntent)&gt;"/>  
      <source name="org.acra.interaction.NotificationInteraction"/>  
      <destinition name="org.acra.receiver.NotificationBroadcastReceiver"/>  
      <sender action="org.acra.intent.send"/>  
      <nodes> 
        <node method="&lt;org.acra.interaction.NotificationInteraction: boolean performInteraction(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;"/>  
        <node method="NotificationInteraction performInteraction" type="ReceiveIntentFromRetValue" unit="$r13 = specialinvoke r0.&lt;org.acra.interaction.NotificationInteraction: android.app.PendingIntent getSendIntent(android.content.Context,org.acra.config.CoreConfiguration,java.io.File)&gt;($r1, $r2, $r3)"/>  
        <node method="NotificationInteraction getSendIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="NotificationInteraction getSendIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Lorg/acra/receiver/NotificationBroadcastReceiver;&quot;)"/>  
        <node method="NotificationInteraction getSendIntent" type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;org.acra.intent.send&quot;)"/>  
        <node method="NotificationInteraction performInteraction" type="PassOutIntent" unit="$r20 = virtualinvoke $r12.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)&gt;($i0, $r11, $r13)"/>  
        <node method="NotificationInteraction performInteraction" type="PassOutIntent" unit="$r20 = virtualinvoke $r20.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)&gt;($i0, $r11, $r14)"/>  
        <node method="NotificationInteraction performInteraction" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationInteraction performInteraction" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationInteraction performInteraction" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="at.bitfire.cert4android.CustomCertService"> 
    <intentSummary> 
      <method value="&lt;at.bitfire.cert4android.CustomCertService$binder$1: void checkTrusted(byte[],boolean,boolean,at.bitfire.cert4android.IOnCertificateDecision)&gt;"/>  
      <methodtrace value="&lt;at.bitfire.cert4android.CustomCertService$binder$1: void checkTrusted(byte[],boolean,boolean,at.bitfire.cert4android.IOnCertificateDecision)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;,androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)"/>  
      <source name="at.bitfire.cert4android.CustomCertService"/>  
      <nodes> 
        <node method="&lt;at.bitfire.cert4android.CustomCertService$binder$1: void checkTrusted(byte[],boolean,boolean,at.bitfire.cert4android.IOnCertificateDecision)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;at.bitfire.cert4android.CustomCertService$binder$1: void checkTrusted(byte[],boolean,boolean,at.bitfire.cert4android.IOnCertificateDecision)&gt;"/>  
      <methodtrace value="&lt;at.bitfire.cert4android.CustomCertService$binder$1: void checkTrusted(byte[],boolean,boolean,at.bitfire.cert4android.IOnCertificateDecision)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;,androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)"/>  
      <source name="at.bitfire.cert4android.CustomCertService"/>  
      <nodes> 
        <node method="&lt;at.bitfire.cert4android.CustomCertService$binder$1: void checkTrusted(byte[],boolean,boolean,at.bitfire.cert4android.IOnCertificateDecision)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;at.bitfire.cert4android.CustomCertService$binder$1: void checkTrusted(byte[],boolean,boolean,at.bitfire.cert4android.IOnCertificateDecision)&gt;"/>  
      <methodtrace value="&lt;at.bitfire.cert4android.CustomCertService$binder$1: void checkTrusted(byte[],boolean,boolean,at.bitfire.cert4android.IOnCertificateDecision)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="at.bitfire.cert4android.CustomCertService"/>  
      <nodes> 
        <node method="&lt;at.bitfire.cert4android.CustomCertService$binder$1: void checkTrusted(byte[],boolean,boolean,at.bitfire.cert4android.IOnCertificateDecision)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setContentIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setDeleteIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;at.bitfire.cert4android.CustomCertService$binder$1: void checkTrusted(byte[],boolean,boolean,at.bitfire.cert4android.IOnCertificateDecision)&gt;"/>  
      <methodtrace value="&lt;at.bitfire.cert4android.CustomCertService$binder$1: void checkTrusted(byte[],boolean,boolean,at.bitfire.cert4android.IOnCertificateDecision)&gt;,void checkTrusted(byte[],boolean,boolean,at.bitfire.cert4android.IOnCertificateDecision), &lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
      <source name="at.bitfire.cert4android.CustomCertService"/>  
      <destinition name="at.bitfire.cert4android.CustomCertService"/>  
      <sender action="certificateDecision"/>  
      <nodes> 
        <node method="&lt;at.bitfire.cert4android.CustomCertService$binder$1: void checkTrusted(byte[],boolean,boolean,at.bitfire.cert4android.IOnCertificateDecision)&gt;"/>  
        <node method="CustomCertService$binder$1 checkTrusted" type="CreateMethod" unit="$r24 = new android.content.Intent"/>  
        <node method="CustomCertService$binder$1 checkTrusted" type="SetAttribute" unit="specialinvoke $r24.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r23, class &quot;Lat/bitfire/cert4android/CustomCertService;&quot;)"/>  
        <node method="CustomCertService$binder$1 checkTrusted" type="SetAttribute" unit="virtualinvoke $r24.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;certificateDecision&quot;)"/>  
        <node method="CustomCertService$binder$1 checkTrusted" type="PassOutIntent" unit="$r25 = virtualinvoke $r25.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent)&gt;($r29)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;at.bitfire.cert4android.CustomCertService$binder$1: void checkTrusted(byte[],boolean,boolean,at.bitfire.cert4android.IOnCertificateDecision)&gt;"/>  
      <methodtrace value="&lt;at.bitfire.cert4android.CustomCertService$binder$1: void checkTrusted(byte[],boolean,boolean,at.bitfire.cert4android.IOnCertificateDecision)&gt;,void checkTrusted(byte[],boolean,boolean,at.bitfire.cert4android.IOnCertificateDecision), &lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
      <source name="at.bitfire.cert4android.CustomCertService"/>  
      <destinition name="at.bitfire.cert4android.TrustCertificateActivity"/>  
      <nodes> 
        <node method="&lt;at.bitfire.cert4android.CustomCertService$binder$1: void checkTrusted(byte[],boolean,boolean,at.bitfire.cert4android.IOnCertificateDecision)&gt;"/>  
        <node method="CustomCertService$binder$1 checkTrusted" type="CreateMethod" unit="$r22 = new android.content.Intent"/>  
        <node method="CustomCertService$binder$1 checkTrusted" type="SetAttribute" unit="specialinvoke $r22.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r23, class &quot;Lat/bitfire/cert4android/TrustCertificateActivity;&quot;)"/>  
        <node method="CustomCertService$binder$1 checkTrusted" type="PassOutIntent" unit="$r25 = virtualinvoke $r25.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r29)"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="CustomCertService$binder$1 checkTrusted" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="CustomCertService$binder$1 checkTrusted" type="PassOutIntent" unit="$r25 = virtualinvoke $r25.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent)&gt;($r29)"/>  
        <node method="CustomCertService$binder$1 checkTrusted" type="SetAttribute" unit="virtualinvoke $r22.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(268435456)"/>  
        <node method="CustomCertService$binder$1 checkTrusted" type="PassOutIntent" unit="virtualinvoke $r4.&lt;at.bitfire.cert4android.CustomCertService: void startActivity(android.content.Intent)&gt;($r22)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;at.bitfire.cert4android.CustomCertService$binder$1: void checkTrusted(byte[],boolean,boolean,at.bitfire.cert4android.IOnCertificateDecision)&gt;"/>  
      <methodtrace value="&lt;at.bitfire.cert4android.CustomCertService$binder$1: void checkTrusted(byte[],boolean,boolean,at.bitfire.cert4android.IOnCertificateDecision)&gt;,void checkTrusted(byte[],boolean,boolean,at.bitfire.cert4android.IOnCertificateDecision), &lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
      <source name="at.bitfire.cert4android.CustomCertService"/>  
      <destinition name="at.bitfire.cert4android.TrustCertificateActivity"/>  
      <nodes> 
        <node method="&lt;at.bitfire.cert4android.CustomCertService$binder$1: void checkTrusted(byte[],boolean,boolean,at.bitfire.cert4android.IOnCertificateDecision)&gt;"/>  
        <node method="CustomCertService$binder$1 checkTrusted" type="CreateMethod" unit="$r22 = new android.content.Intent"/>  
        <node method="CustomCertService$binder$1 checkTrusted" type="SetAttribute" unit="specialinvoke $r22.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r23, class &quot;Lat/bitfire/cert4android/TrustCertificateActivity;&quot;)"/>  
        <node method="CustomCertService$binder$1 checkTrusted" type="PassOutIntent" unit="$r25 = virtualinvoke $r25.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r29)"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="CustomCertService$binder$1 checkTrusted" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="CustomCertService$binder$1 checkTrusted" type="PassOutIntent" unit="$r25 = virtualinvoke $r25.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent)&gt;($r29)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;at.bitfire.cert4android.CustomCertService$binder$1: void checkTrusted(byte[],boolean,boolean,at.bitfire.cert4android.IOnCertificateDecision)&gt;"/>  
      <methodtrace value="&lt;at.bitfire.cert4android.CustomCertService$binder$1: void checkTrusted(byte[],boolean,boolean,at.bitfire.cert4android.IOnCertificateDecision)&gt;,void checkTrusted(byte[],boolean,boolean,at.bitfire.cert4android.IOnCertificateDecision), &lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
      <source name="at.bitfire.cert4android.CustomCertService"/>  
      <destinition name="at.bitfire.cert4android.CustomCertService"/>  
      <sender action="certificateDecision"/>  
      <nodes> 
        <node method="&lt;at.bitfire.cert4android.CustomCertService$binder$1: void checkTrusted(byte[],boolean,boolean,at.bitfire.cert4android.IOnCertificateDecision)&gt;"/>  
        <node method="CustomCertService$binder$1 checkTrusted" type="CreateMethod" unit="$r24 = new android.content.Intent"/>  
        <node method="CustomCertService$binder$1 checkTrusted" type="SetAttribute" unit="specialinvoke $r24.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r23, class &quot;Lat/bitfire/cert4android/CustomCertService;&quot;)"/>  
        <node method="CustomCertService$binder$1 checkTrusted" type="SetAttribute" unit="virtualinvoke $r24.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;certificateDecision&quot;)"/>  
        <node method="CustomCertService$binder$1 checkTrusted" type="PassOutIntent" unit="$r25 = virtualinvoke $r25.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent)&gt;($r29)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;at.bitfire.cert4android.CustomCertService$binder$1: void checkTrusted(byte[],boolean,boolean,at.bitfire.cert4android.IOnCertificateDecision)&gt;"/>  
      <methodtrace value="&lt;at.bitfire.cert4android.CustomCertService$binder$1: void checkTrusted(byte[],boolean,boolean,at.bitfire.cert4android.IOnCertificateDecision)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="at.bitfire.cert4android.CustomCertService"/>  
      <nodes> 
        <node method="&lt;at.bitfire.cert4android.CustomCertService$binder$1: void checkTrusted(byte[],boolean,boolean,at.bitfire.cert4android.IOnCertificateDecision)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setDeleteIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;at.bitfire.cert4android.CustomCertService$binder$1: void checkTrusted(byte[],boolean,boolean,at.bitfire.cert4android.IOnCertificateDecision)&gt;"/>  
      <methodtrace value="&lt;at.bitfire.cert4android.CustomCertService$binder$1: void checkTrusted(byte[],boolean,boolean,at.bitfire.cert4android.IOnCertificateDecision)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="at.bitfire.cert4android.CustomCertService"/>  
      <nodes> 
        <node method="&lt;at.bitfire.cert4android.CustomCertService$binder$1: void checkTrusted(byte[],boolean,boolean,at.bitfire.cert4android.IOnCertificateDecision)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.StartupDialogFragment"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.StartupDialogFragment$onCreateDialog$7: void onClick(android.content.DialogInterface,int)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.StartupDialogFragment$onCreateDialog$7: void onClick(android.content.DialogInterface,int)&gt;,&lt;com.etesync.syncadapter.ui.WebViewActivity$Companion: void openUrl(android.content.Context,android.net.Uri)&gt;,void openUrl(android.content.Context,android.net.Uri)"/>  
      <source name="com.etesync.syncadapter.ui.StartupDialogFragment"/>  
      <destinition name="com.etesync.syncadapter.ui.WebViewActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.StartupDialogFragment$onCreateDialog$7: void onClick(android.content.DialogInterface,int)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.WebViewActivity$Companion: void openUrl(android.content.Context,android.net.Uri)&gt;"/>  
        <node method="WebViewActivity$Companion openUrl" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="WebViewActivity$Companion openUrl" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/etesync/syncadapter/ui/WebViewActivity;&quot;)"/>  
        <node method="WebViewActivity$Companion openUrl" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.StartupDialogFragment$onCreateDialog$7: void onClick(android.content.DialogInterface,int)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.StartupDialogFragment$onCreateDialog$7: void onClick(android.content.DialogInterface,int)&gt;,&lt;com.etesync.syncadapter.ui.WebViewActivity$Companion: void openUrl(android.content.Context,android.net.Uri)&gt;,void openUrl(android.content.Context,android.net.Uri)"/>  
      <source name="com.etesync.syncadapter.ui.StartupDialogFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.StartupDialogFragment$onCreateDialog$7: void onClick(android.content.DialogInterface,int)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.WebViewActivity$Companion: void openUrl(android.content.Context,android.net.Uri)&gt;"/>  
        <node method="WebViewActivity$Companion openUrl" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="WebViewActivity$Companion openUrl" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.syncadapter.SyncAdapterService"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncAdapterService$SyncAdapter$RefreshCollections: void run$app_release()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncAdapterService$SyncAdapter$RefreshCollections: void run$app_release()&gt;,&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;,&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;,void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncAdapterService"/>  
      <destinition name="at.bitfire.cert4android.CustomCertService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncAdapterService$SyncAdapter$RefreshCollections: void run$app_release()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;"/>  
        <node method="&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;"/>  
        <node method="CustomCertManager &lt;init&gt;" type="CreateMethod" unit="$r11 = new android.content.Intent"/>  
        <node method="CustomCertManager &lt;init&gt;" type="SetAttribute" unit="specialinvoke $r11.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r12, class &quot;Lat/bitfire/cert4android/CustomCertService;&quot;)"/>  
        <node method="CustomCertManager &lt;init&gt;" type="PassOutIntent" unit="$z0 = virtualinvoke $r2.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r11, $r13, 1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.syncadapter.SyncManager"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;,androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncManager"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncManager"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void setThrowable(java.lang.Throwable)&gt;,void setThrowable(java.lang.Throwable)"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncManager"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity, com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void setThrowable(java.lang.Throwable)&gt;"/>  
        <node method="SyncNotification setThrowable" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncNotification setThrowable" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncManager"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncManager"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncManager"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncManager"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncManager"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncManager"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncManager"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncManager"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncManager"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncManager"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setDeleteIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncManager"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;,void notify(java.lang.String,java.lang.String), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncManager"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity, com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncNotification notify" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncNotification notify" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncNotification notify" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncNotification notify" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncNotification notify" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncNotification notify" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/>  
        <node method="SyncNotification notify$default" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter3: android.content.Intent"/>  
        <node method="SyncNotification notify" type="PassOutIntent" unit="virtualinvoke $r12.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r13)"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncManager"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncManager"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncManager"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;,void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncManager"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
        <node method="SyncNotification notify$default" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter3: android.content.Intent"/>  
        <node method="SyncNotification notify" type="PassOutIntent" unit="virtualinvoke $r12.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r13)"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncNotification notify$default" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncNotification notify$default" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncManager"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncManager"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncManager"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncManager"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncManager"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncManager"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncManager"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncManager"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncManager"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void notifyDiscardedChange()&gt;,void notifyDiscardedChange(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncManager"/>  
      <destinition name="com.etesync.syncadapter.ui.AccountsActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void notifyDiscardedChange()&gt;"/>  
        <node method="SyncManager notifyDiscardedChange" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="SyncManager notifyDiscardedChange" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Lcom/etesync/syncadapter/ui/AccountsActivity;&quot;)"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter3: android.content.Intent"/>  
        <node method="SyncNotification notify" type="PassOutIntent" unit="virtualinvoke $r12.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r13)"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncManager notifyDiscardedChange" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncManager notifyDiscardedChange" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncManager"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void setThrowable(java.lang.Throwable)&gt;,void setThrowable(java.lang.Throwable)"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncManager"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity, com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void setThrowable(java.lang.Throwable)&gt;"/>  
        <node method="SyncNotification setThrowable" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/>  
        <node method="SyncNotification setThrowable" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncManager"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void setThrowable(java.lang.Throwable)&gt;,void setThrowable(java.lang.Throwable)"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncManager"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity, com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity, com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void setThrowable(java.lang.Throwable)&gt;"/>  
        <node method="SyncNotification setThrowable" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/>  
        <node method="SyncNotification setThrowable" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/>  
        <node method="SyncNotification setThrowable" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;,androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncManager"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncManager"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncManager"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setContentIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setDeleteIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncManager"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int), &lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncManager"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter3: android.content.Intent"/>  
        <node method="SyncNotification notify" type="PassOutIntent" unit="virtualinvoke $r12.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r13)"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncManager"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncManager"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncManager"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncManager"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncManager"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncManager"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncManager"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncManager"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void notifyUserOnSync()&gt;,void notifyUserOnSync(), &lt;com.etesync.syncadapter.ui.ViewCollectionActivity$Companion: android.content.Intent newIntent(android.content.Context,android.accounts.Account,com.etesync.syncadapter.model.CollectionInfo)&gt;, &lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncManager"/>  
      <destinition name="com.etesync.syncadapter.ui.ViewCollectionActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void notifyUserOnSync()&gt;"/>  
        <node method="SyncManager notifyUserOnSync" type="ReceiveIntentFromRetValue" unit="$r19 = virtualinvoke $r16.&lt;com.etesync.syncadapter.ui.ViewCollectionActivity$Companion: android.content.Intent newIntent(android.content.Context,android.accounts.Account,com.etesync.syncadapter.model.CollectionInfo)&gt;($r2, $r17, $r18)"/>  
        <node method="ViewCollectionActivity$Companion newIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="ViewCollectionActivity$Companion newIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lcom/etesync/syncadapter/ui/ViewCollectionActivity;&quot;)"/>  
        <node method="SyncNotification notify$default" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter3: android.content.Intent"/>  
        <node method="SyncNotification notify" type="PassOutIntent" unit="virtualinvoke $r12.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r13)"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncManager notifyUserOnSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncManager notifyUserOnSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncManager"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.SyncManager"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;,androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void setThrowable(java.lang.Throwable)&gt;,void setThrowable(java.lang.Throwable)"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity, com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void setThrowable(java.lang.Throwable)&gt;"/>  
        <node method="SyncNotification setThrowable" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncNotification setThrowable" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setDeleteIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;,void notify(java.lang.String,java.lang.String), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity, com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncNotification notify" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncNotification notify" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncNotification notify" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncNotification notify" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncNotification notify" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncNotification notify" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/>  
        <node method="SyncNotification notify$default" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter3: android.content.Intent"/>  
        <node method="SyncNotification notify" type="PassOutIntent" unit="virtualinvoke $r12.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r13)"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;,void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
        <node method="SyncNotification notify$default" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter3: android.content.Intent"/>  
        <node method="SyncNotification notify" type="PassOutIntent" unit="virtualinvoke $r12.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r13)"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncNotification notify$default" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncNotification notify$default" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void notifyDiscardedChange()&gt;,void notifyDiscardedChange(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.ui.AccountsActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void notifyDiscardedChange()&gt;"/>  
        <node method="SyncManager notifyDiscardedChange" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="SyncManager notifyDiscardedChange" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Lcom/etesync/syncadapter/ui/AccountsActivity;&quot;)"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter3: android.content.Intent"/>  
        <node method="SyncNotification notify" type="PassOutIntent" unit="virtualinvoke $r12.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r13)"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncManager notifyDiscardedChange" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncManager notifyDiscardedChange" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void setThrowable(java.lang.Throwable)&gt;,void setThrowable(java.lang.Throwable)"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity, com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void setThrowable(java.lang.Throwable)&gt;"/>  
        <node method="SyncNotification setThrowable" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/>  
        <node method="SyncNotification setThrowable" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void setThrowable(java.lang.Throwable)&gt;,void setThrowable(java.lang.Throwable)"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity, com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity, com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void setThrowable(java.lang.Throwable)&gt;"/>  
        <node method="SyncNotification setThrowable" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/>  
        <node method="SyncNotification setThrowable" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/>  
        <node method="SyncNotification setThrowable" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;,androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncAdapterService$SyncAdapter$RefreshCollections: void run$app_release()&gt;,&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;,&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;,void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService"/>  
      <destinition name="at.bitfire.cert4android.CustomCertService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncAdapterService$SyncAdapter$RefreshCollections: void run$app_release()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;"/>  
        <node method="&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;"/>  
        <node method="CustomCertManager &lt;init&gt;" type="CreateMethod" unit="$r11 = new android.content.Intent"/>  
        <node method="CustomCertManager &lt;init&gt;" type="SetAttribute" unit="specialinvoke $r11.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r12, class &quot;Lat/bitfire/cert4android/CustomCertService;&quot;)"/>  
        <node method="CustomCertManager &lt;init&gt;" type="PassOutIntent" unit="$z0 = virtualinvoke $r2.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r11, $r13, 1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setContentIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setDeleteIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int), &lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter3: android.content.Intent"/>  
        <node method="SyncNotification notify" type="PassOutIntent" unit="virtualinvoke $r12.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r13)"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void notifyUserOnSync()&gt;,void notifyUserOnSync(), &lt;com.etesync.syncadapter.ui.ViewCollectionActivity$Companion: android.content.Intent newIntent(android.content.Context,android.accounts.Account,com.etesync.syncadapter.model.CollectionInfo)&gt;, &lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.ui.ViewCollectionActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void notifyUserOnSync()&gt;"/>  
        <node method="SyncManager notifyUserOnSync" type="ReceiveIntentFromRetValue" unit="$r19 = virtualinvoke $r16.&lt;com.etesync.syncadapter.ui.ViewCollectionActivity$Companion: android.content.Intent newIntent(android.content.Context,android.accounts.Account,com.etesync.syncadapter.model.CollectionInfo)&gt;($r2, $r17, $r18)"/>  
        <node method="ViewCollectionActivity$Companion newIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="ViewCollectionActivity$Companion newIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lcom/etesync/syncadapter/ui/ViewCollectionActivity;&quot;)"/>  
        <node method="SyncNotification notify$default" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter3: android.content.Intent"/>  
        <node method="SyncNotification notify" type="PassOutIntent" unit="virtualinvoke $r12.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r13)"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncManager notifyUserOnSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncManager notifyUserOnSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.CalendarsSyncAdapterService$SyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.AccountSettingsActivity"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.AccountSettingsActivity$AccountSettingsFragment$onLoadFinished$3: boolean onPreferenceClick(androidx.preference.Preference)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.AccountSettingsActivity$AccountSettingsFragment$onLoadFinished$3: boolean onPreferenceClick(androidx.preference.Preference)&gt;,&lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent)&gt;,void startActivity(android.content.Intent), &lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.AccountSettingsActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.AccountSettingsActivity$AccountSettingsFragment$onLoadFinished$3: boolean onPreferenceClick(androidx.preference.Preference)&gt;"/>  
        <node method="&lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent)&gt;"/>  
        <node method="Fragment startActivity" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="Fragment startActivity" type="PassOutIntent" unit="virtualinvoke r0.&lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)&gt;($r1, null)"/>  
        <node method="Fragment startActivity" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.AccountSettingsActivity$AccountSettingsFragment$onLoadFinished$3: boolean onPreferenceClick(androidx.preference.Preference)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.AccountSettingsActivity$AccountSettingsFragment$onLoadFinished$3: boolean onPreferenceClick(androidx.preference.Preference)&gt;,&lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)&gt;,void startActivity(android.content.Intent,android.os.Bundle)"/>  
      <source name="com.etesync.syncadapter.ui.AccountSettingsActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.AccountSettingsActivity$AccountSettingsFragment$onLoadFinished$3: boolean onPreferenceClick(androidx.preference.Preference)&gt;"/>  
        <node method="&lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)&gt;"/>  
        <node method="Fragment startActivity" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.AccountSettingsActivity$AccountSettingsFragment$onLoadFinished$3: boolean onPreferenceClick(androidx.preference.Preference)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.AccountSettingsActivity$AccountSettingsFragment$onLoadFinished$3: boolean onPreferenceClick(androidx.preference.Preference)&gt;,boolean onPreferenceClick(androidx.preference.Preference), &lt;com.etesync.syncadapter.ui.ChangeEncryptionPasswordActivity$Companion: android.content.Intent newIntent(android.content.Context,android.accounts.Account)&gt;, &lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.AccountSettingsActivity"/>  
      <destinition name="com.etesync.syncadapter.ui.ChangeEncryptionPasswordActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.AccountSettingsActivity$AccountSettingsFragment$onLoadFinished$3: boolean onPreferenceClick(androidx.preference.Preference)&gt;"/>  
        <node method="AccountSettingsActivity$AccountSettingsFragment$onLoadFinished$3 onPreferenceClick" type="ReceiveIntentFromRetValue" unit="$r8 = virtualinvoke $r3.&lt;com.etesync.syncadapter.ui.ChangeEncryptionPasswordActivity$Companion: android.content.Intent newIntent(android.content.Context,android.accounts.Account)&gt;($r6, $r7)"/>  
        <node method="ChangeEncryptionPasswordActivity$Companion newIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="ChangeEncryptionPasswordActivity$Companion newIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Lcom/etesync/syncadapter/ui/ChangeEncryptionPasswordActivity;&quot;)"/>  
        <node method="AccountSettingsActivity$AccountSettingsFragment$onLoadFinished$3 onPreferenceClick" type="PassOutIntent" unit="virtualinvoke $r2.&lt;com.etesync.syncadapter.ui.AccountSettingsActivity$AccountSettingsFragment: void startActivity(android.content.Intent)&gt;($r8)"/>  
        <node method="Fragment startActivity" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="Fragment startActivity" type="PassOutIntent" unit="virtualinvoke r0.&lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)&gt;($r1, null)"/>  
        <node method="Fragment startActivity" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="at.bitfire.cert4android.CustomCertService"> 
    <intentSummary> 
      <method value="&lt;at.bitfire.cert4android.CustomCertService: int onStartCommand(android.content.Intent,int,int)&gt;"/>  
      <methodtrace value="&lt;at.bitfire.cert4android.CustomCertService: int onStartCommand(android.content.Intent,int,int)&gt;,int onStartCommand(android.content.Intent,int,int)"/>  
      <source name="at.bitfire.cert4android.CustomCertService"/>  
      <nodes> 
        <node method="&lt;at.bitfire.cert4android.CustomCertService: int onStartCommand(android.content.Intent,int,int)&gt;"/>  
        <node method="CustomCertService onStartCommand" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;at.bitfire.cert4android.CustomCertService: int onStartCommand(android.content.Intent,int,int)&gt;"/>  
      <methodtrace value="&lt;at.bitfire.cert4android.CustomCertService: int onStartCommand(android.content.Intent,int,int)&gt;,int onStartCommand(android.content.Intent,int,int)"/>  
      <source name="at.bitfire.cert4android.CustomCertService"/>  
      <nodes> 
        <node method="&lt;at.bitfire.cert4android.CustomCertService: int onStartCommand(android.content.Intent,int,int)&gt;"/>  
        <node method="CustomCertService onStartCommand" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;at.bitfire.cert4android.CustomCertService: android.content.Intent getIntent()&gt;()"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.syncadapter.TasksSyncAdapterService"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;,androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)"/>  
      <source name="com.etesync.syncadapter.syncadapter.TasksSyncAdapterService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.TasksSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void setThrowable(java.lang.Throwable)&gt;,void setThrowable(java.lang.Throwable)"/>  
      <source name="com.etesync.syncadapter.syncadapter.TasksSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity, com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void setThrowable(java.lang.Throwable)&gt;"/>  
        <node method="SyncNotification setThrowable" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncNotification setThrowable" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.TasksSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.TasksSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.TasksSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.TasksSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.TasksSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.TasksSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.TasksSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.TasksSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.TasksSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="com.etesync.syncadapter.syncadapter.TasksSyncAdapterService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setDeleteIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.TasksSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;,void notify(java.lang.String,java.lang.String), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.TasksSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity, com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncNotification notify" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncNotification notify" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncNotification notify" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncNotification notify" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncNotification notify" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncNotification notify" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/>  
        <node method="SyncNotification notify$default" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter3: android.content.Intent"/>  
        <node method="SyncNotification notify" type="PassOutIntent" unit="virtualinvoke $r12.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r13)"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.TasksSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.TasksSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.TasksSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;,void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.TasksSyncAdapterService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
        <node method="SyncNotification notify$default" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter3: android.content.Intent"/>  
        <node method="SyncNotification notify" type="PassOutIntent" unit="virtualinvoke $r12.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r13)"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncNotification notify$default" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncNotification notify$default" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.TasksSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.TasksSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.TasksSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="com.etesync.syncadapter.syncadapter.TasksSyncAdapterService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.TasksSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.TasksSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.TasksSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.TasksSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.TasksSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void notifyDiscardedChange()&gt;,void notifyDiscardedChange(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.TasksSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.ui.AccountsActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void notifyDiscardedChange()&gt;"/>  
        <node method="SyncManager notifyDiscardedChange" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="SyncManager notifyDiscardedChange" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Lcom/etesync/syncadapter/ui/AccountsActivity;&quot;)"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter3: android.content.Intent"/>  
        <node method="SyncNotification notify" type="PassOutIntent" unit="virtualinvoke $r12.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r13)"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncManager notifyDiscardedChange" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncManager notifyDiscardedChange" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.TasksSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void setThrowable(java.lang.Throwable)&gt;,void setThrowable(java.lang.Throwable)"/>  
      <source name="com.etesync.syncadapter.syncadapter.TasksSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity, com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void setThrowable(java.lang.Throwable)&gt;"/>  
        <node method="SyncNotification setThrowable" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/>  
        <node method="SyncNotification setThrowable" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.TasksSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void setThrowable(java.lang.Throwable)&gt;,void setThrowable(java.lang.Throwable)"/>  
      <source name="com.etesync.syncadapter.syncadapter.TasksSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity, com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity, com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void setThrowable(java.lang.Throwable)&gt;"/>  
        <node method="SyncNotification setThrowable" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/>  
        <node method="SyncNotification setThrowable" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/>  
        <node method="SyncNotification setThrowable" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;,androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)"/>  
      <source name="com.etesync.syncadapter.syncadapter.TasksSyncAdapterService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncAdapterService$SyncAdapter$RefreshCollections: void run$app_release()&gt;,&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;,&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;,void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)"/>  
      <source name="com.etesync.syncadapter.syncadapter.TasksSyncAdapterService"/>  
      <destinition name="at.bitfire.cert4android.CustomCertService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncAdapterService$SyncAdapter$RefreshCollections: void run$app_release()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;"/>  
        <node method="&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;"/>  
        <node method="CustomCertManager &lt;init&gt;" type="CreateMethod" unit="$r11 = new android.content.Intent"/>  
        <node method="CustomCertManager &lt;init&gt;" type="SetAttribute" unit="specialinvoke $r11.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r12, class &quot;Lat/bitfire/cert4android/CustomCertService;&quot;)"/>  
        <node method="CustomCertManager &lt;init&gt;" type="PassOutIntent" unit="$z0 = virtualinvoke $r2.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r11, $r13, 1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.TasksSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="com.etesync.syncadapter.syncadapter.TasksSyncAdapterService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setContentIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setDeleteIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.TasksSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int), &lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.TasksSyncAdapterService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter3: android.content.Intent"/>  
        <node method="SyncNotification notify" type="PassOutIntent" unit="virtualinvoke $r12.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r13)"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.TasksSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.TasksSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.TasksSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.TasksSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.TasksSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.TasksSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.TasksSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.TasksSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void notifyUserOnSync()&gt;,void notifyUserOnSync(), &lt;com.etesync.syncadapter.ui.ViewCollectionActivity$Companion: android.content.Intent newIntent(android.content.Context,android.accounts.Account,com.etesync.syncadapter.model.CollectionInfo)&gt;, &lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.TasksSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.ui.ViewCollectionActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void notifyUserOnSync()&gt;"/>  
        <node method="SyncManager notifyUserOnSync" type="ReceiveIntentFromRetValue" unit="$r19 = virtualinvoke $r16.&lt;com.etesync.syncadapter.ui.ViewCollectionActivity$Companion: android.content.Intent newIntent(android.content.Context,android.accounts.Account,com.etesync.syncadapter.model.CollectionInfo)&gt;($r2, $r17, $r18)"/>  
        <node method="ViewCollectionActivity$Companion newIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="ViewCollectionActivity$Companion newIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lcom/etesync/syncadapter/ui/ViewCollectionActivity;&quot;)"/>  
        <node method="SyncNotification notify$default" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter3: android.content.Intent"/>  
        <node method="SyncNotification notify" type="PassOutIntent" unit="virtualinvoke $r12.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r13)"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncManager notifyUserOnSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncManager notifyUserOnSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.TasksSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.TasksSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.TasksSyncAdapterService$TasksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.AddMemberFragment"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.AddMemberFragment: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.AddMemberFragment: void onCreate(android.os.Bundle)&gt;,&lt;com.etesync.syncadapter.ui.AddMemberFragment$MemberAdd: java.lang.Object doInBackground(java.lang.Object[])&gt;,&lt;com.etesync.syncadapter.ui.AddMemberFragment$MemberAdd: com.etesync.syncadapter.ui.AddMemberFragment$MemberAdd$AddResult doInBackground(java.lang.Void[])&gt;,&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;,&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;,void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)"/>  
      <source name="com.etesync.syncadapter.ui.AddMemberFragment"/>  
      <destinition name="at.bitfire.cert4android.CustomCertService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.AddMemberFragment: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.AddMemberFragment$MemberAdd: java.lang.Object doInBackground(java.lang.Object[])&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.AddMemberFragment$MemberAdd: com.etesync.syncadapter.ui.AddMemberFragment$MemberAdd$AddResult doInBackground(java.lang.Void[])&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;"/>  
        <node method="&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;"/>  
        <node method="CustomCertManager &lt;init&gt;" type="CreateMethod" unit="$r11 = new android.content.Intent"/>  
        <node method="CustomCertManager &lt;init&gt;" type="SetAttribute" unit="specialinvoke $r11.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r12, class &quot;Lat/bitfire/cert4android/CustomCertService;&quot;)"/>  
        <node method="CustomCertManager &lt;init&gt;" type="PassOutIntent" unit="$z0 = virtualinvoke $r2.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r11, $r13, 1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.journalviewer.ListEntriesFragment"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.journalviewer.ListEntriesFragment: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.journalviewer.ListEntriesFragment: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;,&lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent)&gt;,void startActivity(android.content.Intent), &lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.journalviewer.ListEntriesFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.journalviewer.ListEntriesFragment: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;"/>  
        <node method="&lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent)&gt;"/>  
        <node method="Fragment startActivity" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="Fragment startActivity" type="PassOutIntent" unit="virtualinvoke r0.&lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)&gt;($r1, null)"/>  
        <node method="Fragment startActivity" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.journalviewer.ListEntriesFragment: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.journalviewer.ListEntriesFragment: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;,&lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)&gt;,void startActivity(android.content.Intent,android.os.Bundle)"/>  
      <source name="com.etesync.syncadapter.ui.journalviewer.ListEntriesFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.journalviewer.ListEntriesFragment: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;"/>  
        <node method="&lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)&gt;"/>  
        <node method="Fragment startActivity" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.journalviewer.ListEntriesFragment: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.journalviewer.ListEntriesFragment: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;,void onItemClick(android.widget.AdapterView,android.view.View,int,long), &lt;com.etesync.syncadapter.ui.JournalItemActivity$Companion: android.content.Intent newIntent(android.content.Context,android.accounts.Account,com.etesync.syncadapter.model.CollectionInfo,com.etesync.syncadapter.model.SyncEntry)&gt;, &lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.journalviewer.ListEntriesFragment"/>  
      <destinition name="com.etesync.syncadapter.ui.JournalItemActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.journalviewer.ListEntriesFragment: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;"/>  
        <node method="ListEntriesFragment onItemClick" type="ReceiveIntentFromRetValue" unit="$r11 = virtualinvoke $r6.&lt;com.etesync.syncadapter.ui.JournalItemActivity$Companion: android.content.Intent newIntent(android.content.Context,android.accounts.Account,com.etesync.syncadapter.model.CollectionInfo,com.etesync.syncadapter.model.SyncEntry)&gt;($r7, $r8, $r9, $r10)"/>  
        <node method="JournalItemActivity$Companion newIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="JournalItemActivity$Companion newIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lcom/etesync/syncadapter/ui/JournalItemActivity;&quot;)"/>  
        <node method="ListEntriesFragment onItemClick" type="PassOutIntent" unit="virtualinvoke r0.&lt;com.etesync.syncadapter.ui.journalviewer.ListEntriesFragment: void startActivity(android.content.Intent)&gt;($r11)"/>  
        <node method="Fragment startActivity" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="Fragment startActivity" type="PassOutIntent" unit="virtualinvoke r0.&lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)&gt;($r1, null)"/>  
        <node method="Fragment startActivity" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.AccountActivity"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.AccountActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.AccountActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle)"/>  
      <source name="com.etesync.syncadapter.ui.AccountActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.AccountActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="AccountActivity onCreate" type="setContentView" unit="virtualinvoke r0.&lt;com.etesync.syncadapter.ui.AccountActivity: void setContentView(int)&gt;(2131492898)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.ViewCollectionActivity"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.ViewCollectionActivity: void onManageMembers(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.ViewCollectionActivity: void onManageMembers(android.view.MenuItem)&gt;,void onManageMembers(android.view.MenuItem), &lt;com.etesync.syncadapter.ui.CollectionMembersActivity$Companion: android.content.Intent newIntent(android.content.Context,android.accounts.Account,com.etesync.syncadapter.model.CollectionInfo)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.ViewCollectionActivity"/>  
      <destinition name="com.etesync.syncadapter.ui.CollectionMembersActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.ViewCollectionActivity: void onManageMembers(android.view.MenuItem)&gt;"/>  
        <node method="ViewCollectionActivity onManageMembers" type="ReceiveIntentFromRetValue" unit="$r10 = virtualinvoke $r8.&lt;com.etesync.syncadapter.ui.CollectionMembersActivity$Companion: android.content.Intent newIntent(android.content.Context,android.accounts.Account,com.etesync.syncadapter.model.CollectionInfo)&gt;($r4, $r9, $r2)"/>  
        <node method="CollectionMembersActivity$Companion newIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="CollectionMembersActivity$Companion newIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lcom/etesync/syncadapter/ui/CollectionMembersActivity;&quot;)"/>  
        <node method="ViewCollectionActivity onManageMembers" type="PassOutIntent" unit="virtualinvoke r0.&lt;com.etesync.syncadapter.ui.ViewCollectionActivity: void startActivity(android.content.Intent)&gt;($r10)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.setup.LoginCredentialsFragment"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.setup.LoginCredentialsFragment$onCreateView$1: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.setup.LoginCredentialsFragment$onCreateView$1: void onClick(android.view.View)&gt;,&lt;com.etesync.syncadapter.ui.WebViewActivity$Companion: void openUrl(android.content.Context,android.net.Uri)&gt;,void openUrl(android.content.Context,android.net.Uri)"/>  
      <source name="com.etesync.syncadapter.ui.setup.LoginCredentialsFragment"/>  
      <destinition name="com.etesync.syncadapter.ui.WebViewActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.setup.LoginCredentialsFragment$onCreateView$1: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.WebViewActivity$Companion: void openUrl(android.content.Context,android.net.Uri)&gt;"/>  
        <node method="WebViewActivity$Companion openUrl" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="WebViewActivity$Companion openUrl" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/etesync/syncadapter/ui/WebViewActivity;&quot;)"/>  
        <node method="WebViewActivity$Companion openUrl" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.setup.LoginCredentialsFragment$onCreateView$1: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.setup.LoginCredentialsFragment$onCreateView$1: void onClick(android.view.View)&gt;,&lt;com.etesync.syncadapter.ui.WebViewActivity$Companion: void openUrl(android.content.Context,android.net.Uri)&gt;,void openUrl(android.content.Context,android.net.Uri)"/>  
      <source name="com.etesync.syncadapter.ui.setup.LoginCredentialsFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.setup.LoginCredentialsFragment$onCreateView$1: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.WebViewActivity$Companion: void openUrl(android.content.Context,android.net.Uri)&gt;"/>  
        <node method="WebViewActivity$Companion openUrl" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="WebViewActivity$Companion openUrl" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.CollectionMembersActivity"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.CollectionMembersActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.CollectionMembersActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle)"/>  
      <source name="com.etesync.syncadapter.ui.CollectionMembersActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.CollectionMembersActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="CollectionMembersActivity onCreate" type="setContentView" unit="virtualinvoke r0.&lt;com.etesync.syncadapter.ui.CollectionMembersActivity: void setContentView(int)&gt;(2131492981)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.ViewCollectionActivity"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.ViewCollectionActivity: void onEditCollection(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.ViewCollectionActivity: void onEditCollection(android.view.MenuItem)&gt;,void onEditCollection(android.view.MenuItem), &lt;com.etesync.syncadapter.ui.EditCollectionActivity$Companion: android.content.Intent newIntent(android.content.Context,android.accounts.Account,com.etesync.syncadapter.model.CollectionInfo)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.ViewCollectionActivity"/>  
      <destinition name="com.etesync.syncadapter.ui.EditCollectionActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.ViewCollectionActivity: void onEditCollection(android.view.MenuItem)&gt;"/>  
        <node method="ViewCollectionActivity onEditCollection" type="ReceiveIntentFromRetValue" unit="$r6 = virtualinvoke $r2.&lt;com.etesync.syncadapter.ui.EditCollectionActivity$Companion: android.content.Intent newIntent(android.content.Context,android.accounts.Account,com.etesync.syncadapter.model.CollectionInfo)&gt;($r3, $r4, $r5)"/>  
        <node method="EditCollectionActivity$Companion newIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="EditCollectionActivity$Companion newIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lcom/etesync/syncadapter/ui/EditCollectionActivity;&quot;)"/>  
        <node method="ViewCollectionActivity onEditCollection" type="PassOutIntent" unit="virtualinvoke r0.&lt;com.etesync.syncadapter.ui.ViewCollectionActivity: void startActivity(android.content.Intent)&gt;($r6)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.AccountActivity"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.AccountActivity$onItemClickListener$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.AccountActivity$onItemClickListener$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;,void onItemClick(android.widget.AdapterView,android.view.View,int,long), &lt;com.etesync.syncadapter.ui.ViewCollectionActivity$Companion: android.content.Intent newIntent(android.content.Context,android.accounts.Account,com.etesync.syncadapter.model.CollectionInfo)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.AccountActivity"/>  
      <destinition name="com.etesync.syncadapter.ui.ViewCollectionActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.AccountActivity$onItemClickListener$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;"/>  
        <node method="AccountActivity$onItemClickListener$1 onItemClick" type="ReceiveIntentFromRetValue" unit="$r14 = virtualinvoke $r10.&lt;com.etesync.syncadapter.ui.ViewCollectionActivity$Companion: android.content.Intent newIntent(android.content.Context,android.accounts.Account,com.etesync.syncadapter.model.CollectionInfo)&gt;($r12, $r13, $r8)"/>  
        <node method="ViewCollectionActivity$Companion newIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="ViewCollectionActivity$Companion newIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lcom/etesync/syncadapter/ui/ViewCollectionActivity;&quot;)"/>  
        <node method="AccountActivity$onItemClickListener$1 onItemClick" type="PassOutIntent" unit="virtualinvoke $r9.&lt;com.etesync.syncadapter.ui.AccountActivity: void startActivity(android.content.Intent)&gt;($r14)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.App$AppUpdatedReceiver"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.App$AppUpdatedReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.App$AppUpdatedReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;,void onReceive(android.content.Context,android.content.Intent)"/>  
      <source name="com.etesync.syncadapter.App$AppUpdatedReceiver"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.App$AppUpdatedReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="App$AppUpdatedReceiver onReceive" type="ReceiveIntentFromRetValue" unit="$r2 = virtualinvoke r0.&lt;com.etesync.syncadapter.App$AppUpdatedReceiver: android.content.Intent getIntent()&gt;()"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.App$AppUpdatedReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.App$AppUpdatedReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;,void onReceive(android.content.Context,android.content.Intent)"/>  
      <source name="com.etesync.syncadapter.App$AppUpdatedReceiver"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.App$AppUpdatedReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="App$AppUpdatedReceiver onReceive" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.syncadapter.ContactsSyncManager"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncManager$ResourceDownloader: byte[] download(java.lang.String,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncManager$ResourceDownloader: byte[] download(java.lang.String,java.lang.String)&gt;,&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;,&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;,void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)"/>  
      <source name="com.etesync.syncadapter.syncadapter.ContactsSyncManager"/>  
      <destinition name="at.bitfire.cert4android.CustomCertService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncManager$ResourceDownloader: byte[] download(java.lang.String,java.lang.String)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;"/>  
        <node method="&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;"/>  
        <node method="CustomCertManager &lt;init&gt;" type="CreateMethod" unit="$r11 = new android.content.Intent"/>  
        <node method="CustomCertManager &lt;init&gt;" type="SetAttribute" unit="specialinvoke $r11.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r12, class &quot;Lat/bitfire/cert4android/CustomCertService;&quot;)"/>  
        <node method="CustomCertManager &lt;init&gt;" type="PassOutIntent" unit="$z0 = virtualinvoke $r2.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r11, $r13, 1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.syncadapter.AddressBooksSyncAdapterService"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.AddressBooksSyncAdapterService$AddressBooksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.AddressBooksSyncAdapterService$AddressBooksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncAdapterService$SyncAdapter$RefreshCollections: void run$app_release()&gt;,&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;,&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;,void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)"/>  
      <source name="com.etesync.syncadapter.syncadapter.AddressBooksSyncAdapterService"/>  
      <destinition name="at.bitfire.cert4android.CustomCertService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.AddressBooksSyncAdapterService$AddressBooksSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncAdapterService$SyncAdapter$RefreshCollections: void run$app_release()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;"/>  
        <node method="&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;"/>  
        <node method="CustomCertManager &lt;init&gt;" type="CreateMethod" unit="$r11 = new android.content.Intent"/>  
        <node method="CustomCertManager &lt;init&gt;" type="SetAttribute" unit="specialinvoke $r11.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r12, class &quot;Lat/bitfire/cert4android/CustomCertService;&quot;)"/>  
        <node method="CustomCertManager &lt;init&gt;" type="PassOutIntent" unit="$z0 = virtualinvoke $r2.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r11, $r13, 1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.AccountListFragment"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.AccountListFragment: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.AccountListFragment: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;,&lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent)&gt;,void startActivity(android.content.Intent), &lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.AccountListFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.AccountListFragment: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;"/>  
        <node method="&lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent)&gt;"/>  
        <node method="Fragment startActivity" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="Fragment startActivity" type="PassOutIntent" unit="virtualinvoke r0.&lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)&gt;($r1, null)"/>  
        <node method="Fragment startActivity" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.AccountListFragment: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.AccountListFragment: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;,&lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)&gt;,void startActivity(android.content.Intent,android.os.Bundle)"/>  
      <source name="com.etesync.syncadapter.ui.AccountListFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.AccountListFragment: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;"/>  
        <node method="&lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)&gt;"/>  
        <node method="Fragment startActivity" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.AccountListFragment: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.AccountListFragment: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;,void onItemClick(android.widget.AdapterView,android.view.View,int,long), &lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.AccountListFragment"/>  
      <destinition name="com.etesync.syncadapter.ui.AccountActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.AccountListFragment: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;"/>  
        <node method="AccountListFragment onItemClick" type="CreateMethod" unit="$r6 = new android.content.Intent"/>  
        <node method="AccountListFragment onItemClick" type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r7, class &quot;Lcom/etesync/syncadapter/ui/AccountActivity;&quot;)"/>  
        <node method="AccountListFragment onItemClick" type="PassOutIntent" unit="virtualinvoke r0.&lt;com.etesync.syncadapter.ui.AccountListFragment: void startActivity(android.content.Intent)&gt;($r6)"/>  
        <node method="Fragment startActivity" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="Fragment startActivity" type="PassOutIntent" unit="virtualinvoke r0.&lt;androidx.fragment.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)&gt;($r1, null)"/>  
        <node method="Fragment startActivity" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.AccountSettingsActivity"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.AccountSettingsActivity$AccountSettingsFragment$onLoadFinished$1: boolean onPreferenceClick(androidx.preference.Preference)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.AccountSettingsActivity$AccountSettingsFragment$onLoadFinished$1: boolean onPreferenceClick(androidx.preference.Preference)&gt;,&lt;com.etesync.syncadapter.ui.WebViewActivity$Companion: void openUrl(android.content.Context,android.net.Uri)&gt;,void openUrl(android.content.Context,android.net.Uri)"/>  
      <source name="com.etesync.syncadapter.ui.AccountSettingsActivity"/>  
      <destinition name="com.etesync.syncadapter.ui.WebViewActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.AccountSettingsActivity$AccountSettingsFragment$onLoadFinished$1: boolean onPreferenceClick(androidx.preference.Preference)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.WebViewActivity$Companion: void openUrl(android.content.Context,android.net.Uri)&gt;"/>  
        <node method="WebViewActivity$Companion openUrl" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="WebViewActivity$Companion openUrl" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/etesync/syncadapter/ui/WebViewActivity;&quot;)"/>  
        <node method="WebViewActivity$Companion openUrl" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.AccountSettingsActivity$AccountSettingsFragment$onLoadFinished$1: boolean onPreferenceClick(androidx.preference.Preference)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.AccountSettingsActivity$AccountSettingsFragment$onLoadFinished$1: boolean onPreferenceClick(androidx.preference.Preference)&gt;,&lt;com.etesync.syncadapter.ui.WebViewActivity$Companion: void openUrl(android.content.Context,android.net.Uri)&gt;,void openUrl(android.content.Context,android.net.Uri)"/>  
      <source name="com.etesync.syncadapter.ui.AccountSettingsActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.AccountSettingsActivity$AccountSettingsFragment$onLoadFinished$1: boolean onPreferenceClick(androidx.preference.Preference)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.WebViewActivity$Companion: void openUrl(android.content.Context,android.net.Uri)&gt;"/>  
        <node method="WebViewActivity$Companion openUrl" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="WebViewActivity$Companion openUrl" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.setup.SetupEncryptionFragment"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.setup.SetupEncryptionFragment: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.setup.SetupEncryptionFragment: void onCreate(android.os.Bundle)&gt;,&lt;com.etesync.syncadapter.ui.setup.SetupEncryptionFragment$SetupEncryptionLoader: java.lang.Object doInBackground(java.lang.Object[])&gt;,&lt;com.etesync.syncadapter.ui.setup.SetupEncryptionFragment$SetupEncryptionLoader: com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration doInBackground(java.lang.Void[])&gt;,&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;,&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;,void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)"/>  
      <source name="com.etesync.syncadapter.ui.setup.SetupEncryptionFragment"/>  
      <destinition name="at.bitfire.cert4android.CustomCertService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.setup.SetupEncryptionFragment: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.setup.SetupEncryptionFragment$SetupEncryptionLoader: java.lang.Object doInBackground(java.lang.Object[])&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.setup.SetupEncryptionFragment$SetupEncryptionLoader: com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration doInBackground(java.lang.Void[])&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;"/>  
        <node method="&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;"/>  
        <node method="CustomCertManager &lt;init&gt;" type="CreateMethod" unit="$r11 = new android.content.Intent"/>  
        <node method="CustomCertManager &lt;init&gt;" type="SetAttribute" unit="specialinvoke $r11.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r12, class &quot;Lat/bitfire/cert4android/CustomCertService;&quot;)"/>  
        <node method="CustomCertManager &lt;init&gt;" type="PassOutIntent" unit="$z0 = virtualinvoke $r2.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r11, $r13, 1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.RemoveMemberFragment"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.RemoveMemberFragment: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.RemoveMemberFragment: void onCreate(android.os.Bundle)&gt;,&lt;com.etesync.syncadapter.ui.RemoveMemberFragment$MemberRemove: java.lang.Object doInBackground(java.lang.Object[])&gt;,&lt;com.etesync.syncadapter.ui.RemoveMemberFragment$MemberRemove: com.etesync.syncadapter.ui.RemoveMemberFragment$MemberRemove$RemoveResult doInBackground(java.lang.Void[])&gt;,&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;,&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;,void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)"/>  
      <source name="com.etesync.syncadapter.ui.RemoveMemberFragment"/>  
      <destinition name="at.bitfire.cert4android.CustomCertService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.RemoveMemberFragment: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.RemoveMemberFragment$MemberRemove: java.lang.Object doInBackground(java.lang.Object[])&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.RemoveMemberFragment$MemberRemove: com.etesync.syncadapter.ui.RemoveMemberFragment$MemberRemove$RemoveResult doInBackground(java.lang.Void[])&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;"/>  
        <node method="&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;"/>  
        <node method="CustomCertManager &lt;init&gt;" type="CreateMethod" unit="$r11 = new android.content.Intent"/>  
        <node method="CustomCertManager &lt;init&gt;" type="SetAttribute" unit="specialinvoke $r11.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r12, class &quot;Lat/bitfire/cert4android/CustomCertService;&quot;)"/>  
        <node method="CustomCertManager &lt;init&gt;" type="PassOutIntent" unit="$z0 = virtualinvoke $r2.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r11, $r13, 1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.AccountSettings$AppUpdatedReceiver"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.AccountSettings$AppUpdatedReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.AccountSettings$AppUpdatedReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;,void onReceive(android.content.Context,android.content.Intent)"/>  
      <source name="com.etesync.syncadapter.AccountSettings$AppUpdatedReceiver"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.AccountSettings$AppUpdatedReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="AccountSettings$AppUpdatedReceiver onReceive" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.AccountSettings$AppUpdatedReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.AccountSettings$AppUpdatedReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;,void onReceive(android.content.Context,android.content.Intent)"/>  
      <source name="com.etesync.syncadapter.AccountSettings$AppUpdatedReceiver"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.AccountSettings$AppUpdatedReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="AccountSettings$AppUpdatedReceiver onReceive" type="ReceiveIntentFromRetValue" unit="$r2 = virtualinvoke r0.&lt;com.etesync.syncadapter.AccountSettings$AppUpdatedReceiver: android.content.Intent getIntent()&gt;()"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;,androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)"/>  
      <source name="com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void setThrowable(java.lang.Throwable)&gt;,void setThrowable(java.lang.Throwable)"/>  
      <source name="com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity, com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void setThrowable(java.lang.Throwable)&gt;"/>  
        <node method="SyncNotification setThrowable" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncNotification setThrowable" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setDeleteIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;,void notify(java.lang.String,java.lang.String), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity, com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncNotification notify" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncNotification notify" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncNotification notify" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncNotification notify" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncNotification notify" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncNotification notify" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/>  
        <node method="SyncNotification notify$default" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter3: android.content.Intent"/>  
        <node method="SyncNotification notify" type="PassOutIntent" unit="virtualinvoke $r12.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r13)"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;,void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
        <node method="SyncNotification notify$default" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter3: android.content.Intent"/>  
        <node method="SyncNotification notify" type="PassOutIntent" unit="virtualinvoke $r12.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r13)"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncNotification notify$default" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncNotification notify$default" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void notifyDiscardedChange()&gt;,void notifyDiscardedChange(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.ui.AccountsActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void notifyDiscardedChange()&gt;"/>  
        <node method="SyncManager notifyDiscardedChange" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="SyncManager notifyDiscardedChange" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Lcom/etesync/syncadapter/ui/AccountsActivity;&quot;)"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter3: android.content.Intent"/>  
        <node method="SyncNotification notify" type="PassOutIntent" unit="virtualinvoke $r12.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r13)"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncManager notifyDiscardedChange" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncManager notifyDiscardedChange" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void setThrowable(java.lang.Throwable)&gt;,void setThrowable(java.lang.Throwable)"/>  
      <source name="com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity, com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void setThrowable(java.lang.Throwable)&gt;"/>  
        <node method="SyncNotification setThrowable" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/>  
        <node method="SyncNotification setThrowable" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void setThrowable(java.lang.Throwable)&gt;,void setThrowable(java.lang.Throwable)"/>  
      <source name="com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity, com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity, com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void setThrowable(java.lang.Throwable)&gt;"/>  
        <node method="SyncNotification setThrowable" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/>  
        <node method="SyncNotification setThrowable" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/>  
        <node method="SyncNotification setThrowable" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/>  
        <node method="SyncNotification setThrowable" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;,androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)"/>  
      <source name="com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.ContactsSyncManager: void &lt;init&gt;(android.content.Context,android.accounts.Account,com.etesync.syncadapter.AccountSettings,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult,com.etesync.syncadapter.resource.LocalAddressBook,okhttp3.HttpUrl)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void &lt;init&gt;(android.content.Context,android.accounts.Account,com.etesync.syncadapter.AccountSettings,android.os.Bundle,java.lang.String,android.content.SyncResult,java.lang.String,com.etesync.syncadapter.model.CollectionInfo$Type,java.lang.String)&gt;,&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;,&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;,void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)"/>  
      <source name="com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService"/>  
      <destinition name="at.bitfire.cert4android.CustomCertService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncManager: void &lt;init&gt;(android.content.Context,android.accounts.Account,com.etesync.syncadapter.AccountSettings,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult,com.etesync.syncadapter.resource.LocalAddressBook,okhttp3.HttpUrl)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void &lt;init&gt;(android.content.Context,android.accounts.Account,com.etesync.syncadapter.AccountSettings,android.os.Bundle,java.lang.String,android.content.SyncResult,java.lang.String,com.etesync.syncadapter.model.CollectionInfo$Type,java.lang.String)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.HttpClient$Builder: com.etesync.syncadapter.HttpClient build()&gt;"/>  
        <node method="&lt;at.bitfire.cert4android.CustomCertManager: void &lt;init&gt;(android.content.Context,boolean,boolean,boolean)&gt;"/>  
        <node method="CustomCertManager &lt;init&gt;" type="CreateMethod" unit="$r11 = new android.content.Intent"/>  
        <node method="CustomCertManager &lt;init&gt;" type="SetAttribute" unit="specialinvoke $r11.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r12, class &quot;Lat/bitfire/cert4android/CustomCertService;&quot;)"/>  
        <node method="CustomCertManager &lt;init&gt;" type="PassOutIntent" unit="$z0 = virtualinvoke $r2.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r11, $r13, 1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setContentIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setDeleteIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;,void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int), &lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify(java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int)&gt;"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter3: android.content.Intent"/>  
        <node method="SyncNotification notify" type="PassOutIntent" unit="virtualinvoke $r12.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r13)"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void notifyUserOnSync()&gt;,void notifyUserOnSync(), &lt;com.etesync.syncadapter.ui.ViewCollectionActivity$Companion: android.content.Intent newIntent(android.content.Context,android.accounts.Account,com.etesync.syncadapter.model.CollectionInfo)&gt;, &lt;com.etesync.syncadapter.syncadapter.SyncNotification: void notify$default(com.etesync.syncadapter.syncadapter.SyncNotification,java.lang.String,java.lang.String,java.lang.String,android.content.Intent,int,int,java.lang.Object)&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.ui.ViewCollectionActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void notifyUserOnSync()&gt;"/>  
        <node method="SyncManager notifyUserOnSync" type="ReceiveIntentFromRetValue" unit="$r19 = virtualinvoke $r16.&lt;com.etesync.syncadapter.ui.ViewCollectionActivity$Companion: android.content.Intent newIntent(android.content.Context,android.accounts.Account,com.etesync.syncadapter.model.CollectionInfo)&gt;($r2, $r17, $r18)"/>  
        <node method="ViewCollectionActivity$Companion newIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="ViewCollectionActivity$Companion newIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lcom/etesync/syncadapter/ui/ViewCollectionActivity;&quot;)"/>  
        <node method="SyncNotification notify$default" type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>  
        <node method="SyncNotification notify" type="ReceiveIntentFromParatMethod" unit="$r5 := @parameter3: android.content.Intent"/>  
        <node method="SyncNotification notify" type="PassOutIntent" unit="virtualinvoke $r12.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r13)"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncManager notifyUserOnSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="SyncManager notifyUserOnSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;,&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;,void performSync(), &lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;"/>  
      <source name="com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService"/>  
      <destinition name="com.etesync.syncadapter.syncadapter.SyncNotification$NotificationHandlerActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.syncadapter.ContactsSyncAdapterService$ContactsSyncAdapter: void onPerformSyncDo(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.syncadapter.SyncManager: void performSync()&gt;"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke $r14.&lt;com.etesync.syncadapter.syncadapter.SyncNotification: android.content.Intent getDetailsIntent()&gt;()"/>  
        <node method="SyncManager performSync" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
        <node method="SyncManager performSync" type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/etesync/syncadapter/syncadapter/SyncNotification$NotificationHandlerActivity;&quot;)"/>  
        <node method="SyncManager performSync" type="SetAttribute" unit="virtualinvoke $r5.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.setup.LoginCredentialsFragment"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.setup.LoginCredentialsFragment$onCreateView$3: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.setup.LoginCredentialsFragment$onCreateView$3: void onClick(android.view.View)&gt;,&lt;com.etesync.syncadapter.ui.WebViewActivity$Companion: void openUrl(android.content.Context,android.net.Uri)&gt;,void openUrl(android.content.Context,android.net.Uri)"/>  
      <source name="com.etesync.syncadapter.ui.setup.LoginCredentialsFragment"/>  
      <destinition name="com.etesync.syncadapter.ui.WebViewActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.setup.LoginCredentialsFragment$onCreateView$3: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.WebViewActivity$Companion: void openUrl(android.content.Context,android.net.Uri)&gt;"/>  
        <node method="WebViewActivity$Companion openUrl" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="WebViewActivity$Companion openUrl" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/etesync/syncadapter/ui/WebViewActivity;&quot;)"/>  
        <node method="WebViewActivity$Companion openUrl" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.setup.LoginCredentialsFragment$onCreateView$3: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.setup.LoginCredentialsFragment$onCreateView$3: void onClick(android.view.View)&gt;,&lt;com.etesync.syncadapter.ui.WebViewActivity$Companion: void openUrl(android.content.Context,android.net.Uri)&gt;,void openUrl(android.content.Context,android.net.Uri)"/>  
      <source name="com.etesync.syncadapter.ui.setup.LoginCredentialsFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.setup.LoginCredentialsFragment$onCreateView$3: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.WebViewActivity$Companion: void openUrl(android.content.Context,android.net.Uri)&gt;"/>  
        <node method="WebViewActivity$Companion openUrl" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="WebViewActivity$Companion openUrl" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.AccountsActivity"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.AccountsActivity: boolean onNavigationItemSelected(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.AccountsActivity: boolean onNavigationItemSelected(android.view.MenuItem)&gt;,boolean onNavigationItemSelected(android.view.MenuItem)"/>  
      <source name="com.etesync.syncadapter.ui.AccountsActivity"/>  
      <destinition name="com.etesync.syncadapter.ui.AboutActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.AccountsActivity: boolean onNavigationItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="AccountsActivity onNavigationItemSelected" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="AccountsActivity onNavigationItemSelected" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lcom/etesync/syncadapter/ui/AboutActivity;&quot;)"/>  
        <node method="AccountsActivity onNavigationItemSelected" type="PassOutIntent" unit="virtualinvoke r0.&lt;com.etesync.syncadapter.ui.AccountsActivity: void startActivity(android.content.Intent)&gt;($r2)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.AccountsActivity: boolean onNavigationItemSelected(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.AccountsActivity: boolean onNavigationItemSelected(android.view.MenuItem)&gt;,boolean onNavigationItemSelected(android.view.MenuItem)"/>  
      <source name="com.etesync.syncadapter.ui.AccountsActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.AccountsActivity: boolean onNavigationItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="AccountsActivity onNavigationItemSelected" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="AccountsActivity onNavigationItemSelected" type="PassOutIntent" unit="virtualinvoke r0.&lt;com.etesync.syncadapter.ui.AccountsActivity: void startActivity(android.content.Intent)&gt;($r2)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.AccountsActivity: boolean onNavigationItemSelected(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.AccountsActivity: boolean onNavigationItemSelected(android.view.MenuItem)&gt;,&lt;com.etesync.syncadapter.ui.WebViewActivity$Companion: void openUrl(android.content.Context,android.net.Uri)&gt;,void openUrl(android.content.Context,android.net.Uri)"/>  
      <source name="com.etesync.syncadapter.ui.AccountsActivity"/>  
      <destinition name="com.etesync.syncadapter.ui.WebViewActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.AccountsActivity: boolean onNavigationItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.WebViewActivity$Companion: void openUrl(android.content.Context,android.net.Uri)&gt;"/>  
        <node method="WebViewActivity$Companion openUrl" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="WebViewActivity$Companion openUrl" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/etesync/syncadapter/ui/WebViewActivity;&quot;)"/>  
        <node method="WebViewActivity$Companion openUrl" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.AccountsActivity: boolean onNavigationItemSelected(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.AccountsActivity: boolean onNavigationItemSelected(android.view.MenuItem)&gt;,boolean onNavigationItemSelected(android.view.MenuItem)"/>  
      <source name="com.etesync.syncadapter.ui.AccountsActivity"/>  
      <destinition name="com.etesync.syncadapter.ui.AppSettingsActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.AccountsActivity: boolean onNavigationItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="AccountsActivity onNavigationItemSelected" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="AccountsActivity onNavigationItemSelected" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lcom/etesync/syncadapter/ui/AppSettingsActivity;&quot;)"/>  
        <node method="AccountsActivity onNavigationItemSelected" type="PassOutIntent" unit="virtualinvoke r0.&lt;com.etesync.syncadapter.ui.AccountsActivity: void startActivity(android.content.Intent)&gt;($r2)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.AccountsActivity: boolean onNavigationItemSelected(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.AccountsActivity: boolean onNavigationItemSelected(android.view.MenuItem)&gt;,boolean onNavigationItemSelected(android.view.MenuItem)"/>  
      <source name="com.etesync.syncadapter.ui.AccountsActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.AccountsActivity: boolean onNavigationItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="AccountsActivity onNavigationItemSelected" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="AccountsActivity onNavigationItemSelected" type="PassOutIntent" unit="virtualinvoke r0.&lt;com.etesync.syncadapter.ui.AccountsActivity: void startActivity(android.content.Intent)&gt;($r2)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.AccountsActivity: boolean onNavigationItemSelected(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.AccountsActivity: boolean onNavigationItemSelected(android.view.MenuItem)&gt;,boolean onNavigationItemSelected(android.view.MenuItem)"/>  
      <source name="com.etesync.syncadapter.ui.AccountsActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.AccountsActivity: boolean onNavigationItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="AccountsActivity onNavigationItemSelected" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="AccountsActivity onNavigationItemSelected" type="PassOutIntent" unit="virtualinvoke r0.&lt;com.etesync.syncadapter.ui.AccountsActivity: void startActivity(android.content.Intent)&gt;($r2)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.AccountsActivity: boolean onNavigationItemSelected(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.AccountsActivity: boolean onNavigationItemSelected(android.view.MenuItem)&gt;,&lt;com.etesync.syncadapter.ui.WebViewActivity$Companion: void openUrl(android.content.Context,android.net.Uri)&gt;,void openUrl(android.content.Context,android.net.Uri)"/>  
      <source name="com.etesync.syncadapter.ui.AccountsActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.AccountsActivity: boolean onNavigationItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.WebViewActivity$Companion: void openUrl(android.content.Context,android.net.Uri)&gt;"/>  
        <node method="WebViewActivity$Companion openUrl" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="WebViewActivity$Companion openUrl" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.CreateCollectionActivity"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.CreateCollectionActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.CreateCollectionActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle)"/>  
      <source name="com.etesync.syncadapter.ui.CreateCollectionActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.CreateCollectionActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="CreateCollectionActivity onCreate" type="setContentView" unit="virtualinvoke r0.&lt;com.etesync.syncadapter.ui.CreateCollectionActivity: void setContentView(int)&gt;(2131492900)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.ViewCollectionActivity"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.ViewCollectionActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.ViewCollectionActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle)"/>  
      <source name="com.etesync.syncadapter.ui.ViewCollectionActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.ViewCollectionActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="ViewCollectionActivity onCreate" type="setContentView" unit="virtualinvoke r0.&lt;com.etesync.syncadapter.ui.ViewCollectionActivity: void setContentView(int)&gt;(2131492980)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.AccountActivity"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.AccountActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.AccountActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,boolean onOptionsItemSelected(android.view.MenuItem)"/>  
      <source name="com.etesync.syncadapter.ui.AccountActivity"/>  
      <destinition name="com.etesync.syncadapter.ui.AccountSettingsActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.AccountActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="AccountActivity onOptionsItemSelected" type="CreateMethod" unit="$r14 = new android.content.Intent"/>  
        <node method="AccountActivity onOptionsItemSelected" type="SetAttribute" unit="specialinvoke $r14.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r9, class &quot;Lcom/etesync/syncadapter/ui/AccountSettingsActivity;&quot;)"/>  
        <node method="AccountActivity onOptionsItemSelected" type="PassOutIntent" unit="virtualinvoke r0.&lt;com.etesync.syncadapter.ui.AccountActivity: void startActivity(android.content.Intent)&gt;($r14)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.App"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.App: void onCreate()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.App: void onCreate()&gt;,&lt;com.etesync.syncadapter.App: void reinitLogger()&gt;,&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;,&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;,void reinitialize()"/>  
      <source name="com.etesync.syncadapter.App"/>  
      <destinition name="com.etesync.syncadapter.ui.AppSettingsActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.App: void onCreate()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.App: void reinitLogger()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;"/>  
        <node method="Logger reinitialize" type="CreateMethod" unit="$r24 = new android.content.Intent"/>  
        <node method="Logger reinitialize" type="SetAttribute" unit="specialinvoke $r24.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r10, class &quot;Lcom/etesync/syncadapter/ui/AppSettingsActivity;&quot;)"/>  
        <node method="Logger reinitialize" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.App: void onCreate()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.App: void onCreate()&gt;,&lt;com.etesync.syncadapter.App: void reinitLogger()&gt;,&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;,&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;,&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;,androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)"/>  
      <source name="com.etesync.syncadapter.App"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.App: void onCreate()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.App: void reinitLogger()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.App: void onCreate()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.App: void onCreate()&gt;,&lt;com.etesync.syncadapter.App: void reinitLogger()&gt;,&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;,&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;,void reinitialize(), &lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
      <source name="com.etesync.syncadapter.App"/>  
      <destinition name="com.etesync.syncadapter.ui.AppSettingsActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.App: void onCreate()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.App: void reinitLogger()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;"/>  
        <node method="Logger reinitialize" type="CreateMethod" unit="$r24 = new android.content.Intent"/>  
        <node method="Logger reinitialize" type="SetAttribute" unit="specialinvoke $r24.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r10, class &quot;Lcom/etesync/syncadapter/ui/AppSettingsActivity;&quot;)"/>  
        <node method="Logger reinitialize" type="SetAttribute" unit="virtualinvoke $r24.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(268435456)"/>  
        <node method="Logger reinitialize" type="PassOutIntent" unit="$r14 = virtualinvoke $r14.&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r25)"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="Logger reinitialize" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.App: void onCreate()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.App: void onCreate()&gt;,&lt;com.etesync.syncadapter.App: void reinitLogger()&gt;,&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;,&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;,&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;,androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)"/>  
      <source name="com.etesync.syncadapter.App"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.App: void onCreate()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.App: void reinitLogger()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompat$Builder setContentIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.App: void onCreate()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.App: void onCreate()&gt;,&lt;com.etesync.syncadapter.App: void reinitLogger()&gt;,&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;,&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;,void reinitialize()"/>  
      <source name="com.etesync.syncadapter.App"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.App: void onCreate()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.App: void reinitLogger()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;"/>  
        <node method="Logger reinitialize" type="CreateMethod" unit="$r24 = new android.content.Intent"/>  
        <node method="Logger reinitialize" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.App: void onCreate()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.App: void onCreate()&gt;,&lt;com.etesync.syncadapter.App: void reinitLogger()&gt;,&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;,&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;,&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="com.etesync.syncadapter.App"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.App: void onCreate()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.App: void reinitLogger()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setContentIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setDeleteIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.App: void onCreate()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.App: void onCreate()&gt;,&lt;com.etesync.syncadapter.App: void reinitLogger()&gt;,&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;,&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;,void reinitialize()"/>  
      <source name="com.etesync.syncadapter.App"/>  
      <destinition name="com.etesync.syncadapter.ui.AppSettingsActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.App: void onCreate()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.App: void reinitLogger()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;"/>  
        <node method="Logger reinitialize" type="CreateMethod" unit="$r24 = new android.content.Intent"/>  
        <node method="Logger reinitialize" type="SetAttribute" unit="specialinvoke $r24.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r10, class &quot;Lcom/etesync/syncadapter/ui/AppSettingsActivity;&quot;)"/>  
        <node method="Logger reinitialize" type="SetAttribute" unit="virtualinvoke $r24.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(268435456)"/>  
        <node method="Logger reinitialize" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.App: void onCreate()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.App: void onCreate()&gt;,&lt;com.etesync.syncadapter.App: void reinitLogger()&gt;,&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;,&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;,void reinitialize()"/>  
      <source name="com.etesync.syncadapter.App"/>  
      <destinition name="com.etesync.syncadapter.ui.AppSettingsActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.App: void onCreate()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.App: void reinitLogger()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;"/>  
        <node method="Logger reinitialize" type="CreateMethod" unit="$r24 = new android.content.Intent"/>  
        <node method="Logger reinitialize" type="SetAttribute" unit="specialinvoke $r24.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r10, class &quot;Lcom/etesync/syncadapter/ui/AppSettingsActivity;&quot;)"/>  
        <node method="Logger reinitialize" type="SetAttribute" unit="virtualinvoke $r24.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(268435456)"/>  
        <node method="Logger reinitialize" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.app.PendingIntent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.App: void onCreate()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.App: void onCreate()&gt;,&lt;com.etesync.syncadapter.App: void reinitLogger()&gt;,&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;,&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;,&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="com.etesync.syncadapter.App"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.App: void onCreate()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.App: void reinitLogger()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setDeleteIntent(android.app.PendingIntent)&gt;($r11)"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.App: void onCreate()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.App: void onCreate()&gt;,&lt;com.etesync.syncadapter.App: void reinitLogger()&gt;,&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;,&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;,&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;,&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;,void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)"/>  
      <source name="com.etesync.syncadapter.App"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.App: void onCreate()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.App: void reinitLogger()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.log.Logger: void initialize(android.content.Context)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.log.Logger: void reinitialize()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompat$Builder: android.app.Notification build()&gt;"/>  
        <node method="&lt;androidx.core.app.NotificationCompatBuilder: void &lt;init&gt;(androidx.core.app.NotificationCompat$Builder)&gt;"/>  
        <node method="NotificationCompatBuilder &lt;init&gt;" type="PassOutIntent" unit="$r4 = virtualinvoke $r4.&lt;android.app.Notification$Builder: android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean)&gt;($r11, $z0)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.acra.receiver.NotificationBroadcastReceiver"> 
    <intentSummary> 
      <method value="&lt;org.acra.receiver.NotificationBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;org.acra.receiver.NotificationBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;,&lt;androidx.core.app.RemoteInput: android.os.Bundle getResultsFromIntent(android.content.Intent)&gt;,android.os.Bundle getResultsFromIntent(android.content.Intent)"/>  
      <source name="org.acra.receiver.NotificationBroadcastReceiver"/>  
      <nodes> 
        <node method="&lt;org.acra.receiver.NotificationBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="&lt;androidx.core.app.RemoteInput: android.os.Bundle getResultsFromIntent(android.content.Intent)&gt;"/>  
        <node method="RemoteInput getResultsFromIntent" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.receiver.NotificationBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;org.acra.receiver.NotificationBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;,void onReceive(android.content.Context,android.content.Intent), &lt;androidx.core.app.RemoteInput: android.os.Bundle getResultsFromIntent(android.content.Intent)&gt;"/>  
      <source name="org.acra.receiver.NotificationBroadcastReceiver"/>  
      <nodes> 
        <node method="&lt;org.acra.receiver.NotificationBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="NotificationBroadcastReceiver onReceive" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.receiver.NotificationBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;org.acra.receiver.NotificationBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;,&lt;androidx.core.app.RemoteInput: android.os.Bundle getResultsFromIntent(android.content.Intent)&gt;,android.os.Bundle getResultsFromIntent(android.content.Intent)"/>  
      <source name="org.acra.receiver.NotificationBroadcastReceiver"/>  
      <nodes> 
        <node method="&lt;org.acra.receiver.NotificationBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="&lt;androidx.core.app.RemoteInput: android.os.Bundle getResultsFromIntent(android.content.Intent)&gt;"/>  
        <node method="RemoteInput getResultsFromIntent" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>  
        <node method="RemoteInput getResultsFromIntent" type="ReceiveIntentFromRetValue" unit="$r0 = staticinvoke &lt;androidx.core.app.RemoteInput: android.content.Intent getClipDataIntentFromIntent(android.content.Intent)&gt;($r0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.receiver.NotificationBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;org.acra.receiver.NotificationBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;,void onReceive(android.content.Context,android.content.Intent), &lt;androidx.core.app.RemoteInput: android.os.Bundle getResultsFromIntent(android.content.Intent)&gt;"/>  
      <source name="org.acra.receiver.NotificationBroadcastReceiver"/>  
      <nodes> 
        <node method="&lt;org.acra.receiver.NotificationBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="NotificationBroadcastReceiver onReceive" type="ReceiveIntentFromRetValue" unit="$r2 = virtualinvoke r0.&lt;org.acra.receiver.NotificationBroadcastReceiver: android.content.Intent getIntent()&gt;()"/>  
        <node method="RemoteInput getResultsFromIntent" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/>  
        <node method="RemoteInput getResultsFromIntent" type="ReceiveIntentFromRetValue" unit="$r0 = staticinvoke &lt;androidx.core.app.RemoteInput: android.content.Intent getClipDataIntentFromIntent(android.content.Intent)&gt;($r0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.receiver.NotificationBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;org.acra.receiver.NotificationBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;,&lt;androidx.core.app.RemoteInput: android.os.Bundle getResultsFromIntent(android.content.Intent)&gt;,android.os.Bundle getResultsFromIntent(android.content.Intent)"/>  
      <source name="org.acra.receiver.NotificationBroadcastReceiver"/>  
      <nodes> 
        <node method="&lt;org.acra.receiver.NotificationBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="&lt;androidx.core.app.RemoteInput: android.os.Bundle getResultsFromIntent(android.content.Intent)&gt;"/>  
        <node method="RemoteInput getResultsFromIntent" type="ReceiveIntentFromRetValue" unit="$r0 = staticinvoke &lt;androidx.core.app.RemoteInput: android.content.Intent getClipDataIntentFromIntent(android.content.Intent)&gt;($r0)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.receiver.NotificationBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;org.acra.receiver.NotificationBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;,void onReceive(android.content.Context,android.content.Intent)"/>  
      <source name="org.acra.receiver.NotificationBroadcastReceiver"/>  
      <nodes> 
        <node method="&lt;org.acra.receiver.NotificationBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="NotificationBroadcastReceiver onReceive" type="ReceiveIntentFromRetValue" unit="$r2 = virtualinvoke r0.&lt;org.acra.receiver.NotificationBroadcastReceiver: android.content.Intent getIntent()&gt;()"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.receiver.NotificationBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;org.acra.receiver.NotificationBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;,void onReceive(android.content.Context,android.content.Intent), &lt;androidx.core.app.RemoteInput: android.os.Bundle getResultsFromIntent(android.content.Intent)&gt;"/>  
      <source name="org.acra.receiver.NotificationBroadcastReceiver"/>  
      <nodes> 
        <node method="&lt;org.acra.receiver.NotificationBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="NotificationBroadcastReceiver onReceive" type="ReceiveIntentFromRetValue" unit="$r2 = virtualinvoke r0.&lt;org.acra.receiver.NotificationBroadcastReceiver: android.content.Intent getIntent()&gt;()"/>  
        <node method="RemoteInput getResultsFromIntent" type="ReceiveIntentFromParatMethod" unit="$r0 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.receiver.NotificationBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;org.acra.receiver.NotificationBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;,void onReceive(android.content.Context,android.content.Intent), &lt;androidx.core.app.RemoteInput: android.os.Bundle getResultsFromIntent(android.content.Intent)&gt;"/>  
      <source name="org.acra.receiver.NotificationBroadcastReceiver"/>  
      <nodes> 
        <node method="&lt;org.acra.receiver.NotificationBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="NotificationBroadcastReceiver onReceive" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.receiver.NotificationBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;org.acra.receiver.NotificationBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;,void onReceive(android.content.Context,android.content.Intent)"/>  
      <source name="org.acra.receiver.NotificationBroadcastReceiver"/>  
      <nodes> 
        <node method="&lt;org.acra.receiver.NotificationBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="NotificationBroadcastReceiver onReceive" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="com.etesync.syncadapter.ui.EditCollectionActivity"> 
    <intentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.EditCollectionActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.EditCollectionActivity: void onCreate(android.os.Bundle)&gt;,&lt;com.etesync.syncadapter.ui.CreateCollectionActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle)"/>  
      <source name="com.etesync.syncadapter.ui.EditCollectionActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.EditCollectionActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.CreateCollectionActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="CreateCollectionActivity onCreate" type="setContentView" unit="virtualinvoke r0.&lt;com.etesync.syncadapter.ui.CreateCollectionActivity: void setContentView(int)&gt;(2131492900)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="androidx.fragment.app.DialogFragment"> 
    <FragmentSummary> 
      <method value="&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;"/>  
      <methodtrace value="&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;,void dismissInternal(boolean)"/>  
      <source name="androidx.fragment.app.DialogFragment"/>  
      <nodes> 
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;"/>  
        <node method="DialogFragment dismissInternal" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke r0.&lt;androidx.fragment.app.DialogFragment: androidx.fragment.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="commit" unit="virtualinvoke $r3.&lt;androidx.fragment.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;"/>  
      <methodtrace value="&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;,void dismissInternal(boolean)"/>  
      <source name="androidx.fragment.app.DialogFragment"/>  
      <nodes> 
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;"/>  
        <node method="DialogFragment dismissInternal" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke r0.&lt;androidx.fragment.app.DialogFragment: androidx.fragment.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="commit" unit="virtualinvoke $r3.&lt;androidx.fragment.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="androidx.fragment.app.DialogFragment"> 
    <FragmentSummary> 
      <method value="&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;"/>  
      <methodtrace value="&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;,void dismissInternal(boolean)"/>  
      <source name="androidx.fragment.app.DialogFragment"/>  
      <nodes> 
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;"/>  
        <node method="DialogFragment dismissInternal" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke r0.&lt;androidx.fragment.app.DialogFragment: androidx.fragment.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="commit" unit="virtualinvoke $r3.&lt;androidx.fragment.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;"/>  
      <methodtrace value="&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;,void dismissInternal(boolean)"/>  
      <source name="androidx.fragment.app.DialogFragment"/>  
      <nodes> 
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;"/>  
        <node method="DialogFragment dismissInternal" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke r0.&lt;androidx.fragment.app.DialogFragment: androidx.fragment.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="commit" unit="virtualinvoke $r3.&lt;androidx.fragment.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="androidx.lifecycle.ReportFragment"> 
    <FragmentSummary> 
      <method value="&lt;androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)&gt;"/>  
      <methodtrace value="&lt;androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)&gt;,void injectIfNeededIn(android.app.Activity), &lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;"/>  
      <source name="androidx.lifecycle.ReportFragment"/>  
      <nodes> 
        <node method="&lt;androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)&gt;"/>  
        <node method="ReportFragment injectIfNeededIn" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>  
        <node method="ReportFragment injectIfNeededIn" type="beginTransaction" unit="$r4 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="ReportFragment injectIfNeededIn" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r0, &quot;androidx.lifecycle.LifecycleDispatcher.report_fragment_tag&quot;)"/>  
        <node method="ReportFragment injectIfNeededIn" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="androidx.core.app.ComponentActivity"> 
    <FragmentSummary> 
      <method value="&lt;androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)&gt;"/>  
      <source name="androidx.core.app.ComponentActivity"/>  
      <nodes> 
        <node method="&lt;androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="ReportFragment injectIfNeededIn" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="ReportFragment injectIfNeededIn" type="beginTransaction" unit="$r4 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="ReportFragment injectIfNeededIn" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r0, &quot;androidx.lifecycle.LifecycleDispatcher.report_fragment_tag&quot;)"/>  
        <node method="ReportFragment injectIfNeededIn" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="androidx.fragment.app.FragmentActivity"> 
    <FragmentSummary> 
      <method value="&lt;androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)&gt;,&lt;androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)&gt;"/>  
      <source name="androidx.fragment.app.FragmentActivity"/>  
      <nodes> 
        <node method="&lt;androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="ReportFragment injectIfNeededIn" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="ReportFragment injectIfNeededIn" type="beginTransaction" unit="$r4 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="ReportFragment injectIfNeededIn" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r0, &quot;androidx.lifecycle.LifecycleDispatcher.report_fragment_tag&quot;)"/>  
        <node method="ReportFragment injectIfNeededIn" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="androidx.appcompat.app.AppCompatActivity"> 
    <FragmentSummary> 
      <method value="&lt;androidx.appcompat.app.AppCompatActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;androidx.appcompat.app.AppCompatActivity: void onCreate(android.os.Bundle)&gt;,&lt;androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)&gt;,&lt;androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)&gt;"/>  
      <source name="androidx.appcompat.app.AppCompatActivity"/>  
      <nodes> 
        <node method="&lt;androidx.appcompat.app.AppCompatActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="ReportFragment injectIfNeededIn" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="ReportFragment injectIfNeededIn" type="beginTransaction" unit="$r4 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="ReportFragment injectIfNeededIn" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r0, &quot;androidx.lifecycle.LifecycleDispatcher.report_fragment_tag&quot;)"/>  
        <node method="ReportFragment injectIfNeededIn" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.etesync.syncadapter.ui.DebugInfoActivity"> 
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.DebugInfoActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.DebugInfoActivity: void onCreate(android.os.Bundle)&gt;,&lt;androidx.appcompat.app.AppCompatActivity: void onCreate(android.os.Bundle)&gt;,&lt;androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)&gt;,&lt;androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.DebugInfoActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.DebugInfoActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;androidx.appcompat.app.AppCompatActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="ReportFragment injectIfNeededIn" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="ReportFragment injectIfNeededIn" type="beginTransaction" unit="$r4 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="ReportFragment injectIfNeededIn" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r0, &quot;androidx.lifecycle.LifecycleDispatcher.report_fragment_tag&quot;)"/>  
        <node method="ReportFragment injectIfNeededIn" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="androidx.fragment.app.DialogFragment"> 
    <FragmentSummary> 
      <method value="&lt;androidx.fragment.app.DialogFragment: void onDismiss(android.content.DialogInterface)&gt;"/>  
      <methodtrace value="&lt;androidx.fragment.app.DialogFragment: void onDismiss(android.content.DialogInterface)&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;,void dismissInternal(boolean)"/>  
      <source name="androidx.fragment.app.DialogFragment"/>  
      <nodes> 
        <node method="&lt;androidx.fragment.app.DialogFragment: void onDismiss(android.content.DialogInterface)&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;"/>  
        <node method="DialogFragment dismissInternal" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke r0.&lt;androidx.fragment.app.DialogFragment: androidx.fragment.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="commit" unit="virtualinvoke $r3.&lt;androidx.fragment.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;androidx.fragment.app.DialogFragment: void onDismiss(android.content.DialogInterface)&gt;"/>  
      <methodtrace value="&lt;androidx.fragment.app.DialogFragment: void onDismiss(android.content.DialogInterface)&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;,void dismissInternal(boolean)"/>  
      <source name="androidx.fragment.app.DialogFragment"/>  
      <nodes> 
        <node method="&lt;androidx.fragment.app.DialogFragment: void onDismiss(android.content.DialogInterface)&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;"/>  
        <node method="DialogFragment dismissInternal" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke r0.&lt;androidx.fragment.app.DialogFragment: androidx.fragment.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="commit" unit="virtualinvoke $r3.&lt;androidx.fragment.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.etesync.syncadapter.ui.importlocal.ResultFragment"> 
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.importlocal.ResultFragment: void onDismiss(android.content.DialogInterface)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.importlocal.ResultFragment: void onDismiss(android.content.DialogInterface)&gt;,&lt;androidx.fragment.app.DialogFragment: void onDismiss(android.content.DialogInterface)&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;,void dismissInternal(boolean)"/>  
      <source name="com.etesync.syncadapter.ui.importlocal.ResultFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ResultFragment: void onDismiss(android.content.DialogInterface)&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void onDismiss(android.content.DialogInterface)&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;"/>  
        <node method="DialogFragment dismissInternal" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke r0.&lt;androidx.fragment.app.DialogFragment: androidx.fragment.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="commit" unit="virtualinvoke $r3.&lt;androidx.fragment.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.importlocal.ResultFragment: void onDismiss(android.content.DialogInterface)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.importlocal.ResultFragment: void onDismiss(android.content.DialogInterface)&gt;,&lt;androidx.fragment.app.DialogFragment: void onDismiss(android.content.DialogInterface)&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;,void dismissInternal(boolean)"/>  
      <source name="com.etesync.syncadapter.ui.importlocal.ResultFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ResultFragment: void onDismiss(android.content.DialogInterface)&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void onDismiss(android.content.DialogInterface)&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;"/>  
        <node method="DialogFragment dismissInternal" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke r0.&lt;androidx.fragment.app.DialogFragment: androidx.fragment.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="commit" unit="virtualinvoke $r3.&lt;androidx.fragment.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.etesync.syncadapter.ui.setup.DetectConfigurationFragment"> 
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.setup.DetectConfigurationFragment: void onLoadFinished(androidx.loader.content.Loader,com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.setup.DetectConfigurationFragment: void onLoadFinished(androidx.loader.content.Loader,com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration)&gt;,void onLoadFinished(androidx.loader.content.Loader,com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration)"/>  
      <source name="com.etesync.syncadapter.ui.setup.DetectConfigurationFragment"/>  
      <destinition name="com.etesync.syncadapter.ui.setup.EncryptionDetailsFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.setup.DetectConfigurationFragment: void onLoadFinished(androidx.loader.content.Loader,com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration)&gt;"/>  
        <node method="DetectConfigurationFragment onLoadFinished" type="ReceiveFromRetValue" unit="$r4 = virtualinvoke r0.&lt;com.etesync.syncadapter.ui.setup.DetectConfigurationFragment: androidx.fragment.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="DetectConfigurationFragment onLoadFinished" type="beginTransaction" unit="$r5 = virtualinvoke $r4.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DetectConfigurationFragment onLoadFinished" type="replaceFunction" unit="$r5 = virtualinvoke $r5.&lt;androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction replace(int,androidx.fragment.app.Fragment)&gt;(16908290, $r9)"/>  
        <node method="DetectConfigurationFragment onLoadFinished" type="addToBackStack" unit="$r5 = virtualinvoke $r5.&lt;androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(null)"/>  
        <node method="DetectConfigurationFragment onLoadFinished" type="commit" unit="virtualinvoke $r5.&lt;androidx.fragment.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.setup.DetectConfigurationFragment: void onLoadFinished(androidx.loader.content.Loader,com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.setup.DetectConfigurationFragment: void onLoadFinished(androidx.loader.content.Loader,com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration)&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;,void dismissInternal(boolean)"/>  
      <source name="com.etesync.syncadapter.ui.setup.DetectConfigurationFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.setup.DetectConfigurationFragment: void onLoadFinished(androidx.loader.content.Loader,com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration)&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;"/>  
        <node method="DialogFragment dismissInternal" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke r0.&lt;androidx.fragment.app.DialogFragment: androidx.fragment.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="commit" unit="virtualinvoke $r3.&lt;androidx.fragment.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.setup.DetectConfigurationFragment: void onLoadFinished(androidx.loader.content.Loader,com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.setup.DetectConfigurationFragment: void onLoadFinished(androidx.loader.content.Loader,com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration)&gt;,void onLoadFinished(androidx.loader.content.Loader,com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration)"/>  
      <source name="com.etesync.syncadapter.ui.setup.DetectConfigurationFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.setup.DetectConfigurationFragment: void onLoadFinished(androidx.loader.content.Loader,com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration)&gt;"/>  
        <node method="DetectConfigurationFragment onLoadFinished" type="ReceiveFromRetValue" unit="$r4 = virtualinvoke r0.&lt;com.etesync.syncadapter.ui.setup.DetectConfigurationFragment: androidx.fragment.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="DetectConfigurationFragment onLoadFinished" type="beginTransaction" unit="$r5 = virtualinvoke $r4.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DetectConfigurationFragment onLoadFinished" type="addFunction" unit="$r5 = virtualinvoke $r5.&lt;androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction add(androidx.fragment.app.Fragment,java.lang.String)&gt;($r9, null)"/>  
        <node method="DetectConfigurationFragment onLoadFinished" type="commit" unit="virtualinvoke $r5.&lt;androidx.fragment.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.setup.DetectConfigurationFragment: void onLoadFinished(androidx.loader.content.Loader,com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.setup.DetectConfigurationFragment: void onLoadFinished(androidx.loader.content.Loader,com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration)&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;,void dismissInternal(boolean)"/>  
      <source name="com.etesync.syncadapter.ui.setup.DetectConfigurationFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.setup.DetectConfigurationFragment: void onLoadFinished(androidx.loader.content.Loader,com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration)&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;"/>  
        <node method="DialogFragment dismissInternal" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke r0.&lt;androidx.fragment.app.DialogFragment: androidx.fragment.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="commit" unit="virtualinvoke $r3.&lt;androidx.fragment.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.etesync.syncadapter.ui.setup.DetectConfigurationFragment"> 
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.setup.DetectConfigurationFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.setup.DetectConfigurationFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.ui.setup.DetectConfigurationFragment: void onLoadFinished(androidx.loader.content.Loader,com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration)&gt;,void onLoadFinished(androidx.loader.content.Loader,com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration)"/>  
      <source name="com.etesync.syncadapter.ui.setup.DetectConfigurationFragment"/>  
      <destinition name="com.etesync.syncadapter.ui.setup.EncryptionDetailsFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.setup.DetectConfigurationFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.setup.DetectConfigurationFragment: void onLoadFinished(androidx.loader.content.Loader,com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration)&gt;"/>  
        <node method="DetectConfigurationFragment onLoadFinished" type="ReceiveFromRetValue" unit="$r4 = virtualinvoke r0.&lt;com.etesync.syncadapter.ui.setup.DetectConfigurationFragment: androidx.fragment.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="DetectConfigurationFragment onLoadFinished" type="beginTransaction" unit="$r5 = virtualinvoke $r4.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DetectConfigurationFragment onLoadFinished" type="replaceFunction" unit="$r5 = virtualinvoke $r5.&lt;androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction replace(int,androidx.fragment.app.Fragment)&gt;(16908290, $r9)"/>  
        <node method="DetectConfigurationFragment onLoadFinished" type="addToBackStack" unit="$r5 = virtualinvoke $r5.&lt;androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(null)"/>  
        <node method="DetectConfigurationFragment onLoadFinished" type="commit" unit="virtualinvoke $r5.&lt;androidx.fragment.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.setup.DetectConfigurationFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.setup.DetectConfigurationFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.ui.setup.DetectConfigurationFragment: void onLoadFinished(androidx.loader.content.Loader,com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration)&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;,void dismissInternal(boolean)"/>  
      <source name="com.etesync.syncadapter.ui.setup.DetectConfigurationFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.setup.DetectConfigurationFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.setup.DetectConfigurationFragment: void onLoadFinished(androidx.loader.content.Loader,com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration)&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;"/>  
        <node method="DialogFragment dismissInternal" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke r0.&lt;androidx.fragment.app.DialogFragment: androidx.fragment.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="commit" unit="virtualinvoke $r3.&lt;androidx.fragment.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.setup.DetectConfigurationFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.setup.DetectConfigurationFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.ui.setup.DetectConfigurationFragment: void onLoadFinished(androidx.loader.content.Loader,com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration)&gt;,void onLoadFinished(androidx.loader.content.Loader,com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration)"/>  
      <source name="com.etesync.syncadapter.ui.setup.DetectConfigurationFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.setup.DetectConfigurationFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.setup.DetectConfigurationFragment: void onLoadFinished(androidx.loader.content.Loader,com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration)&gt;"/>  
        <node method="DetectConfigurationFragment onLoadFinished" type="ReceiveFromRetValue" unit="$r4 = virtualinvoke r0.&lt;com.etesync.syncadapter.ui.setup.DetectConfigurationFragment: androidx.fragment.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="DetectConfigurationFragment onLoadFinished" type="beginTransaction" unit="$r5 = virtualinvoke $r4.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DetectConfigurationFragment onLoadFinished" type="addFunction" unit="$r5 = virtualinvoke $r5.&lt;androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction add(androidx.fragment.app.Fragment,java.lang.String)&gt;($r9, null)"/>  
        <node method="DetectConfigurationFragment onLoadFinished" type="commit" unit="virtualinvoke $r5.&lt;androidx.fragment.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.setup.DetectConfigurationFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.setup.DetectConfigurationFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.ui.setup.DetectConfigurationFragment: void onLoadFinished(androidx.loader.content.Loader,com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration)&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;,void dismissInternal(boolean)"/>  
      <source name="com.etesync.syncadapter.ui.setup.DetectConfigurationFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.setup.DetectConfigurationFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.setup.DetectConfigurationFragment: void onLoadFinished(androidx.loader.content.Loader,com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration)&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;"/>  
        <node method="DialogFragment dismissInternal" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke r0.&lt;androidx.fragment.app.DialogFragment: androidx.fragment.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="commit" unit="virtualinvoke $r3.&lt;androidx.fragment.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.etesync.syncadapter.ui.CreateCollectionFragment"> 
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.CreateCollectionFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Exception)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.CreateCollectionFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Exception)&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;,void dismissInternal(boolean)"/>  
      <source name="com.etesync.syncadapter.ui.CreateCollectionFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.CreateCollectionFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Exception)&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;"/>  
        <node method="DialogFragment dismissInternal" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke r0.&lt;androidx.fragment.app.DialogFragment: androidx.fragment.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="commit" unit="virtualinvoke $r3.&lt;androidx.fragment.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.CreateCollectionFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Exception)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.CreateCollectionFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Exception)&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;,void dismissInternal(boolean)"/>  
      <source name="com.etesync.syncadapter.ui.CreateCollectionFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.CreateCollectionFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Exception)&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;"/>  
        <node method="DialogFragment dismissInternal" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke r0.&lt;androidx.fragment.app.DialogFragment: androidx.fragment.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="commit" unit="virtualinvoke $r3.&lt;androidx.fragment.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.CreateCollectionFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Exception)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.CreateCollectionFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Exception)&gt;,void onLoadFinished(androidx.loader.content.Loader,java.lang.Exception)"/>  
      <source name="com.etesync.syncadapter.ui.CreateCollectionFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.CreateCollectionFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Exception)&gt;"/>  
        <node method="CreateCollectionFragment onLoadFinished" type="ReceiveFromRetValue" unit="$r5 = virtualinvoke r0.&lt;com.etesync.syncadapter.ui.CreateCollectionFragment: androidx.fragment.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="CreateCollectionFragment onLoadFinished" type="beginTransaction" unit="$r6 = virtualinvoke $r5.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="CreateCollectionFragment onLoadFinished" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction add(androidx.fragment.app.Fragment,java.lang.String)&gt;($r9, null)"/>  
        <node method="CreateCollectionFragment onLoadFinished" type="commit" unit="virtualinvoke $r6.&lt;androidx.fragment.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.etesync.syncadapter.ui.CreateCollectionFragment"> 
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.CreateCollectionFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.CreateCollectionFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.ui.CreateCollectionFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Exception)&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;,void dismissInternal(boolean)"/>  
      <source name="com.etesync.syncadapter.ui.CreateCollectionFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.CreateCollectionFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.CreateCollectionFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Exception)&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;"/>  
        <node method="DialogFragment dismissInternal" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke r0.&lt;androidx.fragment.app.DialogFragment: androidx.fragment.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="commit" unit="virtualinvoke $r3.&lt;androidx.fragment.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.CreateCollectionFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.CreateCollectionFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.ui.CreateCollectionFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Exception)&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;,void dismissInternal(boolean)"/>  
      <source name="com.etesync.syncadapter.ui.CreateCollectionFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.CreateCollectionFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.CreateCollectionFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Exception)&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;"/>  
        <node method="DialogFragment dismissInternal" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke r0.&lt;androidx.fragment.app.DialogFragment: androidx.fragment.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="commit" unit="virtualinvoke $r3.&lt;androidx.fragment.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.CreateCollectionFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.CreateCollectionFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.ui.CreateCollectionFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Exception)&gt;,void onLoadFinished(androidx.loader.content.Loader,java.lang.Exception)"/>  
      <source name="com.etesync.syncadapter.ui.CreateCollectionFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.CreateCollectionFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.CreateCollectionFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Exception)&gt;"/>  
        <node method="CreateCollectionFragment onLoadFinished" type="ReceiveFromRetValue" unit="$r5 = virtualinvoke r0.&lt;com.etesync.syncadapter.ui.CreateCollectionFragment: androidx.fragment.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="CreateCollectionFragment onLoadFinished" type="beginTransaction" unit="$r6 = virtualinvoke $r5.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="CreateCollectionFragment onLoadFinished" type="addFunction" unit="$r6 = virtualinvoke $r6.&lt;androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction add(androidx.fragment.app.Fragment,java.lang.String)&gt;($r9, null)"/>  
        <node method="CreateCollectionFragment onLoadFinished" type="commit" unit="virtualinvoke $r6.&lt;androidx.fragment.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="androidx.fragment.app.DialogFragment"> 
    <FragmentSummary> 
      <method value="&lt;androidx.fragment.app.DialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;androidx.fragment.app.DialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)&gt;,void show(androidx.fragment.app.FragmentManager,java.lang.String)"/>  
      <source name="androidx.fragment.app.DialogFragment"/>  
      <nodes> 
        <node method="&lt;androidx.fragment.app.DialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)&gt;"/>  
        <node method="DialogFragment show" type="ReceiveFromParatMethod" unit="$r3 := @parameter0: androidx.fragment.app.FragmentManager"/>  
        <node method="DialogFragment show" type="beginTransaction" unit="$r2 = virtualinvoke $r3.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment show" type="addFunction" unit="virtualinvoke $r2.&lt;androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction add(androidx.fragment.app.Fragment,java.lang.String)&gt;(r0, $r1)"/>  
        <node method="DialogFragment show" type="commit" unit="virtualinvoke $r2.&lt;androidx.fragment.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.etesync.syncadapter.ui.setup.SetupEncryptionFragment$SetupEncryptionLoader"> 
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.setup.SetupEncryptionFragment$SetupEncryptionLoader: void onPostExecute(com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.setup.SetupEncryptionFragment$SetupEncryptionLoader: void onPostExecute(com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration)&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;,void dismissInternal(boolean)"/>  
      <source name="com.etesync.syncadapter.ui.setup.SetupEncryptionFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.setup.SetupEncryptionFragment$SetupEncryptionLoader: void onPostExecute(com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration)&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;"/>  
        <node method="DialogFragment dismissInternal" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke r0.&lt;androidx.fragment.app.DialogFragment: androidx.fragment.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="commit" unit="virtualinvoke $r3.&lt;androidx.fragment.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.setup.SetupEncryptionFragment$SetupEncryptionLoader: void onPostExecute(com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.setup.SetupEncryptionFragment$SetupEncryptionLoader: void onPostExecute(com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration)&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;,void dismissInternal(boolean)"/>  
      <source name="com.etesync.syncadapter.ui.setup.SetupEncryptionFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.setup.SetupEncryptionFragment$SetupEncryptionLoader: void onPostExecute(com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration)&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;"/>  
        <node method="DialogFragment dismissInternal" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke r0.&lt;androidx.fragment.app.DialogFragment: androidx.fragment.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="commit" unit="virtualinvoke $r3.&lt;androidx.fragment.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.etesync.syncadapter.ui.setup.SetupEncryptionFragment$SetupEncryptionLoader"> 
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.setup.SetupEncryptionFragment$SetupEncryptionLoader: void onPostExecute(java.lang.Object)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.setup.SetupEncryptionFragment$SetupEncryptionLoader: void onPostExecute(java.lang.Object)&gt;,&lt;com.etesync.syncadapter.ui.setup.SetupEncryptionFragment$SetupEncryptionLoader: void onPostExecute(com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration)&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;,void dismissInternal(boolean)"/>  
      <source name="com.etesync.syncadapter.ui.setup.SetupEncryptionFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.setup.SetupEncryptionFragment$SetupEncryptionLoader: void onPostExecute(java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.setup.SetupEncryptionFragment$SetupEncryptionLoader: void onPostExecute(com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration)&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;"/>  
        <node method="DialogFragment dismissInternal" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke r0.&lt;androidx.fragment.app.DialogFragment: androidx.fragment.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="commit" unit="virtualinvoke $r3.&lt;androidx.fragment.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.setup.SetupEncryptionFragment$SetupEncryptionLoader: void onPostExecute(java.lang.Object)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.setup.SetupEncryptionFragment$SetupEncryptionLoader: void onPostExecute(java.lang.Object)&gt;,&lt;com.etesync.syncadapter.ui.setup.SetupEncryptionFragment$SetupEncryptionLoader: void onPostExecute(com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration)&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;,void dismissInternal(boolean)"/>  
      <source name="com.etesync.syncadapter.ui.setup.SetupEncryptionFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.setup.SetupEncryptionFragment$SetupEncryptionLoader: void onPostExecute(java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.setup.SetupEncryptionFragment$SetupEncryptionLoader: void onPostExecute(com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration)&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;"/>  
        <node method="DialogFragment dismissInternal" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke r0.&lt;androidx.fragment.app.DialogFragment: androidx.fragment.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="commit" unit="virtualinvoke $r3.&lt;androidx.fragment.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.etesync.syncadapter.ui.setup.SetupUserInfoFragment$SetupUserInfo"> 
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.setup.SetupUserInfoFragment$SetupUserInfo: void onPostExecute(com.etesync.syncadapter.ui.setup.SetupUserInfoFragment$SetupUserInfo$SetupUserInfoResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.setup.SetupUserInfoFragment$SetupUserInfo: void onPostExecute(com.etesync.syncadapter.ui.setup.SetupUserInfoFragment$SetupUserInfo$SetupUserInfoResult)&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;,void dismissInternal(boolean)"/>  
      <source name="com.etesync.syncadapter.ui.setup.SetupUserInfoFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.setup.SetupUserInfoFragment$SetupUserInfo: void onPostExecute(com.etesync.syncadapter.ui.setup.SetupUserInfoFragment$SetupUserInfo$SetupUserInfoResult)&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;"/>  
        <node method="DialogFragment dismissInternal" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke r0.&lt;androidx.fragment.app.DialogFragment: androidx.fragment.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="commit" unit="virtualinvoke $r3.&lt;androidx.fragment.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.setup.SetupUserInfoFragment$SetupUserInfo: void onPostExecute(com.etesync.syncadapter.ui.setup.SetupUserInfoFragment$SetupUserInfo$SetupUserInfoResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.setup.SetupUserInfoFragment$SetupUserInfo: void onPostExecute(com.etesync.syncadapter.ui.setup.SetupUserInfoFragment$SetupUserInfo$SetupUserInfoResult)&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;,void dismissInternal(boolean)"/>  
      <source name="com.etesync.syncadapter.ui.setup.SetupUserInfoFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.setup.SetupUserInfoFragment$SetupUserInfo: void onPostExecute(com.etesync.syncadapter.ui.setup.SetupUserInfoFragment$SetupUserInfo$SetupUserInfoResult)&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;"/>  
        <node method="DialogFragment dismissInternal" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke r0.&lt;androidx.fragment.app.DialogFragment: androidx.fragment.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="commit" unit="virtualinvoke $r3.&lt;androidx.fragment.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.etesync.syncadapter.ui.setup.SetupUserInfoFragment$SetupUserInfo"> 
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.setup.SetupUserInfoFragment$SetupUserInfo: void onPostExecute(java.lang.Object)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.setup.SetupUserInfoFragment$SetupUserInfo: void onPostExecute(java.lang.Object)&gt;,&lt;com.etesync.syncadapter.ui.setup.SetupUserInfoFragment$SetupUserInfo: void onPostExecute(com.etesync.syncadapter.ui.setup.SetupUserInfoFragment$SetupUserInfo$SetupUserInfoResult)&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;,void dismissInternal(boolean)"/>  
      <source name="com.etesync.syncadapter.ui.setup.SetupUserInfoFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.setup.SetupUserInfoFragment$SetupUserInfo: void onPostExecute(java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.setup.SetupUserInfoFragment$SetupUserInfo: void onPostExecute(com.etesync.syncadapter.ui.setup.SetupUserInfoFragment$SetupUserInfo$SetupUserInfoResult)&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;"/>  
        <node method="DialogFragment dismissInternal" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke r0.&lt;androidx.fragment.app.DialogFragment: androidx.fragment.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="commit" unit="virtualinvoke $r3.&lt;androidx.fragment.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.setup.SetupUserInfoFragment$SetupUserInfo: void onPostExecute(java.lang.Object)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.setup.SetupUserInfoFragment$SetupUserInfo: void onPostExecute(java.lang.Object)&gt;,&lt;com.etesync.syncadapter.ui.setup.SetupUserInfoFragment$SetupUserInfo: void onPostExecute(com.etesync.syncadapter.ui.setup.SetupUserInfoFragment$SetupUserInfo$SetupUserInfoResult)&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;,void dismissInternal(boolean)"/>  
      <source name="com.etesync.syncadapter.ui.setup.SetupUserInfoFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.setup.SetupUserInfoFragment$SetupUserInfo: void onPostExecute(java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.setup.SetupUserInfoFragment$SetupUserInfo: void onPostExecute(com.etesync.syncadapter.ui.setup.SetupUserInfoFragment$SetupUserInfo$SetupUserInfoResult)&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;"/>  
        <node method="DialogFragment dismissInternal" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke r0.&lt;androidx.fragment.app.DialogFragment: androidx.fragment.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="commit" unit="virtualinvoke $r3.&lt;androidx.fragment.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.etesync.syncadapter.ui.setup.LoginCredentialsChangeFragment"> 
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.setup.LoginCredentialsChangeFragment: void onLoadFinished(androidx.loader.content.Loader,com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.setup.LoginCredentialsChangeFragment: void onLoadFinished(androidx.loader.content.Loader,com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration)&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;,void dismissInternal(boolean)"/>  
      <source name="com.etesync.syncadapter.ui.setup.LoginCredentialsChangeFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.setup.LoginCredentialsChangeFragment: void onLoadFinished(androidx.loader.content.Loader,com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration)&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;"/>  
        <node method="DialogFragment dismissInternal" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke r0.&lt;androidx.fragment.app.DialogFragment: androidx.fragment.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="commit" unit="virtualinvoke $r3.&lt;androidx.fragment.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.setup.LoginCredentialsChangeFragment: void onLoadFinished(androidx.loader.content.Loader,com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.setup.LoginCredentialsChangeFragment: void onLoadFinished(androidx.loader.content.Loader,com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration)&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;,void dismissInternal(boolean)"/>  
      <source name="com.etesync.syncadapter.ui.setup.LoginCredentialsChangeFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.setup.LoginCredentialsChangeFragment: void onLoadFinished(androidx.loader.content.Loader,com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration)&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;"/>  
        <node method="DialogFragment dismissInternal" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke r0.&lt;androidx.fragment.app.DialogFragment: androidx.fragment.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="commit" unit="virtualinvoke $r3.&lt;androidx.fragment.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.setup.LoginCredentialsChangeFragment: void onLoadFinished(androidx.loader.content.Loader,com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.setup.LoginCredentialsChangeFragment: void onLoadFinished(androidx.loader.content.Loader,com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration)&gt;,void onLoadFinished(androidx.loader.content.Loader,com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration)"/>  
      <source name="com.etesync.syncadapter.ui.setup.LoginCredentialsChangeFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.setup.LoginCredentialsChangeFragment: void onLoadFinished(androidx.loader.content.Loader,com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration)&gt;"/>  
        <node method="LoginCredentialsChangeFragment onLoadFinished" type="ReceiveFromRetValue" unit="$r3 = virtualinvoke r0.&lt;com.etesync.syncadapter.ui.setup.LoginCredentialsChangeFragment: androidx.fragment.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="LoginCredentialsChangeFragment onLoadFinished" type="beginTransaction" unit="$r4 = virtualinvoke $r3.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="LoginCredentialsChangeFragment onLoadFinished" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction add(androidx.fragment.app.Fragment,java.lang.String)&gt;($r8, null)"/>  
        <node method="LoginCredentialsChangeFragment onLoadFinished" type="commit" unit="virtualinvoke $r4.&lt;androidx.fragment.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.etesync.syncadapter.ui.setup.LoginCredentialsChangeFragment"> 
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.setup.LoginCredentialsChangeFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.setup.LoginCredentialsChangeFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.ui.setup.LoginCredentialsChangeFragment: void onLoadFinished(androidx.loader.content.Loader,com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration)&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;,void dismissInternal(boolean)"/>  
      <source name="com.etesync.syncadapter.ui.setup.LoginCredentialsChangeFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.setup.LoginCredentialsChangeFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.setup.LoginCredentialsChangeFragment: void onLoadFinished(androidx.loader.content.Loader,com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration)&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;"/>  
        <node method="DialogFragment dismissInternal" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke r0.&lt;androidx.fragment.app.DialogFragment: androidx.fragment.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="commit" unit="virtualinvoke $r3.&lt;androidx.fragment.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.setup.LoginCredentialsChangeFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.setup.LoginCredentialsChangeFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.ui.setup.LoginCredentialsChangeFragment: void onLoadFinished(androidx.loader.content.Loader,com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration)&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;,void dismissInternal(boolean)"/>  
      <source name="com.etesync.syncadapter.ui.setup.LoginCredentialsChangeFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.setup.LoginCredentialsChangeFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.setup.LoginCredentialsChangeFragment: void onLoadFinished(androidx.loader.content.Loader,com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration)&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;"/>  
        <node method="DialogFragment dismissInternal" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke r0.&lt;androidx.fragment.app.DialogFragment: androidx.fragment.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="commit" unit="virtualinvoke $r3.&lt;androidx.fragment.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.setup.LoginCredentialsChangeFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.setup.LoginCredentialsChangeFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.ui.setup.LoginCredentialsChangeFragment: void onLoadFinished(androidx.loader.content.Loader,com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration)&gt;,void onLoadFinished(androidx.loader.content.Loader,com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration)"/>  
      <source name="com.etesync.syncadapter.ui.setup.LoginCredentialsChangeFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.setup.LoginCredentialsChangeFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.setup.LoginCredentialsChangeFragment: void onLoadFinished(androidx.loader.content.Loader,com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration)&gt;"/>  
        <node method="LoginCredentialsChangeFragment onLoadFinished" type="ReceiveFromRetValue" unit="$r3 = virtualinvoke r0.&lt;com.etesync.syncadapter.ui.setup.LoginCredentialsChangeFragment: androidx.fragment.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="LoginCredentialsChangeFragment onLoadFinished" type="beginTransaction" unit="$r4 = virtualinvoke $r3.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="LoginCredentialsChangeFragment onLoadFinished" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction add(androidx.fragment.app.Fragment,java.lang.String)&gt;($r8, null)"/>  
        <node method="LoginCredentialsChangeFragment onLoadFinished" type="commit" unit="virtualinvoke $r4.&lt;androidx.fragment.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.etesync.syncadapter.ui.importlocal.ImportFragment"> 
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void loadFinished(com.etesync.syncadapter.ui.importlocal.ResultFragment$ImportResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void loadFinished(com.etesync.syncadapter.ui.importlocal.ResultFragment$ImportResult)&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;,void dismissInternal(boolean)"/>  
      <source name="com.etesync.syncadapter.ui.importlocal.ImportFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void loadFinished(com.etesync.syncadapter.ui.importlocal.ResultFragment$ImportResult)&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;"/>  
        <node method="DialogFragment dismissInternal" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke r0.&lt;androidx.fragment.app.DialogFragment: androidx.fragment.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="commit" unit="virtualinvoke $r3.&lt;androidx.fragment.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void loadFinished(com.etesync.syncadapter.ui.importlocal.ResultFragment$ImportResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void loadFinished(com.etesync.syncadapter.ui.importlocal.ResultFragment$ImportResult)&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;,void dismissInternal(boolean)"/>  
      <source name="com.etesync.syncadapter.ui.importlocal.ImportFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void loadFinished(com.etesync.syncadapter.ui.importlocal.ResultFragment$ImportResult)&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;"/>  
        <node method="DialogFragment dismissInternal" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke r0.&lt;androidx.fragment.app.DialogFragment: androidx.fragment.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="commit" unit="virtualinvoke $r3.&lt;androidx.fragment.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.etesync.syncadapter.ui.importlocal.ImportFragment$ImportEntriesLoader$run$1"> 
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment$ImportEntriesLoader$run$1: void run()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment$ImportEntriesLoader$run$1: void run()&gt;,&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void loadFinished(com.etesync.syncadapter.ui.importlocal.ResultFragment$ImportResult)&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;,void dismissInternal(boolean)"/>  
      <source name="com.etesync.syncadapter.ui.importlocal.ImportFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment$ImportEntriesLoader$run$1: void run()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void loadFinished(com.etesync.syncadapter.ui.importlocal.ResultFragment$ImportResult)&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;"/>  
        <node method="DialogFragment dismissInternal" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke r0.&lt;androidx.fragment.app.DialogFragment: androidx.fragment.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="commit" unit="virtualinvoke $r3.&lt;androidx.fragment.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment$ImportEntriesLoader$run$1: void run()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment$ImportEntriesLoader$run$1: void run()&gt;,&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void loadFinished(com.etesync.syncadapter.ui.importlocal.ResultFragment$ImportResult)&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;,void dismissInternal(boolean)"/>  
      <source name="com.etesync.syncadapter.ui.importlocal.ImportFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment$ImportEntriesLoader$run$1: void run()&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void loadFinished(com.etesync.syncadapter.ui.importlocal.ResultFragment$ImportResult)&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;"/>  
        <node method="DialogFragment dismissInternal" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke r0.&lt;androidx.fragment.app.DialogFragment: androidx.fragment.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="commit" unit="virtualinvoke $r3.&lt;androidx.fragment.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.etesync.syncadapter.ui.DeleteCollectionFragment"> 
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.DeleteCollectionFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Exception)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.DeleteCollectionFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Exception)&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;,void dismissInternal(boolean)"/>  
      <source name="com.etesync.syncadapter.ui.DeleteCollectionFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.DeleteCollectionFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Exception)&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;"/>  
        <node method="DialogFragment dismissInternal" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke r0.&lt;androidx.fragment.app.DialogFragment: androidx.fragment.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="commit" unit="virtualinvoke $r3.&lt;androidx.fragment.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.DeleteCollectionFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Exception)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.DeleteCollectionFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Exception)&gt;,void onLoadFinished(androidx.loader.content.Loader,java.lang.Exception)"/>  
      <source name="com.etesync.syncadapter.ui.DeleteCollectionFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.DeleteCollectionFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Exception)&gt;"/>  
        <node method="DeleteCollectionFragment onLoadFinished" type="ReceiveFromRetValue" unit="$r4 = virtualinvoke r0.&lt;com.etesync.syncadapter.ui.DeleteCollectionFragment: androidx.fragment.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="DeleteCollectionFragment onLoadFinished" type="beginTransaction" unit="$r5 = virtualinvoke $r4.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DeleteCollectionFragment onLoadFinished" type="addFunction" unit="$r5 = virtualinvoke $r5.&lt;androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction add(androidx.fragment.app.Fragment,java.lang.String)&gt;($r8, null)"/>  
        <node method="DeleteCollectionFragment onLoadFinished" type="commit" unit="virtualinvoke $r5.&lt;androidx.fragment.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.DeleteCollectionFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Exception)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.DeleteCollectionFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Exception)&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;,void dismissInternal(boolean)"/>  
      <source name="com.etesync.syncadapter.ui.DeleteCollectionFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.DeleteCollectionFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Exception)&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;"/>  
        <node method="DialogFragment dismissInternal" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke r0.&lt;androidx.fragment.app.DialogFragment: androidx.fragment.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="commit" unit="virtualinvoke $r3.&lt;androidx.fragment.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.etesync.syncadapter.ui.DeleteCollectionFragment"> 
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.DeleteCollectionFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.DeleteCollectionFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.ui.DeleteCollectionFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Exception)&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;,void dismissInternal(boolean)"/>  
      <source name="com.etesync.syncadapter.ui.DeleteCollectionFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.DeleteCollectionFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.DeleteCollectionFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Exception)&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;"/>  
        <node method="DialogFragment dismissInternal" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke r0.&lt;androidx.fragment.app.DialogFragment: androidx.fragment.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="commit" unit="virtualinvoke $r3.&lt;androidx.fragment.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.DeleteCollectionFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.DeleteCollectionFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.ui.DeleteCollectionFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Exception)&gt;,void onLoadFinished(androidx.loader.content.Loader,java.lang.Exception)"/>  
      <source name="com.etesync.syncadapter.ui.DeleteCollectionFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.DeleteCollectionFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.DeleteCollectionFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Exception)&gt;"/>  
        <node method="DeleteCollectionFragment onLoadFinished" type="ReceiveFromRetValue" unit="$r4 = virtualinvoke r0.&lt;com.etesync.syncadapter.ui.DeleteCollectionFragment: androidx.fragment.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="DeleteCollectionFragment onLoadFinished" type="beginTransaction" unit="$r5 = virtualinvoke $r4.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DeleteCollectionFragment onLoadFinished" type="addFunction" unit="$r5 = virtualinvoke $r5.&lt;androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction add(androidx.fragment.app.Fragment,java.lang.String)&gt;($r8, null)"/>  
        <node method="DeleteCollectionFragment onLoadFinished" type="commit" unit="virtualinvoke $r5.&lt;androidx.fragment.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.DeleteCollectionFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.DeleteCollectionFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)&gt;,&lt;com.etesync.syncadapter.ui.DeleteCollectionFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Exception)&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;,void dismissInternal(boolean)"/>  
      <source name="com.etesync.syncadapter.ui.DeleteCollectionFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.DeleteCollectionFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.DeleteCollectionFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Exception)&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;"/>  
        <node method="DialogFragment dismissInternal" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke r0.&lt;androidx.fragment.app.DialogFragment: androidx.fragment.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="commit" unit="virtualinvoke $r3.&lt;androidx.fragment.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.etesync.syncadapter.ui.importlocal.ImportActivity"> 
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.importlocal.ImportActivity: void importAccount()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.importlocal.ImportActivity: void importAccount()&gt;,void importAccount(), &lt;androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()&gt;"/>  
      <source name="com.etesync.syncadapter.ui.importlocal.ImportActivity"/>  
      <destinition name="com.etesync.syncadapter.ui.importlocal.LocalContactImportFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportActivity: void importAccount()&gt;"/>  
        <node method="ImportActivity importAccount" type="ReceiveFromRetValue" unit="$r4 = virtualinvoke r0.&lt;com.etesync.syncadapter.ui.importlocal.ImportActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="FragmentActivity getSupportFragmentManager" type="ReceiveFromRetValue" unit="$r1 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="ImportActivity importAccount" type="beginTransaction" unit="$r5 = virtualinvoke $r4.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="ImportActivity importAccount" type="replaceFunction" unit="$r5 = virtualinvoke $r5.&lt;androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction replace(int,androidx.fragment.app.Fragment)&gt;(16908290, $r9)"/>  
        <node method="ImportActivity importAccount" type="addToBackStack" unit="$r5 = virtualinvoke $r5.&lt;androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction addToBackStack(java.lang.String)&gt;($r11)"/>  
        <node method="ImportActivity importAccount" type="commit" unit="virtualinvoke $r5.&lt;androidx.fragment.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.importlocal.ImportActivity: void importAccount()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.importlocal.ImportActivity: void importAccount()&gt;,void importAccount(), &lt;androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()&gt;"/>  
      <source name="com.etesync.syncadapter.ui.importlocal.ImportActivity"/>  
      <destinition name="com.etesync.syncadapter.ui.importlocal.LocalCalendarImportFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportActivity: void importAccount()&gt;"/>  
        <node method="ImportActivity importAccount" type="ReceiveFromRetValue" unit="$r4 = virtualinvoke r0.&lt;com.etesync.syncadapter.ui.importlocal.ImportActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="FragmentActivity getSupportFragmentManager" type="ReceiveFromRetValue" unit="$r1 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="ImportActivity importAccount" type="beginTransaction" unit="$r5 = virtualinvoke $r4.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="ImportActivity importAccount" type="replaceFunction" unit="$r5 = virtualinvoke $r5.&lt;androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction replace(int,androidx.fragment.app.Fragment)&gt;(16908290, $r9)"/>  
        <node method="ImportActivity importAccount" type="addToBackStack" unit="$r5 = virtualinvoke $r5.&lt;androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction addToBackStack(java.lang.String)&gt;($r11)"/>  
        <node method="ImportActivity importAccount" type="commit" unit="virtualinvoke $r5.&lt;androidx.fragment.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.etesync.syncadapter.ui.DeleteCollectionFragment$ConfirmDeleteCollectionFragment$onCreateDialog$1"> 
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.DeleteCollectionFragment$ConfirmDeleteCollectionFragment$onCreateDialog$1: void onClick(android.content.DialogInterface,int)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.DeleteCollectionFragment$ConfirmDeleteCollectionFragment$onCreateDialog$1: void onClick(android.content.DialogInterface,int)&gt;,void onClick(android.content.DialogInterface,int), &lt;androidx.fragment.app.DialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.DeleteCollectionFragment"/>  
      <destinition name="com.etesync.syncadapter.ui.DeleteCollectionFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.DeleteCollectionFragment$ConfirmDeleteCollectionFragment$onCreateDialog$1: void onClick(android.content.DialogInterface,int)&gt;"/>  
        <node method="DeleteCollectionFragment$ConfirmDeleteCollectionFragment$onCreateDialog$1 onClick" type="ReceiveFromRetValue" unit="$r5 = virtualinvoke $r3.&lt;com.etesync.syncadapter.ui.DeleteCollectionFragment$ConfirmDeleteCollectionFragment: androidx.fragment.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="DeleteCollectionFragment$ConfirmDeleteCollectionFragment$onCreateDialog$1 onClick" type="dialogShow" unit="virtualinvoke $r2.&lt;com.etesync.syncadapter.ui.DeleteCollectionFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)&gt;($r5, null)"/>  
        <node method="DialogFragment show" type="ReceiveFromParatMethod" unit="$r3 := @parameter0: androidx.fragment.app.FragmentManager"/>  
        <node method="DialogFragment show" type="beginTransaction" unit="$r2 = virtualinvoke $r3.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment show" type="addFunction" unit="virtualinvoke $r2.&lt;androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction add(androidx.fragment.app.Fragment,java.lang.String)&gt;(r0, $r1)"/>  
        <node method="DialogFragment show" type="commit" unit="virtualinvoke $r2.&lt;androidx.fragment.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.DeleteCollectionFragment$ConfirmDeleteCollectionFragment$onCreateDialog$1: void onClick(android.content.DialogInterface,int)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.DeleteCollectionFragment$ConfirmDeleteCollectionFragment$onCreateDialog$1: void onClick(android.content.DialogInterface,int)&gt;,&lt;androidx.fragment.app.DialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)&gt;,void show(androidx.fragment.app.FragmentManager,java.lang.String)"/>  
      <source name="com.etesync.syncadapter.ui.DeleteCollectionFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.DeleteCollectionFragment$ConfirmDeleteCollectionFragment$onCreateDialog$1: void onClick(android.content.DialogInterface,int)&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)&gt;"/>  
        <node method="DialogFragment show" type="ReceiveFromParatMethod" unit="$r3 := @parameter0: androidx.fragment.app.FragmentManager"/>  
        <node method="DialogFragment show" type="beginTransaction" unit="$r2 = virtualinvoke $r3.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment show" type="addFunction" unit="virtualinvoke $r2.&lt;androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction add(androidx.fragment.app.Fragment,java.lang.String)&gt;(r0, $r1)"/>  
        <node method="DialogFragment show" type="commit" unit="virtualinvoke $r2.&lt;androidx.fragment.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.etesync.syncadapter.ui.AccountsActivity"> 
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.AccountsActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.AccountsActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()&gt;"/>  
      <source name="com.etesync.syncadapter.ui.AccountsActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.AccountsActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="AccountsActivity onCreate" type="ReceiveFromRetValue" unit="$r15 = virtualinvoke r0.&lt;com.etesync.syncadapter.ui.AccountsActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="FragmentActivity getSupportFragmentManager" type="ReceiveFromRetValue" unit="$r1 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="AccountsActivity onCreate" type="beginTransaction" unit="$r16 = virtualinvoke $r15.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="AccountsActivity onCreate" type="commit" unit="virtualinvoke $r16.&lt;androidx.fragment.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.AccountsActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.AccountsActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()&gt;"/>  
      <source name="com.etesync.syncadapter.ui.AccountsActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.AccountsActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="AccountsActivity onCreate" type="ReceiveFromRetValue" unit="$r15 = virtualinvoke r0.&lt;com.etesync.syncadapter.ui.AccountsActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="FragmentActivity getSupportFragmentManager" type="ReceiveFromRetValue" unit="$r1 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="AccountsActivity onCreate" type="beginTransaction" unit="$r16 = virtualinvoke $r15.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="AccountsActivity onCreate" type="addFunction" unit="virtualinvoke $r16.&lt;androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction add(androidx.fragment.app.Fragment,java.lang.String)&gt;($r21, null)"/>  
        <node method="AccountsActivity onCreate" type="commit" unit="virtualinvoke $r16.&lt;androidx.fragment.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.AccountsActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.AccountsActivity: void onCreate(android.os.Bundle)&gt;,&lt;androidx.appcompat.app.AppCompatActivity: void onCreate(android.os.Bundle)&gt;,&lt;androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)&gt;,&lt;androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.AccountsActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.AccountsActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;androidx.appcompat.app.AppCompatActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="ReportFragment injectIfNeededIn" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="ReportFragment injectIfNeededIn" type="beginTransaction" unit="$r4 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="ReportFragment injectIfNeededIn" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r0, &quot;androidx.lifecycle.LifecycleDispatcher.report_fragment_tag&quot;)"/>  
        <node method="ReportFragment injectIfNeededIn" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.etesync.syncadapter.ui.importlocal.ImportFragment"> 
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;,void dismissInternal(boolean)"/>  
      <source name="com.etesync.syncadapter.ui.importlocal.ImportFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;"/>  
        <node method="DialogFragment dismissInternal" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke r0.&lt;androidx.fragment.app.DialogFragment: androidx.fragment.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="commit" unit="virtualinvoke $r3.&lt;androidx.fragment.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;,void dismissInternal(boolean)"/>  
      <source name="com.etesync.syncadapter.ui.importlocal.ImportFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;"/>  
        <node method="DialogFragment dismissInternal" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke r0.&lt;androidx.fragment.app.DialogFragment: androidx.fragment.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="commit" unit="virtualinvoke $r3.&lt;androidx.fragment.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.etesync.syncadapter.ui.importlocal.ImportFragment"> 
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void onRequestPermissionsResult(int,java.lang.String[],int[])&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void onRequestPermissionsResult(int,java.lang.String[],int[])&gt;,&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;,void dismissInternal(boolean)"/>  
      <source name="com.etesync.syncadapter.ui.importlocal.ImportFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void onRequestPermissionsResult(int,java.lang.String[],int[])&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;"/>  
        <node method="DialogFragment dismissInternal" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke r0.&lt;androidx.fragment.app.DialogFragment: androidx.fragment.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="commit" unit="virtualinvoke $r3.&lt;androidx.fragment.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void onRequestPermissionsResult(int,java.lang.String[],int[])&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void onRequestPermissionsResult(int,java.lang.String[],int[])&gt;,&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;,void dismissInternal(boolean)"/>  
      <source name="com.etesync.syncadapter.ui.importlocal.ImportFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void onRequestPermissionsResult(int,java.lang.String[],int[])&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;"/>  
        <node method="DialogFragment dismissInternal" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke r0.&lt;androidx.fragment.app.DialogFragment: androidx.fragment.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="commit" unit="virtualinvoke $r3.&lt;androidx.fragment.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.etesync.syncadapter.ui.ChangeEncryptionPasswordActivity"> 
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.ChangeEncryptionPasswordActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.ChangeEncryptionPasswordActivity: void onCreate(android.os.Bundle)&gt;,&lt;androidx.appcompat.app.AppCompatActivity: void onCreate(android.os.Bundle)&gt;,&lt;androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)&gt;,&lt;androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.ChangeEncryptionPasswordActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.ChangeEncryptionPasswordActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;androidx.appcompat.app.AppCompatActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="ReportFragment injectIfNeededIn" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="ReportFragment injectIfNeededIn" type="beginTransaction" unit="$r4 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="ReportFragment injectIfNeededIn" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r0, &quot;androidx.lifecycle.LifecycleDispatcher.report_fragment_tag&quot;)"/>  
        <node method="ReportFragment injectIfNeededIn" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.etesync.syncadapter.ui.CreateCollectionActivity"> 
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.CreateCollectionActivity: void onCreateCollection(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.CreateCollectionActivity: void onCreateCollection(android.view.MenuItem)&gt;,&lt;androidx.fragment.app.DialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)&gt;,void show(androidx.fragment.app.FragmentManager,java.lang.String)"/>  
      <source name="com.etesync.syncadapter.ui.CreateCollectionActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.CreateCollectionActivity: void onCreateCollection(android.view.MenuItem)&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)&gt;"/>  
        <node method="DialogFragment show" type="ReceiveFromParatMethod" unit="$r3 := @parameter0: androidx.fragment.app.FragmentManager"/>  
        <node method="DialogFragment show" type="beginTransaction" unit="$r2 = virtualinvoke $r3.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment show" type="addFunction" unit="virtualinvoke $r2.&lt;androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction add(androidx.fragment.app.Fragment,java.lang.String)&gt;(r0, $r1)"/>  
        <node method="DialogFragment show" type="commit" unit="virtualinvoke $r2.&lt;androidx.fragment.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.CreateCollectionActivity: void onCreateCollection(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.CreateCollectionActivity: void onCreateCollection(android.view.MenuItem)&gt;,void onCreateCollection(android.view.MenuItem), &lt;androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()&gt;, &lt;androidx.fragment.app.DialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.CreateCollectionActivity"/>  
      <destinition name="com.etesync.syncadapter.ui.CreateCollectionFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.CreateCollectionActivity: void onCreateCollection(android.view.MenuItem)&gt;"/>  
        <node method="CreateCollectionActivity onCreateCollection" type="ReceiveFromRetValue" unit="$r17 = virtualinvoke r0.&lt;com.etesync.syncadapter.ui.CreateCollectionActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="FragmentActivity getSupportFragmentManager" type="ReceiveFromRetValue" unit="$r1 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="CreateCollectionActivity onCreateCollection" type="dialogShow" unit="virtualinvoke $r16.&lt;com.etesync.syncadapter.ui.CreateCollectionFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)&gt;($r17, null)"/>  
        <node method="DialogFragment show" type="ReceiveFromParatMethod" unit="$r3 := @parameter0: androidx.fragment.app.FragmentManager"/>  
        <node method="DialogFragment show" type="beginTransaction" unit="$r2 = virtualinvoke $r3.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment show" type="addFunction" unit="virtualinvoke $r2.&lt;androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction add(androidx.fragment.app.Fragment,java.lang.String)&gt;(r0, $r1)"/>  
        <node method="DialogFragment show" type="commit" unit="virtualinvoke $r2.&lt;androidx.fragment.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.etesync.syncadapter.ui.WebViewActivity"> 
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.WebViewActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.WebViewActivity: void onCreate(android.os.Bundle)&gt;,&lt;androidx.appcompat.app.AppCompatActivity: void onCreate(android.os.Bundle)&gt;,&lt;androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)&gt;,&lt;androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.WebViewActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.WebViewActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;androidx.appcompat.app.AppCompatActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="ReportFragment injectIfNeededIn" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="ReportFragment injectIfNeededIn" type="beginTransaction" unit="$r4 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="ReportFragment injectIfNeededIn" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r0, &quot;androidx.lifecycle.LifecycleDispatcher.report_fragment_tag&quot;)"/>  
        <node method="ReportFragment injectIfNeededIn" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.etesync.syncadapter.ui.setup.LoginCredentialsFragment$onCreateView$2"> 
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.setup.LoginCredentialsFragment$onCreateView$2: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.setup.LoginCredentialsFragment$onCreateView$2: void onClick(android.view.View)&gt;,&lt;androidx.fragment.app.DialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)&gt;,void show(androidx.fragment.app.FragmentManager,java.lang.String)"/>  
      <source name="com.etesync.syncadapter.ui.setup.LoginCredentialsFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.setup.LoginCredentialsFragment$onCreateView$2: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)&gt;"/>  
        <node method="DialogFragment show" type="ReceiveFromParatMethod" unit="$r3 := @parameter0: androidx.fragment.app.FragmentManager"/>  
        <node method="DialogFragment show" type="beginTransaction" unit="$r2 = virtualinvoke $r3.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment show" type="addFunction" unit="virtualinvoke $r2.&lt;androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction add(androidx.fragment.app.Fragment,java.lang.String)&gt;(r0, $r1)"/>  
        <node method="DialogFragment show" type="commit" unit="virtualinvoke $r2.&lt;androidx.fragment.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.setup.LoginCredentialsFragment$onCreateView$2: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.setup.LoginCredentialsFragment$onCreateView$2: void onClick(android.view.View)&gt;,void onClick(android.view.View), &lt;androidx.fragment.app.DialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.setup.LoginCredentialsFragment"/>  
      <destinition name="com.etesync.syncadapter.ui.setup.DetectConfigurationFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.setup.LoginCredentialsFragment$onCreateView$2: void onClick(android.view.View)&gt;"/>  
        <node method="LoginCredentialsFragment$onCreateView$2 onClick" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r2.&lt;com.etesync.syncadapter.ui.setup.LoginCredentialsFragment: androidx.fragment.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="LoginCredentialsFragment$onCreateView$2 onClick" type="dialogShow" unit="virtualinvoke $r5.&lt;com.etesync.syncadapter.ui.setup.DetectConfigurationFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)&gt;($r6, null)"/>  
        <node method="DialogFragment show" type="ReceiveFromParatMethod" unit="$r3 := @parameter0: androidx.fragment.app.FragmentManager"/>  
        <node method="DialogFragment show" type="beginTransaction" unit="$r2 = virtualinvoke $r3.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment show" type="addFunction" unit="virtualinvoke $r2.&lt;androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction add(androidx.fragment.app.Fragment,java.lang.String)&gt;(r0, $r1)"/>  
        <node method="DialogFragment show" type="commit" unit="virtualinvoke $r2.&lt;androidx.fragment.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.etesync.syncadapter.ui.importlocal.ImportFragment"> 
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: android.app.Dialog onCreateDialog(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: android.app.Dialog onCreateDialog(android.os.Bundle)&gt;,&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;,void dismissInternal(boolean)"/>  
      <source name="com.etesync.syncadapter.ui.importlocal.ImportFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: android.app.Dialog onCreateDialog(android.os.Bundle)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;"/>  
        <node method="DialogFragment dismissInternal" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke r0.&lt;androidx.fragment.app.DialogFragment: androidx.fragment.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="commit" unit="virtualinvoke $r3.&lt;androidx.fragment.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: android.app.Dialog onCreateDialog(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: android.app.Dialog onCreateDialog(android.os.Bundle)&gt;,&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;,void dismissInternal(boolean)"/>  
      <source name="com.etesync.syncadapter.ui.importlocal.ImportFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: android.app.Dialog onCreateDialog(android.os.Bundle)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void chooseFile()&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;"/>  
        <node method="DialogFragment dismissInternal" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke r0.&lt;androidx.fragment.app.DialogFragment: androidx.fragment.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="commit" unit="virtualinvoke $r3.&lt;androidx.fragment.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.etesync.syncadapter.ui.importlocal.ImportFragment"> 
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void onActivityResult(int,int,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void onActivityResult(int,int,android.content.Intent)&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;,void dismissInternal(boolean)"/>  
      <source name="com.etesync.syncadapter.ui.importlocal.ImportFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void onActivityResult(int,int,android.content.Intent)&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;"/>  
        <node method="DialogFragment dismissInternal" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke r0.&lt;androidx.fragment.app.DialogFragment: androidx.fragment.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="commit" unit="virtualinvoke $r3.&lt;androidx.fragment.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void onActivityResult(int,int,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void onActivityResult(int,int,android.content.Intent)&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;,void dismissInternal(boolean)"/>  
      <source name="com.etesync.syncadapter.ui.importlocal.ImportFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportFragment: void onActivityResult(int,int,android.content.Intent)&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;"/>  
        <node method="DialogFragment dismissInternal" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke r0.&lt;androidx.fragment.app.DialogFragment: androidx.fragment.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="commit" unit="virtualinvoke $r3.&lt;androidx.fragment.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.etesync.syncadapter.ui.JournalItemActivity"> 
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.JournalItemActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.JournalItemActivity: void onCreate(android.os.Bundle)&gt;,&lt;androidx.appcompat.app.AppCompatActivity: void onCreate(android.os.Bundle)&gt;,&lt;androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)&gt;,&lt;androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.JournalItemActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.JournalItemActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;androidx.appcompat.app.AppCompatActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="ReportFragment injectIfNeededIn" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="ReportFragment injectIfNeededIn" type="beginTransaction" unit="$r4 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="ReportFragment injectIfNeededIn" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r0, &quot;androidx.lifecycle.LifecycleDispatcher.report_fragment_tag&quot;)"/>  
        <node method="ReportFragment injectIfNeededIn" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.etesync.syncadapter.ui.importlocal.ImportActivity"> 
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.importlocal.ImportActivity: void importFile()&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.importlocal.ImportActivity: void importFile()&gt;,void importFile(), &lt;androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()&gt;"/>  
      <source name="com.etesync.syncadapter.ui.importlocal.ImportActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportActivity: void importFile()&gt;"/>  
        <node method="ImportActivity importFile" type="ReceiveFromRetValue" unit="$r1 = virtualinvoke r0.&lt;com.etesync.syncadapter.ui.importlocal.ImportActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="FragmentActivity getSupportFragmentManager" type="ReceiveFromRetValue" unit="$r1 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="ImportActivity importFile" type="beginTransaction" unit="$r2 = virtualinvoke $r1.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="ImportActivity importFile" type="addFunction" unit="$r2 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction add(androidx.fragment.app.Fragment,java.lang.String)&gt;($r7, null)"/>  
        <node method="ImportActivity importFile" type="commit" unit="virtualinvoke $r2.&lt;androidx.fragment.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.etesync.syncadapter.ui.PermissionsActivity"> 
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.PermissionsActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.PermissionsActivity: void onCreate(android.os.Bundle)&gt;,&lt;androidx.appcompat.app.AppCompatActivity: void onCreate(android.os.Bundle)&gt;,&lt;androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)&gt;,&lt;androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.PermissionsActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.PermissionsActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;androidx.appcompat.app.AppCompatActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="ReportFragment injectIfNeededIn" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="ReportFragment injectIfNeededIn" type="beginTransaction" unit="$r4 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="ReportFragment injectIfNeededIn" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r0, &quot;androidx.lifecycle.LifecycleDispatcher.report_fragment_tag&quot;)"/>  
        <node method="ReportFragment injectIfNeededIn" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="at.bitfire.cert4android.TrustCertificateActivity"> 
    <FragmentSummary> 
      <method value="&lt;at.bitfire.cert4android.TrustCertificateActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;at.bitfire.cert4android.TrustCertificateActivity: void onCreate(android.os.Bundle)&gt;,&lt;androidx.appcompat.app.AppCompatActivity: void onCreate(android.os.Bundle)&gt;,&lt;androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)&gt;,&lt;androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)&gt;"/>  
      <source name="at.bitfire.cert4android.TrustCertificateActivity"/>  
      <nodes> 
        <node method="&lt;at.bitfire.cert4android.TrustCertificateActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;androidx.appcompat.app.AppCompatActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="ReportFragment injectIfNeededIn" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="ReportFragment injectIfNeededIn" type="beginTransaction" unit="$r4 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="ReportFragment injectIfNeededIn" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r0, &quot;androidx.lifecycle.LifecycleDispatcher.report_fragment_tag&quot;)"/>  
        <node method="ReportFragment injectIfNeededIn" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.etesync.syncadapter.ui.AboutActivity"> 
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.AboutActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.AboutActivity: void onCreate(android.os.Bundle)&gt;,&lt;androidx.appcompat.app.AppCompatActivity: void onCreate(android.os.Bundle)&gt;,&lt;androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)&gt;,&lt;androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.AboutActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.AboutActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;androidx.appcompat.app.AppCompatActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="ReportFragment injectIfNeededIn" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="ReportFragment injectIfNeededIn" type="beginTransaction" unit="$r4 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="ReportFragment injectIfNeededIn" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r0, &quot;androidx.lifecycle.LifecycleDispatcher.report_fragment_tag&quot;)"/>  
        <node method="ReportFragment injectIfNeededIn" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.etesync.syncadapter.ui.AccountSettingsActivity$AccountSettingsFragment$onLoadFinished$2"> 
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.AccountSettingsActivity$AccountSettingsFragment$onLoadFinished$2: boolean onPreferenceChange(androidx.preference.Preference,java.lang.Object)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.AccountSettingsActivity$AccountSettingsFragment$onLoadFinished$2: boolean onPreferenceChange(androidx.preference.Preference,java.lang.Object)&gt;,boolean onPreferenceChange(androidx.preference.Preference,java.lang.Object), &lt;androidx.fragment.app.DialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.AccountSettingsActivity"/>  
      <destinition name="com.etesync.syncadapter.ui.setup.LoginCredentialsChangeFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.AccountSettingsActivity$AccountSettingsFragment$onLoadFinished$2: boolean onPreferenceChange(androidx.preference.Preference,java.lang.Object)&gt;"/>  
        <node method="AccountSettingsActivity$AccountSettingsFragment$onLoadFinished$2 onPreferenceChange" type="ReceiveFromRetValue" unit="$r12 = virtualinvoke $r6.&lt;com.etesync.syncadapter.ui.AccountSettingsActivity$AccountSettingsFragment: androidx.fragment.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="AccountSettingsActivity$AccountSettingsFragment$onLoadFinished$2 onPreferenceChange" type="dialogShow" unit="virtualinvoke $r11.&lt;com.etesync.syncadapter.ui.setup.LoginCredentialsChangeFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)&gt;($r12, null)"/>  
        <node method="DialogFragment show" type="ReceiveFromParatMethod" unit="$r3 := @parameter0: androidx.fragment.app.FragmentManager"/>  
        <node method="DialogFragment show" type="beginTransaction" unit="$r2 = virtualinvoke $r3.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment show" type="addFunction" unit="virtualinvoke $r2.&lt;androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction add(androidx.fragment.app.Fragment,java.lang.String)&gt;(r0, $r1)"/>  
        <node method="DialogFragment show" type="commit" unit="virtualinvoke $r2.&lt;androidx.fragment.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.AccountSettingsActivity$AccountSettingsFragment$onLoadFinished$2: boolean onPreferenceChange(androidx.preference.Preference,java.lang.Object)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.AccountSettingsActivity$AccountSettingsFragment$onLoadFinished$2: boolean onPreferenceChange(androidx.preference.Preference,java.lang.Object)&gt;,&lt;androidx.fragment.app.DialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)&gt;,void show(androidx.fragment.app.FragmentManager,java.lang.String)"/>  
      <source name="com.etesync.syncadapter.ui.AccountSettingsActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.AccountSettingsActivity$AccountSettingsFragment$onLoadFinished$2: boolean onPreferenceChange(androidx.preference.Preference,java.lang.Object)&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)&gt;"/>  
        <node method="DialogFragment show" type="ReceiveFromParatMethod" unit="$r3 := @parameter0: androidx.fragment.app.FragmentManager"/>  
        <node method="DialogFragment show" type="beginTransaction" unit="$r2 = virtualinvoke $r3.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment show" type="addFunction" unit="virtualinvoke $r2.&lt;androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction add(androidx.fragment.app.Fragment,java.lang.String)&gt;(r0, $r1)"/>  
        <node method="DialogFragment show" type="commit" unit="virtualinvoke $r2.&lt;androidx.fragment.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.etesync.syncadapter.ui.setup.SetupUserInfoFragment"> 
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.setup.SetupUserInfoFragment: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.setup.SetupUserInfoFragment: void onCreate(android.os.Bundle)&gt;,&lt;com.etesync.syncadapter.ui.setup.SetupUserInfoFragment$SetupUserInfo: void onPostExecute(java.lang.Object)&gt;,&lt;com.etesync.syncadapter.ui.setup.SetupUserInfoFragment$SetupUserInfo: void onPostExecute(com.etesync.syncadapter.ui.setup.SetupUserInfoFragment$SetupUserInfo$SetupUserInfoResult)&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;,void dismissInternal(boolean)"/>  
      <source name="com.etesync.syncadapter.ui.setup.SetupUserInfoFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.setup.SetupUserInfoFragment: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.setup.SetupUserInfoFragment$SetupUserInfo: void onPostExecute(java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.setup.SetupUserInfoFragment$SetupUserInfo: void onPostExecute(com.etesync.syncadapter.ui.setup.SetupUserInfoFragment$SetupUserInfo$SetupUserInfoResult)&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;"/>  
        <node method="DialogFragment dismissInternal" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke r0.&lt;androidx.fragment.app.DialogFragment: androidx.fragment.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="commit" unit="virtualinvoke $r3.&lt;androidx.fragment.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.setup.SetupUserInfoFragment: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.setup.SetupUserInfoFragment: void onCreate(android.os.Bundle)&gt;,&lt;com.etesync.syncadapter.ui.setup.SetupUserInfoFragment$SetupUserInfo: void onPostExecute(java.lang.Object)&gt;,&lt;com.etesync.syncadapter.ui.setup.SetupUserInfoFragment$SetupUserInfo: void onPostExecute(com.etesync.syncadapter.ui.setup.SetupUserInfoFragment$SetupUserInfo$SetupUserInfoResult)&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;,void dismissInternal(boolean)"/>  
      <source name="com.etesync.syncadapter.ui.setup.SetupUserInfoFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.setup.SetupUserInfoFragment: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.setup.SetupUserInfoFragment$SetupUserInfo: void onPostExecute(java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.setup.SetupUserInfoFragment$SetupUserInfo: void onPostExecute(com.etesync.syncadapter.ui.setup.SetupUserInfoFragment$SetupUserInfo$SetupUserInfoResult)&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;"/>  
        <node method="DialogFragment dismissInternal" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke r0.&lt;androidx.fragment.app.DialogFragment: androidx.fragment.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="commit" unit="virtualinvoke $r3.&lt;androidx.fragment.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.etesync.syncadapter.ui.importlocal.ImportActivity"> 
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.importlocal.ImportActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.importlocal.ImportActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()&gt;"/>  
      <source name="com.etesync.syncadapter.ui.importlocal.ImportActivity"/>  
      <destinition name="com.etesync.syncadapter.ui.importlocal.ImportActivity$SelectImportFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="ImportActivity onCreate" type="ReceiveFromRetValue" unit="$r11 = virtualinvoke r0.&lt;com.etesync.syncadapter.ui.importlocal.ImportActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="FragmentActivity getSupportFragmentManager" type="ReceiveFromRetValue" unit="$r1 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="ImportActivity onCreate" type="beginTransaction" unit="$r12 = virtualinvoke $r11.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="ImportActivity onCreate" type="addFunction" unit="$r12 = virtualinvoke $r12.&lt;androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction add(int,androidx.fragment.app.Fragment)&gt;(16908290, $r14)"/>  
        <node method="ImportActivity onCreate" type="commit" unit="virtualinvoke $r12.&lt;androidx.fragment.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.importlocal.ImportActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.importlocal.ImportActivity: void onCreate(android.os.Bundle)&gt;,&lt;androidx.appcompat.app.AppCompatActivity: void onCreate(android.os.Bundle)&gt;,&lt;androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)&gt;,&lt;androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.importlocal.ImportActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;androidx.appcompat.app.AppCompatActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="ReportFragment injectIfNeededIn" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="ReportFragment injectIfNeededIn" type="beginTransaction" unit="$r4 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="ReportFragment injectIfNeededIn" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r0, &quot;androidx.lifecycle.LifecycleDispatcher.report_fragment_tag&quot;)"/>  
        <node method="ReportFragment injectIfNeededIn" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.etesync.syncadapter.ui.importlocal.ImportActivity"> 
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.importlocal.ImportActivity: void onImportResult(com.etesync.syncadapter.ui.importlocal.ResultFragment$ImportResult)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.importlocal.ImportActivity: void onImportResult(com.etesync.syncadapter.ui.importlocal.ResultFragment$ImportResult)&gt;,void onImportResult(com.etesync.syncadapter.ui.importlocal.ResultFragment$ImportResult), &lt;androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()&gt;"/>  
      <source name="com.etesync.syncadapter.ui.importlocal.ImportActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.importlocal.ImportActivity: void onImportResult(com.etesync.syncadapter.ui.importlocal.ResultFragment$ImportResult)&gt;"/>  
        <node method="ImportActivity onImportResult" type="ReceiveFromRetValue" unit="$r4 = virtualinvoke r0.&lt;com.etesync.syncadapter.ui.importlocal.ImportActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="FragmentActivity getSupportFragmentManager" type="ReceiveFromRetValue" unit="$r1 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="ImportActivity onImportResult" type="beginTransaction" unit="$r5 = virtualinvoke $r4.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="ImportActivity onImportResult" type="addFunction" unit="$r5 = virtualinvoke $r5.&lt;androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction add(androidx.fragment.app.Fragment,java.lang.String)&gt;($r6, &quot;importResult&quot;)"/>  
        <node method="ImportActivity onImportResult" type="commit" unit="virtualinvoke $r5.&lt;androidx.fragment.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.etesync.syncadapter.ui.CollectionMembersActivity$onAddMemberClicked$dialog$1"> 
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.CollectionMembersActivity$onAddMemberClicked$dialog$1: void onClick(android.content.DialogInterface,int)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.CollectionMembersActivity$onAddMemberClicked$dialog$1: void onClick(android.content.DialogInterface,int)&gt;,void onClick(android.content.DialogInterface,int), &lt;androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()&gt;, &lt;androidx.fragment.app.DialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.CollectionMembersActivity"/>  
      <destinition name="com.etesync.syncadapter.ui.AddMemberFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.CollectionMembersActivity$onAddMemberClicked$dialog$1: void onClick(android.content.DialogInterface,int)&gt;"/>  
        <node method="CollectionMembersActivity$onAddMemberClicked$dialog$1 onClick" type="ReceiveFromRetValue" unit="$r12 = virtualinvoke $r6.&lt;com.etesync.syncadapter.ui.CollectionMembersActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="FragmentActivity getSupportFragmentManager" type="ReceiveFromRetValue" unit="$r1 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="CollectionMembersActivity$onAddMemberClicked$dialog$1 onClick" type="dialogShow" unit="virtualinvoke $r11.&lt;com.etesync.syncadapter.ui.AddMemberFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)&gt;($r12, null)"/>  
        <node method="DialogFragment show" type="ReceiveFromParatMethod" unit="$r3 := @parameter0: androidx.fragment.app.FragmentManager"/>  
        <node method="DialogFragment show" type="beginTransaction" unit="$r2 = virtualinvoke $r3.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment show" type="addFunction" unit="virtualinvoke $r2.&lt;androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction add(androidx.fragment.app.Fragment,java.lang.String)&gt;(r0, $r1)"/>  
        <node method="DialogFragment show" type="commit" unit="virtualinvoke $r2.&lt;androidx.fragment.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.CollectionMembersActivity$onAddMemberClicked$dialog$1: void onClick(android.content.DialogInterface,int)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.CollectionMembersActivity$onAddMemberClicked$dialog$1: void onClick(android.content.DialogInterface,int)&gt;,&lt;androidx.fragment.app.DialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)&gt;,void show(androidx.fragment.app.FragmentManager,java.lang.String)"/>  
      <source name="com.etesync.syncadapter.ui.CollectionMembersActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.CollectionMembersActivity$onAddMemberClicked$dialog$1: void onClick(android.content.DialogInterface,int)&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)&gt;"/>  
        <node method="DialogFragment show" type="ReceiveFromParatMethod" unit="$r3 := @parameter0: androidx.fragment.app.FragmentManager"/>  
        <node method="DialogFragment show" type="beginTransaction" unit="$r2 = virtualinvoke $r3.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment show" type="addFunction" unit="virtualinvoke $r2.&lt;androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction add(androidx.fragment.app.Fragment,java.lang.String)&gt;(r0, $r1)"/>  
        <node method="DialogFragment show" type="commit" unit="virtualinvoke $r2.&lt;androidx.fragment.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.etesync.syncadapter.ui.AccountActivity"> 
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.AccountActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.AccountActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()&gt;, &lt;androidx.fragment.app.DialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.AccountActivity"/>  
      <destinition name="com.etesync.syncadapter.ui.setup.SetupUserInfoFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.AccountActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="AccountActivity onCreate" type="ReceiveFromRetValue" unit="$r24 = virtualinvoke r0.&lt;com.etesync.syncadapter.ui.AccountActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="FragmentActivity getSupportFragmentManager" type="ReceiveFromRetValue" unit="$r1 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="AccountActivity onCreate" type="dialogShow" unit="virtualinvoke $r23.&lt;com.etesync.syncadapter.ui.setup.SetupUserInfoFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)&gt;($r24, null)"/>  
        <node method="DialogFragment show" type="ReceiveFromParatMethod" unit="$r3 := @parameter0: androidx.fragment.app.FragmentManager"/>  
        <node method="DialogFragment show" type="beginTransaction" unit="$r2 = virtualinvoke $r3.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment show" type="addFunction" unit="virtualinvoke $r2.&lt;androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction add(androidx.fragment.app.Fragment,java.lang.String)&gt;(r0, $r1)"/>  
        <node method="DialogFragment show" type="commit" unit="virtualinvoke $r2.&lt;androidx.fragment.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.AccountActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.AccountActivity: void onCreate(android.os.Bundle)&gt;,&lt;androidx.appcompat.app.AppCompatActivity: void onCreate(android.os.Bundle)&gt;,&lt;androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)&gt;,&lt;androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.AccountActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.AccountActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;androidx.appcompat.app.AppCompatActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="ReportFragment injectIfNeededIn" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="ReportFragment injectIfNeededIn" type="beginTransaction" unit="$r4 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="ReportFragment injectIfNeededIn" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r0, &quot;androidx.lifecycle.LifecycleDispatcher.report_fragment_tag&quot;)"/>  
        <node method="ReportFragment injectIfNeededIn" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.AccountActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.AccountActivity: void onCreate(android.os.Bundle)&gt;,&lt;androidx.fragment.app.DialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)&gt;,void show(androidx.fragment.app.FragmentManager,java.lang.String)"/>  
      <source name="com.etesync.syncadapter.ui.AccountActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.AccountActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)&gt;"/>  
        <node method="DialogFragment show" type="ReceiveFromParatMethod" unit="$r3 := @parameter0: androidx.fragment.app.FragmentManager"/>  
        <node method="DialogFragment show" type="beginTransaction" unit="$r2 = virtualinvoke $r3.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment show" type="addFunction" unit="virtualinvoke $r2.&lt;androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction add(androidx.fragment.app.Fragment,java.lang.String)&gt;(r0, $r1)"/>  
        <node method="DialogFragment show" type="commit" unit="virtualinvoke $r2.&lt;androidx.fragment.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.etesync.syncadapter.ui.setup.LoginActivity"> 
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.setup.LoginActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.setup.LoginActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()&gt;"/>  
      <source name="com.etesync.syncadapter.ui.setup.LoginActivity"/>  
      <destinition name="com.etesync.syncadapter.ui.setup.LoginCredentialsFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.setup.LoginActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="LoginActivity onCreate" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke r0.&lt;com.etesync.syncadapter.ui.setup.LoginActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="FragmentActivity getSupportFragmentManager" type="ReceiveFromRetValue" unit="$r1 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="LoginActivity onCreate" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="LoginActivity onCreate" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction replace(int,androidx.fragment.app.Fragment)&gt;(16908290, $r5)"/>  
        <node method="LoginActivity onCreate" type="commit" unit="virtualinvoke $r3.&lt;androidx.fragment.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.setup.LoginActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.setup.LoginActivity: void onCreate(android.os.Bundle)&gt;,&lt;androidx.appcompat.app.AppCompatActivity: void onCreate(android.os.Bundle)&gt;,&lt;androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)&gt;,&lt;androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.setup.LoginActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.setup.LoginActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;androidx.appcompat.app.AppCompatActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="ReportFragment injectIfNeededIn" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="ReportFragment injectIfNeededIn" type="beginTransaction" unit="$r4 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="ReportFragment injectIfNeededIn" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r0, &quot;androidx.lifecycle.LifecycleDispatcher.report_fragment_tag&quot;)"/>  
        <node method="ReportFragment injectIfNeededIn" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.etesync.syncadapter.ui.CollectionMembersActivity"> 
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.CollectionMembersActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.CollectionMembersActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()&gt;"/>  
      <source name="com.etesync.syncadapter.ui.CollectionMembersActivity"/>  
      <destinition name="com.etesync.syncadapter.ui.CollectionMembersListFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.CollectionMembersActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="CollectionMembersActivity onCreate" type="ReceiveFromRetValue" unit="$r12 = virtualinvoke r0.&lt;com.etesync.syncadapter.ui.CollectionMembersActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="FragmentActivity getSupportFragmentManager" type="ReceiveFromRetValue" unit="$r1 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="CollectionMembersActivity onCreate" type="beginTransaction" unit="$r13 = virtualinvoke $r12.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="CollectionMembersActivity onCreate" type="addFunction" unit="$r13 = virtualinvoke $r13.&lt;androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction add(int,androidx.fragment.app.Fragment)&gt;(2131296417, $r14)"/>  
        <node method="CollectionMembersActivity onCreate" type="commit" unit="virtualinvoke $r13.&lt;androidx.fragment.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.CollectionMembersActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.CollectionMembersActivity: void onCreate(android.os.Bundle)&gt;,&lt;androidx.appcompat.app.AppCompatActivity: void onCreate(android.os.Bundle)&gt;,&lt;androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)&gt;,&lt;androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.CollectionMembersActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.CollectionMembersActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;androidx.appcompat.app.AppCompatActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="ReportFragment injectIfNeededIn" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="ReportFragment injectIfNeededIn" type="beginTransaction" unit="$r4 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="ReportFragment injectIfNeededIn" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r0, &quot;androidx.lifecycle.LifecycleDispatcher.report_fragment_tag&quot;)"/>  
        <node method="ReportFragment injectIfNeededIn" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.etesync.syncadapter.ui.setup.SetupEncryptionFragment"> 
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.setup.SetupEncryptionFragment: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.setup.SetupEncryptionFragment: void onCreate(android.os.Bundle)&gt;,&lt;com.etesync.syncadapter.ui.setup.SetupEncryptionFragment$SetupEncryptionLoader: void onPostExecute(java.lang.Object)&gt;,&lt;com.etesync.syncadapter.ui.setup.SetupEncryptionFragment$SetupEncryptionLoader: void onPostExecute(com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration)&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;,void dismissInternal(boolean)"/>  
      <source name="com.etesync.syncadapter.ui.setup.SetupEncryptionFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.setup.SetupEncryptionFragment: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.setup.SetupEncryptionFragment$SetupEncryptionLoader: void onPostExecute(java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.setup.SetupEncryptionFragment$SetupEncryptionLoader: void onPostExecute(com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration)&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;"/>  
        <node method="DialogFragment dismissInternal" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke r0.&lt;androidx.fragment.app.DialogFragment: androidx.fragment.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="commit" unit="virtualinvoke $r3.&lt;androidx.fragment.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.setup.SetupEncryptionFragment: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.setup.SetupEncryptionFragment: void onCreate(android.os.Bundle)&gt;,&lt;com.etesync.syncadapter.ui.setup.SetupEncryptionFragment$SetupEncryptionLoader: void onPostExecute(java.lang.Object)&gt;,&lt;com.etesync.syncadapter.ui.setup.SetupEncryptionFragment$SetupEncryptionLoader: void onPostExecute(com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration)&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;,&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;,void dismissInternal(boolean)"/>  
      <source name="com.etesync.syncadapter.ui.setup.SetupEncryptionFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.setup.SetupEncryptionFragment: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.setup.SetupEncryptionFragment$SetupEncryptionLoader: void onPostExecute(java.lang.Object)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.setup.SetupEncryptionFragment$SetupEncryptionLoader: void onPostExecute(com.etesync.syncadapter.ui.setup.BaseConfigurationFinder$Configuration)&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void dismissInternal(boolean)&gt;"/>  
        <node method="DialogFragment dismissInternal" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke r0.&lt;androidx.fragment.app.DialogFragment: androidx.fragment.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment dismissInternal" type="commit" unit="virtualinvoke $r3.&lt;androidx.fragment.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.etesync.syncadapter.ui.AppSettingsActivity"> 
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.AppSettingsActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.AppSettingsActivity: void onCreate(android.os.Bundle)&gt;,&lt;androidx.appcompat.app.AppCompatActivity: void onCreate(android.os.Bundle)&gt;,&lt;androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)&gt;,&lt;androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.AppSettingsActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.AppSettingsActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;androidx.appcompat.app.AppCompatActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="ReportFragment injectIfNeededIn" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="ReportFragment injectIfNeededIn" type="beginTransaction" unit="$r4 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="ReportFragment injectIfNeededIn" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r0, &quot;androidx.lifecycle.LifecycleDispatcher.report_fragment_tag&quot;)"/>  
        <node method="ReportFragment injectIfNeededIn" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.AppSettingsActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.AppSettingsActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()&gt;"/>  
      <source name="com.etesync.syncadapter.ui.AppSettingsActivity"/>  
      <destinition name="com.etesync.syncadapter.ui.AppSettingsActivity$SettingsFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.AppSettingsActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="AppSettingsActivity onCreate" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke r0.&lt;com.etesync.syncadapter.ui.AppSettingsActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="FragmentActivity getSupportFragmentManager" type="ReceiveFromRetValue" unit="$r1 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="AppSettingsActivity onCreate" type="beginTransaction" unit="$r3 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="AppSettingsActivity onCreate" type="replaceFunction" unit="$r3 = virtualinvoke $r3.&lt;androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction replace(int,androidx.fragment.app.Fragment)&gt;(16908290, $r5)"/>  
        <node method="AppSettingsActivity onCreate" type="commit" unit="virtualinvoke $r3.&lt;androidx.fragment.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.etesync.syncadapter.ui.CollectionMembersListFragment$onItemClick$1"> 
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.CollectionMembersListFragment$onItemClick$1: void onClick(android.content.DialogInterface,int)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.CollectionMembersListFragment$onItemClick$1: void onClick(android.content.DialogInterface,int)&gt;,&lt;androidx.fragment.app.DialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)&gt;,void show(androidx.fragment.app.FragmentManager,java.lang.String)"/>  
      <source name="com.etesync.syncadapter.ui.CollectionMembersListFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.CollectionMembersListFragment$onItemClick$1: void onClick(android.content.DialogInterface,int)&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)&gt;"/>  
        <node method="DialogFragment show" type="ReceiveFromParatMethod" unit="$r3 := @parameter0: androidx.fragment.app.FragmentManager"/>  
        <node method="DialogFragment show" type="beginTransaction" unit="$r2 = virtualinvoke $r3.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment show" type="addFunction" unit="virtualinvoke $r2.&lt;androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction add(androidx.fragment.app.Fragment,java.lang.String)&gt;(r0, $r1)"/>  
        <node method="DialogFragment show" type="commit" unit="virtualinvoke $r2.&lt;androidx.fragment.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.CollectionMembersListFragment$onItemClick$1: void onClick(android.content.DialogInterface,int)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.CollectionMembersListFragment$onItemClick$1: void onClick(android.content.DialogInterface,int)&gt;,void onClick(android.content.DialogInterface,int), &lt;androidx.fragment.app.DialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.CollectionMembersListFragment"/>  
      <destinition name="com.etesync.syncadapter.ui.RemoveMemberFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.CollectionMembersListFragment$onItemClick$1: void onClick(android.content.DialogInterface,int)&gt;"/>  
        <node method="CollectionMembersListFragment$onItemClick$1 onClick" type="ReceiveFromRetValue" unit="$r9 = virtualinvoke $r3.&lt;com.etesync.syncadapter.ui.CollectionMembersListFragment: androidx.fragment.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="CollectionMembersListFragment$onItemClick$1 onClick" type="dialogShow" unit="virtualinvoke $r8.&lt;com.etesync.syncadapter.ui.RemoveMemberFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)&gt;($r9, null)"/>  
        <node method="DialogFragment show" type="ReceiveFromParatMethod" unit="$r3 := @parameter0: androidx.fragment.app.FragmentManager"/>  
        <node method="DialogFragment show" type="beginTransaction" unit="$r2 = virtualinvoke $r3.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment show" type="addFunction" unit="virtualinvoke $r2.&lt;androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction add(androidx.fragment.app.Fragment,java.lang.String)&gt;(r0, $r1)"/>  
        <node method="DialogFragment show" type="commit" unit="virtualinvoke $r2.&lt;androidx.fragment.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.etesync.syncadapter.ui.AccountSettingsActivity"> 
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.AccountSettingsActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.AccountSettingsActivity: void onCreate(android.os.Bundle)&gt;,&lt;androidx.appcompat.app.AppCompatActivity: void onCreate(android.os.Bundle)&gt;,&lt;androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)&gt;,&lt;androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.AccountSettingsActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.AccountSettingsActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;androidx.appcompat.app.AppCompatActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="ReportFragment injectIfNeededIn" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="ReportFragment injectIfNeededIn" type="beginTransaction" unit="$r4 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="ReportFragment injectIfNeededIn" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r0, &quot;androidx.lifecycle.LifecycleDispatcher.report_fragment_tag&quot;)"/>  
        <node method="ReportFragment injectIfNeededIn" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.AccountSettingsActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.AccountSettingsActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()&gt;"/>  
      <source name="com.etesync.syncadapter.ui.AccountSettingsActivity"/>  
      <destinition name="com.etesync.syncadapter.ui.AccountSettingsActivity$AccountSettingsFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.AccountSettingsActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="AccountSettingsActivity onCreate" type="ReceiveFromRetValue" unit="$r10 = virtualinvoke r0.&lt;com.etesync.syncadapter.ui.AccountSettingsActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="FragmentActivity getSupportFragmentManager" type="ReceiveFromRetValue" unit="$r1 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="AccountSettingsActivity onCreate" type="beginTransaction" unit="$r11 = virtualinvoke $r10.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="AccountSettingsActivity onCreate" type="replaceFunction" unit="$r11 = virtualinvoke $r11.&lt;androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction replace(int,androidx.fragment.app.Fragment)&gt;(16908290, $r12)"/>  
        <node method="AccountSettingsActivity onCreate" type="commit" unit="virtualinvoke $r11.&lt;androidx.fragment.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.etesync.syncadapter.ui.CreateCollectionActivity"> 
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.CreateCollectionActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.CreateCollectionActivity: void onCreate(android.os.Bundle)&gt;,&lt;androidx.appcompat.app.AppCompatActivity: void onCreate(android.os.Bundle)&gt;,&lt;androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)&gt;,&lt;androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.CreateCollectionActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.CreateCollectionActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;androidx.appcompat.app.AppCompatActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="ReportFragment injectIfNeededIn" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="ReportFragment injectIfNeededIn" type="beginTransaction" unit="$r4 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="ReportFragment injectIfNeededIn" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r0, &quot;androidx.lifecycle.LifecycleDispatcher.report_fragment_tag&quot;)"/>  
        <node method="ReportFragment injectIfNeededIn" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.etesync.syncadapter.ui.ViewCollectionActivity"> 
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.ViewCollectionActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.ViewCollectionActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()&gt;"/>  
      <source name="com.etesync.syncadapter.ui.ViewCollectionActivity"/>  
      <destinition name="com.etesync.syncadapter.ui.journalviewer.ListEntriesFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.ViewCollectionActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="ViewCollectionActivity onCreate" type="ReceiveFromRetValue" unit="$r10 = virtualinvoke r0.&lt;com.etesync.syncadapter.ui.ViewCollectionActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="FragmentActivity getSupportFragmentManager" type="ReceiveFromRetValue" unit="$r1 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="ViewCollectionActivity onCreate" type="beginTransaction" unit="$r11 = virtualinvoke $r10.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="ViewCollectionActivity onCreate" type="addFunction" unit="$r11 = virtualinvoke $r11.&lt;androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction add(int,androidx.fragment.app.Fragment)&gt;(2131296417, $r14)"/>  
        <node method="ViewCollectionActivity onCreate" type="commit" unit="virtualinvoke $r11.&lt;androidx.fragment.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.ViewCollectionActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.ViewCollectionActivity: void onCreate(android.os.Bundle)&gt;,&lt;androidx.appcompat.app.AppCompatActivity: void onCreate(android.os.Bundle)&gt;,&lt;androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)&gt;,&lt;androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.ViewCollectionActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.ViewCollectionActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;androidx.appcompat.app.AppCompatActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="ReportFragment injectIfNeededIn" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="ReportFragment injectIfNeededIn" type="beginTransaction" unit="$r4 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="ReportFragment injectIfNeededIn" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r0, &quot;androidx.lifecycle.LifecycleDispatcher.report_fragment_tag&quot;)"/>  
        <node method="ReportFragment injectIfNeededIn" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.etesync.syncadapter.ui.setup.EncryptionDetailsFragment$onCreateView$2"> 
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.setup.EncryptionDetailsFragment$onCreateView$2: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.setup.EncryptionDetailsFragment$onCreateView$2: void onClick(android.view.View)&gt;,void onClick(android.view.View), &lt;androidx.fragment.app.DialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.setup.EncryptionDetailsFragment"/>  
      <destinition name="com.etesync.syncadapter.ui.setup.SetupEncryptionFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.setup.EncryptionDetailsFragment$onCreateView$2: void onClick(android.view.View)&gt;"/>  
        <node method="EncryptionDetailsFragment$onCreateView$2 onClick" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r2.&lt;com.etesync.syncadapter.ui.setup.EncryptionDetailsFragment: androidx.fragment.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="EncryptionDetailsFragment$onCreateView$2 onClick" type="dialogShow" unit="virtualinvoke $r5.&lt;com.etesync.syncadapter.ui.setup.SetupEncryptionFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)&gt;($r6, null)"/>  
        <node method="DialogFragment show" type="ReceiveFromParatMethod" unit="$r3 := @parameter0: androidx.fragment.app.FragmentManager"/>  
        <node method="DialogFragment show" type="beginTransaction" unit="$r2 = virtualinvoke $r3.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment show" type="addFunction" unit="virtualinvoke $r2.&lt;androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction add(androidx.fragment.app.Fragment,java.lang.String)&gt;(r0, $r1)"/>  
        <node method="DialogFragment show" type="commit" unit="virtualinvoke $r2.&lt;androidx.fragment.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.setup.EncryptionDetailsFragment$onCreateView$2: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.setup.EncryptionDetailsFragment$onCreateView$2: void onClick(android.view.View)&gt;,&lt;androidx.fragment.app.DialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)&gt;,void show(androidx.fragment.app.FragmentManager,java.lang.String)"/>  
      <source name="com.etesync.syncadapter.ui.setup.EncryptionDetailsFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.setup.EncryptionDetailsFragment$onCreateView$2: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)&gt;"/>  
        <node method="DialogFragment show" type="ReceiveFromParatMethod" unit="$r3 := @parameter0: androidx.fragment.app.FragmentManager"/>  
        <node method="DialogFragment show" type="beginTransaction" unit="$r2 = virtualinvoke $r3.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment show" type="addFunction" unit="virtualinvoke $r2.&lt;androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction add(androidx.fragment.app.Fragment,java.lang.String)&gt;(r0, $r1)"/>  
        <node method="DialogFragment show" type="commit" unit="virtualinvoke $r2.&lt;androidx.fragment.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.etesync.syncadapter.ui.EditCollectionActivity"> 
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.EditCollectionActivity: void onDeleteCollection(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.EditCollectionActivity: void onDeleteCollection(android.view.MenuItem)&gt;,void onDeleteCollection(android.view.MenuItem), &lt;androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()&gt;, &lt;androidx.fragment.app.DialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.EditCollectionActivity"/>  
      <destinition name="com.etesync.syncadapter.ui.DeleteCollectionFragment$ConfirmDeleteCollectionFragment"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.EditCollectionActivity: void onDeleteCollection(android.view.MenuItem)&gt;"/>  
        <node method="EditCollectionActivity onDeleteCollection" type="ReceiveFromRetValue" unit="$r20 = virtualinvoke r0.&lt;com.etesync.syncadapter.ui.EditCollectionActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="FragmentActivity getSupportFragmentManager" type="ReceiveFromRetValue" unit="$r1 = virtualinvoke $r2.&lt;androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="EditCollectionActivity onDeleteCollection" type="dialogShow" unit="virtualinvoke $r19.&lt;com.etesync.syncadapter.ui.DeleteCollectionFragment$ConfirmDeleteCollectionFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)&gt;($r20, null)"/>  
        <node method="DialogFragment show" type="ReceiveFromParatMethod" unit="$r3 := @parameter0: androidx.fragment.app.FragmentManager"/>  
        <node method="DialogFragment show" type="beginTransaction" unit="$r2 = virtualinvoke $r3.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment show" type="addFunction" unit="virtualinvoke $r2.&lt;androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction add(androidx.fragment.app.Fragment,java.lang.String)&gt;(r0, $r1)"/>  
        <node method="DialogFragment show" type="commit" unit="virtualinvoke $r2.&lt;androidx.fragment.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.EditCollectionActivity: void onDeleteCollection(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.EditCollectionActivity: void onDeleteCollection(android.view.MenuItem)&gt;,&lt;androidx.fragment.app.DialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)&gt;,void show(androidx.fragment.app.FragmentManager,java.lang.String)"/>  
      <source name="com.etesync.syncadapter.ui.EditCollectionActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.EditCollectionActivity: void onDeleteCollection(android.view.MenuItem)&gt;"/>  
        <node method="&lt;androidx.fragment.app.DialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)&gt;"/>  
        <node method="DialogFragment show" type="ReceiveFromParatMethod" unit="$r3 := @parameter0: androidx.fragment.app.FragmentManager"/>  
        <node method="DialogFragment show" type="beginTransaction" unit="$r2 = virtualinvoke $r3.&lt;androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="DialogFragment show" type="addFunction" unit="virtualinvoke $r2.&lt;androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction add(androidx.fragment.app.Fragment,java.lang.String)&gt;(r0, $r1)"/>  
        <node method="DialogFragment show" type="commit" unit="virtualinvoke $r2.&lt;androidx.fragment.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="com.etesync.syncadapter.ui.EditCollectionActivity"> 
    <FragmentSummary> 
      <method value="&lt;com.etesync.syncadapter.ui.EditCollectionActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;com.etesync.syncadapter.ui.EditCollectionActivity: void onCreate(android.os.Bundle)&gt;,&lt;com.etesync.syncadapter.ui.CreateCollectionActivity: void onCreate(android.os.Bundle)&gt;,&lt;androidx.appcompat.app.AppCompatActivity: void onCreate(android.os.Bundle)&gt;,&lt;androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)&gt;,&lt;androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)&gt;"/>  
      <source name="com.etesync.syncadapter.ui.EditCollectionActivity"/>  
      <nodes> 
        <node method="&lt;com.etesync.syncadapter.ui.EditCollectionActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;com.etesync.syncadapter.ui.CreateCollectionActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;androidx.appcompat.app.AppCompatActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="ReportFragment injectIfNeededIn" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="ReportFragment injectIfNeededIn" type="beginTransaction" unit="$r4 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="ReportFragment injectIfNeededIn" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r0, &quot;androidx.lifecycle.LifecycleDispatcher.report_fragment_tag&quot;)"/>  
        <node method="ReportFragment injectIfNeededIn" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
</root>
