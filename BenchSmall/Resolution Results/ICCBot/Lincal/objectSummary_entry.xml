<?xml version="1.0" encoding="UTF-8"?>

<root> 
  <Component source="felixwiemuth.lincal.data.CEntry"> 
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.data.CEntry: void open(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.data.CEntry: void open(android.content.Context)&gt;,void open(android.content.Context)"/>  
      <source name="felixwiemuth.lincal.data.CEntry"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.data.CEntry: void open(android.content.Context)&gt;"/>  
        <node method="CEntry open" type="CreateMethod" unit="r3 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.data.CEntry: void open(android.content.Context)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.data.CEntry: void open(android.content.Context)&gt;,void open(android.content.Context)"/>  
      <source name="felixwiemuth.lincal.data.CEntry"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.data.CEntry: void open(android.content.Context)&gt;"/>  
        <node method="CEntry open" type="CreateMethod" unit="r3 = new android.content.Intent"/>  
        <node method="CEntry open" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;(r3)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="felixwiemuth.lincal.ui.CalendarViewFragment"> 
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter$4: void onClick(android.content.DialogInterface,int)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter$4: void onClick(android.content.DialogInterface,int)&gt;,&lt;felixwiemuth.lincal.data.CEntry: void open(android.content.Context)&gt;,void open(android.content.Context)"/>  
      <source name="felixwiemuth.lincal.ui.CalendarViewFragment"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter$4: void onClick(android.content.DialogInterface,int)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.data.CEntry: void open(android.content.Context)&gt;"/>  
        <node method="CEntry open" type="CreateMethod" unit="r3 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter$4: void onClick(android.content.DialogInterface,int)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter$4: void onClick(android.content.DialogInterface,int)&gt;,&lt;felixwiemuth.lincal.data.CEntry: void open(android.content.Context)&gt;,void open(android.content.Context)"/>  
      <source name="felixwiemuth.lincal.ui.CalendarViewFragment"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter$4: void onClick(android.content.DialogInterface,int)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.data.CEntry: void open(android.content.Context)&gt;"/>  
        <node method="CEntry open" type="CreateMethod" unit="r3 = new android.content.Intent"/>  
        <node method="CEntry open" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;(r3)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="felixwiemuth.lincal.ui.CalendarViewFragment"> 
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter: void showEntryDialog(felixwiemuth.lincal.data.CEntry,boolean)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter: void showEntryDialog(felixwiemuth.lincal.data.CEntry,boolean)&gt;,&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter$4: void onClick(android.content.DialogInterface,int)&gt;,&lt;felixwiemuth.lincal.data.CEntry: void open(android.content.Context)&gt;,void open(android.content.Context)"/>  
      <source name="felixwiemuth.lincal.ui.CalendarViewFragment"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter: void showEntryDialog(felixwiemuth.lincal.data.CEntry,boolean)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter$4: void onClick(android.content.DialogInterface,int)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.data.CEntry: void open(android.content.Context)&gt;"/>  
        <node method="CEntry open" type="CreateMethod" unit="r3 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter: void showEntryDialog(felixwiemuth.lincal.data.CEntry,boolean)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter: void showEntryDialog(felixwiemuth.lincal.data.CEntry,boolean)&gt;,&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter$4: void onClick(android.content.DialogInterface,int)&gt;,&lt;felixwiemuth.lincal.data.CEntry: void open(android.content.Context)&gt;,void open(android.content.Context)"/>  
      <source name="felixwiemuth.lincal.ui.CalendarViewFragment"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter: void showEntryDialog(felixwiemuth.lincal.data.CEntry,boolean)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter$4: void onClick(android.content.DialogInterface,int)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.data.CEntry: void open(android.content.Context)&gt;"/>  
        <node method="CEntry open" type="CreateMethod" unit="r3 = new android.content.Intent"/>  
        <node method="CEntry open" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;(r3)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="felixwiemuth.lincal.ui.CalendarViewFragment"> 
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter: void access$600(felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter,felixwiemuth.lincal.data.CEntry,boolean)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter: void access$600(felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter,felixwiemuth.lincal.data.CEntry,boolean)&gt;,&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter: void showEntryDialog(felixwiemuth.lincal.data.CEntry,boolean)&gt;,&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter$4: void onClick(android.content.DialogInterface,int)&gt;,&lt;felixwiemuth.lincal.data.CEntry: void open(android.content.Context)&gt;,void open(android.content.Context)"/>  
      <source name="felixwiemuth.lincal.ui.CalendarViewFragment"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter: void access$600(felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter,felixwiemuth.lincal.data.CEntry,boolean)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter: void showEntryDialog(felixwiemuth.lincal.data.CEntry,boolean)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter$4: void onClick(android.content.DialogInterface,int)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.data.CEntry: void open(android.content.Context)&gt;"/>  
        <node method="CEntry open" type="CreateMethod" unit="r3 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter: void access$600(felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter,felixwiemuth.lincal.data.CEntry,boolean)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter: void access$600(felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter,felixwiemuth.lincal.data.CEntry,boolean)&gt;,&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter: void showEntryDialog(felixwiemuth.lincal.data.CEntry,boolean)&gt;,&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter$4: void onClick(android.content.DialogInterface,int)&gt;,&lt;felixwiemuth.lincal.data.CEntry: void open(android.content.Context)&gt;,void open(android.content.Context)"/>  
      <source name="felixwiemuth.lincal.ui.CalendarViewFragment"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter: void access$600(felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter,felixwiemuth.lincal.data.CEntry,boolean)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter: void showEntryDialog(felixwiemuth.lincal.data.CEntry,boolean)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter$4: void onClick(android.content.DialogInterface,int)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.data.CEntry: void open(android.content.Context)&gt;"/>  
        <node method="CEntry open" type="CreateMethod" unit="r3 = new android.content.Intent"/>  
        <node method="CEntry open" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;(r3)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="felixwiemuth.lincal.ui.CalendarViewFragment"> 
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter$2: void onClick(android.content.DialogInterface,int)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter$2: void onClick(android.content.DialogInterface,int)&gt;,&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter: void access$600(felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter,felixwiemuth.lincal.data.CEntry,boolean)&gt;,&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter: void showEntryDialog(felixwiemuth.lincal.data.CEntry,boolean)&gt;,&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter$4: void onClick(android.content.DialogInterface,int)&gt;,&lt;felixwiemuth.lincal.data.CEntry: void open(android.content.Context)&gt;,void open(android.content.Context)"/>  
      <source name="felixwiemuth.lincal.ui.CalendarViewFragment"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter$2: void onClick(android.content.DialogInterface,int)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter: void access$600(felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter,felixwiemuth.lincal.data.CEntry,boolean)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter: void showEntryDialog(felixwiemuth.lincal.data.CEntry,boolean)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter$4: void onClick(android.content.DialogInterface,int)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.data.CEntry: void open(android.content.Context)&gt;"/>  
        <node method="CEntry open" type="CreateMethod" unit="r3 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter$2: void onClick(android.content.DialogInterface,int)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter$2: void onClick(android.content.DialogInterface,int)&gt;,&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter: void access$600(felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter,felixwiemuth.lincal.data.CEntry,boolean)&gt;,&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter: void showEntryDialog(felixwiemuth.lincal.data.CEntry,boolean)&gt;,&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter$4: void onClick(android.content.DialogInterface,int)&gt;,&lt;felixwiemuth.lincal.data.CEntry: void open(android.content.Context)&gt;,void open(android.content.Context)"/>  
      <source name="felixwiemuth.lincal.ui.CalendarViewFragment"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter$2: void onClick(android.content.DialogInterface,int)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter: void access$600(felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter,felixwiemuth.lincal.data.CEntry,boolean)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter: void showEntryDialog(felixwiemuth.lincal.data.CEntry,boolean)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter$4: void onClick(android.content.DialogInterface,int)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.data.CEntry: void open(android.content.Context)&gt;"/>  
        <node method="CEntry open" type="CreateMethod" unit="r3 = new android.content.Intent"/>  
        <node method="CEntry open" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;(r3)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="felixwiemuth.lincal.ui.AddCalendarActivity"> 
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.ui.AddCalendarActivity$1: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.ui.AddCalendarActivity$1: void onClick(android.view.View)&gt;,void onClick(android.view.View)"/>  
      <source name="felixwiemuth.lincal.ui.AddCalendarActivity"/>  
      <destinition name="interICC_android.intent.action.OPEN_DOCUMENT, android.intent.category.OPENABLE"/>  
      <sender action="android.intent.action.OPEN_DOCUMENT" category="android.intent.category.OPENABLE" type="*/*"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.ui.AddCalendarActivity$1: void onClick(android.view.View)&gt;"/>  
        <node method="AddCalendarActivity$1 onClick" type="CreateMethod" unit="r2 = new android.content.Intent"/>  
        <node method="AddCalendarActivity$1 onClick" type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.OPEN_DOCUMENT&quot;)"/>  
        <node method="AddCalendarActivity$1 onClick" type="SetAttribute" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent addCategory(java.lang.String)&gt;(&quot;android.intent.category.OPENABLE&quot;)"/>  
        <node method="AddCalendarActivity$1 onClick" type="SetAttribute" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;*/*&quot;)"/>  
        <node method="AddCalendarActivity$1 onClick" type="PassOutIntent" unit="virtualinvoke $r3.&lt;felixwiemuth.lincal.ui.AddCalendarActivity: void startActivityForResult(android.content.Intent,int)&gt;(r2, 0)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="felixwiemuth.lincal.NotificationService"> 
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.NotificationService: void runWithCalendar(android.content.Context,int)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.NotificationService: void runWithCalendar(android.content.Context,int)&gt;,void runWithCalendar(android.content.Context,int)"/>  
      <source name="felixwiemuth.lincal.NotificationService"/>  
      <destinition name="felixwiemuth.lincal.NotificationService"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.NotificationService: void runWithCalendar(android.content.Context,int)&gt;"/>  
        <node method="NotificationService runWithCalendar" type="CreateMethod" unit="r1 = new android.content.Intent"/>  
        <node method="NotificationService runWithCalendar" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lfelixwiemuth/lincal/NotificationService;&quot;)"/>  
        <node method="NotificationService runWithCalendar" type="PassOutIntent" unit="virtualinvoke $r0.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;(r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="felixwiemuth.lincal.ui.AddCalendarActivity"> 
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.ui.AddCalendarActivity: void onNewIntent(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.ui.AddCalendarActivity: void onNewIntent(android.content.Intent)&gt;,void onNewIntent(android.content.Intent)"/>  
      <source name="felixwiemuth.lincal.ui.AddCalendarActivity"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.ui.AddCalendarActivity: void onNewIntent(android.content.Intent)&gt;"/>  
        <node method="AddCalendarActivity onNewIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.acra.sender.SenderService"> 
    <intentSummary> 
      <method value="&lt;org.acra.sender.SenderService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;org.acra.sender.SenderService: android.os.IBinder onBind(android.content.Intent)&gt;,android.os.IBinder onBind(android.content.Intent)"/>  
      <source name="org.acra.sender.SenderService"/>  
      <nodes> 
        <node method="&lt;org.acra.sender.SenderService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
        <node method="SenderService onBind" type="ReceiveIntentFromRetValue" unit="parameter0 = virtualinvoke this.&lt;org.acra.sender.SenderService: android.content.Intent getIntent()&gt;()"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.sender.SenderService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;org.acra.sender.SenderService: android.os.IBinder onBind(android.content.Intent)&gt;,android.os.IBinder onBind(android.content.Intent)"/>  
      <source name="org.acra.sender.SenderService"/>  
      <nodes> 
        <node method="&lt;org.acra.sender.SenderService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
        <node method="SenderService onBind" type="ReceiveIntentFromParatMethod" unit="parameter0 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="felixwiemuth.lincal.ui.CalendarListActivity"> 
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.ui.CalendarListActivity$SimpleItemRecyclerViewAdapter$1: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.ui.CalendarListActivity$SimpleItemRecyclerViewAdapter$1: void onClick(android.view.View)&gt;,void onClick(android.view.View)"/>  
      <source name="felixwiemuth.lincal.ui.CalendarListActivity"/>  
      <destinition name="felixwiemuth.lincal.ui.CalendarViewActivity"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.ui.CalendarListActivity$SimpleItemRecyclerViewAdapter$1: void onClick(android.view.View)&gt;"/>  
        <node method="CalendarListActivity$SimpleItemRecyclerViewAdapter$1 onClick" type="CreateMethod" unit="r4 = new android.content.Intent"/>  
        <node method="CalendarListActivity$SimpleItemRecyclerViewAdapter$1 onClick" type="SetAttribute" unit="specialinvoke r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r10, class &quot;Lfelixwiemuth/lincal/ui/CalendarViewActivity;&quot;)"/>  
        <node method="CalendarListActivity$SimpleItemRecyclerViewAdapter$1 onClick" type="PassOutIntent" unit="virtualinvoke $r6.&lt;felixwiemuth.lincal.ui.CalendarListActivity: void startActivityForResult(android.content.Intent,int)&gt;(r4, 0)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="felixwiemuth.lincal.ui.CalendarListActivity"> 
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.ui.CalendarListActivity$1: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.ui.CalendarListActivity$1: void onClick(android.view.View)&gt;,void onClick(android.view.View)"/>  
      <source name="felixwiemuth.lincal.ui.CalendarListActivity"/>  
      <destinition name="felixwiemuth.lincal.ui.AddCalendarActivity"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.ui.CalendarListActivity$1: void onClick(android.view.View)&gt;"/>  
        <node method="CalendarListActivity$1 onClick" type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
        <node method="CalendarListActivity$1 onClick" type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, class &quot;Lfelixwiemuth/lincal/ui/AddCalendarActivity;&quot;)"/>  
        <node method="CalendarListActivity$1 onClick" type="PassOutIntent" unit="virtualinvoke $r2.&lt;felixwiemuth.lincal.ui.CalendarListActivity: void startActivityForResult(android.content.Intent,int)&gt;($r3, 0)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="felixwiemuth.lincal.NotificationService"> 
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.NotificationService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.NotificationService: android.os.IBinder onBind(android.content.Intent)&gt;,android.os.IBinder onBind(android.content.Intent)"/>  
      <source name="felixwiemuth.lincal.NotificationService"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.NotificationService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
        <node method="NotificationService onBind" type="ReceiveIntentFromParatMethod" unit="parameter0 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.NotificationService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.NotificationService: android.os.IBinder onBind(android.content.Intent)&gt;,android.os.IBinder onBind(android.content.Intent)"/>  
      <source name="felixwiemuth.lincal.NotificationService"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.NotificationService: android.os.IBinder onBind(android.content.Intent)&gt;"/>  
        <node method="NotificationService onBind" type="ReceiveIntentFromRetValue" unit="parameter0 = virtualinvoke this.&lt;felixwiemuth.lincal.NotificationService: android.content.Intent getIntent()&gt;()"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.acra.builder.ReportExecutor"> 
    <intentSummary> 
      <method value="&lt;org.acra.builder.ReportExecutor: android.content.Intent createCrashReportDialogIntent(java.io.File,org.acra.builder.ReportBuilder)&gt;"/>  
      <methodtrace value="&lt;org.acra.builder.ReportExecutor: android.content.Intent createCrashReportDialogIntent(java.io.File,org.acra.builder.ReportBuilder)&gt;,android.content.Intent createCrashReportDialogIntent(java.io.File,org.acra.builder.ReportBuilder)"/>  
      <source name="org.acra.builder.ReportExecutor"/>  
      <destinition name="java.lang.Class"/>  
      <nodes> 
        <node method="&lt;org.acra.builder.ReportExecutor: android.content.Intent createCrashReportDialogIntent(java.io.File,org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="ReportExecutor createCrashReportDialogIntent" type="CreateMethod" unit="r3 = new android.content.Intent"/>  
        <node method="ReportExecutor createCrashReportDialogIntent" type="SetAttribute" unit="specialinvoke r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r9, $r11)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="felixwiemuth.lincal.NotificationService"> 
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.NotificationService: void sendNotification(felixwiemuth.lincal.data.CEntry,int,felixwiemuth.lincal.data.LinCalConfig)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.NotificationService: void sendNotification(felixwiemuth.lincal.data.CEntry,int,felixwiemuth.lincal.data.LinCalConfig)&gt;,void sendNotification(felixwiemuth.lincal.data.CEntry,int,felixwiemuth.lincal.data.LinCalConfig)"/>  
      <source name="felixwiemuth.lincal.NotificationService"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.NotificationService: void sendNotification(felixwiemuth.lincal.data.CEntry,int,felixwiemuth.lincal.data.LinCalConfig)&gt;"/>  
        <node method="NotificationService sendNotification" type="CreateMethod" unit="r3 = new android.content.Intent"/>  
        <node method="NotificationService sendNotification" type="PassOutIntent" unit="$r7 = virtualinvoke $r7.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r6)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.acra.builder.ReportExecutor"> 
    <intentSummary> 
      <method value="&lt;org.acra.builder.ReportExecutor: void createNotification(java.io.File,org.acra.builder.ReportBuilder)&gt;"/>  
      <methodtrace value="&lt;org.acra.builder.ReportExecutor: void createNotification(java.io.File,org.acra.builder.ReportBuilder)&gt;,void createNotification(java.io.File,org.acra.builder.ReportBuilder), &lt;org.acra.builder.ReportExecutor: android.content.Intent createCrashReportDialogIntent(java.io.File,org.acra.builder.ReportBuilder)&gt;"/>  
      <source name="org.acra.builder.ReportExecutor"/>  
      <destinition name="java.lang.Class"/>  
      <nodes> 
        <node method="&lt;org.acra.builder.ReportExecutor: void createNotification(java.io.File,org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="ReportExecutor createNotification" type="ReceiveIntentFromRetValue" unit="$r13 = specialinvoke r0.&lt;org.acra.builder.ReportExecutor: android.content.Intent createCrashReportDialogIntent(java.io.File,org.acra.builder.ReportBuilder)&gt;($r1, $r2)"/>  
        <node method="ReportExecutor createCrashReportDialogIntent" type="CreateMethod" unit="r3 = new android.content.Intent"/>  
        <node method="ReportExecutor createCrashReportDialogIntent" type="SetAttribute" unit="specialinvoke r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r9, $r11)"/>  
        <node method="ReportExecutor createNotification" type="PassOutIntent" unit="r3 = virtualinvoke r3.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r14)"/>  
        <node method="ReportExecutor createNotification" type="PassOutIntent" unit="r3 = virtualinvoke r3.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r14)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.builder.ReportExecutor: void createNotification(java.io.File,org.acra.builder.ReportBuilder)&gt;"/>  
      <methodtrace value="&lt;org.acra.builder.ReportExecutor: void createNotification(java.io.File,org.acra.builder.ReportBuilder)&gt;,void createNotification(java.io.File,org.acra.builder.ReportBuilder), &lt;org.acra.builder.ReportExecutor: android.content.Intent createCrashReportDialogIntent(java.io.File,org.acra.builder.ReportBuilder)&gt;"/>  
      <source name="org.acra.builder.ReportExecutor"/>  
      <nodes> 
        <node method="&lt;org.acra.builder.ReportExecutor: void createNotification(java.io.File,org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="ReportExecutor createNotification" type="PassOutIntent" unit="r3 = virtualinvoke r3.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r14)"/>  
        <node method="ReportExecutor createNotification" type="PassOutIntent" unit="r3 = virtualinvoke r3.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r14)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.builder.ReportExecutor: void createNotification(java.io.File,org.acra.builder.ReportBuilder)&gt;"/>  
      <methodtrace value="&lt;org.acra.builder.ReportExecutor: void createNotification(java.io.File,org.acra.builder.ReportBuilder)&gt;,void createNotification(java.io.File,org.acra.builder.ReportBuilder), &lt;org.acra.builder.ReportExecutor: android.content.Intent createCrashReportDialogIntent(java.io.File,org.acra.builder.ReportBuilder)&gt;"/>  
      <source name="org.acra.builder.ReportExecutor"/>  
      <destinition name="java.lang.Class"/>  
      <nodes> 
        <node method="&lt;org.acra.builder.ReportExecutor: void createNotification(java.io.File,org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="ReportExecutor createNotification" type="ReceiveIntentFromRetValue" unit="$r13 = specialinvoke r0.&lt;org.acra.builder.ReportExecutor: android.content.Intent createCrashReportDialogIntent(java.io.File,org.acra.builder.ReportBuilder)&gt;($r1, $r2)"/>  
        <node method="ReportExecutor createCrashReportDialogIntent" type="CreateMethod" unit="r3 = new android.content.Intent"/>  
        <node method="ReportExecutor createCrashReportDialogIntent" type="SetAttribute" unit="specialinvoke r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r9, $r11)"/>  
        <node method="ReportExecutor createNotification" type="PassOutIntent" unit="r3 = virtualinvoke r3.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r14)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="felixwiemuth.lincal.NotificationService"> 
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.NotificationService: java.util.Calendar processCalendar(felixwiemuth.lincal.data.LinCal,felixwiemuth.lincal.data.LinCalConfig,java.util.Calendar)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.NotificationService: java.util.Calendar processCalendar(felixwiemuth.lincal.data.LinCal,felixwiemuth.lincal.data.LinCalConfig,java.util.Calendar)&gt;,&lt;felixwiemuth.lincal.NotificationService: void sendNotification(felixwiemuth.lincal.data.CEntry,int,felixwiemuth.lincal.data.LinCalConfig)&gt;,void sendNotification(felixwiemuth.lincal.data.CEntry,int,felixwiemuth.lincal.data.LinCalConfig)"/>  
      <source name="felixwiemuth.lincal.NotificationService"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.NotificationService: java.util.Calendar processCalendar(felixwiemuth.lincal.data.LinCal,felixwiemuth.lincal.data.LinCalConfig,java.util.Calendar)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.NotificationService: void sendNotification(felixwiemuth.lincal.data.CEntry,int,felixwiemuth.lincal.data.LinCalConfig)&gt;"/>  
        <node method="NotificationService sendNotification" type="CreateMethod" unit="r3 = new android.content.Intent"/>  
        <node method="NotificationService sendNotification" type="PassOutIntent" unit="$r7 = virtualinvoke $r7.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r6)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="felixwiemuth.lincal.ui.AddCalendarActivity"> 
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.ui.AddCalendarActivity: void onActivityResult(int,int,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.ui.AddCalendarActivity: void onActivityResult(int,int,android.content.Intent)&gt;,void onActivityResult(int,int,android.content.Intent)"/>  
      <source name="felixwiemuth.lincal.ui.AddCalendarActivity"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.ui.AddCalendarActivity: void onActivityResult(int,int,android.content.Intent)&gt;"/>  
        <node method="AddCalendarActivity onActivityResult" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="felixwiemuth.lincal.util.Util"> 
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.util.Util: void showErrorDialog(int,java.lang.String,boolean,android.content.Context)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.util.Util: void showErrorDialog(int,java.lang.String,boolean,android.content.Context)&gt;,void showErrorDialog(int,java.lang.String,boolean,android.content.Context)"/>  
      <source name="felixwiemuth.lincal.util.Util"/>  
      <destinition name="felixwiemuth.lincal.ui.CalendarListActivity"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.util.Util: void showErrorDialog(int,java.lang.String,boolean,android.content.Context)&gt;"/>  
        <node method="Util showErrorDialog" type="CreateMethod" unit="r3 = new android.content.Intent"/>  
        <node method="Util showErrorDialog" type="SetAttribute" unit="specialinvoke r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lfelixwiemuth/lincal/ui/CalendarListActivity;&quot;)"/>  
        <node method="Util showErrorDialog" type="PassOutIntent" unit="$r5 = virtualinvoke $r5.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r4)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="felixwiemuth.lincal.Calendars"> 
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.Calendars: felixwiemuth.lincal.data.LinCal loadCalendar(android.content.Context,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.Calendars: felixwiemuth.lincal.data.LinCal loadCalendar(android.content.Context,java.lang.String)&gt;,&lt;felixwiemuth.lincal.util.Util: void showErrorDialog(int,java.lang.String,boolean,android.content.Context)&gt;,void showErrorDialog(int,java.lang.String,boolean,android.content.Context)"/>  
      <source name="felixwiemuth.lincal.Calendars"/>  
      <destinition name="felixwiemuth.lincal.ui.CalendarListActivity"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.Calendars: felixwiemuth.lincal.data.LinCal loadCalendar(android.content.Context,java.lang.String)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.util.Util: void showErrorDialog(int,java.lang.String,boolean,android.content.Context)&gt;"/>  
        <node method="Util showErrorDialog" type="CreateMethod" unit="r3 = new android.content.Intent"/>  
        <node method="Util showErrorDialog" type="SetAttribute" unit="specialinvoke r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lfelixwiemuth/lincal/ui/CalendarListActivity;&quot;)"/>  
        <node method="Util showErrorDialog" type="PassOutIntent" unit="$r5 = virtualinvoke $r5.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r4)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="felixwiemuth.lincal.Calendars"> 
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.Calendars: felixwiemuth.lincal.data.LinCal getCalendarById(android.content.Context,int)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.Calendars: felixwiemuth.lincal.data.LinCal getCalendarById(android.content.Context,int)&gt;,&lt;felixwiemuth.lincal.Calendars: felixwiemuth.lincal.data.LinCal loadCalendar(android.content.Context,java.lang.String)&gt;,&lt;felixwiemuth.lincal.util.Util: void showErrorDialog(int,java.lang.String,boolean,android.content.Context)&gt;,void showErrorDialog(int,java.lang.String,boolean,android.content.Context)"/>  
      <source name="felixwiemuth.lincal.Calendars"/>  
      <destinition name="felixwiemuth.lincal.ui.CalendarListActivity"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.Calendars: felixwiemuth.lincal.data.LinCal getCalendarById(android.content.Context,int)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.Calendars: felixwiemuth.lincal.data.LinCal loadCalendar(android.content.Context,java.lang.String)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.util.Util: void showErrorDialog(int,java.lang.String,boolean,android.content.Context)&gt;"/>  
        <node method="Util showErrorDialog" type="CreateMethod" unit="r3 = new android.content.Intent"/>  
        <node method="Util showErrorDialog" type="SetAttribute" unit="specialinvoke r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lfelixwiemuth/lincal/ui/CalendarListActivity;&quot;)"/>  
        <node method="Util showErrorDialog" type="PassOutIntent" unit="$r5 = virtualinvoke $r5.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r4)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="felixwiemuth.lincal.Calendars"> 
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.Calendars: felixwiemuth.lincal.data.LinCal getCalendarByPos(android.content.Context,int)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.Calendars: felixwiemuth.lincal.data.LinCal getCalendarByPos(android.content.Context,int)&gt;,&lt;felixwiemuth.lincal.Calendars: felixwiemuth.lincal.data.LinCal getCalendarById(android.content.Context,int)&gt;,&lt;felixwiemuth.lincal.Calendars: felixwiemuth.lincal.data.LinCal loadCalendar(android.content.Context,java.lang.String)&gt;,&lt;felixwiemuth.lincal.util.Util: void showErrorDialog(int,java.lang.String,boolean,android.content.Context)&gt;,void showErrorDialog(int,java.lang.String,boolean,android.content.Context)"/>  
      <source name="felixwiemuth.lincal.Calendars"/>  
      <destinition name="felixwiemuth.lincal.ui.CalendarListActivity"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.Calendars: felixwiemuth.lincal.data.LinCal getCalendarByPos(android.content.Context,int)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.Calendars: felixwiemuth.lincal.data.LinCal getCalendarById(android.content.Context,int)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.Calendars: felixwiemuth.lincal.data.LinCal loadCalendar(android.content.Context,java.lang.String)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.util.Util: void showErrorDialog(int,java.lang.String,boolean,android.content.Context)&gt;"/>  
        <node method="Util showErrorDialog" type="CreateMethod" unit="r3 = new android.content.Intent"/>  
        <node method="Util showErrorDialog" type="SetAttribute" unit="specialinvoke r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lfelixwiemuth/lincal/ui/CalendarListActivity;&quot;)"/>  
        <node method="Util showErrorDialog" type="PassOutIntent" unit="$r5 = virtualinvoke $r5.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r4)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="felixwiemuth.lincal.ui.CalendarViewFragment"> 
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.ui.CalendarViewFragment: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.ui.CalendarViewFragment: void onCreate(android.os.Bundle)&gt;,&lt;felixwiemuth.lincal.Calendars: felixwiemuth.lincal.data.LinCal getCalendarByPos(android.content.Context,int)&gt;,&lt;felixwiemuth.lincal.Calendars: felixwiemuth.lincal.data.LinCal getCalendarById(android.content.Context,int)&gt;,&lt;felixwiemuth.lincal.Calendars: felixwiemuth.lincal.data.LinCal loadCalendar(android.content.Context,java.lang.String)&gt;,&lt;felixwiemuth.lincal.util.Util: void showErrorDialog(int,java.lang.String,boolean,android.content.Context)&gt;,void showErrorDialog(int,java.lang.String,boolean,android.content.Context)"/>  
      <source name="felixwiemuth.lincal.ui.CalendarViewFragment"/>  
      <destinition name="felixwiemuth.lincal.ui.CalendarListActivity"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.ui.CalendarViewFragment: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.Calendars: felixwiemuth.lincal.data.LinCal getCalendarByPos(android.content.Context,int)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.Calendars: felixwiemuth.lincal.data.LinCal getCalendarById(android.content.Context,int)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.Calendars: felixwiemuth.lincal.data.LinCal loadCalendar(android.content.Context,java.lang.String)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.util.Util: void showErrorDialog(int,java.lang.String,boolean,android.content.Context)&gt;"/>  
        <node method="Util showErrorDialog" type="CreateMethod" unit="r3 = new android.content.Intent"/>  
        <node method="Util showErrorDialog" type="SetAttribute" unit="specialinvoke r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lfelixwiemuth/lincal/ui/CalendarListActivity;&quot;)"/>  
        <node method="Util showErrorDialog" type="PassOutIntent" unit="$r5 = virtualinvoke $r5.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r4)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="felixwiemuth.lincal.ui.AddCalendarActivity"> 
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.ui.AddCalendarActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.ui.AddCalendarActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle)"/>  
      <source name="felixwiemuth.lincal.ui.AddCalendarActivity"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.ui.AddCalendarActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="AddCalendarActivity onCreate" type="setContentView" unit="virtualinvoke r0.&lt;felixwiemuth.lincal.ui.AddCalendarActivity: void setContentView(int)&gt;(2131427355)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="felixwiemuth.lincal.ui.CalendarViewActivity"> 
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.ui.CalendarViewActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.ui.CalendarViewActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle)"/>  
      <source name="felixwiemuth.lincal.ui.CalendarViewActivity"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.ui.CalendarViewActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="CalendarViewActivity onCreate" type="setContentView" unit="virtualinvoke r0.&lt;felixwiemuth.lincal.ui.CalendarViewActivity: void setContentView(int)&gt;(2131427357)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="felixwiemuth.lincal.ui.CalendarViewFragment"> 
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$4$1: void onClick(android.content.DialogInterface,int)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$4$1: void onClick(android.content.DialogInterface,int)&gt;,void onClick(android.content.DialogInterface,int)"/>  
      <source name="felixwiemuth.lincal.ui.CalendarViewFragment"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$4$1: void onClick(android.content.DialogInterface,int)&gt;"/>  
        <node method="CalendarViewFragment$4$1 onClick" type="CreateMethod" unit="r2 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.acra.sender.SenderServiceStarter"> 
    <intentSummary> 
      <method value="&lt;org.acra.sender.SenderServiceStarter: void startService(boolean,boolean)&gt;"/>  
      <methodtrace value="&lt;org.acra.sender.SenderServiceStarter: void startService(boolean,boolean)&gt;,void startService(boolean,boolean)"/>  
      <source name="org.acra.sender.SenderServiceStarter"/>  
      <destinition name="org.acra.sender.SenderService"/>  
      <nodes> 
        <node method="&lt;org.acra.sender.SenderServiceStarter: void startService(boolean,boolean)&gt;"/>  
        <node method="SenderServiceStarter startService" type="CreateMethod" unit="r1 = new android.content.Intent"/>  
        <node method="SenderServiceStarter startService" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, class &quot;Lorg/acra/sender/SenderService;&quot;)"/>  
        <node method="SenderServiceStarter startService" type="PassOutIntent" unit="virtualinvoke $r4.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;(r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.acra.builder.ReportExecutor"> 
    <intentSummary> 
      <method value="&lt;org.acra.builder.ReportExecutor: void startSendingReports(boolean)&gt;"/>  
      <methodtrace value="&lt;org.acra.builder.ReportExecutor: void startSendingReports(boolean)&gt;,&lt;org.acra.sender.SenderServiceStarter: void startService(boolean,boolean)&gt;,void startService(boolean,boolean)"/>  
      <source name="org.acra.builder.ReportExecutor"/>  
      <destinition name="org.acra.sender.SenderService"/>  
      <nodes> 
        <node method="&lt;org.acra.builder.ReportExecutor: void startSendingReports(boolean)&gt;"/>  
        <node method="&lt;org.acra.sender.SenderServiceStarter: void startService(boolean,boolean)&gt;"/>  
        <node method="SenderServiceStarter startService" type="CreateMethod" unit="r1 = new android.content.Intent"/>  
        <node method="SenderServiceStarter startService" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, class &quot;Lorg/acra/sender/SenderService;&quot;)"/>  
        <node method="SenderServiceStarter startService" type="PassOutIntent" unit="virtualinvoke $r4.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;(r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.acra.builder.ReportExecutor"> 
    <intentSummary> 
      <method value="&lt;org.acra.builder.ReportExecutor: void dialogAndEnd(org.acra.builder.ReportBuilder,java.io.File,boolean)&gt;"/>  
      <methodtrace value="&lt;org.acra.builder.ReportExecutor: void dialogAndEnd(org.acra.builder.ReportBuilder,java.io.File,boolean)&gt;,void dialogAndEnd(org.acra.builder.ReportBuilder,java.io.File,boolean), &lt;org.acra.builder.ReportExecutor: android.content.Intent createCrashReportDialogIntent(java.io.File,org.acra.builder.ReportBuilder)&gt;"/>  
      <source name="org.acra.builder.ReportExecutor"/>  
      <destinition name="java.lang.Class"/>  
      <nodes> 
        <node method="&lt;org.acra.builder.ReportExecutor: void dialogAndEnd(org.acra.builder.ReportBuilder,java.io.File,boolean)&gt;"/>  
        <node method="ReportExecutor dialogAndEnd" type="ReceiveIntentFromRetValue" unit="$r7 = specialinvoke r0.&lt;org.acra.builder.ReportExecutor: android.content.Intent createCrashReportDialogIntent(java.io.File,org.acra.builder.ReportBuilder)&gt;($r2, $r1)"/>  
        <node method="ReportExecutor createCrashReportDialogIntent" type="CreateMethod" unit="r3 = new android.content.Intent"/>  
        <node method="ReportExecutor createCrashReportDialogIntent" type="SetAttribute" unit="specialinvoke r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r9, $r11)"/>  
        <node method="ReportExecutor dialogAndEnd" type="SetAttribute" unit="virtualinvoke $r7.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>  
        <node method="ReportExecutor dialogAndEnd" type="PassOutIntent" unit="virtualinvoke $r8.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r7)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.acra.builder.ReportExecutor"> 
    <intentSummary> 
      <method value="&lt;org.acra.builder.ReportExecutor: void access$400(org.acra.builder.ReportExecutor,org.acra.builder.ReportBuilder,java.io.File,boolean)&gt;"/>  
      <methodtrace value="&lt;org.acra.builder.ReportExecutor: void access$400(org.acra.builder.ReportExecutor,org.acra.builder.ReportBuilder,java.io.File,boolean)&gt;,&lt;org.acra.builder.ReportExecutor: void dialogAndEnd(org.acra.builder.ReportBuilder,java.io.File,boolean)&gt;,void dialogAndEnd(org.acra.builder.ReportBuilder,java.io.File,boolean), &lt;org.acra.builder.ReportExecutor: android.content.Intent createCrashReportDialogIntent(java.io.File,org.acra.builder.ReportBuilder)&gt;"/>  
      <source name="org.acra.builder.ReportExecutor"/>  
      <destinition name="java.lang.Class"/>  
      <nodes> 
        <node method="&lt;org.acra.builder.ReportExecutor: void access$400(org.acra.builder.ReportExecutor,org.acra.builder.ReportBuilder,java.io.File,boolean)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void dialogAndEnd(org.acra.builder.ReportBuilder,java.io.File,boolean)&gt;"/>  
        <node method="ReportExecutor dialogAndEnd" type="ReceiveIntentFromRetValue" unit="$r7 = specialinvoke r0.&lt;org.acra.builder.ReportExecutor: android.content.Intent createCrashReportDialogIntent(java.io.File,org.acra.builder.ReportBuilder)&gt;($r2, $r1)"/>  
        <node method="ReportExecutor createCrashReportDialogIntent" type="CreateMethod" unit="r3 = new android.content.Intent"/>  
        <node method="ReportExecutor createCrashReportDialogIntent" type="SetAttribute" unit="specialinvoke r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r9, $r11)"/>  
        <node method="ReportExecutor dialogAndEnd" type="SetAttribute" unit="virtualinvoke $r7.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>  
        <node method="ReportExecutor dialogAndEnd" type="PassOutIntent" unit="virtualinvoke $r8.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r7)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.acra.builder.ReportExecutor"> 
    <intentSummary> 
      <method value="&lt;org.acra.builder.ReportExecutor$2: void run()&gt;"/>  
      <methodtrace value="&lt;org.acra.builder.ReportExecutor$2: void run()&gt;,&lt;org.acra.builder.ReportExecutor: void access$400(org.acra.builder.ReportExecutor,org.acra.builder.ReportBuilder,java.io.File,boolean)&gt;,&lt;org.acra.builder.ReportExecutor: void dialogAndEnd(org.acra.builder.ReportBuilder,java.io.File,boolean)&gt;,void dialogAndEnd(org.acra.builder.ReportBuilder,java.io.File,boolean), &lt;org.acra.builder.ReportExecutor: android.content.Intent createCrashReportDialogIntent(java.io.File,org.acra.builder.ReportBuilder)&gt;"/>  
      <source name="org.acra.builder.ReportExecutor"/>  
      <destinition name="java.lang.Class"/>  
      <nodes> 
        <node method="&lt;org.acra.builder.ReportExecutor$2: void run()&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void access$400(org.acra.builder.ReportExecutor,org.acra.builder.ReportBuilder,java.io.File,boolean)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void dialogAndEnd(org.acra.builder.ReportBuilder,java.io.File,boolean)&gt;"/>  
        <node method="ReportExecutor dialogAndEnd" type="ReceiveIntentFromRetValue" unit="$r7 = specialinvoke r0.&lt;org.acra.builder.ReportExecutor: android.content.Intent createCrashReportDialogIntent(java.io.File,org.acra.builder.ReportBuilder)&gt;($r2, $r1)"/>  
        <node method="ReportExecutor createCrashReportDialogIntent" type="CreateMethod" unit="r3 = new android.content.Intent"/>  
        <node method="ReportExecutor createCrashReportDialogIntent" type="SetAttribute" unit="specialinvoke r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r9, $r11)"/>  
        <node method="ReportExecutor dialogAndEnd" type="SetAttribute" unit="virtualinvoke $r7.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>  
        <node method="ReportExecutor dialogAndEnd" type="PassOutIntent" unit="virtualinvoke $r8.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r7)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.acra.builder.ReportExecutor"> 
    <intentSummary> 
      <method value="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
      <methodtrace value="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;,&lt;org.acra.builder.ReportExecutor: void createNotification(java.io.File,org.acra.builder.ReportBuilder)&gt;,void createNotification(java.io.File,org.acra.builder.ReportBuilder), &lt;org.acra.builder.ReportExecutor: android.content.Intent createCrashReportDialogIntent(java.io.File,org.acra.builder.ReportBuilder)&gt;"/>  
      <source name="org.acra.builder.ReportExecutor"/>  
      <destinition name="java.lang.Class"/>  
      <nodes> 
        <node method="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void createNotification(java.io.File,org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="ReportExecutor createNotification" type="ReceiveIntentFromRetValue" unit="$r13 = specialinvoke r0.&lt;org.acra.builder.ReportExecutor: android.content.Intent createCrashReportDialogIntent(java.io.File,org.acra.builder.ReportBuilder)&gt;($r1, $r2)"/>  
        <node method="ReportExecutor createCrashReportDialogIntent" type="CreateMethod" unit="r3 = new android.content.Intent"/>  
        <node method="ReportExecutor createCrashReportDialogIntent" type="SetAttribute" unit="specialinvoke r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r9, $r11)"/>  
        <node method="ReportExecutor createNotification" type="PassOutIntent" unit="r3 = virtualinvoke r3.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r14)"/>  
        <node method="ReportExecutor createNotification" type="PassOutIntent" unit="r3 = virtualinvoke r3.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r14)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
      <methodtrace value="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;,&lt;org.acra.builder.ReportExecutor: void createNotification(java.io.File,org.acra.builder.ReportBuilder)&gt;,void createNotification(java.io.File,org.acra.builder.ReportBuilder), &lt;org.acra.builder.ReportExecutor: android.content.Intent createCrashReportDialogIntent(java.io.File,org.acra.builder.ReportBuilder)&gt;"/>  
      <source name="org.acra.builder.ReportExecutor"/>  
      <nodes> 
        <node method="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void createNotification(java.io.File,org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="ReportExecutor createNotification" type="PassOutIntent" unit="r3 = virtualinvoke r3.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r14)"/>  
        <node method="ReportExecutor createNotification" type="PassOutIntent" unit="r3 = virtualinvoke r3.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r14)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
      <methodtrace value="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;,&lt;org.acra.builder.ReportExecutor: void dialogAndEnd(org.acra.builder.ReportBuilder,java.io.File,boolean)&gt;,void dialogAndEnd(org.acra.builder.ReportBuilder,java.io.File,boolean), &lt;org.acra.builder.ReportExecutor: android.content.Intent createCrashReportDialogIntent(java.io.File,org.acra.builder.ReportBuilder)&gt;"/>  
      <source name="org.acra.builder.ReportExecutor"/>  
      <destinition name="java.lang.Class"/>  
      <nodes> 
        <node method="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void dialogAndEnd(org.acra.builder.ReportBuilder,java.io.File,boolean)&gt;"/>  
        <node method="ReportExecutor dialogAndEnd" type="ReceiveIntentFromRetValue" unit="$r7 = specialinvoke r0.&lt;org.acra.builder.ReportExecutor: android.content.Intent createCrashReportDialogIntent(java.io.File,org.acra.builder.ReportBuilder)&gt;($r2, $r1)"/>  
        <node method="ReportExecutor createCrashReportDialogIntent" type="CreateMethod" unit="r3 = new android.content.Intent"/>  
        <node method="ReportExecutor createCrashReportDialogIntent" type="SetAttribute" unit="specialinvoke r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r9, $r11)"/>  
        <node method="ReportExecutor dialogAndEnd" type="SetAttribute" unit="virtualinvoke $r7.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>  
        <node method="ReportExecutor dialogAndEnd" type="PassOutIntent" unit="virtualinvoke $r8.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r7)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
      <methodtrace value="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;,&lt;org.acra.builder.ReportExecutor: void startSendingReports(boolean)&gt;,&lt;org.acra.sender.SenderServiceStarter: void startService(boolean,boolean)&gt;,void startService(boolean,boolean)"/>  
      <source name="org.acra.builder.ReportExecutor"/>  
      <destinition name="org.acra.sender.SenderService"/>  
      <nodes> 
        <node method="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void startSendingReports(boolean)&gt;"/>  
        <node method="&lt;org.acra.sender.SenderServiceStarter: void startService(boolean,boolean)&gt;"/>  
        <node method="SenderServiceStarter startService" type="CreateMethod" unit="r1 = new android.content.Intent"/>  
        <node method="SenderServiceStarter startService" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, class &quot;Lorg/acra/sender/SenderService;&quot;)"/>  
        <node method="SenderServiceStarter startService" type="PassOutIntent" unit="virtualinvoke $r4.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;(r1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
      <methodtrace value="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;,&lt;org.acra.builder.ReportExecutor: void createNotification(java.io.File,org.acra.builder.ReportBuilder)&gt;,void createNotification(java.io.File,org.acra.builder.ReportBuilder), &lt;org.acra.builder.ReportExecutor: android.content.Intent createCrashReportDialogIntent(java.io.File,org.acra.builder.ReportBuilder)&gt;"/>  
      <source name="org.acra.builder.ReportExecutor"/>  
      <destinition name="java.lang.Class"/>  
      <nodes> 
        <node method="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void createNotification(java.io.File,org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="ReportExecutor createNotification" type="ReceiveIntentFromRetValue" unit="$r13 = specialinvoke r0.&lt;org.acra.builder.ReportExecutor: android.content.Intent createCrashReportDialogIntent(java.io.File,org.acra.builder.ReportBuilder)&gt;($r1, $r2)"/>  
        <node method="ReportExecutor createCrashReportDialogIntent" type="CreateMethod" unit="r3 = new android.content.Intent"/>  
        <node method="ReportExecutor createCrashReportDialogIntent" type="SetAttribute" unit="specialinvoke r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r9, $r11)"/>  
        <node method="ReportExecutor createNotification" type="PassOutIntent" unit="r3 = virtualinvoke r3.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r14)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.acra.builder.ReportBuilder"> 
    <intentSummary> 
      <method value="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;"/>  
      <methodtrace value="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;,&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;,&lt;org.acra.builder.ReportExecutor: void createNotification(java.io.File,org.acra.builder.ReportBuilder)&gt;,void createNotification(java.io.File,org.acra.builder.ReportBuilder), &lt;org.acra.builder.ReportExecutor: android.content.Intent createCrashReportDialogIntent(java.io.File,org.acra.builder.ReportBuilder)&gt;"/>  
      <source name="org.acra.builder.ReportBuilder"/>  
      <destinition name="java.lang.Class"/>  
      <nodes> 
        <node method="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void createNotification(java.io.File,org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="ReportExecutor createNotification" type="ReceiveIntentFromRetValue" unit="$r13 = specialinvoke r0.&lt;org.acra.builder.ReportExecutor: android.content.Intent createCrashReportDialogIntent(java.io.File,org.acra.builder.ReportBuilder)&gt;($r1, $r2)"/>  
        <node method="ReportExecutor createCrashReportDialogIntent" type="CreateMethod" unit="r3 = new android.content.Intent"/>  
        <node method="ReportExecutor createCrashReportDialogIntent" type="SetAttribute" unit="specialinvoke r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r9, $r11)"/>  
        <node method="ReportExecutor createNotification" type="PassOutIntent" unit="r3 = virtualinvoke r3.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r14)"/>  
        <node method="ReportExecutor createNotification" type="PassOutIntent" unit="r3 = virtualinvoke r3.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r14)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;"/>  
      <methodtrace value="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;,&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;,&lt;org.acra.builder.ReportExecutor: void createNotification(java.io.File,org.acra.builder.ReportBuilder)&gt;,void createNotification(java.io.File,org.acra.builder.ReportBuilder), &lt;org.acra.builder.ReportExecutor: android.content.Intent createCrashReportDialogIntent(java.io.File,org.acra.builder.ReportBuilder)&gt;"/>  
      <source name="org.acra.builder.ReportBuilder"/>  
      <nodes> 
        <node method="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void createNotification(java.io.File,org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="ReportExecutor createNotification" type="PassOutIntent" unit="r3 = virtualinvoke r3.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r14)"/>  
        <node method="ReportExecutor createNotification" type="PassOutIntent" unit="r3 = virtualinvoke r3.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r14)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;"/>  
      <methodtrace value="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;,&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;,&lt;org.acra.builder.ReportExecutor: void dialogAndEnd(org.acra.builder.ReportBuilder,java.io.File,boolean)&gt;,void dialogAndEnd(org.acra.builder.ReportBuilder,java.io.File,boolean), &lt;org.acra.builder.ReportExecutor: android.content.Intent createCrashReportDialogIntent(java.io.File,org.acra.builder.ReportBuilder)&gt;"/>  
      <source name="org.acra.builder.ReportBuilder"/>  
      <destinition name="java.lang.Class"/>  
      <nodes> 
        <node method="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void dialogAndEnd(org.acra.builder.ReportBuilder,java.io.File,boolean)&gt;"/>  
        <node method="ReportExecutor dialogAndEnd" type="ReceiveIntentFromRetValue" unit="$r7 = specialinvoke r0.&lt;org.acra.builder.ReportExecutor: android.content.Intent createCrashReportDialogIntent(java.io.File,org.acra.builder.ReportBuilder)&gt;($r2, $r1)"/>  
        <node method="ReportExecutor createCrashReportDialogIntent" type="CreateMethod" unit="r3 = new android.content.Intent"/>  
        <node method="ReportExecutor createCrashReportDialogIntent" type="SetAttribute" unit="specialinvoke r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r9, $r11)"/>  
        <node method="ReportExecutor dialogAndEnd" type="SetAttribute" unit="virtualinvoke $r7.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>  
        <node method="ReportExecutor dialogAndEnd" type="PassOutIntent" unit="virtualinvoke $r8.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r7)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;"/>  
      <methodtrace value="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;,&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;,&lt;org.acra.builder.ReportExecutor: void startSendingReports(boolean)&gt;,&lt;org.acra.sender.SenderServiceStarter: void startService(boolean,boolean)&gt;,void startService(boolean,boolean)"/>  
      <source name="org.acra.builder.ReportBuilder"/>  
      <destinition name="org.acra.sender.SenderService"/>  
      <nodes> 
        <node method="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void startSendingReports(boolean)&gt;"/>  
        <node method="&lt;org.acra.sender.SenderServiceStarter: void startService(boolean,boolean)&gt;"/>  
        <node method="SenderServiceStarter startService" type="CreateMethod" unit="r1 = new android.content.Intent"/>  
        <node method="SenderServiceStarter startService" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, class &quot;Lorg/acra/sender/SenderService;&quot;)"/>  
        <node method="SenderServiceStarter startService" type="PassOutIntent" unit="virtualinvoke $r4.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;(r1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;"/>  
      <methodtrace value="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;,&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;,&lt;org.acra.builder.ReportExecutor: void createNotification(java.io.File,org.acra.builder.ReportBuilder)&gt;,void createNotification(java.io.File,org.acra.builder.ReportBuilder), &lt;org.acra.builder.ReportExecutor: android.content.Intent createCrashReportDialogIntent(java.io.File,org.acra.builder.ReportBuilder)&gt;"/>  
      <source name="org.acra.builder.ReportBuilder"/>  
      <destinition name="java.lang.Class"/>  
      <nodes> 
        <node method="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void createNotification(java.io.File,org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="ReportExecutor createNotification" type="ReceiveIntentFromRetValue" unit="$r13 = specialinvoke r0.&lt;org.acra.builder.ReportExecutor: android.content.Intent createCrashReportDialogIntent(java.io.File,org.acra.builder.ReportBuilder)&gt;($r1, $r2)"/>  
        <node method="ReportExecutor createCrashReportDialogIntent" type="CreateMethod" unit="r3 = new android.content.Intent"/>  
        <node method="ReportExecutor createCrashReportDialogIntent" type="SetAttribute" unit="specialinvoke r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r9, $r11)"/>  
        <node method="ReportExecutor createNotification" type="PassOutIntent" unit="r3 = virtualinvoke r3.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r14)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.acra.ErrorReporter"> 
    <intentSummary> 
      <method value="&lt;org.acra.ErrorReporter: void handleSilentException(java.lang.Throwable)&gt;"/>  
      <methodtrace value="&lt;org.acra.ErrorReporter: void handleSilentException(java.lang.Throwable)&gt;,&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;,&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;,&lt;org.acra.builder.ReportExecutor: void createNotification(java.io.File,org.acra.builder.ReportBuilder)&gt;,void createNotification(java.io.File,org.acra.builder.ReportBuilder), &lt;org.acra.builder.ReportExecutor: android.content.Intent createCrashReportDialogIntent(java.io.File,org.acra.builder.ReportBuilder)&gt;"/>  
      <source name="org.acra.ErrorReporter"/>  
      <destinition name="java.lang.Class"/>  
      <nodes> 
        <node method="&lt;org.acra.ErrorReporter: void handleSilentException(java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void createNotification(java.io.File,org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="ReportExecutor createNotification" type="ReceiveIntentFromRetValue" unit="$r13 = specialinvoke r0.&lt;org.acra.builder.ReportExecutor: android.content.Intent createCrashReportDialogIntent(java.io.File,org.acra.builder.ReportBuilder)&gt;($r1, $r2)"/>  
        <node method="ReportExecutor createCrashReportDialogIntent" type="CreateMethod" unit="r3 = new android.content.Intent"/>  
        <node method="ReportExecutor createCrashReportDialogIntent" type="SetAttribute" unit="specialinvoke r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r9, $r11)"/>  
        <node method="ReportExecutor createNotification" type="PassOutIntent" unit="r3 = virtualinvoke r3.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r14)"/>  
        <node method="ReportExecutor createNotification" type="PassOutIntent" unit="r3 = virtualinvoke r3.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r14)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.ErrorReporter: void handleSilentException(java.lang.Throwable)&gt;"/>  
      <methodtrace value="&lt;org.acra.ErrorReporter: void handleSilentException(java.lang.Throwable)&gt;,&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;,&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;,&lt;org.acra.builder.ReportExecutor: void createNotification(java.io.File,org.acra.builder.ReportBuilder)&gt;,void createNotification(java.io.File,org.acra.builder.ReportBuilder), &lt;org.acra.builder.ReportExecutor: android.content.Intent createCrashReportDialogIntent(java.io.File,org.acra.builder.ReportBuilder)&gt;"/>  
      <source name="org.acra.ErrorReporter"/>  
      <nodes> 
        <node method="&lt;org.acra.ErrorReporter: void handleSilentException(java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void createNotification(java.io.File,org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="ReportExecutor createNotification" type="PassOutIntent" unit="r3 = virtualinvoke r3.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r14)"/>  
        <node method="ReportExecutor createNotification" type="PassOutIntent" unit="r3 = virtualinvoke r3.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r14)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.ErrorReporter: void handleSilentException(java.lang.Throwable)&gt;"/>  
      <methodtrace value="&lt;org.acra.ErrorReporter: void handleSilentException(java.lang.Throwable)&gt;,&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;,&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;,&lt;org.acra.builder.ReportExecutor: void dialogAndEnd(org.acra.builder.ReportBuilder,java.io.File,boolean)&gt;,void dialogAndEnd(org.acra.builder.ReportBuilder,java.io.File,boolean), &lt;org.acra.builder.ReportExecutor: android.content.Intent createCrashReportDialogIntent(java.io.File,org.acra.builder.ReportBuilder)&gt;"/>  
      <source name="org.acra.ErrorReporter"/>  
      <destinition name="java.lang.Class"/>  
      <nodes> 
        <node method="&lt;org.acra.ErrorReporter: void handleSilentException(java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void dialogAndEnd(org.acra.builder.ReportBuilder,java.io.File,boolean)&gt;"/>  
        <node method="ReportExecutor dialogAndEnd" type="ReceiveIntentFromRetValue" unit="$r7 = specialinvoke r0.&lt;org.acra.builder.ReportExecutor: android.content.Intent createCrashReportDialogIntent(java.io.File,org.acra.builder.ReportBuilder)&gt;($r2, $r1)"/>  
        <node method="ReportExecutor createCrashReportDialogIntent" type="CreateMethod" unit="r3 = new android.content.Intent"/>  
        <node method="ReportExecutor createCrashReportDialogIntent" type="SetAttribute" unit="specialinvoke r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r9, $r11)"/>  
        <node method="ReportExecutor dialogAndEnd" type="SetAttribute" unit="virtualinvoke $r7.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>  
        <node method="ReportExecutor dialogAndEnd" type="PassOutIntent" unit="virtualinvoke $r8.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r7)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.ErrorReporter: void handleSilentException(java.lang.Throwable)&gt;"/>  
      <methodtrace value="&lt;org.acra.ErrorReporter: void handleSilentException(java.lang.Throwable)&gt;,&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;,&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;,&lt;org.acra.builder.ReportExecutor: void startSendingReports(boolean)&gt;,&lt;org.acra.sender.SenderServiceStarter: void startService(boolean,boolean)&gt;,void startService(boolean,boolean)"/>  
      <source name="org.acra.ErrorReporter"/>  
      <destinition name="org.acra.sender.SenderService"/>  
      <nodes> 
        <node method="&lt;org.acra.ErrorReporter: void handleSilentException(java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void startSendingReports(boolean)&gt;"/>  
        <node method="&lt;org.acra.sender.SenderServiceStarter: void startService(boolean,boolean)&gt;"/>  
        <node method="SenderServiceStarter startService" type="CreateMethod" unit="r1 = new android.content.Intent"/>  
        <node method="SenderServiceStarter startService" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, class &quot;Lorg/acra/sender/SenderService;&quot;)"/>  
        <node method="SenderServiceStarter startService" type="PassOutIntent" unit="virtualinvoke $r4.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;(r1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.ErrorReporter: void handleSilentException(java.lang.Throwable)&gt;"/>  
      <methodtrace value="&lt;org.acra.ErrorReporter: void handleSilentException(java.lang.Throwable)&gt;,&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;,&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;,&lt;org.acra.builder.ReportExecutor: void createNotification(java.io.File,org.acra.builder.ReportBuilder)&gt;,void createNotification(java.io.File,org.acra.builder.ReportBuilder), &lt;org.acra.builder.ReportExecutor: android.content.Intent createCrashReportDialogIntent(java.io.File,org.acra.builder.ReportBuilder)&gt;"/>  
      <source name="org.acra.ErrorReporter"/>  
      <destinition name="java.lang.Class"/>  
      <nodes> 
        <node method="&lt;org.acra.ErrorReporter: void handleSilentException(java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void createNotification(java.io.File,org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="ReportExecutor createNotification" type="ReceiveIntentFromRetValue" unit="$r13 = specialinvoke r0.&lt;org.acra.builder.ReportExecutor: android.content.Intent createCrashReportDialogIntent(java.io.File,org.acra.builder.ReportBuilder)&gt;($r1, $r2)"/>  
        <node method="ReportExecutor createCrashReportDialogIntent" type="CreateMethod" unit="r3 = new android.content.Intent"/>  
        <node method="ReportExecutor createCrashReportDialogIntent" type="SetAttribute" unit="specialinvoke r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r9, $r11)"/>  
        <node method="ReportExecutor createNotification" type="PassOutIntent" unit="r3 = virtualinvoke r3.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r14)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="felixwiemuth.lincal.LinCalBroadcastReceiver"> 
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.LinCalBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.LinCalBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;,void onReceive(android.content.Context,android.content.Intent)"/>  
      <source name="felixwiemuth.lincal.LinCalBroadcastReceiver"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.LinCalBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="LinCalBroadcastReceiver onReceive" type="ReceiveIntentFromRetValue" unit="$r2 = virtualinvoke r0.&lt;felixwiemuth.lincal.LinCalBroadcastReceiver: android.content.Intent getIntent()&gt;()"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.LinCalBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.LinCalBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;,void onReceive(android.content.Context,android.content.Intent)"/>  
      <source name="felixwiemuth.lincal.LinCalBroadcastReceiver"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.LinCalBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="LinCalBroadcastReceiver onReceive" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.LinCalBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.LinCalBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;,void onReceive(android.content.Context,android.content.Intent)"/>  
      <source name="felixwiemuth.lincal.LinCalBroadcastReceiver"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.LinCalBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="LinCalBroadcastReceiver onReceive" type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter1: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.LinCalBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.LinCalBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;,void onReceive(android.content.Context,android.content.Intent)"/>  
      <source name="felixwiemuth.lincal.LinCalBroadcastReceiver"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.LinCalBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="LinCalBroadcastReceiver onReceive" type="ReceiveIntentFromRetValue" unit="$r2 = virtualinvoke r0.&lt;felixwiemuth.lincal.LinCalBroadcastReceiver: android.content.Intent getIntent()&gt;()"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.LinCalBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.LinCalBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;,void onReceive(android.content.Context,android.content.Intent)"/>  
      <source name="felixwiemuth.lincal.LinCalBroadcastReceiver"/>  
      <destinition name="felixwiemuth.lincal.NotificationService"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.LinCalBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"/>  
        <node method="LinCalBroadcastReceiver onReceive" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="LinCalBroadcastReceiver onReceive" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lfelixwiemuth/lincal/NotificationService;&quot;)"/>  
        <node method="LinCalBroadcastReceiver onReceive" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r2)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="felixwiemuth.lincal.ui.HtmlDialogFragment"> 
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.ui.HtmlDialogFragment: boolean loadUrl(android.webkit.WebView,android.net.Uri)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.ui.HtmlDialogFragment: boolean loadUrl(android.webkit.WebView,android.net.Uri)&gt;,boolean loadUrl(android.webkit.WebView,android.net.Uri)"/>  
      <source name="felixwiemuth.lincal.ui.HtmlDialogFragment"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.ui.HtmlDialogFragment: boolean loadUrl(android.webkit.WebView,android.net.Uri)&gt;"/>  
        <node method="HtmlDialogFragment loadUrl" type="CreateMethod" unit="$r8 = new android.content.Intent"/>  
        <node method="HtmlDialogFragment loadUrl" type="PassOutIntent" unit="virtualinvoke $r7.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r8)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="felixwiemuth.lincal.ui.HtmlDialogFragment"> 
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.ui.HtmlDialogFragment: boolean access$300(felixwiemuth.lincal.ui.HtmlDialogFragment,android.webkit.WebView,android.net.Uri)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.ui.HtmlDialogFragment: boolean access$300(felixwiemuth.lincal.ui.HtmlDialogFragment,android.webkit.WebView,android.net.Uri)&gt;,&lt;felixwiemuth.lincal.ui.HtmlDialogFragment: boolean loadUrl(android.webkit.WebView,android.net.Uri)&gt;,boolean loadUrl(android.webkit.WebView,android.net.Uri)"/>  
      <source name="felixwiemuth.lincal.ui.HtmlDialogFragment"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.ui.HtmlDialogFragment: boolean access$300(felixwiemuth.lincal.ui.HtmlDialogFragment,android.webkit.WebView,android.net.Uri)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.ui.HtmlDialogFragment: boolean loadUrl(android.webkit.WebView,android.net.Uri)&gt;"/>  
        <node method="HtmlDialogFragment loadUrl" type="CreateMethod" unit="$r8 = new android.content.Intent"/>  
        <node method="HtmlDialogFragment loadUrl" type="PassOutIntent" unit="virtualinvoke $r7.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r8)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="felixwiemuth.lincal.ui.HtmlDialogFragment"> 
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.ui.HtmlDialogFragment$3: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.ui.HtmlDialogFragment$3: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)&gt;,&lt;felixwiemuth.lincal.ui.HtmlDialogFragment: boolean access$300(felixwiemuth.lincal.ui.HtmlDialogFragment,android.webkit.WebView,android.net.Uri)&gt;,&lt;felixwiemuth.lincal.ui.HtmlDialogFragment: boolean loadUrl(android.webkit.WebView,android.net.Uri)&gt;,boolean loadUrl(android.webkit.WebView,android.net.Uri)"/>  
      <source name="felixwiemuth.lincal.ui.HtmlDialogFragment"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.ui.HtmlDialogFragment$3: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.ui.HtmlDialogFragment: boolean access$300(felixwiemuth.lincal.ui.HtmlDialogFragment,android.webkit.WebView,android.net.Uri)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.ui.HtmlDialogFragment: boolean loadUrl(android.webkit.WebView,android.net.Uri)&gt;"/>  
        <node method="HtmlDialogFragment loadUrl" type="CreateMethod" unit="$r8 = new android.content.Intent"/>  
        <node method="HtmlDialogFragment loadUrl" type="PassOutIntent" unit="virtualinvoke $r7.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r8)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="felixwiemuth.lincal.Calendars"> 
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.Calendars: int addCalendar(android.content.Context,felixwiemuth.lincal.data.LinCalConfig)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.Calendars: int addCalendar(android.content.Context,felixwiemuth.lincal.data.LinCalConfig)&gt;,&lt;felixwiemuth.lincal.NotificationService: void runWithCalendar(android.content.Context,int)&gt;,void runWithCalendar(android.content.Context,int)"/>  
      <source name="felixwiemuth.lincal.Calendars"/>  
      <destinition name="felixwiemuth.lincal.NotificationService"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.Calendars: int addCalendar(android.content.Context,felixwiemuth.lincal.data.LinCalConfig)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.NotificationService: void runWithCalendar(android.content.Context,int)&gt;"/>  
        <node method="NotificationService runWithCalendar" type="CreateMethod" unit="r1 = new android.content.Intent"/>  
        <node method="NotificationService runWithCalendar" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lfelixwiemuth/lincal/NotificationService;&quot;)"/>  
        <node method="NotificationService runWithCalendar" type="PassOutIntent" unit="virtualinvoke $r0.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;(r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="felixwiemuth.lincal.Calendars"> 
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.Calendars$1: void onClick(android.content.DialogInterface,int)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.Calendars$1: void onClick(android.content.DialogInterface,int)&gt;,&lt;felixwiemuth.lincal.Calendars: int addCalendar(android.content.Context,felixwiemuth.lincal.data.LinCalConfig)&gt;,&lt;felixwiemuth.lincal.NotificationService: void runWithCalendar(android.content.Context,int)&gt;,void runWithCalendar(android.content.Context,int)"/>  
      <source name="felixwiemuth.lincal.Calendars"/>  
      <destinition name="felixwiemuth.lincal.NotificationService"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.Calendars$1: void onClick(android.content.DialogInterface,int)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.Calendars: int addCalendar(android.content.Context,felixwiemuth.lincal.data.LinCalConfig)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.NotificationService: void runWithCalendar(android.content.Context,int)&gt;"/>  
        <node method="NotificationService runWithCalendar" type="CreateMethod" unit="r1 = new android.content.Intent"/>  
        <node method="NotificationService runWithCalendar" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lfelixwiemuth/lincal/NotificationService;&quot;)"/>  
        <node method="NotificationService runWithCalendar" type="PassOutIntent" unit="virtualinvoke $r0.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;(r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="felixwiemuth.lincal.Calendars"> 
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.Calendars: void addCalendarChecked(felixwiemuth.lincal.data.LinCalConfig,android.content.Context,java.lang.Runnable)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.Calendars: void addCalendarChecked(felixwiemuth.lincal.data.LinCalConfig,android.content.Context,java.lang.Runnable)&gt;,&lt;felixwiemuth.lincal.Calendars: int addCalendar(android.content.Context,felixwiemuth.lincal.data.LinCalConfig)&gt;,&lt;felixwiemuth.lincal.NotificationService: void runWithCalendar(android.content.Context,int)&gt;,void runWithCalendar(android.content.Context,int)"/>  
      <source name="felixwiemuth.lincal.Calendars"/>  
      <destinition name="felixwiemuth.lincal.NotificationService"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.Calendars: void addCalendarChecked(felixwiemuth.lincal.data.LinCalConfig,android.content.Context,java.lang.Runnable)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.Calendars: int addCalendar(android.content.Context,felixwiemuth.lincal.data.LinCalConfig)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.NotificationService: void runWithCalendar(android.content.Context,int)&gt;"/>  
        <node method="NotificationService runWithCalendar" type="CreateMethod" unit="r1 = new android.content.Intent"/>  
        <node method="NotificationService runWithCalendar" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lfelixwiemuth/lincal/NotificationService;&quot;)"/>  
        <node method="NotificationService runWithCalendar" type="PassOutIntent" unit="virtualinvoke $r0.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;(r1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.Calendars: void addCalendarChecked(felixwiemuth.lincal.data.LinCalConfig,android.content.Context,java.lang.Runnable)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.Calendars: void addCalendarChecked(felixwiemuth.lincal.data.LinCalConfig,android.content.Context,java.lang.Runnable)&gt;,&lt;felixwiemuth.lincal.Calendars: felixwiemuth.lincal.data.LinCal loadCalendar(android.content.Context,java.lang.String)&gt;,&lt;felixwiemuth.lincal.util.Util: void showErrorDialog(int,java.lang.String,boolean,android.content.Context)&gt;,void showErrorDialog(int,java.lang.String,boolean,android.content.Context)"/>  
      <source name="felixwiemuth.lincal.Calendars"/>  
      <destinition name="felixwiemuth.lincal.ui.CalendarListActivity"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.Calendars: void addCalendarChecked(felixwiemuth.lincal.data.LinCalConfig,android.content.Context,java.lang.Runnable)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.Calendars: felixwiemuth.lincal.data.LinCal loadCalendar(android.content.Context,java.lang.String)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.util.Util: void showErrorDialog(int,java.lang.String,boolean,android.content.Context)&gt;"/>  
        <node method="Util showErrorDialog" type="CreateMethod" unit="r3 = new android.content.Intent"/>  
        <node method="Util showErrorDialog" type="SetAttribute" unit="specialinvoke r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lfelixwiemuth/lincal/ui/CalendarListActivity;&quot;)"/>  
        <node method="Util showErrorDialog" type="PassOutIntent" unit="$r5 = virtualinvoke $r5.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r4)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.acra.ErrorReporter"> 
    <intentSummary> 
      <method value="&lt;org.acra.ErrorReporter: void uncaughtException(java.lang.Thread,java.lang.Throwable)&gt;"/>  
      <methodtrace value="&lt;org.acra.ErrorReporter: void uncaughtException(java.lang.Thread,java.lang.Throwable)&gt;,&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;,&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;,&lt;org.acra.builder.ReportExecutor: void createNotification(java.io.File,org.acra.builder.ReportBuilder)&gt;,void createNotification(java.io.File,org.acra.builder.ReportBuilder), &lt;org.acra.builder.ReportExecutor: android.content.Intent createCrashReportDialogIntent(java.io.File,org.acra.builder.ReportBuilder)&gt;"/>  
      <source name="org.acra.ErrorReporter"/>  
      <destinition name="java.lang.Class"/>  
      <nodes> 
        <node method="&lt;org.acra.ErrorReporter: void uncaughtException(java.lang.Thread,java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void createNotification(java.io.File,org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="ReportExecutor createNotification" type="ReceiveIntentFromRetValue" unit="$r13 = specialinvoke r0.&lt;org.acra.builder.ReportExecutor: android.content.Intent createCrashReportDialogIntent(java.io.File,org.acra.builder.ReportBuilder)&gt;($r1, $r2)"/>  
        <node method="ReportExecutor createCrashReportDialogIntent" type="CreateMethod" unit="r3 = new android.content.Intent"/>  
        <node method="ReportExecutor createCrashReportDialogIntent" type="SetAttribute" unit="specialinvoke r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r9, $r11)"/>  
        <node method="ReportExecutor createNotification" type="PassOutIntent" unit="r3 = virtualinvoke r3.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r14)"/>  
        <node method="ReportExecutor createNotification" type="PassOutIntent" unit="r3 = virtualinvoke r3.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r14)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.ErrorReporter: void uncaughtException(java.lang.Thread,java.lang.Throwable)&gt;"/>  
      <methodtrace value="&lt;org.acra.ErrorReporter: void uncaughtException(java.lang.Thread,java.lang.Throwable)&gt;,&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;,&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;,&lt;org.acra.builder.ReportExecutor: void createNotification(java.io.File,org.acra.builder.ReportBuilder)&gt;,void createNotification(java.io.File,org.acra.builder.ReportBuilder), &lt;org.acra.builder.ReportExecutor: android.content.Intent createCrashReportDialogIntent(java.io.File,org.acra.builder.ReportBuilder)&gt;"/>  
      <source name="org.acra.ErrorReporter"/>  
      <nodes> 
        <node method="&lt;org.acra.ErrorReporter: void uncaughtException(java.lang.Thread,java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void createNotification(java.io.File,org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="ReportExecutor createNotification" type="PassOutIntent" unit="r3 = virtualinvoke r3.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r14)"/>  
        <node method="ReportExecutor createNotification" type="PassOutIntent" unit="r3 = virtualinvoke r3.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r14)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.ErrorReporter: void uncaughtException(java.lang.Thread,java.lang.Throwable)&gt;"/>  
      <methodtrace value="&lt;org.acra.ErrorReporter: void uncaughtException(java.lang.Thread,java.lang.Throwable)&gt;,&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;,&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;,&lt;org.acra.builder.ReportExecutor: void dialogAndEnd(org.acra.builder.ReportBuilder,java.io.File,boolean)&gt;,void dialogAndEnd(org.acra.builder.ReportBuilder,java.io.File,boolean), &lt;org.acra.builder.ReportExecutor: android.content.Intent createCrashReportDialogIntent(java.io.File,org.acra.builder.ReportBuilder)&gt;"/>  
      <source name="org.acra.ErrorReporter"/>  
      <destinition name="java.lang.Class"/>  
      <nodes> 
        <node method="&lt;org.acra.ErrorReporter: void uncaughtException(java.lang.Thread,java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void dialogAndEnd(org.acra.builder.ReportBuilder,java.io.File,boolean)&gt;"/>  
        <node method="ReportExecutor dialogAndEnd" type="ReceiveIntentFromRetValue" unit="$r7 = specialinvoke r0.&lt;org.acra.builder.ReportExecutor: android.content.Intent createCrashReportDialogIntent(java.io.File,org.acra.builder.ReportBuilder)&gt;($r2, $r1)"/>  
        <node method="ReportExecutor createCrashReportDialogIntent" type="CreateMethod" unit="r3 = new android.content.Intent"/>  
        <node method="ReportExecutor createCrashReportDialogIntent" type="SetAttribute" unit="specialinvoke r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r9, $r11)"/>  
        <node method="ReportExecutor dialogAndEnd" type="SetAttribute" unit="virtualinvoke $r7.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>  
        <node method="ReportExecutor dialogAndEnd" type="PassOutIntent" unit="virtualinvoke $r8.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r7)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.ErrorReporter: void uncaughtException(java.lang.Thread,java.lang.Throwable)&gt;"/>  
      <methodtrace value="&lt;org.acra.ErrorReporter: void uncaughtException(java.lang.Thread,java.lang.Throwable)&gt;,&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;,&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;,&lt;org.acra.builder.ReportExecutor: void startSendingReports(boolean)&gt;,&lt;org.acra.sender.SenderServiceStarter: void startService(boolean,boolean)&gt;,void startService(boolean,boolean)"/>  
      <source name="org.acra.ErrorReporter"/>  
      <destinition name="org.acra.sender.SenderService"/>  
      <nodes> 
        <node method="&lt;org.acra.ErrorReporter: void uncaughtException(java.lang.Thread,java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void startSendingReports(boolean)&gt;"/>  
        <node method="&lt;org.acra.sender.SenderServiceStarter: void startService(boolean,boolean)&gt;"/>  
        <node method="SenderServiceStarter startService" type="CreateMethod" unit="r1 = new android.content.Intent"/>  
        <node method="SenderServiceStarter startService" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, class &quot;Lorg/acra/sender/SenderService;&quot;)"/>  
        <node method="SenderServiceStarter startService" type="PassOutIntent" unit="virtualinvoke $r4.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;(r1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.ErrorReporter: void uncaughtException(java.lang.Thread,java.lang.Throwable)&gt;"/>  
      <methodtrace value="&lt;org.acra.ErrorReporter: void uncaughtException(java.lang.Thread,java.lang.Throwable)&gt;,&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;,&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;,&lt;org.acra.builder.ReportExecutor: void createNotification(java.io.File,org.acra.builder.ReportBuilder)&gt;,void createNotification(java.io.File,org.acra.builder.ReportBuilder), &lt;org.acra.builder.ReportExecutor: android.content.Intent createCrashReportDialogIntent(java.io.File,org.acra.builder.ReportBuilder)&gt;"/>  
      <source name="org.acra.ErrorReporter"/>  
      <destinition name="java.lang.Class"/>  
      <nodes> 
        <node method="&lt;org.acra.ErrorReporter: void uncaughtException(java.lang.Thread,java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void createNotification(java.io.File,org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="ReportExecutor createNotification" type="ReceiveIntentFromRetValue" unit="$r13 = specialinvoke r0.&lt;org.acra.builder.ReportExecutor: android.content.Intent createCrashReportDialogIntent(java.io.File,org.acra.builder.ReportBuilder)&gt;($r1, $r2)"/>  
        <node method="ReportExecutor createCrashReportDialogIntent" type="CreateMethod" unit="r3 = new android.content.Intent"/>  
        <node method="ReportExecutor createCrashReportDialogIntent" type="SetAttribute" unit="specialinvoke r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r9, $r11)"/>  
        <node method="ReportExecutor createNotification" type="PassOutIntent" unit="r3 = virtualinvoke r3.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r14)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="felixwiemuth.lincal.ui.CalendarViewFragment"> 
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter$1: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter$1: void onClick(android.view.View)&gt;,&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter: void access$600(felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter,felixwiemuth.lincal.data.CEntry,boolean)&gt;,&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter: void showEntryDialog(felixwiemuth.lincal.data.CEntry,boolean)&gt;,&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter$4: void onClick(android.content.DialogInterface,int)&gt;,&lt;felixwiemuth.lincal.data.CEntry: void open(android.content.Context)&gt;,void open(android.content.Context)"/>  
      <source name="felixwiemuth.lincal.ui.CalendarViewFragment"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter$1: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter: void access$600(felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter,felixwiemuth.lincal.data.CEntry,boolean)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter: void showEntryDialog(felixwiemuth.lincal.data.CEntry,boolean)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter$4: void onClick(android.content.DialogInterface,int)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.data.CEntry: void open(android.content.Context)&gt;"/>  
        <node method="CEntry open" type="CreateMethod" unit="r3 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter$1: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter$1: void onClick(android.view.View)&gt;,&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter: void access$600(felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter,felixwiemuth.lincal.data.CEntry,boolean)&gt;,&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter: void showEntryDialog(felixwiemuth.lincal.data.CEntry,boolean)&gt;,&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter$4: void onClick(android.content.DialogInterface,int)&gt;,&lt;felixwiemuth.lincal.data.CEntry: void open(android.content.Context)&gt;,void open(android.content.Context)"/>  
      <source name="felixwiemuth.lincal.ui.CalendarViewFragment"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter$1: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter: void access$600(felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter,felixwiemuth.lincal.data.CEntry,boolean)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter: void showEntryDialog(felixwiemuth.lincal.data.CEntry,boolean)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter$4: void onClick(android.content.DialogInterface,int)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.data.CEntry: void open(android.content.Context)&gt;"/>  
        <node method="CEntry open" type="CreateMethod" unit="r3 = new android.content.Intent"/>  
        <node method="CEntry open" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;(r3)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="felixwiemuth.lincal.ui.CalendarViewFragment"> 
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter: void onBindViewHolder(felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter$ViewHolder,int)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter: void onBindViewHolder(felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter$ViewHolder,int)&gt;,&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter$1: void onClick(android.view.View)&gt;,&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter: void access$600(felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter,felixwiemuth.lincal.data.CEntry,boolean)&gt;,&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter: void showEntryDialog(felixwiemuth.lincal.data.CEntry,boolean)&gt;,&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter$4: void onClick(android.content.DialogInterface,int)&gt;,&lt;felixwiemuth.lincal.data.CEntry: void open(android.content.Context)&gt;,void open(android.content.Context)"/>  
      <source name="felixwiemuth.lincal.ui.CalendarViewFragment"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter: void onBindViewHolder(felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter$ViewHolder,int)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter$1: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter: void access$600(felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter,felixwiemuth.lincal.data.CEntry,boolean)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter: void showEntryDialog(felixwiemuth.lincal.data.CEntry,boolean)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter$4: void onClick(android.content.DialogInterface,int)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.data.CEntry: void open(android.content.Context)&gt;"/>  
        <node method="CEntry open" type="CreateMethod" unit="r3 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter: void onBindViewHolder(felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter$ViewHolder,int)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter: void onBindViewHolder(felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter$ViewHolder,int)&gt;,&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter$1: void onClick(android.view.View)&gt;,&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter: void access$600(felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter,felixwiemuth.lincal.data.CEntry,boolean)&gt;,&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter: void showEntryDialog(felixwiemuth.lincal.data.CEntry,boolean)&gt;,&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter$4: void onClick(android.content.DialogInterface,int)&gt;,&lt;felixwiemuth.lincal.data.CEntry: void open(android.content.Context)&gt;,void open(android.content.Context)"/>  
      <source name="felixwiemuth.lincal.ui.CalendarViewFragment"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter: void onBindViewHolder(felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter$ViewHolder,int)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter$1: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter: void access$600(felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter,felixwiemuth.lincal.data.CEntry,boolean)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter: void showEntryDialog(felixwiemuth.lincal.data.CEntry,boolean)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter$4: void onClick(android.content.DialogInterface,int)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.data.CEntry: void open(android.content.Context)&gt;"/>  
        <node method="CEntry open" type="CreateMethod" unit="r3 = new android.content.Intent"/>  
        <node method="CEntry open" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;(r3)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="felixwiemuth.lincal.ui.CalendarViewFragment"> 
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter: void onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter: void onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int)&gt;,&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter: void onBindViewHolder(felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter$ViewHolder,int)&gt;,&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter$1: void onClick(android.view.View)&gt;,&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter: void access$600(felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter,felixwiemuth.lincal.data.CEntry,boolean)&gt;,&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter: void showEntryDialog(felixwiemuth.lincal.data.CEntry,boolean)&gt;,&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter$4: void onClick(android.content.DialogInterface,int)&gt;,&lt;felixwiemuth.lincal.data.CEntry: void open(android.content.Context)&gt;,void open(android.content.Context)"/>  
      <source name="felixwiemuth.lincal.ui.CalendarViewFragment"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter: void onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter: void onBindViewHolder(felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter$ViewHolder,int)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter$1: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter: void access$600(felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter,felixwiemuth.lincal.data.CEntry,boolean)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter: void showEntryDialog(felixwiemuth.lincal.data.CEntry,boolean)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter$4: void onClick(android.content.DialogInterface,int)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.data.CEntry: void open(android.content.Context)&gt;"/>  
        <node method="CEntry open" type="CreateMethod" unit="r3 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter: void onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter: void onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int)&gt;,&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter: void onBindViewHolder(felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter$ViewHolder,int)&gt;,&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter$1: void onClick(android.view.View)&gt;,&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter: void access$600(felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter,felixwiemuth.lincal.data.CEntry,boolean)&gt;,&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter: void showEntryDialog(felixwiemuth.lincal.data.CEntry,boolean)&gt;,&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter$4: void onClick(android.content.DialogInterface,int)&gt;,&lt;felixwiemuth.lincal.data.CEntry: void open(android.content.Context)&gt;,void open(android.content.Context)"/>  
      <source name="felixwiemuth.lincal.ui.CalendarViewFragment"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter: void onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter: void onBindViewHolder(felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter$ViewHolder,int)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter$1: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter: void access$600(felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter,felixwiemuth.lincal.data.CEntry,boolean)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter: void showEntryDialog(felixwiemuth.lincal.data.CEntry,boolean)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$SimpleItemRecyclerViewAdapter$4: void onClick(android.content.DialogInterface,int)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.data.CEntry: void open(android.content.Context)&gt;"/>  
        <node method="CEntry open" type="CreateMethod" unit="r3 = new android.content.Intent"/>  
        <node method="CEntry open" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;(r3)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.acra.util.ApplicationStartupProcessor"> 
    <intentSummary> 
      <method value="&lt;org.acra.util.ApplicationStartupProcessor: void sendApprovedReports()&gt;"/>  
      <methodtrace value="&lt;org.acra.util.ApplicationStartupProcessor: void sendApprovedReports()&gt;,&lt;org.acra.sender.SenderServiceStarter: void startService(boolean,boolean)&gt;,void startService(boolean,boolean)"/>  
      <source name="org.acra.util.ApplicationStartupProcessor"/>  
      <destinition name="org.acra.sender.SenderService"/>  
      <nodes> 
        <node method="&lt;org.acra.util.ApplicationStartupProcessor: void sendApprovedReports()&gt;"/>  
        <node method="&lt;org.acra.sender.SenderServiceStarter: void startService(boolean,boolean)&gt;"/>  
        <node method="SenderServiceStarter startService" type="CreateMethod" unit="r1 = new android.content.Intent"/>  
        <node method="SenderServiceStarter startService" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, class &quot;Lorg/acra/sender/SenderService;&quot;)"/>  
        <node method="SenderServiceStarter startService" type="PassOutIntent" unit="virtualinvoke $r4.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;(r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.acra.ACRA"> 
    <intentSummary> 
      <method value="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.ACRAConfiguration,boolean)&gt;"/>  
      <methodtrace value="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.ACRAConfiguration,boolean)&gt;,&lt;org.acra.util.ApplicationStartupProcessor: void sendApprovedReports()&gt;,&lt;org.acra.sender.SenderServiceStarter: void startService(boolean,boolean)&gt;,void startService(boolean,boolean)"/>  
      <source name="org.acra.ACRA"/>  
      <destinition name="org.acra.sender.SenderService"/>  
      <nodes> 
        <node method="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.ACRAConfiguration,boolean)&gt;"/>  
        <node method="&lt;org.acra.util.ApplicationStartupProcessor: void sendApprovedReports()&gt;"/>  
        <node method="&lt;org.acra.sender.SenderServiceStarter: void startService(boolean,boolean)&gt;"/>  
        <node method="SenderServiceStarter startService" type="CreateMethod" unit="r1 = new android.content.Intent"/>  
        <node method="SenderServiceStarter startService" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, class &quot;Lorg/acra/sender/SenderService;&quot;)"/>  
        <node method="SenderServiceStarter startService" type="PassOutIntent" unit="virtualinvoke $r4.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;(r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.acra.ACRA"> 
    <intentSummary> 
      <method value="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.ACRAConfiguration)&gt;"/>  
      <methodtrace value="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.ACRAConfiguration)&gt;,&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.ACRAConfiguration,boolean)&gt;,&lt;org.acra.util.ApplicationStartupProcessor: void sendApprovedReports()&gt;,&lt;org.acra.sender.SenderServiceStarter: void startService(boolean,boolean)&gt;,void startService(boolean,boolean)"/>  
      <source name="org.acra.ACRA"/>  
      <destinition name="org.acra.sender.SenderService"/>  
      <nodes> 
        <node method="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.ACRAConfiguration)&gt;"/>  
        <node method="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.ACRAConfiguration,boolean)&gt;"/>  
        <node method="&lt;org.acra.util.ApplicationStartupProcessor: void sendApprovedReports()&gt;"/>  
        <node method="&lt;org.acra.sender.SenderServiceStarter: void startService(boolean,boolean)&gt;"/>  
        <node method="SenderServiceStarter startService" type="CreateMethod" unit="r1 = new android.content.Intent"/>  
        <node method="SenderServiceStarter startService" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, class &quot;Lorg/acra/sender/SenderService;&quot;)"/>  
        <node method="SenderServiceStarter startService" type="PassOutIntent" unit="virtualinvoke $r4.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;(r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="felixwiemuth.lincal.ui.LinCalMenuAppCompatActivity"> 
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.ui.LinCalMenuAppCompatActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.ui.LinCalMenuAppCompatActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,boolean onOptionsItemSelected(android.view.MenuItem)"/>  
      <source name="felixwiemuth.lincal.ui.LinCalMenuAppCompatActivity"/>  
      <destinition name="felixwiemuth.lincal.ui.SettingsActivity"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.ui.LinCalMenuAppCompatActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="LinCalMenuAppCompatActivity onOptionsItemSelected" type="CreateMethod" unit="r3 = new android.content.Intent"/>  
        <node method="LinCalMenuAppCompatActivity onOptionsItemSelected" type="SetAttribute" unit="specialinvoke r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lfelixwiemuth/lincal/ui/SettingsActivity;&quot;)"/>  
        <node method="LinCalMenuAppCompatActivity onOptionsItemSelected" type="PassOutIntent" unit="virtualinvoke r0.&lt;felixwiemuth.lincal.ui.LinCalMenuAppCompatActivity: void startActivity(android.content.Intent)&gt;(r3)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="felixwiemuth.lincal.ui.CalendarViewActivity"> 
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.ui.CalendarViewActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.ui.CalendarViewActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,&lt;felixwiemuth.lincal.ui.LinCalMenuAppCompatActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,boolean onOptionsItemSelected(android.view.MenuItem)"/>  
      <source name="felixwiemuth.lincal.ui.CalendarViewActivity"/>  
      <destinition name="felixwiemuth.lincal.ui.SettingsActivity"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.ui.CalendarViewActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.ui.LinCalMenuAppCompatActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="LinCalMenuAppCompatActivity onOptionsItemSelected" type="CreateMethod" unit="r3 = new android.content.Intent"/>  
        <node method="LinCalMenuAppCompatActivity onOptionsItemSelected" type="SetAttribute" unit="specialinvoke r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lfelixwiemuth/lincal/ui/SettingsActivity;&quot;)"/>  
        <node method="LinCalMenuAppCompatActivity onOptionsItemSelected" type="PassOutIntent" unit="virtualinvoke r0.&lt;felixwiemuth.lincal.ui.LinCalMenuAppCompatActivity: void startActivity(android.content.Intent)&gt;(r3)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.ui.CalendarViewActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.ui.CalendarViewActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,boolean onOptionsItemSelected(android.view.MenuItem)"/>  
      <source name="felixwiemuth.lincal.ui.CalendarViewActivity"/>  
      <destinition name="felixwiemuth.lincal.ui.CalendarListActivity"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.ui.CalendarViewActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="CalendarViewActivity onOptionsItemSelected" type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
        <node method="CalendarViewActivity onOptionsItemSelected" type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lfelixwiemuth/lincal/ui/CalendarListActivity;&quot;)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="felixwiemuth.lincal.ui.HtmlDialogFragment"> 
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.ui.HtmlDialogFragment$2: boolean shouldOverrideUrlLoading(android.webkit.WebView,android.webkit.WebResourceRequest)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.ui.HtmlDialogFragment$2: boolean shouldOverrideUrlLoading(android.webkit.WebView,android.webkit.WebResourceRequest)&gt;,&lt;felixwiemuth.lincal.ui.HtmlDialogFragment: boolean access$300(felixwiemuth.lincal.ui.HtmlDialogFragment,android.webkit.WebView,android.net.Uri)&gt;,&lt;felixwiemuth.lincal.ui.HtmlDialogFragment: boolean loadUrl(android.webkit.WebView,android.net.Uri)&gt;,boolean loadUrl(android.webkit.WebView,android.net.Uri)"/>  
      <source name="felixwiemuth.lincal.ui.HtmlDialogFragment"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.ui.HtmlDialogFragment$2: boolean shouldOverrideUrlLoading(android.webkit.WebView,android.webkit.WebResourceRequest)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.ui.HtmlDialogFragment: boolean access$300(felixwiemuth.lincal.ui.HtmlDialogFragment,android.webkit.WebView,android.net.Uri)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.ui.HtmlDialogFragment: boolean loadUrl(android.webkit.WebView,android.net.Uri)&gt;"/>  
        <node method="HtmlDialogFragment loadUrl" type="CreateMethod" unit="$r8 = new android.content.Intent"/>  
        <node method="HtmlDialogFragment loadUrl" type="PassOutIntent" unit="virtualinvoke $r7.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r8)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.acra.ACRA"> 
    <intentSummary> 
      <method value="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.ConfigurationBuilder,boolean)&gt;"/>  
      <methodtrace value="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.ConfigurationBuilder,boolean)&gt;,&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.ACRAConfiguration,boolean)&gt;,&lt;org.acra.util.ApplicationStartupProcessor: void sendApprovedReports()&gt;,&lt;org.acra.sender.SenderServiceStarter: void startService(boolean,boolean)&gt;,void startService(boolean,boolean)"/>  
      <source name="org.acra.ACRA"/>  
      <destinition name="org.acra.sender.SenderService"/>  
      <nodes> 
        <node method="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.ConfigurationBuilder,boolean)&gt;"/>  
        <node method="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.ACRAConfiguration,boolean)&gt;"/>  
        <node method="&lt;org.acra.util.ApplicationStartupProcessor: void sendApprovedReports()&gt;"/>  
        <node method="&lt;org.acra.sender.SenderServiceStarter: void startService(boolean,boolean)&gt;"/>  
        <node method="SenderServiceStarter startService" type="CreateMethod" unit="r1 = new android.content.Intent"/>  
        <node method="SenderServiceStarter startService" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, class &quot;Lorg/acra/sender/SenderService;&quot;)"/>  
        <node method="SenderServiceStarter startService" type="PassOutIntent" unit="virtualinvoke $r4.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;(r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="felixwiemuth.lincal.ui.CalendarListActivity"> 
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.ui.CalendarListActivity$SimpleItemRecyclerViewAdapter: void onBindViewHolder(felixwiemuth.lincal.ui.CalendarListActivity$SimpleItemRecyclerViewAdapter$ViewHolder,int)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.ui.CalendarListActivity$SimpleItemRecyclerViewAdapter: void onBindViewHolder(felixwiemuth.lincal.ui.CalendarListActivity$SimpleItemRecyclerViewAdapter$ViewHolder,int)&gt;,&lt;felixwiemuth.lincal.ui.CalendarListActivity$SimpleItemRecyclerViewAdapter$1: void onClick(android.view.View)&gt;,void onClick(android.view.View)"/>  
      <source name="felixwiemuth.lincal.ui.CalendarListActivity"/>  
      <destinition name="felixwiemuth.lincal.ui.CalendarViewActivity"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.ui.CalendarListActivity$SimpleItemRecyclerViewAdapter: void onBindViewHolder(felixwiemuth.lincal.ui.CalendarListActivity$SimpleItemRecyclerViewAdapter$ViewHolder,int)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.ui.CalendarListActivity$SimpleItemRecyclerViewAdapter$1: void onClick(android.view.View)&gt;"/>  
        <node method="CalendarListActivity$SimpleItemRecyclerViewAdapter$1 onClick" type="CreateMethod" unit="r4 = new android.content.Intent"/>  
        <node method="CalendarListActivity$SimpleItemRecyclerViewAdapter$1 onClick" type="SetAttribute" unit="specialinvoke r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r10, class &quot;Lfelixwiemuth/lincal/ui/CalendarViewActivity;&quot;)"/>  
        <node method="CalendarListActivity$SimpleItemRecyclerViewAdapter$1 onClick" type="PassOutIntent" unit="virtualinvoke $r6.&lt;felixwiemuth.lincal.ui.CalendarListActivity: void startActivityForResult(android.content.Intent,int)&gt;(r4, 0)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="felixwiemuth.lincal.ui.CalendarListActivity"> 
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.ui.CalendarListActivity$SimpleItemRecyclerViewAdapter: void onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.ui.CalendarListActivity$SimpleItemRecyclerViewAdapter: void onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int)&gt;,&lt;felixwiemuth.lincal.ui.CalendarListActivity$SimpleItemRecyclerViewAdapter: void onBindViewHolder(felixwiemuth.lincal.ui.CalendarListActivity$SimpleItemRecyclerViewAdapter$ViewHolder,int)&gt;,&lt;felixwiemuth.lincal.ui.CalendarListActivity$SimpleItemRecyclerViewAdapter$1: void onClick(android.view.View)&gt;,void onClick(android.view.View)"/>  
      <source name="felixwiemuth.lincal.ui.CalendarListActivity"/>  
      <destinition name="felixwiemuth.lincal.ui.CalendarViewActivity"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.ui.CalendarListActivity$SimpleItemRecyclerViewAdapter: void onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.ui.CalendarListActivity$SimpleItemRecyclerViewAdapter: void onBindViewHolder(felixwiemuth.lincal.ui.CalendarListActivity$SimpleItemRecyclerViewAdapter$ViewHolder,int)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.ui.CalendarListActivity$SimpleItemRecyclerViewAdapter$1: void onClick(android.view.View)&gt;"/>  
        <node method="CalendarListActivity$SimpleItemRecyclerViewAdapter$1 onClick" type="CreateMethod" unit="r4 = new android.content.Intent"/>  
        <node method="CalendarListActivity$SimpleItemRecyclerViewAdapter$1 onClick" type="SetAttribute" unit="specialinvoke r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r10, class &quot;Lfelixwiemuth/lincal/ui/CalendarViewActivity;&quot;)"/>  
        <node method="CalendarListActivity$SimpleItemRecyclerViewAdapter$1 onClick" type="PassOutIntent" unit="virtualinvoke $r6.&lt;felixwiemuth.lincal.ui.CalendarListActivity: void startActivityForResult(android.content.Intent,int)&gt;(r4, 0)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="felixwiemuth.lincal.ui.CalendarViewFragment"> 
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$TimePickerFragment: void onTimeSet(android.widget.TimePicker,int,int)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$TimePickerFragment: void onTimeSet(android.widget.TimePicker,int,int)&gt;,&lt;felixwiemuth.lincal.NotificationService: void runWithCalendar(android.content.Context,int)&gt;,void runWithCalendar(android.content.Context,int)"/>  
      <source name="felixwiemuth.lincal.ui.CalendarViewFragment"/>  
      <destinition name="felixwiemuth.lincal.NotificationService"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$TimePickerFragment: void onTimeSet(android.widget.TimePicker,int,int)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.NotificationService: void runWithCalendar(android.content.Context,int)&gt;"/>  
        <node method="NotificationService runWithCalendar" type="CreateMethod" unit="r1 = new android.content.Intent"/>  
        <node method="NotificationService runWithCalendar" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lfelixwiemuth/lincal/NotificationService;&quot;)"/>  
        <node method="NotificationService runWithCalendar" type="PassOutIntent" unit="virtualinvoke $r0.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;(r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="felixwiemuth.lincal.ui.CalendarViewFragment"> 
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$TimePickerFragment: android.app.Dialog onCreateDialog(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$TimePickerFragment: android.app.Dialog onCreateDialog(android.os.Bundle)&gt;,&lt;felixwiemuth.lincal.ui.CalendarViewFragment$TimePickerFragment: void onTimeSet(android.widget.TimePicker,int,int)&gt;,&lt;felixwiemuth.lincal.NotificationService: void runWithCalendar(android.content.Context,int)&gt;,void runWithCalendar(android.content.Context,int)"/>  
      <source name="felixwiemuth.lincal.ui.CalendarViewFragment"/>  
      <destinition name="felixwiemuth.lincal.NotificationService"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$TimePickerFragment: android.app.Dialog onCreateDialog(android.os.Bundle)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$TimePickerFragment: void onTimeSet(android.widget.TimePicker,int,int)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.NotificationService: void runWithCalendar(android.content.Context,int)&gt;"/>  
        <node method="NotificationService runWithCalendar" type="CreateMethod" unit="r1 = new android.content.Intent"/>  
        <node method="NotificationService runWithCalendar" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lfelixwiemuth/lincal/NotificationService;&quot;)"/>  
        <node method="NotificationService runWithCalendar" type="PassOutIntent" unit="virtualinvoke $r0.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;(r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.acra.ErrorReporter"> 
    <intentSummary> 
      <method value="&lt;org.acra.ErrorReporter: void handleException(java.lang.Throwable,boolean)&gt;"/>  
      <methodtrace value="&lt;org.acra.ErrorReporter: void handleException(java.lang.Throwable,boolean)&gt;,&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;,&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;,&lt;org.acra.builder.ReportExecutor: void createNotification(java.io.File,org.acra.builder.ReportBuilder)&gt;,void createNotification(java.io.File,org.acra.builder.ReportBuilder), &lt;org.acra.builder.ReportExecutor: android.content.Intent createCrashReportDialogIntent(java.io.File,org.acra.builder.ReportBuilder)&gt;"/>  
      <source name="org.acra.ErrorReporter"/>  
      <destinition name="java.lang.Class"/>  
      <nodes> 
        <node method="&lt;org.acra.ErrorReporter: void handleException(java.lang.Throwable,boolean)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void createNotification(java.io.File,org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="ReportExecutor createNotification" type="ReceiveIntentFromRetValue" unit="$r13 = specialinvoke r0.&lt;org.acra.builder.ReportExecutor: android.content.Intent createCrashReportDialogIntent(java.io.File,org.acra.builder.ReportBuilder)&gt;($r1, $r2)"/>  
        <node method="ReportExecutor createCrashReportDialogIntent" type="CreateMethod" unit="r3 = new android.content.Intent"/>  
        <node method="ReportExecutor createCrashReportDialogIntent" type="SetAttribute" unit="specialinvoke r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r9, $r11)"/>  
        <node method="ReportExecutor createNotification" type="PassOutIntent" unit="r3 = virtualinvoke r3.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r14)"/>  
        <node method="ReportExecutor createNotification" type="PassOutIntent" unit="r3 = virtualinvoke r3.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r14)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.ErrorReporter: void handleException(java.lang.Throwable,boolean)&gt;"/>  
      <methodtrace value="&lt;org.acra.ErrorReporter: void handleException(java.lang.Throwable,boolean)&gt;,&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;,&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;,&lt;org.acra.builder.ReportExecutor: void createNotification(java.io.File,org.acra.builder.ReportBuilder)&gt;,void createNotification(java.io.File,org.acra.builder.ReportBuilder), &lt;org.acra.builder.ReportExecutor: android.content.Intent createCrashReportDialogIntent(java.io.File,org.acra.builder.ReportBuilder)&gt;"/>  
      <source name="org.acra.ErrorReporter"/>  
      <nodes> 
        <node method="&lt;org.acra.ErrorReporter: void handleException(java.lang.Throwable,boolean)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void createNotification(java.io.File,org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="ReportExecutor createNotification" type="PassOutIntent" unit="r3 = virtualinvoke r3.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r14)"/>  
        <node method="ReportExecutor createNotification" type="PassOutIntent" unit="r3 = virtualinvoke r3.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r14)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.ErrorReporter: void handleException(java.lang.Throwable,boolean)&gt;"/>  
      <methodtrace value="&lt;org.acra.ErrorReporter: void handleException(java.lang.Throwable,boolean)&gt;,&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;,&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;,&lt;org.acra.builder.ReportExecutor: void dialogAndEnd(org.acra.builder.ReportBuilder,java.io.File,boolean)&gt;,void dialogAndEnd(org.acra.builder.ReportBuilder,java.io.File,boolean), &lt;org.acra.builder.ReportExecutor: android.content.Intent createCrashReportDialogIntent(java.io.File,org.acra.builder.ReportBuilder)&gt;"/>  
      <source name="org.acra.ErrorReporter"/>  
      <destinition name="java.lang.Class"/>  
      <nodes> 
        <node method="&lt;org.acra.ErrorReporter: void handleException(java.lang.Throwable,boolean)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void dialogAndEnd(org.acra.builder.ReportBuilder,java.io.File,boolean)&gt;"/>  
        <node method="ReportExecutor dialogAndEnd" type="ReceiveIntentFromRetValue" unit="$r7 = specialinvoke r0.&lt;org.acra.builder.ReportExecutor: android.content.Intent createCrashReportDialogIntent(java.io.File,org.acra.builder.ReportBuilder)&gt;($r2, $r1)"/>  
        <node method="ReportExecutor createCrashReportDialogIntent" type="CreateMethod" unit="r3 = new android.content.Intent"/>  
        <node method="ReportExecutor createCrashReportDialogIntent" type="SetAttribute" unit="specialinvoke r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r9, $r11)"/>  
        <node method="ReportExecutor dialogAndEnd" type="SetAttribute" unit="virtualinvoke $r7.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>  
        <node method="ReportExecutor dialogAndEnd" type="PassOutIntent" unit="virtualinvoke $r8.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r7)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.ErrorReporter: void handleException(java.lang.Throwable,boolean)&gt;"/>  
      <methodtrace value="&lt;org.acra.ErrorReporter: void handleException(java.lang.Throwable,boolean)&gt;,&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;,&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;,&lt;org.acra.builder.ReportExecutor: void startSendingReports(boolean)&gt;,&lt;org.acra.sender.SenderServiceStarter: void startService(boolean,boolean)&gt;,void startService(boolean,boolean)"/>  
      <source name="org.acra.ErrorReporter"/>  
      <destinition name="org.acra.sender.SenderService"/>  
      <nodes> 
        <node method="&lt;org.acra.ErrorReporter: void handleException(java.lang.Throwable,boolean)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void startSendingReports(boolean)&gt;"/>  
        <node method="&lt;org.acra.sender.SenderServiceStarter: void startService(boolean,boolean)&gt;"/>  
        <node method="SenderServiceStarter startService" type="CreateMethod" unit="r1 = new android.content.Intent"/>  
        <node method="SenderServiceStarter startService" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, class &quot;Lorg/acra/sender/SenderService;&quot;)"/>  
        <node method="SenderServiceStarter startService" type="PassOutIntent" unit="virtualinvoke $r4.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;(r1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.ErrorReporter: void handleException(java.lang.Throwable,boolean)&gt;"/>  
      <methodtrace value="&lt;org.acra.ErrorReporter: void handleException(java.lang.Throwable,boolean)&gt;,&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;,&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;,&lt;org.acra.builder.ReportExecutor: void createNotification(java.io.File,org.acra.builder.ReportBuilder)&gt;,void createNotification(java.io.File,org.acra.builder.ReportBuilder), &lt;org.acra.builder.ReportExecutor: android.content.Intent createCrashReportDialogIntent(java.io.File,org.acra.builder.ReportBuilder)&gt;"/>  
      <source name="org.acra.ErrorReporter"/>  
      <destinition name="java.lang.Class"/>  
      <nodes> 
        <node method="&lt;org.acra.ErrorReporter: void handleException(java.lang.Throwable,boolean)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void createNotification(java.io.File,org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="ReportExecutor createNotification" type="ReceiveIntentFromRetValue" unit="$r13 = specialinvoke r0.&lt;org.acra.builder.ReportExecutor: android.content.Intent createCrashReportDialogIntent(java.io.File,org.acra.builder.ReportBuilder)&gt;($r1, $r2)"/>  
        <node method="ReportExecutor createCrashReportDialogIntent" type="CreateMethod" unit="r3 = new android.content.Intent"/>  
        <node method="ReportExecutor createCrashReportDialogIntent" type="SetAttribute" unit="specialinvoke r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r9, $r11)"/>  
        <node method="ReportExecutor createNotification" type="PassOutIntent" unit="r3 = virtualinvoke r3.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r14)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="felixwiemuth.lincal.ui.AddCalendarActivity"> 
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.ui.AddCalendarActivity$2$1: void run()&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.ui.AddCalendarActivity$2$1: void run()&gt;,void run()"/>  
      <source name="felixwiemuth.lincal.ui.AddCalendarActivity"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.ui.AddCalendarActivity$2$1: void run()&gt;"/>  
        <node method="AddCalendarActivity$2$1 run" type="CreateMethod" unit="r1 = new android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.acra.ACRA"> 
    <intentSummary> 
      <method value="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.ConfigurationBuilder)&gt;"/>  
      <methodtrace value="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.ConfigurationBuilder)&gt;,&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.ConfigurationBuilder,boolean)&gt;,&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.ACRAConfiguration,boolean)&gt;,&lt;org.acra.util.ApplicationStartupProcessor: void sendApprovedReports()&gt;,&lt;org.acra.sender.SenderServiceStarter: void startService(boolean,boolean)&gt;,void startService(boolean,boolean)"/>  
      <source name="org.acra.ACRA"/>  
      <destinition name="org.acra.sender.SenderService"/>  
      <nodes> 
        <node method="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.ConfigurationBuilder)&gt;"/>  
        <node method="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.ConfigurationBuilder,boolean)&gt;"/>  
        <node method="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.ACRAConfiguration,boolean)&gt;"/>  
        <node method="&lt;org.acra.util.ApplicationStartupProcessor: void sendApprovedReports()&gt;"/>  
        <node method="&lt;org.acra.sender.SenderServiceStarter: void startService(boolean,boolean)&gt;"/>  
        <node method="SenderServiceStarter startService" type="CreateMethod" unit="r1 = new android.content.Intent"/>  
        <node method="SenderServiceStarter startService" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, class &quot;Lorg/acra/sender/SenderService;&quot;)"/>  
        <node method="SenderServiceStarter startService" type="PassOutIntent" unit="virtualinvoke $r4.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;(r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.acra.ACRA"> 
    <intentSummary> 
      <method value="&lt;org.acra.ACRA: void init(android.app.Application)&gt;"/>  
      <methodtrace value="&lt;org.acra.ACRA: void init(android.app.Application)&gt;,&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.ConfigurationBuilder)&gt;,&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.ConfigurationBuilder,boolean)&gt;,&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.ACRAConfiguration,boolean)&gt;,&lt;org.acra.util.ApplicationStartupProcessor: void sendApprovedReports()&gt;,&lt;org.acra.sender.SenderServiceStarter: void startService(boolean,boolean)&gt;,void startService(boolean,boolean)"/>  
      <source name="org.acra.ACRA"/>  
      <destinition name="org.acra.sender.SenderService"/>  
      <nodes> 
        <node method="&lt;org.acra.ACRA: void init(android.app.Application)&gt;"/>  
        <node method="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.ConfigurationBuilder)&gt;"/>  
        <node method="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.ConfigurationBuilder,boolean)&gt;"/>  
        <node method="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.ACRAConfiguration,boolean)&gt;"/>  
        <node method="&lt;org.acra.util.ApplicationStartupProcessor: void sendApprovedReports()&gt;"/>  
        <node method="&lt;org.acra.sender.SenderServiceStarter: void startService(boolean,boolean)&gt;"/>  
        <node method="SenderServiceStarter startService" type="CreateMethod" unit="r1 = new android.content.Intent"/>  
        <node method="SenderServiceStarter startService" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, class &quot;Lorg/acra/sender/SenderService;&quot;)"/>  
        <node method="SenderServiceStarter startService" type="PassOutIntent" unit="virtualinvoke $r4.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;(r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="felixwiemuth.lincal.Main"> 
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.Main: void onCreate()&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.Main: void onCreate()&gt;,&lt;org.acra.ACRA: void init(android.app.Application)&gt;,&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.ConfigurationBuilder)&gt;,&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.ConfigurationBuilder,boolean)&gt;,&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.ACRAConfiguration,boolean)&gt;,&lt;org.acra.util.ApplicationStartupProcessor: void sendApprovedReports()&gt;,&lt;org.acra.sender.SenderServiceStarter: void startService(boolean,boolean)&gt;,void startService(boolean,boolean)"/>  
      <source name="felixwiemuth.lincal.Main"/>  
      <destinition name="org.acra.sender.SenderService"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.Main: void onCreate()&gt;"/>  
        <node method="&lt;org.acra.ACRA: void init(android.app.Application)&gt;"/>  
        <node method="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.ConfigurationBuilder)&gt;"/>  
        <node method="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.ConfigurationBuilder,boolean)&gt;"/>  
        <node method="&lt;org.acra.ACRA: void init(android.app.Application,org.acra.config.ACRAConfiguration,boolean)&gt;"/>  
        <node method="&lt;org.acra.util.ApplicationStartupProcessor: void sendApprovedReports()&gt;"/>  
        <node method="&lt;org.acra.sender.SenderServiceStarter: void startService(boolean,boolean)&gt;"/>  
        <node method="SenderServiceStarter startService" type="CreateMethod" unit="r1 = new android.content.Intent"/>  
        <node method="SenderServiceStarter startService" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, class &quot;Lorg/acra/sender/SenderService;&quot;)"/>  
        <node method="SenderServiceStarter startService" type="PassOutIntent" unit="virtualinvoke $r4.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;(r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.acra.ErrorReporter"> 
    <intentSummary> 
      <method value="&lt;org.acra.ErrorReporter: void checkReportsOnApplicationStart()&gt;"/>  
      <methodtrace value="&lt;org.acra.ErrorReporter: void checkReportsOnApplicationStart()&gt;,&lt;org.acra.util.ApplicationStartupProcessor: void sendApprovedReports()&gt;,&lt;org.acra.sender.SenderServiceStarter: void startService(boolean,boolean)&gt;,void startService(boolean,boolean)"/>  
      <source name="org.acra.ErrorReporter"/>  
      <destinition name="org.acra.sender.SenderService"/>  
      <nodes> 
        <node method="&lt;org.acra.ErrorReporter: void checkReportsOnApplicationStart()&gt;"/>  
        <node method="&lt;org.acra.util.ApplicationStartupProcessor: void sendApprovedReports()&gt;"/>  
        <node method="&lt;org.acra.sender.SenderServiceStarter: void startService(boolean,boolean)&gt;"/>  
        <node method="SenderServiceStarter startService" type="CreateMethod" unit="r1 = new android.content.Intent"/>  
        <node method="SenderServiceStarter startService" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, class &quot;Lorg/acra/sender/SenderService;&quot;)"/>  
        <node method="SenderServiceStarter startService" type="PassOutIntent" unit="virtualinvoke $r4.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;(r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.acra.ErrorReporter"> 
    <intentSummary> 
      <method value="&lt;org.acra.ErrorReporter: void handleException(java.lang.Throwable)&gt;"/>  
      <methodtrace value="&lt;org.acra.ErrorReporter: void handleException(java.lang.Throwable)&gt;,&lt;org.acra.ErrorReporter: void handleException(java.lang.Throwable,boolean)&gt;,&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;,&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;,&lt;org.acra.builder.ReportExecutor: void createNotification(java.io.File,org.acra.builder.ReportBuilder)&gt;,void createNotification(java.io.File,org.acra.builder.ReportBuilder), &lt;org.acra.builder.ReportExecutor: android.content.Intent createCrashReportDialogIntent(java.io.File,org.acra.builder.ReportBuilder)&gt;"/>  
      <source name="org.acra.ErrorReporter"/>  
      <destinition name="java.lang.Class"/>  
      <nodes> 
        <node method="&lt;org.acra.ErrorReporter: void handleException(java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.ErrorReporter: void handleException(java.lang.Throwable,boolean)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void createNotification(java.io.File,org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="ReportExecutor createNotification" type="ReceiveIntentFromRetValue" unit="$r13 = specialinvoke r0.&lt;org.acra.builder.ReportExecutor: android.content.Intent createCrashReportDialogIntent(java.io.File,org.acra.builder.ReportBuilder)&gt;($r1, $r2)"/>  
        <node method="ReportExecutor createCrashReportDialogIntent" type="CreateMethod" unit="r3 = new android.content.Intent"/>  
        <node method="ReportExecutor createCrashReportDialogIntent" type="SetAttribute" unit="specialinvoke r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r9, $r11)"/>  
        <node method="ReportExecutor createNotification" type="PassOutIntent" unit="r3 = virtualinvoke r3.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r14)"/>  
        <node method="ReportExecutor createNotification" type="PassOutIntent" unit="r3 = virtualinvoke r3.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r14)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.ErrorReporter: void handleException(java.lang.Throwable)&gt;"/>  
      <methodtrace value="&lt;org.acra.ErrorReporter: void handleException(java.lang.Throwable)&gt;,&lt;org.acra.ErrorReporter: void handleException(java.lang.Throwable,boolean)&gt;,&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;,&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;,&lt;org.acra.builder.ReportExecutor: void createNotification(java.io.File,org.acra.builder.ReportBuilder)&gt;,void createNotification(java.io.File,org.acra.builder.ReportBuilder), &lt;org.acra.builder.ReportExecutor: android.content.Intent createCrashReportDialogIntent(java.io.File,org.acra.builder.ReportBuilder)&gt;"/>  
      <source name="org.acra.ErrorReporter"/>  
      <nodes> 
        <node method="&lt;org.acra.ErrorReporter: void handleException(java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.ErrorReporter: void handleException(java.lang.Throwable,boolean)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void createNotification(java.io.File,org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="ReportExecutor createNotification" type="PassOutIntent" unit="r3 = virtualinvoke r3.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r14)"/>  
        <node method="ReportExecutor createNotification" type="PassOutIntent" unit="r3 = virtualinvoke r3.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r14)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.ErrorReporter: void handleException(java.lang.Throwable)&gt;"/>  
      <methodtrace value="&lt;org.acra.ErrorReporter: void handleException(java.lang.Throwable)&gt;,&lt;org.acra.ErrorReporter: void handleException(java.lang.Throwable,boolean)&gt;,&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;,&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;,&lt;org.acra.builder.ReportExecutor: void dialogAndEnd(org.acra.builder.ReportBuilder,java.io.File,boolean)&gt;,void dialogAndEnd(org.acra.builder.ReportBuilder,java.io.File,boolean), &lt;org.acra.builder.ReportExecutor: android.content.Intent createCrashReportDialogIntent(java.io.File,org.acra.builder.ReportBuilder)&gt;"/>  
      <source name="org.acra.ErrorReporter"/>  
      <destinition name="java.lang.Class"/>  
      <nodes> 
        <node method="&lt;org.acra.ErrorReporter: void handleException(java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.ErrorReporter: void handleException(java.lang.Throwable,boolean)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void dialogAndEnd(org.acra.builder.ReportBuilder,java.io.File,boolean)&gt;"/>  
        <node method="ReportExecutor dialogAndEnd" type="ReceiveIntentFromRetValue" unit="$r7 = specialinvoke r0.&lt;org.acra.builder.ReportExecutor: android.content.Intent createCrashReportDialogIntent(java.io.File,org.acra.builder.ReportBuilder)&gt;($r2, $r1)"/>  
        <node method="ReportExecutor createCrashReportDialogIntent" type="CreateMethod" unit="r3 = new android.content.Intent"/>  
        <node method="ReportExecutor createCrashReportDialogIntent" type="SetAttribute" unit="specialinvoke r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r9, $r11)"/>  
        <node method="ReportExecutor dialogAndEnd" type="SetAttribute" unit="virtualinvoke $r7.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>  
        <node method="ReportExecutor dialogAndEnd" type="PassOutIntent" unit="virtualinvoke $r8.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r7)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.ErrorReporter: void handleException(java.lang.Throwable)&gt;"/>  
      <methodtrace value="&lt;org.acra.ErrorReporter: void handleException(java.lang.Throwable)&gt;,&lt;org.acra.ErrorReporter: void handleException(java.lang.Throwable,boolean)&gt;,&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;,&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;,&lt;org.acra.builder.ReportExecutor: void startSendingReports(boolean)&gt;,&lt;org.acra.sender.SenderServiceStarter: void startService(boolean,boolean)&gt;,void startService(boolean,boolean)"/>  
      <source name="org.acra.ErrorReporter"/>  
      <destinition name="org.acra.sender.SenderService"/>  
      <nodes> 
        <node method="&lt;org.acra.ErrorReporter: void handleException(java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.ErrorReporter: void handleException(java.lang.Throwable,boolean)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void startSendingReports(boolean)&gt;"/>  
        <node method="&lt;org.acra.sender.SenderServiceStarter: void startService(boolean,boolean)&gt;"/>  
        <node method="SenderServiceStarter startService" type="CreateMethod" unit="r1 = new android.content.Intent"/>  
        <node method="SenderServiceStarter startService" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, class &quot;Lorg/acra/sender/SenderService;&quot;)"/>  
        <node method="SenderServiceStarter startService" type="PassOutIntent" unit="virtualinvoke $r4.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;(r1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.ErrorReporter: void handleException(java.lang.Throwable)&gt;"/>  
      <methodtrace value="&lt;org.acra.ErrorReporter: void handleException(java.lang.Throwable)&gt;,&lt;org.acra.ErrorReporter: void handleException(java.lang.Throwable,boolean)&gt;,&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;,&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;,&lt;org.acra.builder.ReportExecutor: void createNotification(java.io.File,org.acra.builder.ReportBuilder)&gt;,void createNotification(java.io.File,org.acra.builder.ReportBuilder), &lt;org.acra.builder.ReportExecutor: android.content.Intent createCrashReportDialogIntent(java.io.File,org.acra.builder.ReportBuilder)&gt;"/>  
      <source name="org.acra.ErrorReporter"/>  
      <destinition name="java.lang.Class"/>  
      <nodes> 
        <node method="&lt;org.acra.ErrorReporter: void handleException(java.lang.Throwable)&gt;"/>  
        <node method="&lt;org.acra.ErrorReporter: void handleException(java.lang.Throwable,boolean)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="&lt;org.acra.builder.ReportExecutor: void createNotification(java.io.File,org.acra.builder.ReportBuilder)&gt;"/>  
        <node method="ReportExecutor createNotification" type="ReceiveIntentFromRetValue" unit="$r13 = specialinvoke r0.&lt;org.acra.builder.ReportExecutor: android.content.Intent createCrashReportDialogIntent(java.io.File,org.acra.builder.ReportBuilder)&gt;($r1, $r2)"/>  
        <node method="ReportExecutor createCrashReportDialogIntent" type="CreateMethod" unit="r3 = new android.content.Intent"/>  
        <node method="ReportExecutor createCrashReportDialogIntent" type="SetAttribute" unit="specialinvoke r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r9, $r11)"/>  
        <node method="ReportExecutor createNotification" type="PassOutIntent" unit="r3 = virtualinvoke r3.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r14)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="felixwiemuth.lincal.ui.CalendarViewFragment"> 
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$1: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$1: void onClick(android.view.View)&gt;,&lt;felixwiemuth.lincal.NotificationService: void runWithCalendar(android.content.Context,int)&gt;,void runWithCalendar(android.content.Context,int)"/>  
      <source name="felixwiemuth.lincal.ui.CalendarViewFragment"/>  
      <destinition name="felixwiemuth.lincal.NotificationService"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$1: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.NotificationService: void runWithCalendar(android.content.Context,int)&gt;"/>  
        <node method="NotificationService runWithCalendar" type="CreateMethod" unit="r1 = new android.content.Intent"/>  
        <node method="NotificationService runWithCalendar" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lfelixwiemuth/lincal/NotificationService;&quot;)"/>  
        <node method="NotificationService runWithCalendar" type="PassOutIntent" unit="virtualinvoke $r0.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;(r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.acra.sender.EmailIntentSender"> 
    <intentSummary> 
      <method value="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.collector.CrashReportData)&gt;"/>  
      <methodtrace value="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.collector.CrashReportData)&gt;,void send(android.content.Context,org.acra.collector.CrashReportData)"/>  
      <source name="org.acra.sender.EmailIntentSender"/>  
      <destinition name="interICC_android.intent.action.SENDTO, "/>  
      <sender action="android.intent.action.SENDTO" flags="FLAG_ACTIVITY_NEW_TASK "/>  
      <nodes> 
        <node method="&lt;org.acra.sender.EmailIntentSender: void send(android.content.Context,org.acra.collector.CrashReportData)&gt;"/>  
        <node method="EmailIntentSender send" type="CreateMethod" unit="r3 = new android.content.Intent"/>  
        <node method="EmailIntentSender send" type="SetAttribute" unit="specialinvoke r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.SENDTO&quot;)"/>  
        <node method="EmailIntentSender send" type="SetAttribute" unit="virtualinvoke r3.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r9)"/>  
        <node method="EmailIntentSender send" type="SetAttribute" unit="virtualinvoke r3.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(268435456)"/>  
        <node method="EmailIntentSender send" type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;(r3)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.acra.dialog.BaseCrashReportDialog"> 
    <intentSummary> 
      <method value="&lt;org.acra.dialog.BaseCrashReportDialog: void sendCrash(java.lang.String,java.lang.String)&gt;"/>  
      <methodtrace value="&lt;org.acra.dialog.BaseCrashReportDialog: void sendCrash(java.lang.String,java.lang.String)&gt;,&lt;org.acra.sender.SenderServiceStarter: void startService(boolean,boolean)&gt;,void startService(boolean,boolean)"/>  
      <source name="org.acra.dialog.BaseCrashReportDialog"/>  
      <destinition name="org.acra.sender.SenderService"/>  
      <nodes> 
        <node method="&lt;org.acra.dialog.BaseCrashReportDialog: void sendCrash(java.lang.String,java.lang.String)&gt;"/>  
        <node method="&lt;org.acra.sender.SenderServiceStarter: void startService(boolean,boolean)&gt;"/>  
        <node method="SenderServiceStarter startService" type="CreateMethod" unit="r1 = new android.content.Intent"/>  
        <node method="SenderServiceStarter startService" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, class &quot;Lorg/acra/sender/SenderService;&quot;)"/>  
        <node method="SenderServiceStarter startService" type="PassOutIntent" unit="virtualinvoke $r4.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;(r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.acra.dialog.CrashReportDialog"> 
    <intentSummary> 
      <method value="&lt;org.acra.dialog.CrashReportDialog: void onClick(android.content.DialogInterface,int)&gt;"/>  
      <methodtrace value="&lt;org.acra.dialog.CrashReportDialog: void onClick(android.content.DialogInterface,int)&gt;,&lt;org.acra.dialog.BaseCrashReportDialog: void sendCrash(java.lang.String,java.lang.String)&gt;,&lt;org.acra.sender.SenderServiceStarter: void startService(boolean,boolean)&gt;,void startService(boolean,boolean)"/>  
      <source name="org.acra.dialog.CrashReportDialog"/>  
      <destinition name="org.acra.sender.SenderService"/>  
      <nodes> 
        <node method="&lt;org.acra.dialog.CrashReportDialog: void onClick(android.content.DialogInterface,int)&gt;"/>  
        <node method="&lt;org.acra.dialog.BaseCrashReportDialog: void sendCrash(java.lang.String,java.lang.String)&gt;"/>  
        <node method="&lt;org.acra.sender.SenderServiceStarter: void startService(boolean,boolean)&gt;"/>  
        <node method="SenderServiceStarter startService" type="CreateMethod" unit="r1 = new android.content.Intent"/>  
        <node method="SenderServiceStarter startService" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, class &quot;Lorg/acra/sender/SenderService;&quot;)"/>  
        <node method="SenderServiceStarter startService" type="PassOutIntent" unit="virtualinvoke $r4.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;(r1)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="felixwiemuth.lincal.ui.AddCalendarActivity"> 
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.ui.AddCalendarActivity$2: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.ui.AddCalendarActivity$2: void onClick(android.view.View)&gt;,&lt;felixwiemuth.lincal.Calendars: void addCalendarChecked(felixwiemuth.lincal.data.LinCalConfig,android.content.Context,java.lang.Runnable)&gt;,&lt;felixwiemuth.lincal.Calendars: int addCalendar(android.content.Context,felixwiemuth.lincal.data.LinCalConfig)&gt;,&lt;felixwiemuth.lincal.NotificationService: void runWithCalendar(android.content.Context,int)&gt;,void runWithCalendar(android.content.Context,int)"/>  
      <source name="felixwiemuth.lincal.ui.AddCalendarActivity"/>  
      <destinition name="felixwiemuth.lincal.NotificationService"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.ui.AddCalendarActivity$2: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.Calendars: void addCalendarChecked(felixwiemuth.lincal.data.LinCalConfig,android.content.Context,java.lang.Runnable)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.Calendars: int addCalendar(android.content.Context,felixwiemuth.lincal.data.LinCalConfig)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.NotificationService: void runWithCalendar(android.content.Context,int)&gt;"/>  
        <node method="NotificationService runWithCalendar" type="CreateMethod" unit="r1 = new android.content.Intent"/>  
        <node method="NotificationService runWithCalendar" type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lfelixwiemuth/lincal/NotificationService;&quot;)"/>  
        <node method="NotificationService runWithCalendar" type="PassOutIntent" unit="virtualinvoke $r0.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;(r1)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.ui.AddCalendarActivity$2: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.ui.AddCalendarActivity$2: void onClick(android.view.View)&gt;,&lt;felixwiemuth.lincal.Calendars: void addCalendarChecked(felixwiemuth.lincal.data.LinCalConfig,android.content.Context,java.lang.Runnable)&gt;,&lt;felixwiemuth.lincal.Calendars: felixwiemuth.lincal.data.LinCal loadCalendar(android.content.Context,java.lang.String)&gt;,&lt;felixwiemuth.lincal.util.Util: void showErrorDialog(int,java.lang.String,boolean,android.content.Context)&gt;,void showErrorDialog(int,java.lang.String,boolean,android.content.Context)"/>  
      <source name="felixwiemuth.lincal.ui.AddCalendarActivity"/>  
      <destinition name="felixwiemuth.lincal.ui.CalendarListActivity"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.ui.AddCalendarActivity$2: void onClick(android.view.View)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.Calendars: void addCalendarChecked(felixwiemuth.lincal.data.LinCalConfig,android.content.Context,java.lang.Runnable)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.Calendars: felixwiemuth.lincal.data.LinCal loadCalendar(android.content.Context,java.lang.String)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.util.Util: void showErrorDialog(int,java.lang.String,boolean,android.content.Context)&gt;"/>  
        <node method="Util showErrorDialog" type="CreateMethod" unit="r3 = new android.content.Intent"/>  
        <node method="Util showErrorDialog" type="SetAttribute" unit="specialinvoke r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lfelixwiemuth/lincal/ui/CalendarListActivity;&quot;)"/>  
        <node method="Util showErrorDialog" type="PassOutIntent" unit="$r5 = virtualinvoke $r5.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r4)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="felixwiemuth.lincal.NotificationService"> 
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.NotificationService: void onHandleIntent(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.NotificationService: void onHandleIntent(android.content.Intent)&gt;,void onHandleIntent(android.content.Intent)"/>  
      <source name="felixwiemuth.lincal.NotificationService"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.NotificationService: void onHandleIntent(android.content.Intent)&gt;"/>  
        <node method="NotificationService onHandleIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.NotificationService: void onHandleIntent(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.NotificationService: void onHandleIntent(android.content.Intent)&gt;,void onHandleIntent(android.content.Intent)"/>  
      <source name="felixwiemuth.lincal.NotificationService"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.NotificationService: void onHandleIntent(android.content.Intent)&gt;"/>  
        <node method="NotificationService onHandleIntent" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;felixwiemuth.lincal.NotificationService: android.content.Intent getIntent()&gt;()"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.NotificationService: void onHandleIntent(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.NotificationService: void onHandleIntent(android.content.Intent)&gt;,void onHandleIntent(android.content.Intent)"/>  
      <source name="felixwiemuth.lincal.NotificationService"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.NotificationService: void onHandleIntent(android.content.Intent)&gt;"/>  
        <node method="NotificationService onHandleIntent" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;felixwiemuth.lincal.NotificationService: android.content.Intent getIntent()&gt;()"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.NotificationService: void onHandleIntent(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.NotificationService: void onHandleIntent(android.content.Intent)&gt;,void onHandleIntent(android.content.Intent)"/>  
      <source name="felixwiemuth.lincal.NotificationService"/>  
      <destinition name="felixwiemuth.lincal.NotificationService"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.NotificationService: void onHandleIntent(android.content.Intent)&gt;"/>  
        <node method="NotificationService onHandleIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="NotificationService onHandleIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lfelixwiemuth/lincal/NotificationService;&quot;)"/>  
        <node method="NotificationService onHandleIntent" type="PassOutIntent" unit="virtualinvoke r9.&lt;android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)&gt;(0, $l2, $r10)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.NotificationService: void onHandleIntent(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.NotificationService: void onHandleIntent(android.content.Intent)&gt;,void onHandleIntent(android.content.Intent)"/>  
      <source name="felixwiemuth.lincal.NotificationService"/>  
      <destinition name="felixwiemuth.lincal.NotificationService"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.NotificationService: void onHandleIntent(android.content.Intent)&gt;"/>  
        <node method="NotificationService onHandleIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="NotificationService onHandleIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lfelixwiemuth/lincal/NotificationService;&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.NotificationService: void onHandleIntent(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.NotificationService: void onHandleIntent(android.content.Intent)&gt;,void onHandleIntent(android.content.Intent)"/>  
      <source name="felixwiemuth.lincal.NotificationService"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.NotificationService: void onHandleIntent(android.content.Intent)&gt;"/>  
        <node method="NotificationService onHandleIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.NotificationService: void onHandleIntent(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.NotificationService: void onHandleIntent(android.content.Intent)&gt;,void onHandleIntent(android.content.Intent)"/>  
      <source name="felixwiemuth.lincal.NotificationService"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.NotificationService: void onHandleIntent(android.content.Intent)&gt;"/>  
        <node method="NotificationService onHandleIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.NotificationService: void onHandleIntent(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.NotificationService: void onHandleIntent(android.content.Intent)&gt;,void onHandleIntent(android.content.Intent)"/>  
      <source name="felixwiemuth.lincal.NotificationService"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.NotificationService: void onHandleIntent(android.content.Intent)&gt;"/>  
        <node method="NotificationService onHandleIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.NotificationService: void onHandleIntent(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.NotificationService: void onHandleIntent(android.content.Intent)&gt;,&lt;felixwiemuth.lincal.Calendars: felixwiemuth.lincal.data.LinCal getCalendarByPos(android.content.Context,int)&gt;,&lt;felixwiemuth.lincal.Calendars: felixwiemuth.lincal.data.LinCal getCalendarById(android.content.Context,int)&gt;,&lt;felixwiemuth.lincal.Calendars: felixwiemuth.lincal.data.LinCal loadCalendar(android.content.Context,java.lang.String)&gt;,&lt;felixwiemuth.lincal.util.Util: void showErrorDialog(int,java.lang.String,boolean,android.content.Context)&gt;,void showErrorDialog(int,java.lang.String,boolean,android.content.Context)"/>  
      <source name="felixwiemuth.lincal.NotificationService"/>  
      <destinition name="felixwiemuth.lincal.ui.CalendarListActivity"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.NotificationService: void onHandleIntent(android.content.Intent)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.Calendars: felixwiemuth.lincal.data.LinCal getCalendarByPos(android.content.Context,int)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.Calendars: felixwiemuth.lincal.data.LinCal getCalendarById(android.content.Context,int)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.Calendars: felixwiemuth.lincal.data.LinCal loadCalendar(android.content.Context,java.lang.String)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.util.Util: void showErrorDialog(int,java.lang.String,boolean,android.content.Context)&gt;"/>  
        <node method="Util showErrorDialog" type="CreateMethod" unit="r3 = new android.content.Intent"/>  
        <node method="Util showErrorDialog" type="SetAttribute" unit="specialinvoke r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lfelixwiemuth/lincal/ui/CalendarListActivity;&quot;)"/>  
        <node method="Util showErrorDialog" type="PassOutIntent" unit="$r5 = virtualinvoke $r5.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r4)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.NotificationService: void onHandleIntent(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.NotificationService: void onHandleIntent(android.content.Intent)&gt;,void onHandleIntent(android.content.Intent)"/>  
      <source name="felixwiemuth.lincal.NotificationService"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.NotificationService: void onHandleIntent(android.content.Intent)&gt;"/>  
        <node method="NotificationService onHandleIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.NotificationService: void onHandleIntent(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.NotificationService: void onHandleIntent(android.content.Intent)&gt;,&lt;felixwiemuth.lincal.NotificationService: java.util.Calendar processCalendar(felixwiemuth.lincal.data.LinCal,felixwiemuth.lincal.data.LinCalConfig,java.util.Calendar)&gt;,&lt;felixwiemuth.lincal.NotificationService: void sendNotification(felixwiemuth.lincal.data.CEntry,int,felixwiemuth.lincal.data.LinCalConfig)&gt;,void sendNotification(felixwiemuth.lincal.data.CEntry,int,felixwiemuth.lincal.data.LinCalConfig)"/>  
      <source name="felixwiemuth.lincal.NotificationService"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.NotificationService: void onHandleIntent(android.content.Intent)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.NotificationService: java.util.Calendar processCalendar(felixwiemuth.lincal.data.LinCal,felixwiemuth.lincal.data.LinCalConfig,java.util.Calendar)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.NotificationService: void sendNotification(felixwiemuth.lincal.data.CEntry,int,felixwiemuth.lincal.data.LinCalConfig)&gt;"/>  
        <node method="NotificationService sendNotification" type="CreateMethod" unit="r3 = new android.content.Intent"/>  
        <node method="NotificationService sendNotification" type="PassOutIntent" unit="$r7 = virtualinvoke $r7.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r6)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.NotificationService: void onHandleIntent(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.NotificationService: void onHandleIntent(android.content.Intent)&gt;,void onHandleIntent(android.content.Intent)"/>  
      <source name="felixwiemuth.lincal.NotificationService"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.NotificationService: void onHandleIntent(android.content.Intent)&gt;"/>  
        <node method="NotificationService onHandleIntent" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;felixwiemuth.lincal.NotificationService: android.content.Intent getIntent()&gt;()"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.NotificationService: void onHandleIntent(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.NotificationService: void onHandleIntent(android.content.Intent)&gt;,void onHandleIntent(android.content.Intent)"/>  
      <source name="felixwiemuth.lincal.NotificationService"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.NotificationService: void onHandleIntent(android.content.Intent)&gt;"/>  
        <node method="NotificationService onHandleIntent" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;felixwiemuth.lincal.NotificationService: android.content.Intent getIntent()&gt;()"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.NotificationService: void onHandleIntent(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.NotificationService: void onHandleIntent(android.content.Intent)&gt;,void onHandleIntent(android.content.Intent)"/>  
      <source name="felixwiemuth.lincal.NotificationService"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.NotificationService: void onHandleIntent(android.content.Intent)&gt;"/>  
        <node method="NotificationService onHandleIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.NotificationService: void onHandleIntent(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.NotificationService: void onHandleIntent(android.content.Intent)&gt;,void onHandleIntent(android.content.Intent)"/>  
      <source name="felixwiemuth.lincal.NotificationService"/>  
      <destinition name="felixwiemuth.lincal.NotificationService"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.NotificationService: void onHandleIntent(android.content.Intent)&gt;"/>  
        <node method="NotificationService onHandleIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="NotificationService onHandleIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lfelixwiemuth/lincal/NotificationService;&quot;)"/>  
        <node method="NotificationService onHandleIntent" type="PassOutIntent" unit="virtualinvoke r9.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(0, $l2, $r10)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.NotificationService: void onHandleIntent(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.NotificationService: void onHandleIntent(android.content.Intent)&gt;,void onHandleIntent(android.content.Intent)"/>  
      <source name="felixwiemuth.lincal.NotificationService"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.NotificationService: void onHandleIntent(android.content.Intent)&gt;"/>  
        <node method="NotificationService onHandleIntent" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;felixwiemuth.lincal.NotificationService: android.content.Intent getIntent()&gt;()"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.NotificationService: void onHandleIntent(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.NotificationService: void onHandleIntent(android.content.Intent)&gt;,void onHandleIntent(android.content.Intent)"/>  
      <source name="felixwiemuth.lincal.NotificationService"/>  
      <destinition name="felixwiemuth.lincal.NotificationService"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.NotificationService: void onHandleIntent(android.content.Intent)&gt;"/>  
        <node method="NotificationService onHandleIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="NotificationService onHandleIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lfelixwiemuth/lincal/NotificationService;&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.NotificationService: void onHandleIntent(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.NotificationService: void onHandleIntent(android.content.Intent)&gt;,void onHandleIntent(android.content.Intent)"/>  
      <source name="felixwiemuth.lincal.NotificationService"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.NotificationService: void onHandleIntent(android.content.Intent)&gt;"/>  
        <node method="NotificationService onHandleIntent" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;felixwiemuth.lincal.NotificationService: android.content.Intent getIntent()&gt;()"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.NotificationService: void onHandleIntent(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.NotificationService: void onHandleIntent(android.content.Intent)&gt;,void onHandleIntent(android.content.Intent)"/>  
      <source name="felixwiemuth.lincal.NotificationService"/>  
      <destinition name="felixwiemuth.lincal.NotificationService"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.NotificationService: void onHandleIntent(android.content.Intent)&gt;"/>  
        <node method="NotificationService onHandleIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="NotificationService onHandleIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lfelixwiemuth/lincal/NotificationService;&quot;)"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.NotificationService: void onHandleIntent(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.NotificationService: void onHandleIntent(android.content.Intent)&gt;,void onHandleIntent(android.content.Intent)"/>  
      <source name="felixwiemuth.lincal.NotificationService"/>  
      <destinition name="felixwiemuth.lincal.NotificationService"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.NotificationService: void onHandleIntent(android.content.Intent)&gt;"/>  
        <node method="NotificationService onHandleIntent" type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
        <node method="NotificationService onHandleIntent" type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lfelixwiemuth/lincal/NotificationService;&quot;)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="felixwiemuth.lincal.ui.CalendarListActivity"> 
    <intentSummary> 
      <method value="&lt;felixwiemuth.lincal.ui.CalendarListActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.ui.CalendarListActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle)"/>  
      <source name="felixwiemuth.lincal.ui.CalendarListActivity"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.ui.CalendarListActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="CalendarListActivity onCreate" type="setContentView" unit="virtualinvoke r0.&lt;felixwiemuth.lincal.ui.CalendarListActivity: void setContentView(int)&gt;(2131427356)"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="org.acra.sender.SenderService"> 
    <intentSummary> 
      <method value="&lt;org.acra.sender.SenderService: void onHandleIntent(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;org.acra.sender.SenderService: void onHandleIntent(android.content.Intent)&gt;,void onHandleIntent(android.content.Intent)"/>  
      <source name="org.acra.sender.SenderService"/>  
      <nodes> 
        <node method="&lt;org.acra.sender.SenderService: void onHandleIntent(android.content.Intent)&gt;"/>  
        <node method="SenderService onHandleIntent" type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;org.acra.sender.SenderService: android.content.Intent getIntent()&gt;()"/> 
      </nodes> 
    </intentSummary>  
    <intentSummary> 
      <method value="&lt;org.acra.sender.SenderService: void onHandleIntent(android.content.Intent)&gt;"/>  
      <methodtrace value="&lt;org.acra.sender.SenderService: void onHandleIntent(android.content.Intent)&gt;,void onHandleIntent(android.content.Intent)"/>  
      <source name="org.acra.sender.SenderService"/>  
      <nodes> 
        <node method="&lt;org.acra.sender.SenderService: void onHandleIntent(android.content.Intent)&gt;"/>  
        <node method="SenderService onHandleIntent" type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/> 
      </nodes> 
    </intentSummary> 
  </Component>  
  <Component source="felixwiemuth.lincal.ui.HtmlDialogFragment"> 
    <FragmentSummary> 
      <method value="&lt;felixwiemuth.lincal.ui.HtmlDialogFragment: void displayFragment(android.support.v4.app.FragmentManager)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.ui.HtmlDialogFragment: void displayFragment(android.support.v4.app.FragmentManager)&gt;,void displayFragment(android.support.v4.app.FragmentManager)"/>  
      <source name="felixwiemuth.lincal.ui.HtmlDialogFragment"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.ui.HtmlDialogFragment: void displayFragment(android.support.v4.app.FragmentManager)&gt;"/>  
        <node method="HtmlDialogFragment displayFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>  
        <node method="HtmlDialogFragment displayFragment" type="beginTransaction" unit="$r2 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="HtmlDialogFragment displayFragment" type="addToBackStack" unit="if $r3 == null goto virtualinvoke $r2.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(null)"/>  
        <node method="HtmlDialogFragment displayFragment" type="addToBackStack" unit="virtualinvoke $r2.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(null)"/>  
        <node method="HtmlDialogFragment displayFragment" type="dialogShow" unit="virtualinvoke r0.&lt;felixwiemuth.lincal.ui.HtmlDialogFragment: int show(android.support.v4.app.FragmentTransaction,java.lang.String)&gt;($r2, &quot;nz.net.speakman.androidlicensespage.HtmlDialogFragment&quot;)"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;felixwiemuth.lincal.ui.HtmlDialogFragment: void displayFragment(android.support.v4.app.FragmentManager)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.ui.HtmlDialogFragment: void displayFragment(android.support.v4.app.FragmentManager)&gt;,void displayFragment(android.support.v4.app.FragmentManager)"/>  
      <source name="felixwiemuth.lincal.ui.HtmlDialogFragment"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.ui.HtmlDialogFragment: void displayFragment(android.support.v4.app.FragmentManager)&gt;"/>  
        <node method="HtmlDialogFragment displayFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>  
        <node method="HtmlDialogFragment displayFragment" type="beginTransaction" unit="$r2 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="HtmlDialogFragment displayFragment" type="addToBackStack" unit="if $r3 == null goto virtualinvoke $r2.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(null)"/>  
        <node method="HtmlDialogFragment displayFragment" type="addToBackStack" unit="virtualinvoke $r2.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(null)"/>  
        <node method="HtmlDialogFragment displayFragment" type="dialogShow" unit="virtualinvoke r0.&lt;felixwiemuth.lincal.ui.HtmlDialogFragment: int show(android.support.v4.app.FragmentTransaction,java.lang.String)&gt;($r2, &quot;nz.net.speakman.androidlicensespage.HtmlDialogFragment&quot;)"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="felixwiemuth.lincal.ui.CalendarListActivity$SimpleItemRecyclerViewAdapter$1"> 
    <FragmentSummary> 
      <method value="&lt;felixwiemuth.lincal.ui.CalendarListActivity$SimpleItemRecyclerViewAdapter$1: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.ui.CalendarListActivity$SimpleItemRecyclerViewAdapter$1: void onClick(android.view.View)&gt;,void onClick(android.view.View)"/>  
      <source name="felixwiemuth.lincal.ui.CalendarListActivity"/>  
      <destinition name="felixwiemuth.lincal.ui.CalendarViewFragment"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.ui.CalendarListActivity$SimpleItemRecyclerViewAdapter$1: void onClick(android.view.View)&gt;"/>  
        <node method="CalendarListActivity$SimpleItemRecyclerViewAdapter$1 onClick" type="getFragment" unit="$r8 = virtualinvoke $r6.&lt;felixwiemuth.lincal.ui.CalendarListActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="CalendarListActivity$SimpleItemRecyclerViewAdapter$1 onClick" type="beginTransaction" unit="$r9 = virtualinvoke $r8.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="CalendarListActivity$SimpleItemRecyclerViewAdapter$1 onClick" type="replaceFunction" unit="$r9 = virtualinvoke $r9.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment)&gt;(2131296299, r3)"/>  
        <node method="CalendarListActivity$SimpleItemRecyclerViewAdapter$1 onClick" type="commit" unit="virtualinvoke $r9.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="felixwiemuth.lincal.ui.HtmlDialogFragment"> 
    <FragmentSummary> 
      <method value="&lt;felixwiemuth.lincal.ui.HtmlDialogFragment: void displayHtmlDialogFragment(android.support.v4.app.FragmentManager,java.lang.String,int,java.lang.Class[])&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.ui.HtmlDialogFragment: void displayHtmlDialogFragment(android.support.v4.app.FragmentManager,java.lang.String,int,java.lang.Class[])&gt;,void displayHtmlDialogFragment(android.support.v4.app.FragmentManager,java.lang.String,int,java.lang.Class[]), &lt;felixwiemuth.lincal.ui.HtmlDialogFragment: void displayFragment(android.support.v4.app.FragmentManager)&gt;"/>  
      <source name="felixwiemuth.lincal.ui.HtmlDialogFragment"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.ui.HtmlDialogFragment: void displayHtmlDialogFragment(android.support.v4.app.FragmentManager,java.lang.String,int,java.lang.Class[])&gt;"/>  
        <node method="HtmlDialogFragment displayFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>  
        <node method="HtmlDialogFragment displayFragment" type="beginTransaction" unit="$r2 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="HtmlDialogFragment displayFragment" type="addToBackStack" unit="if $r3 == null goto virtualinvoke $r2.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(null)"/>  
        <node method="HtmlDialogFragment displayFragment" type="addToBackStack" unit="virtualinvoke $r2.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(null)"/>  
        <node method="HtmlDialogFragment displayFragment" type="dialogShow" unit="virtualinvoke r0.&lt;felixwiemuth.lincal.ui.HtmlDialogFragment: int show(android.support.v4.app.FragmentTransaction,java.lang.String)&gt;($r2, &quot;nz.net.speakman.androidlicensespage.HtmlDialogFragment&quot;)"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;felixwiemuth.lincal.ui.HtmlDialogFragment: void displayHtmlDialogFragment(android.support.v4.app.FragmentManager,java.lang.String,int,java.lang.Class[])&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.ui.HtmlDialogFragment: void displayHtmlDialogFragment(android.support.v4.app.FragmentManager,java.lang.String,int,java.lang.Class[])&gt;,void displayHtmlDialogFragment(android.support.v4.app.FragmentManager,java.lang.String,int,java.lang.Class[]), &lt;felixwiemuth.lincal.ui.HtmlDialogFragment: void displayFragment(android.support.v4.app.FragmentManager)&gt;"/>  
      <source name="felixwiemuth.lincal.ui.HtmlDialogFragment"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.ui.HtmlDialogFragment: void displayHtmlDialogFragment(android.support.v4.app.FragmentManager,java.lang.String,int,java.lang.Class[])&gt;"/>  
        <node method="HtmlDialogFragment displayFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>  
        <node method="HtmlDialogFragment displayFragment" type="beginTransaction" unit="$r2 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="HtmlDialogFragment displayFragment" type="addToBackStack" unit="if $r3 == null goto virtualinvoke $r2.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(null)"/>  
        <node method="HtmlDialogFragment displayFragment" type="addToBackStack" unit="virtualinvoke $r2.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(null)"/>  
        <node method="HtmlDialogFragment displayFragment" type="dialogShow" unit="virtualinvoke r0.&lt;felixwiemuth.lincal.ui.HtmlDialogFragment: int show(android.support.v4.app.FragmentTransaction,java.lang.String)&gt;($r2, &quot;nz.net.speakman.androidlicensespage.HtmlDialogFragment&quot;)"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="felixwiemuth.lincal.ui.HtmlDialogFragment"> 
    <FragmentSummary> 
      <method value="&lt;felixwiemuth.lincal.ui.HtmlDialogFragment: void displayHtmlDialogFragment(android.support.v4.app.FragmentManager,int,int,java.lang.Class[])&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.ui.HtmlDialogFragment: void displayHtmlDialogFragment(android.support.v4.app.FragmentManager,int,int,java.lang.Class[])&gt;,void displayHtmlDialogFragment(android.support.v4.app.FragmentManager,int,int,java.lang.Class[]), &lt;felixwiemuth.lincal.ui.HtmlDialogFragment: void displayFragment(android.support.v4.app.FragmentManager)&gt;"/>  
      <source name="felixwiemuth.lincal.ui.HtmlDialogFragment"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.ui.HtmlDialogFragment: void displayHtmlDialogFragment(android.support.v4.app.FragmentManager,int,int,java.lang.Class[])&gt;"/>  
        <node method="HtmlDialogFragment displayFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>  
        <node method="HtmlDialogFragment displayFragment" type="beginTransaction" unit="$r2 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="HtmlDialogFragment displayFragment" type="addToBackStack" unit="if $r3 == null goto virtualinvoke $r2.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(null)"/>  
        <node method="HtmlDialogFragment displayFragment" type="addToBackStack" unit="virtualinvoke $r2.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(null)"/>  
        <node method="HtmlDialogFragment displayFragment" type="dialogShow" unit="virtualinvoke r0.&lt;felixwiemuth.lincal.ui.HtmlDialogFragment: int show(android.support.v4.app.FragmentTransaction,java.lang.String)&gt;($r2, &quot;nz.net.speakman.androidlicensespage.HtmlDialogFragment&quot;)"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;felixwiemuth.lincal.ui.HtmlDialogFragment: void displayHtmlDialogFragment(android.support.v4.app.FragmentManager,int,int,java.lang.Class[])&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.ui.HtmlDialogFragment: void displayHtmlDialogFragment(android.support.v4.app.FragmentManager,int,int,java.lang.Class[])&gt;,void displayHtmlDialogFragment(android.support.v4.app.FragmentManager,int,int,java.lang.Class[]), &lt;felixwiemuth.lincal.ui.HtmlDialogFragment: void displayFragment(android.support.v4.app.FragmentManager)&gt;"/>  
      <source name="felixwiemuth.lincal.ui.HtmlDialogFragment"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.ui.HtmlDialogFragment: void displayHtmlDialogFragment(android.support.v4.app.FragmentManager,int,int,java.lang.Class[])&gt;"/>  
        <node method="HtmlDialogFragment displayFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>  
        <node method="HtmlDialogFragment displayFragment" type="beginTransaction" unit="$r2 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="HtmlDialogFragment displayFragment" type="addToBackStack" unit="if $r3 == null goto virtualinvoke $r2.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(null)"/>  
        <node method="HtmlDialogFragment displayFragment" type="addToBackStack" unit="virtualinvoke $r2.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(null)"/>  
        <node method="HtmlDialogFragment displayFragment" type="dialogShow" unit="virtualinvoke r0.&lt;felixwiemuth.lincal.ui.HtmlDialogFragment: int show(android.support.v4.app.FragmentTransaction,java.lang.String)&gt;($r2, &quot;nz.net.speakman.androidlicensespage.HtmlDialogFragment&quot;)"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="felixwiemuth.lincal.ui.SettingsActivity"> 
    <FragmentSummary> 
      <method value="&lt;felixwiemuth.lincal.ui.SettingsActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.ui.SettingsActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle)"/>  
      <source name="felixwiemuth.lincal.ui.SettingsActivity"/>  
      <destinition name="felixwiemuth.lincal.ui.SettingsFragment"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.ui.SettingsActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="SettingsActivity onCreate" type="getFragment" unit="$r3 = virtualinvoke r0.&lt;felixwiemuth.lincal.ui.SettingsActivity: android.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="SettingsActivity onCreate" type="beginTransaction" unit="$r4 = virtualinvoke $r3.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="SettingsActivity onCreate" type="replaceFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction replace(int,android.app.Fragment)&gt;(16908290, $r2)"/>  
        <node method="SettingsActivity onCreate" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="felixwiemuth.lincal.ui.CalendarViewActivity"> 
    <FragmentSummary> 
      <method value="&lt;felixwiemuth.lincal.ui.CalendarViewActivity: void onCreate(android.os.Bundle)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.ui.CalendarViewActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle)"/>  
      <source name="felixwiemuth.lincal.ui.CalendarViewActivity"/>  
      <destinition name="felixwiemuth.lincal.ui.CalendarViewFragment"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.ui.CalendarViewActivity: void onCreate(android.os.Bundle)&gt;"/>  
        <node method="CalendarViewActivity onCreate" type="getFragment" unit="$r6 = virtualinvoke r0.&lt;felixwiemuth.lincal.ui.CalendarViewActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="CalendarViewActivity onCreate" type="beginTransaction" unit="$r7 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="CalendarViewActivity onCreate" type="replaceFunction" unit="$r7 = virtualinvoke $r7.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment)&gt;(2131296299, r2)"/>  
        <node method="CalendarViewActivity onCreate" type="commit" unit="virtualinvoke $r7.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="felixwiemuth.lincal.ui.CalendarViewFragment$4$1"> 
    <FragmentSummary> 
      <method value="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$4$1: void onClick(android.content.DialogInterface,int)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$4$1: void onClick(android.content.DialogInterface,int)&gt;,void onClick(android.content.DialogInterface,int)"/>  
      <source name="felixwiemuth.lincal.ui.CalendarViewFragment"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$4$1: void onClick(android.content.DialogInterface,int)&gt;"/>  
        <node method="CalendarViewFragment$4$1 onClick" type="getFragment" unit="$r6 = virtualinvoke $r5.&lt;android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="CalendarViewFragment$4$1 onClick" type="beginTransaction" unit="$r7 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="CalendarViewFragment$4$1 onClick" type="commit" unit="virtualinvoke $r7.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="felixwiemuth.lincal.ui.LinCalMenuAppCompatActivity"> 
    <FragmentSummary> 
      <method value="&lt;felixwiemuth.lincal.ui.LinCalMenuAppCompatActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.ui.LinCalMenuAppCompatActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,&lt;felixwiemuth.lincal.ui.HtmlDialogFragment: void displayFragment(android.support.v4.app.FragmentManager)&gt;,void displayFragment(android.support.v4.app.FragmentManager)"/>  
      <source name="felixwiemuth.lincal.ui.LinCalMenuAppCompatActivity"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.ui.LinCalMenuAppCompatActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.ui.HtmlDialogFragment: void displayFragment(android.support.v4.app.FragmentManager)&gt;"/>  
        <node method="HtmlDialogFragment displayFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>  
        <node method="HtmlDialogFragment displayFragment" type="beginTransaction" unit="$r2 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="HtmlDialogFragment displayFragment" type="addToBackStack" unit="if $r3 == null goto virtualinvoke $r2.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(null)"/>  
        <node method="HtmlDialogFragment displayFragment" type="addToBackStack" unit="virtualinvoke $r2.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(null)"/>  
        <node method="HtmlDialogFragment displayFragment" type="dialogShow" unit="virtualinvoke r0.&lt;felixwiemuth.lincal.ui.HtmlDialogFragment: int show(android.support.v4.app.FragmentTransaction,java.lang.String)&gt;($r2, &quot;nz.net.speakman.androidlicensespage.HtmlDialogFragment&quot;)"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;felixwiemuth.lincal.ui.LinCalMenuAppCompatActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.ui.LinCalMenuAppCompatActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,&lt;felixwiemuth.lincal.ui.HtmlDialogFragment: void displayFragment(android.support.v4.app.FragmentManager)&gt;,void displayFragment(android.support.v4.app.FragmentManager)"/>  
      <source name="felixwiemuth.lincal.ui.LinCalMenuAppCompatActivity"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.ui.LinCalMenuAppCompatActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.ui.HtmlDialogFragment: void displayFragment(android.support.v4.app.FragmentManager)&gt;"/>  
        <node method="HtmlDialogFragment displayFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>  
        <node method="HtmlDialogFragment displayFragment" type="beginTransaction" unit="$r2 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="HtmlDialogFragment displayFragment" type="addToBackStack" unit="if $r3 == null goto virtualinvoke $r2.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(null)"/>  
        <node method="HtmlDialogFragment displayFragment" type="addToBackStack" unit="virtualinvoke $r2.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(null)"/>  
        <node method="HtmlDialogFragment displayFragment" type="dialogShow" unit="virtualinvoke r0.&lt;felixwiemuth.lincal.ui.HtmlDialogFragment: int show(android.support.v4.app.FragmentTransaction,java.lang.String)&gt;($r2, &quot;nz.net.speakman.androidlicensespage.HtmlDialogFragment&quot;)"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="felixwiemuth.lincal.ui.CalendarViewActivity"> 
    <FragmentSummary> 
      <method value="&lt;felixwiemuth.lincal.ui.CalendarViewActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.ui.CalendarViewActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,&lt;felixwiemuth.lincal.ui.LinCalMenuAppCompatActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,&lt;felixwiemuth.lincal.ui.HtmlDialogFragment: void displayFragment(android.support.v4.app.FragmentManager)&gt;,void displayFragment(android.support.v4.app.FragmentManager)"/>  
      <source name="felixwiemuth.lincal.ui.CalendarViewActivity"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.ui.CalendarViewActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.ui.LinCalMenuAppCompatActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.ui.HtmlDialogFragment: void displayFragment(android.support.v4.app.FragmentManager)&gt;"/>  
        <node method="HtmlDialogFragment displayFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>  
        <node method="HtmlDialogFragment displayFragment" type="beginTransaction" unit="$r2 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="HtmlDialogFragment displayFragment" type="addToBackStack" unit="if $r3 == null goto virtualinvoke $r2.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(null)"/>  
        <node method="HtmlDialogFragment displayFragment" type="addToBackStack" unit="virtualinvoke $r2.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(null)"/>  
        <node method="HtmlDialogFragment displayFragment" type="dialogShow" unit="virtualinvoke r0.&lt;felixwiemuth.lincal.ui.HtmlDialogFragment: int show(android.support.v4.app.FragmentTransaction,java.lang.String)&gt;($r2, &quot;nz.net.speakman.androidlicensespage.HtmlDialogFragment&quot;)"/> 
      </nodes> 
    </FragmentSummary>  
    <FragmentSummary> 
      <method value="&lt;felixwiemuth.lincal.ui.CalendarViewActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.ui.CalendarViewActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,&lt;felixwiemuth.lincal.ui.LinCalMenuAppCompatActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;,&lt;felixwiemuth.lincal.ui.HtmlDialogFragment: void displayFragment(android.support.v4.app.FragmentManager)&gt;,void displayFragment(android.support.v4.app.FragmentManager)"/>  
      <source name="felixwiemuth.lincal.ui.CalendarViewActivity"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.ui.CalendarViewActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.ui.LinCalMenuAppCompatActivity: boolean onOptionsItemSelected(android.view.MenuItem)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.ui.HtmlDialogFragment: void displayFragment(android.support.v4.app.FragmentManager)&gt;"/>  
        <node method="HtmlDialogFragment displayFragment" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.support.v4.app.FragmentManager"/>  
        <node method="HtmlDialogFragment displayFragment" type="beginTransaction" unit="$r2 = virtualinvoke $r1.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="HtmlDialogFragment displayFragment" type="addToBackStack" unit="if $r3 == null goto virtualinvoke $r2.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(null)"/>  
        <node method="HtmlDialogFragment displayFragment" type="addToBackStack" unit="virtualinvoke $r2.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String)&gt;(null)"/>  
        <node method="HtmlDialogFragment displayFragment" type="dialogShow" unit="virtualinvoke r0.&lt;felixwiemuth.lincal.ui.HtmlDialogFragment: int show(android.support.v4.app.FragmentTransaction,java.lang.String)&gt;($r2, &quot;nz.net.speakman.androidlicensespage.HtmlDialogFragment&quot;)"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="felixwiemuth.lincal.ui.CalendarListActivity$SimpleItemRecyclerViewAdapter"> 
    <FragmentSummary> 
      <method value="&lt;felixwiemuth.lincal.ui.CalendarListActivity$SimpleItemRecyclerViewAdapter: void onBindViewHolder(felixwiemuth.lincal.ui.CalendarListActivity$SimpleItemRecyclerViewAdapter$ViewHolder,int)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.ui.CalendarListActivity$SimpleItemRecyclerViewAdapter: void onBindViewHolder(felixwiemuth.lincal.ui.CalendarListActivity$SimpleItemRecyclerViewAdapter$ViewHolder,int)&gt;,&lt;felixwiemuth.lincal.ui.CalendarListActivity$SimpleItemRecyclerViewAdapter$1: void onClick(android.view.View)&gt;,void onClick(android.view.View)"/>  
      <source name="felixwiemuth.lincal.ui.CalendarListActivity"/>  
      <destinition name="felixwiemuth.lincal.ui.CalendarViewFragment"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.ui.CalendarListActivity$SimpleItemRecyclerViewAdapter: void onBindViewHolder(felixwiemuth.lincal.ui.CalendarListActivity$SimpleItemRecyclerViewAdapter$ViewHolder,int)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.ui.CalendarListActivity$SimpleItemRecyclerViewAdapter$1: void onClick(android.view.View)&gt;"/>  
        <node method="CalendarListActivity$SimpleItemRecyclerViewAdapter$1 onClick" type="getFragment" unit="$r8 = virtualinvoke $r6.&lt;felixwiemuth.lincal.ui.CalendarListActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="CalendarListActivity$SimpleItemRecyclerViewAdapter$1 onClick" type="beginTransaction" unit="$r9 = virtualinvoke $r8.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="CalendarListActivity$SimpleItemRecyclerViewAdapter$1 onClick" type="replaceFunction" unit="$r9 = virtualinvoke $r9.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment)&gt;(2131296299, r3)"/>  
        <node method="CalendarListActivity$SimpleItemRecyclerViewAdapter$1 onClick" type="commit" unit="virtualinvoke $r9.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="felixwiemuth.lincal.ui.CalendarListActivity$SimpleItemRecyclerViewAdapter"> 
    <FragmentSummary> 
      <method value="&lt;felixwiemuth.lincal.ui.CalendarListActivity$SimpleItemRecyclerViewAdapter: void onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.ui.CalendarListActivity$SimpleItemRecyclerViewAdapter: void onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int)&gt;,&lt;felixwiemuth.lincal.ui.CalendarListActivity$SimpleItemRecyclerViewAdapter: void onBindViewHolder(felixwiemuth.lincal.ui.CalendarListActivity$SimpleItemRecyclerViewAdapter$ViewHolder,int)&gt;,&lt;felixwiemuth.lincal.ui.CalendarListActivity$SimpleItemRecyclerViewAdapter$1: void onClick(android.view.View)&gt;,void onClick(android.view.View)"/>  
      <source name="felixwiemuth.lincal.ui.CalendarListActivity"/>  
      <destinition name="felixwiemuth.lincal.ui.CalendarViewFragment"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.ui.CalendarListActivity$SimpleItemRecyclerViewAdapter: void onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.ui.CalendarListActivity$SimpleItemRecyclerViewAdapter: void onBindViewHolder(felixwiemuth.lincal.ui.CalendarListActivity$SimpleItemRecyclerViewAdapter$ViewHolder,int)&gt;"/>  
        <node method="&lt;felixwiemuth.lincal.ui.CalendarListActivity$SimpleItemRecyclerViewAdapter$1: void onClick(android.view.View)&gt;"/>  
        <node method="CalendarListActivity$SimpleItemRecyclerViewAdapter$1 onClick" type="getFragment" unit="$r8 = virtualinvoke $r6.&lt;felixwiemuth.lincal.ui.CalendarListActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
        <node method="CalendarListActivity$SimpleItemRecyclerViewAdapter$1 onClick" type="beginTransaction" unit="$r9 = virtualinvoke $r8.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
        <node method="CalendarListActivity$SimpleItemRecyclerViewAdapter$1 onClick" type="replaceFunction" unit="$r9 = virtualinvoke $r9.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment)&gt;(2131296299, r3)"/>  
        <node method="CalendarListActivity$SimpleItemRecyclerViewAdapter$1 onClick" type="commit" unit="virtualinvoke $r9.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
  <Component source="felixwiemuth.lincal.ui.CalendarViewFragment$2"> 
    <FragmentSummary> 
      <method value="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$2: void onClick(android.view.View)&gt;"/>  
      <methodtrace value="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$2: void onClick(android.view.View)&gt;,void onClick(android.view.View)"/>  
      <source name="felixwiemuth.lincal.ui.CalendarViewFragment"/>  
      <destinition name="felixwiemuth.lincal.ui.CalendarViewFragment$TimePickerFragment"/>  
      <nodes> 
        <node method="&lt;felixwiemuth.lincal.ui.CalendarViewFragment$2: void onClick(android.view.View)&gt;"/>  
        <node method="CalendarViewFragment$2 onClick" type="getFragment" unit="$r6 = virtualinvoke $r4.&lt;felixwiemuth.lincal.ui.CalendarViewFragment: android.support.v4.app.FragmentManager getFragmentManager()&gt;()"/>  
        <node method="CalendarViewFragment$2 onClick" type="dialogShow" unit="virtualinvoke r3.&lt;android.support.v4.app.DialogFragment: void show(android.support.v4.app.FragmentManager,java.lang.String)&gt;($r6, &quot;timePicker&quot;)"/> 
      </nodes> 
    </FragmentSummary> 
  </Component>
</root>
