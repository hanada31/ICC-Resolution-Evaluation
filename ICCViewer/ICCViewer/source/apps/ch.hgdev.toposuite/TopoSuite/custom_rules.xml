<?xml version="1.0" encoding="UTF-8"?>
<project>
    <!-- ANT-CONTRIB -->
    <!-- jar file from where the tasks are loaded -->
    <path id="antcontrib">
        <pathelement path="tools/ant-contrib.jar" />
    </path> 
    <!-- ant-contrib tasks -->
    <taskdef name="math"
            classname="net.sf.antcontrib.math.MathTask"
            classpathref="antcontrib" />

    <!--  PROPERTIES -->
    <!-- allow environment variables to be accessable by prepending "env." -->
    <property environment="env" />

    <!-- android tools dir -->
    <property name="android.tools.dir" location="${sdk.dir}/tools" />

    <!-- javadoc folder relative to ${basedir} -->
    <property name="javadoc.dir" location="javadoc" />

    <!-- path to lint -->
    <property name="lint" location="${android.tools.dir}/lint" />

    
    <!-- TARGET RULES DEPENDENCIES -->
    <target name="-get-version" depends="-get-version-name">
        <echo>Building version number ${current-git-version-name}</echo>
    </target>

    <target name="-get-version-name">
        <xpath input="AndroidManifest.xml" expression="/manifest/@android:versionName" output="current-version-name" />
    </target>

    <target name="-get-version-code">
        <xpath input="AndroidManifest.xml" expression="/manifest/@android:versionCode" output="current-version-code" />
    </target>

    <target name="-get-version-from-git">
        <exec executable="git" failonerror="true" outputproperty="current-git-version-name" errorproperty="current-version-error">
            <arg line="rev-parse --short master" />
        </exec>
        <echo>Building version number ${current-version-name}</echo>
    </target>

    <target name="-set-version" depends="-get-version-name,-get-version-code,-get-version-from-git">
        <echo>Setting version to ${current-git-version-name}</echo>

        <replace file="AndroidManifest.xml"
            token="android:versionName=&quot;${current-version-name}&quot;"
            value="android:versionName=&quot;1.0.0-${current-git-version-name}&quot;" summary="true"
        />

        <math result="new-version-code" operand1="${current-version-code}" operation="+" operand2="1" datatype="int"/>
        <replace file="AndroidManifest.xml"
            token="android:versionCode=&quot;${current-version-code}&quot;"
            value="android:versionCode=&quot;${new-version-code}&quot;" summary="true"
        />
    </target>

    <target name="-commit-version">
        <exec executable="git" failonerror="true">
            <arg line="add AndroidManifest.xml" />
        </exec>
        <exec executable="git" failonerror="true">
            <arg line="commit -m 'bump manifest to 1.0.0-${current-git-version-name}'" />
        </exec>
    </target>

    <!-- override android ant default release name -->
    <target name="-rename-release" depends="-get-version-name">
        <!--  see ${sdk.dir}/tools/ant/build.xml -set-release-mode -->
        <property name="out.packaged.file" 
                  location="${out.absolute.dir}/${ant.project.name}-${current-version-name}-release-unsigned.apk" />
        <property name="out.final.file" 
                  location="${out.absolute.dir}/${ant.project.name}-${current-version-name}-release.apk" />
    </target>
    <target name="-set-release-mode"
         depends="-rename-release,android_rules.-set-release-mode">
        <echo message="target: ${build.target}"></echo>
    </target>

    <!-- RULES -->
    
    <!--  update application version -->
    <target name="bump-version" depends="-set-version,-commit-version">
        <echo>Bumped TopoSuite to ${version-name}</echo>
    </target>

    <!-- create javadoc in ${javadoc.dir} -->
    <target name="javadoc" description="build javadoc" depends="-get-version-name">
        <mkdir dir="${javadoc.dir}"/>
        <javadoc
            destdir="${javadoc.dir}"
            doctitle="Documentation for ${ant.project.name} revision ${current-version-name}"
            verbose="on"
            use="true"
            classpath="${env.ANDROID_HOME}/platforms/${target}/android.jar"
            sourcepath="gen;src"
            linkoffline="http://d.android.com/reference ${env.ANDROID_HOME}/docs/reference/"
        />
    </target>

    <!-- create lint.html and lint_files/ -->
    <target name="lint">
        <exec executable="${lint}" failonerror="true">
            <arg value="--html" />
            <arg value="lint.html" />
            <arg path="${basedir}" />
        </exec>
    </target>

</project>
