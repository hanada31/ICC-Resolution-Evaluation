<org.arguslab.rpc_remoteservice.MainActivity: void onStop()>
<org.arguslab.rpc_remoteservice.IRemoteService$Stub: void <init>()>
<org.arguslab.rpc_remoteservice.MainActivity: android.content.Intent getIntent()>
<org.arguslab.rpc_remoteservice.R$styleable: void <clinit>()>
<org.arguslab.rpc_remoteservice.IRemoteService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
<org.arguslab.rpc_remoteservice.MainActivity: void setResult(int,android.content.Intent)>
<org.arguslab.rpc_remoteservice.MainActivity$1: void onServiceDisconnected(android.content.ComponentName)>
<org.arguslab.rpc_remoteservice.RemoteService$1: void <init>(org.arguslab.rpc_remoteservice.RemoteService)>
<org.arguslab.rpc_remoteservice.IRemoteService$Stub: android.os.IBinder asBinder()>
<org.arguslab.rpc_remoteservice.IRemoteService$Stub$Proxy: void setData(java.lang.String)>
<org.arguslab.rpc_remoteservice.MainActivity: void setIntent(android.content.Intent)>
<org.arguslab.rpc_remoteservice.MainActivity: void onCreate(android.os.Bundle)>
<org.arguslab.rpc_remoteservice.MainActivity: void leakImei()>
<org.arguslab.rpc_remoteservice.IRemoteService$Stub$Proxy: android.os.IBinder asBinder()>
<org.arguslab.rpc_remoteservice.RemoteService: void <init>()>
<org.arguslab.rpc_remoteservice.RemoteService: android.content.Intent getIntent()>
<org.arguslab.rpc_remoteservice.RemoteService: android.os.IBinder onBind(android.content.Intent)>
<org.arguslab.rpc_remoteservice.RemoteService$1: void setData(java.lang.String)>
<org.arguslab.rpc_remoteservice.IRemoteService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<org.arguslab.rpc_remoteservice.MainActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
<dummyMainClass: org.arguslab.rpc_remoteservice.RemoteService dummyMainMethod_org_arguslab_rpc__remoteservice_RemoteService(android.content.Intent)>
<org.arguslab.rpc_remoteservice.IRemoteService$Stub: org.arguslab.rpc_remoteservice.IRemoteService asInterface(android.os.IBinder)>
<org.arguslab.rpc_remoteservice.IRemoteService$Stub$Proxy: void <init>(android.os.IBinder)>
<dummyMainClass: void dummyMainMethod(java.lang.String[])>
<org.arguslab.rpc_remoteservice.R$id: void <init>()>
<org.arguslab.rpc_remoteservice.R$mipmap: void <init>()>
<org.arguslab.rpc_remoteservice.BuildConfig: void <init>()>
<org.arguslab.rpc_remoteservice.R$string: void <init>()>
<org.arguslab.rpc_remoteservice.R$color: void <init>()>
<org.arguslab.rpc_remoteservice.MainActivity$1: void <init>(org.arguslab.rpc_remoteservice.MainActivity)>
<org.arguslab.rpc_remoteservice.MainActivity: void onStart()>
<org.arguslab.rpc_remoteservice.R$attr: void <init>()>
<org.arguslab.rpc_remoteservice.R$styleable: void <init>()>
<org.arguslab.rpc_remoteservice.R$style: void <init>()>
<org.arguslab.rpc_remoteservice.R: void <init>()>
<org.arguslab.rpc_remoteservice.R$layout: void <init>()>
<dummyMainClass: org.arguslab.rpc_remoteservice.MainActivity dummyMainMethod_org_arguslab_rpc__remoteservice_MainActivity(android.content.Intent)>
<org.arguslab.rpc_remoteservice.MainActivity$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>
<org.arguslab.rpc_remoteservice.MainActivity: void <init>()>
